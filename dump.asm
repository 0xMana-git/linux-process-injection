
bin/module.so:     file format elf64-x86-64


Disassembly of section .note.gnu.property:

00000000000002a8 <.note.gnu.property>:
 2a8:	04 00                	add    al,0x0
 2aa:	00 00                	add    BYTE PTR [rax],al
 2ac:	20 00                	and    BYTE PTR [rax],al
 2ae:	00 00                	add    BYTE PTR [rax],al
 2b0:	05 00 00 00 47       	add    eax,0x47000000
 2b5:	4e 55                	rex.WRX push rbp
 2b7:	00 01                	add    BYTE PTR [rcx],al
 2b9:	00 01                	add    BYTE PTR [rcx],al
 2bb:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 2bf:	00 01                	add    BYTE PTR [rcx],al
 2c1:	00 00                	add    BYTE PTR [rax],al
 2c3:	00 00                	add    BYTE PTR [rax],al
 2c5:	00 00                	add    BYTE PTR [rax],al
 2c7:	00 02                	add    BYTE PTR [rdx],al
 2c9:	00 01                	add    BYTE PTR [rcx],al
 2cb:	c0 04 00 00          	rol    BYTE PTR [rax+rax*1],0x0
 2cf:	00 01                	add    BYTE PTR [rcx],al
 2d1:	00 00                	add    BYTE PTR [rax],al
 2d3:	00 00                	add    BYTE PTR [rax],al
 2d5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .note.gnu.build-id:

00000000000002d8 <.note.gnu.build-id>:
 2d8:	04 00                	add    al,0x0
 2da:	00 00                	add    BYTE PTR [rax],al
 2dc:	14 00                	adc    al,0x0
 2de:	00 00                	add    BYTE PTR [rax],al
 2e0:	03 00                	add    eax,DWORD PTR [rax]
 2e2:	00 00                	add    BYTE PTR [rax],al
 2e4:	47                   	rex.RXB
 2e5:	4e 55                	rex.WRX push rbp
 2e7:	00 4e 60             	add    BYTE PTR [rsi+0x60],cl
 2ea:	07                   	(bad)
 2eb:	d1 13                	rcl    DWORD PTR [rbx],1
 2ed:	5b                   	pop    rbx
 2ee:	95                   	xchg   ebp,eax
 2ef:	08 87 c1 a7 ba 94    	or     BYTE PTR [rdi-0x6b45583f],al
 2f5:	88 f2                	mov    dl,dh
 2f7:	99                   	cdq
 2f8:	c4                   	(bad)
 2f9:	f5                   	cmc
 2fa:	ae                   	scas   al,BYTE PTR es:[rdi]
 2fb:	3c                   	.byte 0x3c

Disassembly of section .gnu.hash:

0000000000000300 <.gnu.hash>:
 300:	03 00                	add    eax,DWORD PTR [rax]
 302:	00 00                	add    BYTE PTR [rax],al
 304:	07                   	(bad)
 305:	00 00                	add    BYTE PTR [rax],al
 307:	00 01                	add    BYTE PTR [rcx],al
 309:	00 00                	add    BYTE PTR [rax],al
 30b:	00 06                	add    BYTE PTR [rsi],al
 30d:	00 00                	add    BYTE PTR [rax],al
 30f:	00 00                	add    BYTE PTR [rax],al
 311:	02 00                	add    al,BYTE PTR [rax]
 313:	00 00                	add    BYTE PTR [rax],al
 315:	24 08                	and    al,0x8
 317:	20 07                	and    BYTE PTR [rdi],al
 319:	00 00                	add    BYTE PTR [rax],al
 31b:	00 08                	add    BYTE PTR [rax],cl
 31d:	00 00                	add    BYTE PTR [rax],al
 31f:	00 09                	add    BYTE PTR [rcx],cl
 321:	00 00                	add    BYTE PTR [rax],al
 323:	00 6d 12             	add    BYTE PTR [rbp+0x12],ch
 326:	7d 8a                	jge    2b2 <_init-0xd4e>
 328:	6b 7f 9a 7c          	imul   edi,DWORD PTR [rdi-0x66],0x7c
 32c:	fd                   	std
 32d:	0c 94                	or     al,0x94
 32f:	ba                   	.byte 0xba

Disassembly of section .dynsym:

0000000000000330 <.dynsym>:
	...
 348:	94                   	xchg   esp,eax
 349:	00 00                	add    BYTE PTR [rax],al
 34b:	00 12                	add    BYTE PTR [rdx],dl
	...
 35d:	00 00                	add    BYTE PTR [rax],al
 35f:	00 46 00             	add    BYTE PTR [rsi+0x0],al
 362:	00 00                	add    BYTE PTR [rax],al
 364:	22 00                	and    al,BYTE PTR [rax]
	...
 376:	00 00                	add    BYTE PTR [rax],al
 378:	55                   	push   rbp
 379:	00 00                	add    BYTE PTR [rax],al
 37b:	00 12                	add    BYTE PTR [rdx],dl
	...
 38d:	00 00                	add    BYTE PTR [rax],al
 38f:	00 10                	add    BYTE PTR [rax],dl
 391:	00 00                	add    BYTE PTR [rax],al
 393:	00 20                	add    BYTE PTR [rax],ah
	...
 3a5:	00 00                	add    BYTE PTR [rax],al
 3a7:	00 01                	add    BYTE PTR [rcx],al
 3a9:	00 00                	add    BYTE PTR [rax],al
 3ab:	00 20                	add    BYTE PTR [rax],ah
	...
 3bd:	00 00                	add    BYTE PTR [rax],al
 3bf:	00 2c 00             	add    BYTE PTR [rax+rax*1],ch
 3c2:	00 00                	add    BYTE PTR [rax],al
 3c4:	20 00                	and    BYTE PTR [rax],al
	...
 3d6:	00 00                	add    BYTE PTR [rax],al
 3d8:	72 00                	jb     3da <_init-0xc26>
 3da:	00 00                	add    BYTE PTR [rax],al
 3dc:	12 00                	adc    al,BYTE PTR [rax]
 3de:	0c 00                	or     al,0x0
 3e0:	19 11                	sbb    DWORD PTR [rcx],edx
 3e2:	00 00                	add    BYTE PTR [rax],al
 3e4:	00 00                	add    BYTE PTR [rax],al
 3e6:	00 00                	add    BYTE PTR [rax],al
 3e8:	2b 00                	sub    eax,DWORD PTR [rax]
 3ea:	00 00                	add    BYTE PTR [rax],al
 3ec:	00 00                	add    BYTE PTR [rax],al
 3ee:	00 00                	add    BYTE PTR [rax],al
 3f0:	8f 00                	pop    QWORD PTR [rax]
 3f2:	00 00                	add    BYTE PTR [rax],al
 3f4:	12 00                	adc    al,BYTE PTR [rax]
 3f6:	0c 00                	or     al,0x0
 3f8:	61                   	(bad)
 3f9:	11 00                	adc    DWORD PTR [rax],eax
 3fb:	00 00                	add    BYTE PTR [rax],al
 3fd:	00 00                	add    BYTE PTR [rax],al
 3ff:	00 79 00             	add    BYTE PTR [rcx+0x0],bh
 402:	00 00                	add    BYTE PTR [rax],al
 404:	00 00                	add    BYTE PTR [rax],al
 406:	00 00                	add    BYTE PTR [rax],al
 408:	83 00 00             	add    DWORD PTR [rax],0x0
 40b:	00 12                	add    BYTE PTR [rdx],dl
 40d:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
 410:	44 11 00             	adc    DWORD PTR [rax],r8d
 413:	00 00                	add    BYTE PTR [rax],al
 415:	00 00                	add    BYTE PTR [rax],al
 417:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 41d <_init-0xbe3>
 41d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynstr:

0000000000000420 <.dynstr>:
 420:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 423:	67 6d                	ins    DWORD PTR es:[edi],dx
 425:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 426:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 427:	5f                   	pop    rdi
 428:	73 74                	jae    49e <_init-0xb62>
 42a:	61                   	(bad)
 42b:	72 74                	jb     4a1 <_init-0xb5f>
 42d:	5f                   	pop    rdi
 42e:	5f                   	pop    rdi
 42f:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
 432:	54                   	push   rsp
 433:	4d 5f                	rex.WRB pop r15
 435:	64 65 72 65          	fs gs jb 49e <_init-0xb62>
 439:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 440:	4d 
 441:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 443:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 444:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 445:	65 54                	gs push rsp
 447:	61                   	(bad)
 448:	62 6c 65 00 5f       	(bad)
 44d:	49 54                	rex.WB push r12
 44f:	4d 5f                	rex.WRB pop r15
 451:	72 65                	jb     4b8 <_init-0xb48>
 453:	67 69 73 74 65 72 54 	imul   esi,DWORD PTR [ebx+0x74],0x4d547265
 45a:	4d 
 45b:	43 6c                	rex.XB ins BYTE PTR es:[rdi],dx
 45d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 45e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 45f:	65 54                	gs push rsp
 461:	61                   	(bad)
 462:	62 6c 65 00 5f       	(bad)
 467:	5f                   	pop    rdi
 468:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
 46b:	5f                   	pop    rdi
 46c:	66 69 6e 61 6c 69    	imul   bp,WORD PTR [rsi+0x61],0x696c
 472:	7a 65                	jp     4d9 <_init-0xb27>
 474:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 477:	53                   	push   rbx
 478:	74 32                	je     4ac <_init-0xb54>
 47a:	31 69 6f             	xor    DWORD PTR [rcx+0x6f],ebp
 47d:	73 5f                	jae    4de <_init-0xb22>
 47f:	62 61 73 65 5f       	(bad)
 484:	6c                   	ins    BYTE PTR es:[rdi],dx
 485:	69 62 72 61 72 79 5f 	imul   esp,DWORD PTR [rdx+0x72],0x5f797261
 48c:	69 6e 69 74 76 00 5f 	imul   ebp,DWORD PTR [rsi+0x69],0x5f007674
 493:	5a                   	pop    rdx
 494:	38 6d 79             	cmp    BYTE PTR [rbp+0x79],ch
 497:	5f                   	pop    rdi
 498:	77 72                	ja     50c <_init-0xaf4>
 49a:	69 74 65 69 50 4b 76 	imul   esi,DWORD PTR [rbp+riz*2+0x69],0x6d764b50
 4a1:	6d 
 4a2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
 4a5:	37                   	(bad)
 4a6:	6d                   	ins    DWORD PTR es:[rdi],dx
 4a7:	79 5f                	jns    508 <_init-0xaf8>
 4a9:	65 78 69             	gs js  515 <_init-0xaeb>
 4ac:	74 69                	je     517 <_init-0xae9>
 4ae:	00 6d 61             	add    BYTE PTR [rbp+0x61],ch
 4b1:	69 6e 00 66 6f 72 6b 	imul   ebp,DWORD PTR [rsi+0x0],0x6b726f66
 4b8:	00 6c 69 62          	add    BYTE PTR [rcx+rbp*2+0x62],ch
 4bc:	73 74                	jae    532 <_init-0xace>
 4be:	64 63 2b             	movsxd ebp,DWORD PTR fs:[rbx]
 4c1:	2b 2e                	sub    ebp,DWORD PTR [rsi]
 4c3:	73 6f                	jae    534 <_init-0xacc>
 4c5:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 4cb:	6d                   	ins    DWORD PTR es:[rdi],dx
 4cc:	2e 73 6f             	cs jae 53e <_init-0xac2>
 4cf:	2e 36 00 6c 69 62    	cs ss add BYTE PTR [rcx+rbp*2+0x62],ch
 4d5:	67 63 63 5f          	movsxd esp,DWORD PTR [ebx+0x5f]
 4d9:	73 2e                	jae    509 <_init-0xaf7>
 4db:	73 6f                	jae    54c <_init-0xab4>
 4dd:	2e 31 00             	cs xor DWORD PTR [rax],eax
 4e0:	6c                   	ins    BYTE PTR es:[rdi],dx
 4e1:	69 62 63 2e 73 6f 2e 	imul   esp,DWORD PTR [rdx+0x63],0x2e6f732e
 4e8:	36 00 47 4c          	ss add BYTE PTR [rdi+0x4c],al
 4ec:	49                   	rex.WB
 4ed:	42                   	rex.X
 4ee:	43 58                	rex.XB pop r8
 4f0:	58                   	pop    rax
 4f1:	5f                   	pop    rdi
 4f2:	33 2e                	xor    ebp,DWORD PTR [rsi]
 4f4:	34 2e                	xor    al,0x2e
 4f6:	33 32                	xor    esi,DWORD PTR [rdx]
 4f8:	00 47 4c             	add    BYTE PTR [rdi+0x4c],al
 4fb:	49                   	rex.WB
 4fc:	42                   	rex.X
 4fd:	43 5f                	rex.XB pop r15
 4ff:	32 2e                	xor    ch,BYTE PTR [rsi]
 501:	32 2e                	xor    ch,BYTE PTR [rsi]
 503:	35                   	.byte 0x35
	...

Disassembly of section .gnu.version:

0000000000000506 <.gnu.version>:
 506:	00 00                	add    BYTE PTR [rax],al
 508:	02 00                	add    al,BYTE PTR [rax]
 50a:	02 00                	add    al,BYTE PTR [rax]
 50c:	03 00                	add    eax,DWORD PTR [rax]
 50e:	01 00                	add    DWORD PTR [rax],eax
 510:	01 00                	add    DWORD PTR [rax],eax
 512:	01 00                	add    DWORD PTR [rax],eax
 514:	01 00                	add    DWORD PTR [rax],eax
 516:	01 00                	add    DWORD PTR [rax],eax
 518:	01 00                	add    DWORD PTR [rax],eax

Disassembly of section .gnu.version_r:

0000000000000520 <.gnu.version_r>:
 520:	01 00                	add    DWORD PTR [rax],eax
 522:	01 00                	add    DWORD PTR [rax],eax
 524:	99                   	cdq
 525:	00 00                	add    BYTE PTR [rax],al
 527:	00 10                	add    BYTE PTR [rax],dl
 529:	00 00                	add    BYTE PTR [rax],al
 52b:	00 20                	add    BYTE PTR [rax],ah
 52d:	00 00                	add    BYTE PTR [rax],al
 52f:	00 42 f8             	add    BYTE PTR [rdx-0x8],al
 532:	97                   	xchg   edi,eax
 533:	02 00                	add    al,BYTE PTR [rax]
 535:	00 03                	add    BYTE PTR [rbx],al
 537:	00 ca                	add    dl,cl
 539:	00 00                	add    BYTE PTR [rax],al
 53b:	00 00                	add    BYTE PTR [rax],al
 53d:	00 00                	add    BYTE PTR [rax],al
 53f:	00 01                	add    BYTE PTR [rcx],al
 541:	00 01                	add    BYTE PTR [rcx],al
 543:	00 c0                	add    al,al
 545:	00 00                	add    BYTE PTR [rax],al
 547:	00 10                	add    BYTE PTR [rax],dl
 549:	00 00                	add    BYTE PTR [rax],al
 54b:	00 00                	add    BYTE PTR [rax],al
 54d:	00 00                	add    BYTE PTR [rax],al
 54f:	00 75 1a             	add    BYTE PTR [rbp+0x1a],dh
 552:	69 09 00 00 02 00    	imul   ecx,DWORD PTR [rcx],0x20000
 558:	d9 00                	fld    DWORD PTR [rax]
 55a:	00 00                	add    BYTE PTR [rax],al
 55c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .rela.dyn:

0000000000000560 <.rela.dyn>:
 560:	c0 3d 00 00 00 00 00 	sar    BYTE PTR [rip+0x0],0x0        # 567 <_init-0xa99>
 567:	00 08                	add    BYTE PTR [rax],cl
 569:	00 00                	add    BYTE PTR [rax],al
 56b:	00 00                	add    BYTE PTR [rax],al
 56d:	00 00                	add    BYTE PTR [rax],al
 56f:	00 10                	add    BYTE PTR [rax],dl
 571:	11 00                	adc    DWORD PTR [rax],eax
 573:	00 00                	add    BYTE PTR [rax],al
 575:	00 00                	add    BYTE PTR [rax],al
 577:	00 d0                	add    al,dl
 579:	3d 00 00 00 00       	cmp    eax,0x0
 57e:	00 00                	add    BYTE PTR [rax],al
 580:	08 00                	or     BYTE PTR [rax],al
 582:	00 00                	add    BYTE PTR [rax],al
 584:	00 00                	add    BYTE PTR [rax],al
 586:	00 00                	add    BYTE PTR [rax],al
 588:	c0 10 00             	rcl    BYTE PTR [rax],0x0
 58b:	00 00                	add    BYTE PTR [rax],al
 58d:	00 00                	add    BYTE PTR [rax],al
 58f:	00 10                	add    BYTE PTR [rax],dl
 591:	40 00 00             	rex add BYTE PTR [rax],al
 594:	00 00                	add    BYTE PTR [rax],al
 596:	00 00                	add    BYTE PTR [rax],al
 598:	08 00                	or     BYTE PTR [rax],al
 59a:	00 00                	add    BYTE PTR [rax],al
 59c:	00 00                	add    BYTE PTR [rax],al
 59e:	00 00                	add    BYTE PTR [rax],al
 5a0:	10 40 00             	adc    BYTE PTR [rax+0x0],al
 5a3:	00 00                	add    BYTE PTR [rax],al
 5a5:	00 00                	add    BYTE PTR [rax],al
 5a7:	00 c8                	add    al,cl
 5a9:	3d 00 00 00 00       	cmp    eax,0x0
 5ae:	00 00                	add    BYTE PTR [rax],al
 5b0:	01 00                	add    DWORD PTR [rax],eax
 5b2:	00 00                	add    BYTE PTR [rax],al
 5b4:	08 00                	or     BYTE PTR [rax],al
	...
 5be:	00 00                	add    BYTE PTR [rax],al
 5c0:	c8 3f 00 00          	enter  0x3f,0x0
 5c4:	00 00                	add    BYTE PTR [rax],al
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	06                   	(bad)
 5c9:	00 00                	add    BYTE PTR [rax],al
 5cb:	00 02                	add    BYTE PTR [rdx],al
	...
 5d5:	00 00                	add    BYTE PTR [rax],al
 5d7:	00 d0                	add    al,dl
 5d9:	3f                   	(bad)
 5da:	00 00                	add    BYTE PTR [rax],al
 5dc:	00 00                	add    BYTE PTR [rax],al
 5de:	00 00                	add    BYTE PTR [rax],al
 5e0:	06                   	(bad)
 5e1:	00 00                	add    BYTE PTR [rax],al
 5e3:	00 04 00             	add    BYTE PTR [rax+rax*1],al
	...
 5ee:	00 00                	add    BYTE PTR [rax],al
 5f0:	d8 3f                	fdivr  DWORD PTR [rdi]
 5f2:	00 00                	add    BYTE PTR [rax],al
 5f4:	00 00                	add    BYTE PTR [rax],al
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	06                   	(bad)
 5f9:	00 00                	add    BYTE PTR [rax],al
 5fb:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 601 <_init-0x9ff>
 601:	00 00                	add    BYTE PTR [rax],al
 603:	00 00                	add    BYTE PTR [rax],al
 605:	00 00                	add    BYTE PTR [rax],al
 607:	00 e0                	add    al,ah
 609:	3f                   	(bad)
 60a:	00 00                	add    BYTE PTR [rax],al
 60c:	00 00                	add    BYTE PTR [rax],al
 60e:	00 00                	add    BYTE PTR [rax],al
 610:	06                   	(bad)
 611:	00 00                	add    BYTE PTR [rax],al
 613:	00 06                	add    BYTE PTR [rsi],al
	...

Disassembly of section .rela.plt:

0000000000000620 <.rela.plt>:
 620:	00 40 00             	add    BYTE PTR [rax+0x0],al
 623:	00 00                	add    BYTE PTR [rax],al
 625:	00 00                	add    BYTE PTR [rax],al
 627:	00 07                	add    BYTE PTR [rdi],al
 629:	00 00                	add    BYTE PTR [rax],al
 62b:	00 01                	add    BYTE PTR [rcx],al
	...
 635:	00 00                	add    BYTE PTR [rax],al
 637:	00 08                	add    BYTE PTR [rax],cl
 639:	40 00 00             	rex add BYTE PTR [rax],al
 63c:	00 00                	add    BYTE PTR [rax],al
 63e:	00 00                	add    BYTE PTR [rax],al
 640:	07                   	(bad)
 641:	00 00                	add    BYTE PTR [rax],al
 643:	00 07                	add    BYTE PTR [rdi],al
	...

Disassembly of section .init:

0000000000001000 <_init>:
    1000:	f3 0f 1e fa          	endbr64
    1004:	48 83 ec 08          	sub    rsp,0x8
    1008:	48 8b 05 c9 2f 00 00 	mov    rax,QWORD PTR [rip+0x2fc9]        # 3fd8 <__gmon_start__@Base>
    100f:	48 85 c0             	test   rax,rax
    1012:	74 02                	je     1016 <_init+0x16>
    1014:	ff d0                	call   rax
    1016:	48 83 c4 08          	add    rsp,0x8
    101a:	c3                   	ret

Disassembly of section .plt:

0000000000001020 <fork@plt-0x10>:
    1020:	ff 35 ca 2f 00 00    	push   QWORD PTR [rip+0x2fca]        # 3ff0 <_GLOBAL_OFFSET_TABLE_+0x8>
    1026:	ff 25 cc 2f 00 00    	jmp    QWORD PTR [rip+0x2fcc]        # 3ff8 <_GLOBAL_OFFSET_TABLE_+0x10>
    102c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]

0000000000001030 <fork@plt>:
    1030:	ff 25 ca 2f 00 00    	jmp    QWORD PTR [rip+0x2fca]        # 4000 <fork@GLIBC_2.2.5>
    1036:	68 00 00 00 00       	push   0x0
    103b:	e9 e0 ff ff ff       	jmp    1020 <_init+0x20>

0000000000001040 <_Z8my_writeiPKvm@plt>:
    1040:	ff 25 c2 2f 00 00    	jmp    QWORD PTR [rip+0x2fc2]        # 4008 <_Z8my_writeiPKvm@@Base+0x2eef>
    1046:	68 01 00 00 00       	push   0x1
    104b:	e9 d0 ff ff ff       	jmp    1020 <_init+0x20>

Disassembly of section .text:

0000000000001050 <_Z8my_writeiPKvm-0xc9>:
    1050:	48 8d 3d c1 2f 00 00 	lea    rdi,[rip+0x2fc1]        # 4018 <__TMC_END__>
    1057:	48 8d 05 ba 2f 00 00 	lea    rax,[rip+0x2fba]        # 4018 <__TMC_END__>
    105e:	48 39 f8             	cmp    rax,rdi
    1061:	74 15                	je     1078 <_Z8my_writeiPKvm@plt+0x38>
    1063:	48 8b 05 66 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f66]        # 3fd0 <_ITM_deregisterTMCloneTable@Base>
    106a:	48 85 c0             	test   rax,rax
    106d:	74 09                	je     1078 <_Z8my_writeiPKvm@plt+0x38>
    106f:	ff e0                	jmp    rax
    1071:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1078:	c3                   	ret
    1079:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    1080:	48 8d 3d 91 2f 00 00 	lea    rdi,[rip+0x2f91]        # 4018 <__TMC_END__>
    1087:	48 8d 35 8a 2f 00 00 	lea    rsi,[rip+0x2f8a]        # 4018 <__TMC_END__>
    108e:	48 29 fe             	sub    rsi,rdi
    1091:	48 89 f0             	mov    rax,rsi
    1094:	48 c1 ee 3f          	shr    rsi,0x3f
    1098:	48 c1 f8 03          	sar    rax,0x3
    109c:	48 01 c6             	add    rsi,rax
    109f:	48 d1 fe             	sar    rsi,1
    10a2:	74 14                	je     10b8 <_Z8my_writeiPKvm@plt+0x78>
    10a4:	48 8b 05 35 2f 00 00 	mov    rax,QWORD PTR [rip+0x2f35]        # 3fe0 <_ITM_registerTMCloneTable@Base>
    10ab:	48 85 c0             	test   rax,rax
    10ae:	74 08                	je     10b8 <_Z8my_writeiPKvm@plt+0x78>
    10b0:	ff e0                	jmp    rax
    10b2:	66 0f 1f 44 00 00    	nop    WORD PTR [rax+rax*1+0x0]
    10b8:	c3                   	ret
    10b9:	0f 1f 80 00 00 00 00 	nop    DWORD PTR [rax+0x0]
    10c0:	f3 0f 1e fa          	endbr64
    10c4:	80 3d 4d 2f 00 00 00 	cmp    BYTE PTR [rip+0x2f4d],0x0        # 4018 <__TMC_END__>
    10cb:	75 33                	jne    1100 <_Z8my_writeiPKvm@plt+0xc0>
    10cd:	55                   	push   rbp
    10ce:	48 83 3d f2 2e 00 00 	cmp    QWORD PTR [rip+0x2ef2],0x0        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    10d5:	00 
    10d6:	48 89 e5             	mov    rbp,rsp
    10d9:	74 0d                	je     10e8 <_Z8my_writeiPKvm@plt+0xa8>
    10db:	48 8b 3d 2e 2f 00 00 	mov    rdi,QWORD PTR [rip+0x2f2e]        # 4010 <__dso_handle>
    10e2:	ff 15 e0 2e 00 00    	call   QWORD PTR [rip+0x2ee0]        # 3fc8 <__cxa_finalize@GLIBC_2.2.5>
    10e8:	e8 63 ff ff ff       	call   1050 <_Z8my_writeiPKvm@plt+0x10>
    10ed:	c6 05 24 2f 00 00 01 	mov    BYTE PTR [rip+0x2f24],0x1        # 4018 <__TMC_END__>
    10f4:	5d                   	pop    rbp
    10f5:	c3                   	ret
    10f6:	66 2e 0f 1f 84 00 00 	cs nop WORD PTR [rax+rax*1+0x0]
    10fd:	00 00 00 
    1100:	c3                   	ret
    1101:	66 66 2e 0f 1f 84 00 	data16 cs nop WORD PTR [rax+rax*1+0x0]
    1108:	00 00 00 00 
    110c:	0f 1f 40 00          	nop    DWORD PTR [rax+0x0]
    1110:	f3 0f 1e fa          	endbr64
    1114:	e9 67 ff ff ff       	jmp    1080 <_Z8my_writeiPKvm@plt+0x40>

0000000000001119 <_Z8my_writeiPKvm>:
    1119:	55                   	push   rbp
    111a:	48 89 e5             	mov    rbp,rsp
    111d:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    1120:	48 89 75 e0          	mov    QWORD PTR [rbp-0x20],rsi
    1124:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    1128:	b8 01 00 00 00       	mov    eax,0x1
    112d:	8b 7d ec             	mov    edi,DWORD PTR [rbp-0x14]
    1130:	48 8b 75 e0          	mov    rsi,QWORD PTR [rbp-0x20]
    1134:	48 8b 55 d8          	mov    rdx,QWORD PTR [rbp-0x28]
    1138:	0f 05                	syscall
    113a:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    113e:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    1142:	5d                   	pop    rbp
    1143:	c3                   	ret

0000000000001144 <_Z7my_exiti>:
    1144:	55                   	push   rbp
    1145:	48 89 e5             	mov    rbp,rsp
    1148:	89 7d ec             	mov    DWORD PTR [rbp-0x14],edi
    114b:	b8 3c 00 00 00       	mov    eax,0x3c
    1150:	8b 55 ec             	mov    edx,DWORD PTR [rbp-0x14]
    1153:	89 d7                	mov    edi,edx
    1155:	0f 05                	syscall
    1157:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    115b:	48 8b 45 f8          	mov    rax,QWORD PTR [rbp-0x8]
    115f:	5d                   	pop    rbp
    1160:	c3                   	ret

0000000000001161 <main>:
    1161:	55                   	push   rbp
    1162:	48 89 e5             	mov    rbp,rsp
    1165:	48 81 ec 50 02 00 00 	sub    rsp,0x250
    116c:	64 48 8b 04 25 28 00 	mov    rax,QWORD PTR fs:0x28
    1173:	00 00 
    1175:	48 89 45 f8          	mov    QWORD PTR [rbp-0x8],rax
    1179:	31 c0                	xor    eax,eax
    117b:	48 b8 68 65 6c 6c 6f 	movabs rax,0x7266206f6c6c6568
    1182:	20 66 72 
    1185:	48 ba 6f 6d 20 69 6e 	movabs rdx,0x63656a6e69206d6f
    118c:	6a 65 63 
    118f:	48 89 45 d0          	mov    QWORD PTR [rbp-0x30],rax
    1193:	48 89 55 d8          	mov    QWORD PTR [rbp-0x28],rdx
    1197:	48 b8 6a 65 63 74 65 	movabs rax,0x6d2064657463656a
    119e:	64 20 6d 
    11a1:	48 ba 6f 64 75 6c 65 	movabs rdx,0xa21656c75646f
    11a8:	21 0a 00 
    11ab:	48 89 45 dd          	mov    QWORD PTR [rbp-0x23],rax
    11af:	48 89 55 e5          	mov    QWORD PTR [rbp-0x1b],rdx
    11b3:	c7 85 bc fd ff ff 01 	mov    DWORD PTR [rbp-0x244],0x1
    11ba:	00 00 00 
    11bd:	48 8d 45 d0          	lea    rax,[rbp-0x30]
    11c1:	ba 1d 00 00 00       	mov    edx,0x1d
    11c6:	48 89 c6             	mov    rsi,rax
    11c9:	bf 01 00 00 00       	mov    edi,0x1
    11ce:	e8 6d fe ff ff       	call   1040 <_Z8my_writeiPKvm@plt>
    11d3:	e8 58 fe ff ff       	call   1030 <fork@plt>
    11d8:	eb f9                	jmp    11d3 <main+0x72>

Disassembly of section .fini:

00000000000011dc <_fini>:
    11dc:	f3 0f 1e fa          	endbr64
    11e0:	48 83 ec 08          	sub    rsp,0x8
    11e4:	48 83 c4 08          	add    rsp,0x8
    11e8:	c3                   	ret

Disassembly of section .rodata:

0000000000002000 <_ZNSt8__detail30__integer_to_chars_is_unsignedIjEE>:
    2000:	01                 	add    DWORD PTR [rcx],eax

0000000000002001 <_ZNSt8__detail30__integer_to_chars_is_unsignedImEE>:
    2001:	01                 	add    DWORD PTR [rcx],eax

0000000000002002 <_ZNSt8__detail30__integer_to_chars_is_unsignedIyEE>:
    2002:	01                 	add    DWORD PTR [rcx],eax

0000000000002003 <_ZSt39__is_implicitly_default_constructible_vItE>:
    2003:	01                 	add    DWORD PTR [rcx],eax

0000000000002004 <_ZSt39__is_implicitly_default_constructible_vIPKcE>:
    2004:	01                 	add    DWORD PTR [rcx],eax

0000000000002005 <_ZNSt8__detail14__destructibleIN9__gnu_cxx17__normal_iteratorIPcSt4spanIcLm18446744073709551615EEEEEE>:
    2005:	01                 	add    DWORD PTR [rcx],eax

0000000000002006 <_ZNSt8__detail19__destructible_implIN9__gnu_cxx17__normal_iteratorIPcSt4spanIcLm18446744073709551615EEEEEE>:
    2006:	01                 	add    DWORD PTR [rcx],eax

0000000000002007 <_ZNSt8__detail14__destructibleISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPcSt4spanIcLm18446744073709551615EEEEEEE>:
    2007:	01                 	add    DWORD PTR [rcx],eax

0000000000002008 <_ZNSt8__detail19__destructible_implISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPcSt4spanIcLm18446744073709551615EEEEEEE>:
    2008:	01                 	add    DWORD PTR [rcx],eax

0000000000002009 <_ZNSt8__detail14__destructibleINSt8__format10_Sink_iterIcEEEE>:
    2009:	01                 	add    DWORD PTR [rcx],eax

000000000000200a <_ZNSt8__detail19__destructible_implINSt8__format10_Sink_iterIcEEEE>:
    200a:	01                 	add    DWORD PTR [rcx],eax

000000000000200b <_ZNSt8__detail14__destructibleIN9__gnu_cxx17__normal_iteratorIPwSt4spanIwLm18446744073709551615EEEEEE>:
    200b:	01                 	add    DWORD PTR [rcx],eax

000000000000200c <_ZNSt8__detail19__destructible_implIN9__gnu_cxx17__normal_iteratorIPwSt4spanIwLm18446744073709551615EEEEEE>:
    200c:	01                 	add    DWORD PTR [rcx],eax

000000000000200d <_ZNSt8__detail14__destructibleISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPwSt4spanIwLm18446744073709551615EEEEEEE>:
    200d:	01                 	add    DWORD PTR [rcx],eax

000000000000200e <_ZNSt8__detail19__destructible_implISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPwSt4spanIwLm18446744073709551615EEEEEEE>:
    200e:	01                 	add    DWORD PTR [rcx],eax

000000000000200f <_ZNSt8__detail14__destructibleINSt8__format10_Sink_iterIwEEEE>:
    200f:	01                 	add    DWORD PTR [rcx],eax

0000000000002010 <_ZNSt8__detail19__destructible_implINSt8__format10_Sink_iterIwEEEE>:
    2010:	01                 	add    DWORD PTR [rcx],eax

0000000000002011 <_ZNSt8__detail14__destructibleIPcEE>:
    2011:	01                 	add    DWORD PTR [rcx],eax

0000000000002012 <_ZNSt8__detail19__destructible_implIPcEE>:
    2012:	01                 	add    DWORD PTR [rcx],eax

0000000000002013 <_ZNSt8__detail14__destructibleIPwEE>:
    2013:	01                 	add    DWORD PTR [rcx],eax

0000000000002014 <_ZNSt8__detail19__destructible_implIPwEE>:
    2014:	01                 	add    DWORD PTR [rcx],eax

0000000000002015 <_ZNSt8__detail14__destructibleIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE>:
    2015:	01                 	add    DWORD PTR [rcx],eax

0000000000002016 <_ZNSt8__detail19__destructible_implIN9__gnu_cxx17__normal_iteratorIPcNSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEEEEEE>:
    2016:	01                 	add    DWORD PTR [rcx],eax

0000000000002017 <_ZSt22__is_specialization_ofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEES1_E>:
    2017:	01                 	add    DWORD PTR [rcx],eax

0000000000002018 <_ZSt22__is_specialization_ofINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEES1_E>:
    2018:	01                 	add    DWORD PTR [rcx],eax

0000000000002019 <_ZNSt8__detail14__destructibleImEE>:
    2019:	01                 	add    DWORD PTR [rcx],eax

000000000000201a <_ZNSt8__detail19__destructible_implImEE>:
    201a:	01                 	add    DWORD PTR [rcx],eax

000000000000201b <_ZSt39__is_implicitly_default_constructible_vIPKwE>:
    201b:	01                 	add    DWORD PTR [rcx],eax

000000000000201c <_ZNSt8__detail14__destructibleIPKcEE>:
    201c:	01                 	add    DWORD PTR [rcx],eax

000000000000201d <_ZNSt8__detail19__destructible_implIPKcEE>:
    201d:	01                 	add    DWORD PTR [rcx],eax

000000000000201e <_ZNSt8__detail14__destructibleIPKwEE>:
    201e:	01                 	add    DWORD PTR [rcx],eax

000000000000201f <_ZNSt8__detail19__destructible_implIPKwEE>:
    201f:	01                 	add    DWORD PTR [rax],eax

0000000000002020 <_ZSt22__is_specialization_ofINSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEESt6vectorE>:
	...

0000000000002021 <_ZNSt8__detail14__destructibleIN9__gnu_cxx17__normal_iteratorIPwNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEEEEE>:
    2021:	01                 	add    DWORD PTR [rcx],eax

0000000000002022 <_ZNSt8__detail19__destructible_implIN9__gnu_cxx17__normal_iteratorIPwNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEEEEE>:
    2022:	01                 	add    DWORD PTR [rax],eax

0000000000002023 <_ZSt22__is_specialization_ofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorE>:
	...

0000000000002024 <_ZNSt8__detail14__destructibleIiEE>:
    2024:	01                 	add    DWORD PTR [rcx],eax

0000000000002025 <_ZNSt8__detail19__destructible_implIiEE>:
    2025:	01                 	add    DWORD PTR [rcx],eax

0000000000002026 <_ZNSt8__detail14__destructibleIjEE>:
    2026:	01                 	add    DWORD PTR [rcx],eax

0000000000002027 <_ZNSt8__detail19__destructible_implIjEE>:
    2027:	01                 	add    DWORD PTR [rcx],eax

0000000000002028 <_ZNSt8__detail14__destructibleIlEE>:
    2028:	01                 	add    DWORD PTR [rcx],eax

0000000000002029 <_ZNSt8__detail19__destructible_implIlEE>:
    2029:	01                 	add    DWORD PTR [rcx],eax

000000000000202a <_ZNSt8__detail14__destructibleIPKDiEE>:
    202a:	01                 	add    DWORD PTR [rcx],eax

000000000000202b <_ZNSt8__detail19__destructible_implIPKDiEE>:
    202b:	01                 	add    DWORD PTR [rcx],eax

000000000000202c <_ZNSt8__detail14__destructibleINSt9__unicode13_Utf_iteratorIDicPKDiS4_NS1_5_ReplEEEEE>:
    202c:	01                 	add    DWORD PTR [rcx],eax

000000000000202d <_ZNSt8__detail19__destructible_implINSt9__unicode13_Utf_iteratorIDicPKDiS4_NS1_5_ReplEEEEE>:
    202d:	01                 	add    DWORD PTR [rcx],eax

000000000000202e <_ZNSt8__detail14__destructibleISt17basic_string_viewIcSt11char_traitsIcEEEE>:
    202e:	01                 	add    DWORD PTR [rcx],eax

000000000000202f <_ZNSt8__detail19__destructible_implISt17basic_string_viewIcSt11char_traitsIcEEEE>:
    202f:	01                 	add    DWORD PTR [rcx],eax

0000000000002030 <_ZNSt8__detail14__destructibleINSt9__unicode13_Utf_iteratorIcDiPKcS4_NS1_5_ReplEEEEE>:
    2030:	01                 	add    DWORD PTR [rcx],eax

0000000000002031 <_ZNSt8__detail19__destructible_implINSt9__unicode13_Utf_iteratorIcDiPKcS4_NS1_5_ReplEEEEE>:
    2031:	01                 	add    DWORD PTR [rcx],eax

0000000000002032 <_ZNSt8__detail30__integer_to_chars_is_unsignedIoEE>:
    2032:	01                   	.byte 0x1

Disassembly of section .eh_frame_hdr:

0000000000002034 <__GNU_EH_FRAME_HDR>:
    2034:	01 1b                	add    DWORD PTR [rbx],ebx
    2036:	03 3b                	add    edi,DWORD PTR [rbx]
    2038:	28 00                	sub    BYTE PTR [rax],al
    203a:	00 00                	add    BYTE PTR [rax],al
    203c:	04 00                	add    al,0x0
    203e:	00 00                	add    BYTE PTR [rax],al
    2040:	ec                   	in     al,dx
    2041:	ef                   	out    dx,eax
    2042:	ff                   	(bad)
    2043:	ff 44 00 00          	inc    DWORD PTR [rax+rax*1+0x0]
    2047:	00 e5                	add    ch,ah
    2049:	f0 ff                	lock (bad)
    204b:	ff 6c 00 00          	jmp    FWORD PTR [rax+rax*1+0x0]
    204f:	00 10                	add    BYTE PTR [rax],dl
    2051:	f1                   	int1
    2052:	ff                   	(bad)
    2053:	ff 8c 00 00 00 2d f1 	dec    DWORD PTR [rax+rax*1-0xed30000]
    205a:	ff                   	(bad)
    205b:	ff                   	.byte 0xff
    205c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    205d:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .eh_frame:

0000000000002060 <.eh_frame>:
    2060:	14 00                	adc    al,0x0
    2062:	00 00                	add    BYTE PTR [rax],al
    2064:	00 00                	add    BYTE PTR [rax],al
    2066:	00 00                	add    BYTE PTR [rax],al
    2068:	01 7a 52             	add    DWORD PTR [rdx+0x52],edi
    206b:	00 01                	add    BYTE PTR [rcx],al
    206d:	78 10                	js     207f <__GNU_EH_FRAME_HDR+0x4b>
    206f:	01 1b                	add    DWORD PTR [rbx],ebx
    2071:	0c 07                	or     al,0x7
    2073:	08 90 01 00 00 24    	or     BYTE PTR [rax+0x24000001],dl
    2079:	00 00                	add    BYTE PTR [rax],al
    207b:	00 1c 00             	add    BYTE PTR [rax+rax*1],bl
    207e:	00 00                	add    BYTE PTR [rax],al
    2080:	a0 ef ff ff 30 00 00 	movabs al,ds:0x30ffffef
    2087:	00 00 
    2089:	0e                   	(bad)
    208a:	10 46 0e             	adc    BYTE PTR [rsi+0xe],al
    208d:	18 4a 0f             	sbb    BYTE PTR [rdx+0xf],cl
    2090:	0b 77 08             	or     esi,DWORD PTR [rdi+0x8]
    2093:	80 00 3f             	add    BYTE PTR [rax],0x3f
    2096:	1a 3b                	sbb    bh,BYTE PTR [rbx]
    2098:	2a 33                	sub    dh,BYTE PTR [rbx]
    209a:	24 22                	and    al,0x22
    209c:	00 00                	add    BYTE PTR [rax],al
    209e:	00 00                	add    BYTE PTR [rax],al
    20a0:	1c 00                	sbb    al,0x0
    20a2:	00 00                	add    BYTE PTR [rax],al
    20a4:	44 00 00             	add    BYTE PTR [rax],r8b
    20a7:	00 71 f0             	add    BYTE PTR [rcx-0x10],dh
    20aa:	ff                   	(bad)
    20ab:	ff 2b                	jmp    FWORD PTR [rbx]
    20ad:	00 00                	add    BYTE PTR [rax],al
    20af:	00 00                	add    BYTE PTR [rax],al
    20b1:	41 0e                	rex.B (bad)
    20b3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20b9:	66 0c 07             	data16 or al,0x7
    20bc:	08 00                	or     BYTE PTR [rax],al
    20be:	00 00                	add    BYTE PTR [rax],al
    20c0:	1c 00                	sbb    al,0x0
    20c2:	00 00                	add    BYTE PTR [rax],al
    20c4:	64 00 00             	add    BYTE PTR fs:[rax],al
    20c7:	00 7c f0 ff          	add    BYTE PTR [rax+rsi*8-0x1],bh
    20cb:	ff 1d 00 00 00 00    	call   FWORD PTR [rip+0x0]        # 20d1 <__GNU_EH_FRAME_HDR+0x9d>
    20d1:	41 0e                	rex.B (bad)
    20d3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20d9:	58                   	pop    rax
    20da:	0c 07                	or     al,0x7
    20dc:	08 00                	or     BYTE PTR [rax],al
    20de:	00 00                	add    BYTE PTR [rax],al
    20e0:	18 00                	sbb    BYTE PTR [rax],al
    20e2:	00 00                	add    BYTE PTR [rax],al
    20e4:	84 00                	test   BYTE PTR [rax],al
    20e6:	00 00                	add    BYTE PTR [rax],al
    20e8:	79 f0                	jns    20da <__GNU_EH_FRAME_HDR+0xa6>
    20ea:	ff                   	(bad)
    20eb:	ff                   	(bad)
    20ec:	79 00                	jns    20ee <__GNU_EH_FRAME_HDR+0xba>
    20ee:	00 00                	add    BYTE PTR [rax],al
    20f0:	00 41 0e             	add    BYTE PTR [rcx+0xe],al
    20f3:	10 86 02 43 0d 06    	adc    BYTE PTR [rsi+0x60d4302],al
    20f9:	00 00                	add    BYTE PTR [rax],al
    20fb:	00 00                	add    BYTE PTR [rax],al
    20fd:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .init_array:

0000000000003dc0 <.init_array>:
    3dc0:	10 11                	adc    BYTE PTR [rcx],dl
	...

Disassembly of section .fini_array:

0000000000003dd0 <.fini_array>:
    3dd0:	c0 10 00             	rcl    BYTE PTR [rax],0x0
    3dd3:	00 00                	add    BYTE PTR [rax],al
    3dd5:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .dynamic:

0000000000003dd8 <_DYNAMIC>:
    3dd8:	01 00                	add    DWORD PTR [rax],eax
    3dda:	00 00                	add    BYTE PTR [rax],al
    3ddc:	00 00                	add    BYTE PTR [rax],al
    3dde:	00 00                	add    BYTE PTR [rax],al
    3de0:	99                   	cdq
    3de1:	00 00                	add    BYTE PTR [rax],al
    3de3:	00 00                	add    BYTE PTR [rax],al
    3de5:	00 00                	add    BYTE PTR [rax],al
    3de7:	00 01                	add    BYTE PTR [rcx],al
    3de9:	00 00                	add    BYTE PTR [rax],al
    3deb:	00 00                	add    BYTE PTR [rax],al
    3ded:	00 00                	add    BYTE PTR [rax],al
    3def:	00 a8 00 00 00 00    	add    BYTE PTR [rax+0x0],ch
    3df5:	00 00                	add    BYTE PTR [rax],al
    3df7:	00 01                	add    BYTE PTR [rcx],al
    3df9:	00 00                	add    BYTE PTR [rax],al
    3dfb:	00 00                	add    BYTE PTR [rax],al
    3dfd:	00 00                	add    BYTE PTR [rax],al
    3dff:	00 b2 00 00 00 00    	add    BYTE PTR [rdx+0x0],dh
    3e05:	00 00                	add    BYTE PTR [rax],al
    3e07:	00 01                	add    BYTE PTR [rcx],al
    3e09:	00 00                	add    BYTE PTR [rax],al
    3e0b:	00 00                	add    BYTE PTR [rax],al
    3e0d:	00 00                	add    BYTE PTR [rax],al
    3e0f:	00 c0                	add    al,al
    3e11:	00 00                	add    BYTE PTR [rax],al
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	00 00                	add    BYTE PTR [rax],al
    3e17:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
    3e1a:	00 00                	add    BYTE PTR [rax],al
    3e1c:	00 00                	add    BYTE PTR [rax],al
    3e1e:	00 00                	add    BYTE PTR [rax],al
    3e20:	00 10                	add    BYTE PTR [rax],dl
    3e22:	00 00                	add    BYTE PTR [rax],al
    3e24:	00 00                	add    BYTE PTR [rax],al
    3e26:	00 00                	add    BYTE PTR [rax],al
    3e28:	0d 00 00 00 00       	or     eax,0x0
    3e2d:	00 00                	add    BYTE PTR [rax],al
    3e2f:	00 dc                	add    ah,bl
    3e31:	11 00                	adc    DWORD PTR [rax],eax
    3e33:	00 00                	add    BYTE PTR [rax],al
    3e35:	00 00                	add    BYTE PTR [rax],al
    3e37:	00 19                	add    BYTE PTR [rcx],bl
    3e39:	00 00                	add    BYTE PTR [rax],al
    3e3b:	00 00                	add    BYTE PTR [rax],al
    3e3d:	00 00                	add    BYTE PTR [rax],al
    3e3f:	00 c0                	add    al,al
    3e41:	3d 00 00 00 00       	cmp    eax,0x0
    3e46:	00 00                	add    BYTE PTR [rax],al
    3e48:	1b 00                	sbb    eax,DWORD PTR [rax]
    3e4a:	00 00                	add    BYTE PTR [rax],al
    3e4c:	00 00                	add    BYTE PTR [rax],al
    3e4e:	00 00                	add    BYTE PTR [rax],al
    3e50:	10 00                	adc    BYTE PTR [rax],al
    3e52:	00 00                	add    BYTE PTR [rax],al
    3e54:	00 00                	add    BYTE PTR [rax],al
    3e56:	00 00                	add    BYTE PTR [rax],al
    3e58:	1a 00                	sbb    al,BYTE PTR [rax]
    3e5a:	00 00                	add    BYTE PTR [rax],al
    3e5c:	00 00                	add    BYTE PTR [rax],al
    3e5e:	00 00                	add    BYTE PTR [rax],al
    3e60:	d0 3d 00 00 00 00    	sar    BYTE PTR [rip+0x0],1        # 3e66 <_DYNAMIC+0x8e>
    3e66:	00 00                	add    BYTE PTR [rax],al
    3e68:	1c 00                	sbb    al,0x0
    3e6a:	00 00                	add    BYTE PTR [rax],al
    3e6c:	00 00                	add    BYTE PTR [rax],al
    3e6e:	00 00                	add    BYTE PTR [rax],al
    3e70:	08 00                	or     BYTE PTR [rax],al
    3e72:	00 00                	add    BYTE PTR [rax],al
    3e74:	00 00                	add    BYTE PTR [rax],al
    3e76:	00 00                	add    BYTE PTR [rax],al
    3e78:	f5                   	cmc
    3e79:	fe                   	(bad)
    3e7a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3e7d:	00 00                	add    BYTE PTR [rax],al
    3e7f:	00 00                	add    BYTE PTR [rax],al
    3e81:	03 00                	add    eax,DWORD PTR [rax]
    3e83:	00 00                	add    BYTE PTR [rax],al
    3e85:	00 00                	add    BYTE PTR [rax],al
    3e87:	00 05 00 00 00 00    	add    BYTE PTR [rip+0x0],al        # 3e8d <_DYNAMIC+0xb5>
    3e8d:	00 00                	add    BYTE PTR [rax],al
    3e8f:	00 20                	add    BYTE PTR [rax],ah
    3e91:	04 00                	add    al,0x0
    3e93:	00 00                	add    BYTE PTR [rax],al
    3e95:	00 00                	add    BYTE PTR [rax],al
    3e97:	00 06                	add    BYTE PTR [rsi],al
    3e99:	00 00                	add    BYTE PTR [rax],al
    3e9b:	00 00                	add    BYTE PTR [rax],al
    3e9d:	00 00                	add    BYTE PTR [rax],al
    3e9f:	00 30                	add    BYTE PTR [rax],dh
    3ea1:	03 00                	add    eax,DWORD PTR [rax]
    3ea3:	00 00                	add    BYTE PTR [rax],al
    3ea5:	00 00                	add    BYTE PTR [rax],al
    3ea7:	00 0a                	add    BYTE PTR [rdx],cl
    3ea9:	00 00                	add    BYTE PTR [rax],al
    3eab:	00 00                	add    BYTE PTR [rax],al
    3ead:	00 00                	add    BYTE PTR [rax],al
    3eaf:	00 e5                	add    ch,ah
    3eb1:	00 00                	add    BYTE PTR [rax],al
    3eb3:	00 00                	add    BYTE PTR [rax],al
    3eb5:	00 00                	add    BYTE PTR [rax],al
    3eb7:	00 0b                	add    BYTE PTR [rbx],cl
    3eb9:	00 00                	add    BYTE PTR [rax],al
    3ebb:	00 00                	add    BYTE PTR [rax],al
    3ebd:	00 00                	add    BYTE PTR [rax],al
    3ebf:	00 18                	add    BYTE PTR [rax],bl
    3ec1:	00 00                	add    BYTE PTR [rax],al
    3ec3:	00 00                	add    BYTE PTR [rax],al
    3ec5:	00 00                	add    BYTE PTR [rax],al
    3ec7:	00 03                	add    BYTE PTR [rbx],al
    3ec9:	00 00                	add    BYTE PTR [rax],al
    3ecb:	00 00                	add    BYTE PTR [rax],al
    3ecd:	00 00                	add    BYTE PTR [rax],al
    3ecf:	00 e8                	add    al,ch
    3ed1:	3f                   	(bad)
    3ed2:	00 00                	add    BYTE PTR [rax],al
    3ed4:	00 00                	add    BYTE PTR [rax],al
    3ed6:	00 00                	add    BYTE PTR [rax],al
    3ed8:	02 00                	add    al,BYTE PTR [rax]
    3eda:	00 00                	add    BYTE PTR [rax],al
    3edc:	00 00                	add    BYTE PTR [rax],al
    3ede:	00 00                	add    BYTE PTR [rax],al
    3ee0:	30 00                	xor    BYTE PTR [rax],al
    3ee2:	00 00                	add    BYTE PTR [rax],al
    3ee4:	00 00                	add    BYTE PTR [rax],al
    3ee6:	00 00                	add    BYTE PTR [rax],al
    3ee8:	14 00                	adc    al,0x0
    3eea:	00 00                	add    BYTE PTR [rax],al
    3eec:	00 00                	add    BYTE PTR [rax],al
    3eee:	00 00                	add    BYTE PTR [rax],al
    3ef0:	07                   	(bad)
    3ef1:	00 00                	add    BYTE PTR [rax],al
    3ef3:	00 00                	add    BYTE PTR [rax],al
    3ef5:	00 00                	add    BYTE PTR [rax],al
    3ef7:	00 17                	add    BYTE PTR [rdi],dl
    3ef9:	00 00                	add    BYTE PTR [rax],al
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	00 00                	add    BYTE PTR [rax],al
    3eff:	00 20                	add    BYTE PTR [rax],ah
    3f01:	06                   	(bad)
    3f02:	00 00                	add    BYTE PTR [rax],al
    3f04:	00 00                	add    BYTE PTR [rax],al
    3f06:	00 00                	add    BYTE PTR [rax],al
    3f08:	07                   	(bad)
    3f09:	00 00                	add    BYTE PTR [rax],al
    3f0b:	00 00                	add    BYTE PTR [rax],al
    3f0d:	00 00                	add    BYTE PTR [rax],al
    3f0f:	00 60 05             	add    BYTE PTR [rax+0x5],ah
    3f12:	00 00                	add    BYTE PTR [rax],al
    3f14:	00 00                	add    BYTE PTR [rax],al
    3f16:	00 00                	add    BYTE PTR [rax],al
    3f18:	08 00                	or     BYTE PTR [rax],al
    3f1a:	00 00                	add    BYTE PTR [rax],al
    3f1c:	00 00                	add    BYTE PTR [rax],al
    3f1e:	00 00                	add    BYTE PTR [rax],al
    3f20:	c0 00 00             	rol    BYTE PTR [rax],0x0
    3f23:	00 00                	add    BYTE PTR [rax],al
    3f25:	00 00                	add    BYTE PTR [rax],al
    3f27:	00 09                	add    BYTE PTR [rcx],cl
    3f29:	00 00                	add    BYTE PTR [rax],al
    3f2b:	00 00                	add    BYTE PTR [rax],al
    3f2d:	00 00                	add    BYTE PTR [rax],al
    3f2f:	00 18                	add    BYTE PTR [rax],bl
    3f31:	00 00                	add    BYTE PTR [rax],al
    3f33:	00 00                	add    BYTE PTR [rax],al
    3f35:	00 00                	add    BYTE PTR [rax],al
    3f37:	00 fe                	add    dh,bh
    3f39:	ff                   	(bad)
    3f3a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f3d:	00 00                	add    BYTE PTR [rax],al
    3f3f:	00 20                	add    BYTE PTR [rax],ah
    3f41:	05 00 00 00 00       	add    eax,0x0
    3f46:	00 00                	add    BYTE PTR [rax],al
    3f48:	ff                   	(bad)
    3f49:	ff                   	(bad)
    3f4a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f4d:	00 00                	add    BYTE PTR [rax],al
    3f4f:	00 02                	add    BYTE PTR [rdx],al
    3f51:	00 00                	add    BYTE PTR [rax],al
    3f53:	00 00                	add    BYTE PTR [rax],al
    3f55:	00 00                	add    BYTE PTR [rax],al
    3f57:	00 f0                	add    al,dh
    3f59:	ff                   	(bad)
    3f5a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	00 06                	add    BYTE PTR [rsi],al
    3f61:	05 00 00 00 00       	add    eax,0x0
    3f66:	00 00                	add    BYTE PTR [rax],al
    3f68:	f9                   	stc
    3f69:	ff                   	(bad)
    3f6a:	ff 6f 00             	jmp    FWORD PTR [rdi+0x0]
    3f6d:	00 00                	add    BYTE PTR [rax],al
    3f6f:	00 03                	add    BYTE PTR [rbx],al
	...

Disassembly of section .got:

0000000000003fc8 <.got>:
	...

Disassembly of section .got.plt:

0000000000003fe8 <_GLOBAL_OFFSET_TABLE_>:
    3fe8:	d8 3d 00 00 00 00    	fdivr  DWORD PTR [rip+0x0]        # 3fee <_GLOBAL_OFFSET_TABLE_+0x6>
	...
    3ffe:	00 00                	add    BYTE PTR [rax],al
    4000:	36 10 00             	ss adc BYTE PTR [rax],al
    4003:	00 00                	add    BYTE PTR [rax],al
    4005:	00 00                	add    BYTE PTR [rax],al
    4007:	00 46 10             	add    BYTE PTR [rsi+0x10],al
    400a:	00 00                	add    BYTE PTR [rax],al
    400c:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .data:

0000000000004010 <__dso_handle>:
    4010:	10 40 00             	adc    BYTE PTR [rax+0x0],al
    4013:	00 00                	add    BYTE PTR [rax],al
    4015:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	47                   	rex.RXB
   1:	43                   	rex.XB
   2:	43 3a 20             	rex.XB cmp spl,BYTE PTR [r8]
   5:	28 47 4e             	sub    BYTE PTR [rdi+0x4e],al
   8:	55                   	push   rbp
   9:	29 20                	sub    DWORD PTR [rax],esp
   b:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
   e:	32 2e                	xor    ch,BYTE PTR [rsi]
  10:	31 20                	xor    DWORD PTR [rax],esp
  12:	32 30                	xor    dh,BYTE PTR [rax]
  14:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
  17:	38 30                	cmp    BYTE PTR [rax],dh
  19:	35                   	.byte 0x35
	...

Disassembly of section .debug_aranges:

0000000000000000 <.debug_aranges>:
   0:	2c 00                	sub    al,0x0
   2:	00 00                	add    BYTE PTR [rax],al
   4:	02 00                	add    al,BYTE PTR [rax]
   6:	00 00                	add    BYTE PTR [rax],al
   8:	00 00                	add    BYTE PTR [rax],al
   a:	08 00                	or     BYTE PTR [rax],al
   c:	00 00                	add    BYTE PTR [rax],al
   e:	00 00                	add    BYTE PTR [rax],al
  10:	19 11                	sbb    DWORD PTR [rcx],edx
  12:	00 00                	add    BYTE PTR [rax],al
  14:	00 00                	add    BYTE PTR [rax],al
  16:	00 00                	add    BYTE PTR [rax],al
  18:	c1 00 00             	rol    DWORD PTR [rax],0x0
	...

Disassembly of section .debug_info:

0000000000000000 <.debug_info>:
       0:	f0 76 00             	lock jbe 3 <_init-0xffd>
       3:	00 05 00 01 08 00    	add    BYTE PTR [rip+0x80100],al        # 80109 <__TMC_END__+0x7c0f1>
       9:	00 00                	add    BYTE PTR [rax],al
       b:	00 51 8f             	add    BYTE PTR [rcx-0x71],dl
       e:	61                   	(bad)
       f:	00 00                	add    BYTE PTR [rax],al
      11:	21 00                	and    DWORD PTR [rax],eax
      13:	00 00                	add    BYTE PTR [rax],al
      15:	00 17                	add    BYTE PTR [rdi],dl
      17:	00 00                	add    BYTE PTR [rax],al
      19:	00 19                	add    BYTE PTR [rcx],bl
      1b:	11 00                	adc    DWORD PTR [rax],eax
      1d:	00 00                	add    BYTE PTR [rax],al
      1f:	00 00                	add    BYTE PTR [rax],al
      21:	00 c1                	add    cl,al
	...
      2b:	00 00                	add    BYTE PTR [rax],al
      2d:	00 05 03 80 00 00    	add    BYTE PTR [rip+0x8003],al        # 8036 <__TMC_END__+0x401e>
      33:	03 d6                	add    edx,esi
      35:	17                   	(bad)
      36:	3a 00                	cmp    al,BYTE PTR [rax]
      38:	00 00                	add    BYTE PTR [rax],al
      3a:	13 08                	adc    ecx,DWORD PTR [rax]
      3c:	07                   	(bad)
      3d:	e7 7a                	out    0x7a,eax
      3f:	00 00                	add    BYTE PTR [rax],al
      41:	52                   	push   rdx
      42:	60                   	(bad)
      43:	71 00                	jno    45 <_init-0xfbb>
      45:	00 18                	add    BYTE PTR [rax],bl
      47:	02 00                	add    al,BYTE PTR [rax]
      49:	76 00                	jbe    4b <_init-0xfb5>
      4b:	00 00                	add    BYTE PTR [rax],al
      4d:	35 33 4a 00 00       	xor    eax,0x4a33
      52:	76 00                	jbe    54 <_init-0xfac>
      54:	00 00                	add    BYTE PTR [rax],al
      56:	00 35 ab 49 00 00    	add    BYTE PTR [rip+0x49ab],dh        # 4a07 <__TMC_END__+0x9ef>
      5c:	76 00                	jbe    5e <_init-0xfa2>
      5e:	00 00                	add    BYTE PTR [rax],al
      60:	04 35                	add    al,0x35
      62:	26 46 00 00          	es rex.RX add BYTE PTR [rax],r8b
      66:	7d 00                	jge    68 <_init-0xf98>
      68:	00 00                	add    BYTE PTR [rax],al
      6a:	08 35 05 0b 00 00    	or     BYTE PTR [rip+0xb05],dh        # b75 <_init-0x48b>
      70:	7d 00                	jge    72 <_init-0xf8e>
      72:	00 00                	add    BYTE PTR [rax],al
      74:	10 00                	adc    BYTE PTR [rax],al
      76:	13 04 07             	adc    eax,DWORD PTR [rdi+rax*1]
      79:	ec                   	in     al,dx
      7a:	7a 00                	jp     7c <_init-0xf84>
      7c:	00 53 08             	add    BYTE PTR [rbx+0x8],dl
      7f:	05 d6 3a 00 00       	add    eax,0x3ad6
      84:	04 14                	add    al,0x14
      86:	17                   	(bad)
      87:	76 00                	jbe    89 <_init-0xf77>
      89:	00 00                	add    BYTE PTR [rax],al
      8b:	36 08 05 0e 01 7d 21 	ss or  BYTE PTR [rip+0x217d010e],al        # 217d01a0 <__TMC_END__+0x217cc188>
      92:	00 00                	add    BYTE PTR [rax],al
      94:	d5 00 00 00          	{rex2 0x0} add BYTE PTR [rax],al
      98:	54                   	push   rsp
      99:	04 05                	add    al,0x5
      9b:	11 03                	adc    DWORD PTR [rbx],eax
      9d:	ba 00 00 00 37       	mov    edx,0x37000000
      a2:	df 56 00             	fist   WORD PTR [rsi+0x0]
      a5:	00 05 12 13 76 00    	add    BYTE PTR [rip+0x761312],al        # 7613bd <__TMC_END__+0x75d3a5>
      ab:	00 00                	add    BYTE PTR [rax],al
      ad:	37                   	(bad)
      ae:	77 39                	ja     e9 <_init-0xf17>
      b0:	00 00                	add    BYTE PTR [rax],al
      b2:	05 13 0a d5 00       	add    eax,0xd50a13
      b7:	00 00                	add    BYTE PTR [rax],al
      b9:	00 07                	add    BYTE PTR [rdi],al
      bb:	6d                   	ins    DWORD PTR es:[rdi],dx
      bc:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
      bf:	05 0f 07 f1 00       	add    eax,0xf1070f
      c4:	00 00                	add    BYTE PTR [rax],al
      c6:	00 07                	add    BYTE PTR [rdi],al
      c8:	55                   	push   rbp
      c9:	74 00                	je     cb <_init-0xf35>
      cb:	00 05 14 05 98 00    	add    BYTE PTR [rip+0x980514],al        # 9805e5 <__TMC_END__+0x97c5cd>
      d1:	00 00                	add    BYTE PTR [rax],al
      d3:	04 00                	add    al,0x0
      d5:	2d e5 00 00 00       	sub    eax,0xe5
      da:	e5 00                	in     eax,0x0
      dc:	00 00                	add    BYTE PTR [rax],al
      de:	2e 3a 00             	cs cmp al,BYTE PTR [rax]
      e1:	00 00                	add    BYTE PTR [rax],al
      e3:	03 00                	add    eax,DWORD PTR [rax]
      e5:	13 01                	adc    eax,DWORD PTR [rcx]
      e7:	06                   	(bad)
      e8:	25 22 00 00 0f       	and    eax,0xf000022
      ed:	e5 00                	in     eax,0x0
      ef:	00 00                	add    BYTE PTR [rax],al
      f1:	55                   	push   rbp
      f2:	04 05                	add    al,0x5
      f4:	69 6e 74 00 05 7f 21 	imul   ebp,DWORD PTR [rsi+0x74],0x217f0500
      fb:	00 00                	add    BYTE PTR [rax],al
      fd:	05 15 03 8b 00       	add    eax,0x8b0315
     102:	00 00                	add    BYTE PTR [rax],al
     104:	05 81 21 00 00       	add    eax,0x2181
     109:	06                   	(bad)
     10a:	06                   	(bad)
     10b:	15 f8 00 00 00       	adc    eax,0xf8
     110:	0f 04                	(bad)
     112:	01 00                	add    DWORD PTR [rax],eax
     114:	00 05 ed 70 00 00    	add    BYTE PTR [rip+0x70ed],al        # 7207 <__TMC_END__+0x31ef>
     11a:	07                   	(bad)
     11b:	05 19 21 01 00       	add    eax,0x12119
     120:	00 1a                	add    BYTE PTR [rdx],bl
     122:	aa                   	stos   BYTE PTR es:[rdi],al
     123:	67 00 00             	add    BYTE PTR [eax],al
     126:	d8 08                	fmul   DWORD PTR [rax]
     128:	31 08                	xor    DWORD PTR [rax],ecx
     12a:	a8 02                	test   al,0x2
     12c:	00 00                	add    BYTE PTR [rax],al
     12e:	07                   	(bad)
     12f:	e2 0a                	loop   13b <_init-0xec5>
     131:	00 00                	add    BYTE PTR [rax],al
     133:	08 33                	or     BYTE PTR [rbx],dh
     135:	07                   	(bad)
     136:	f1                   	int1
     137:	00 00                	add    BYTE PTR [rax],al
     139:	00 00                	add    BYTE PTR [rax],al
     13b:	07                   	(bad)
     13c:	1f                   	(bad)
     13d:	7f 00                	jg     13f <_init-0xec1>
     13f:	00 08                	add    BYTE PTR [rax],cl
     141:	36 09 03             	ss or  DWORD PTR [rbx],eax
     144:	58                   	pop    rax
     145:	00 00                	add    BYTE PTR [rax],al
     147:	08 07                	or     BYTE PTR [rdi],al
     149:	c5 16 00             	(bad)
     14c:	00 08                	add    BYTE PTR [rax],cl
     14e:	37                   	(bad)
     14f:	09 03                	or     DWORD PTR [rbx],eax
     151:	58                   	pop    rax
     152:	00 00                	add    BYTE PTR [rax],al
     154:	10 07                	adc    BYTE PTR [rdi],al
     156:	87 51 00             	xchg   DWORD PTR [rcx+0x0],edx
     159:	00 08                	add    BYTE PTR [rax],cl
     15b:	38 09                	cmp    BYTE PTR [rcx],cl
     15d:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
     160:	00 18                	add    BYTE PTR [rax],bl
     162:	07                   	(bad)
     163:	a8 55                	test   al,0x55
     165:	00 00                	add    BYTE PTR [rax],al
     167:	08 39                	or     BYTE PTR [rcx],bh
     169:	09 03                	or     DWORD PTR [rbx],eax
     16b:	58                   	pop    rax
     16c:	00 00                	add    BYTE PTR [rax],al
     16e:	20 07                	and    BYTE PTR [rdi],al
     170:	e0 39                	loopne 1ab <_init-0xe55>
     172:	00 00                	add    BYTE PTR [rax],al
     174:	08 3a                	or     BYTE PTR [rdx],bh
     176:	09 03                	or     DWORD PTR [rbx],eax
     178:	58                   	pop    rax
     179:	00 00                	add    BYTE PTR [rax],al
     17b:	28 07                	sub    BYTE PTR [rdi],al
     17d:	28 13                	sub    BYTE PTR [rbx],dl
     17f:	00 00                	add    BYTE PTR [rax],al
     181:	08 3b                	or     BYTE PTR [rbx],bh
     183:	09 03                	or     DWORD PTR [rbx],eax
     185:	58                   	pop    rax
     186:	00 00                	add    BYTE PTR [rax],al
     188:	30 07                	xor    BYTE PTR [rdi],al
     18a:	bf 65 00 00 08       	mov    edi,0x8000065
     18f:	3c 09                	cmp    al,0x9
     191:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
     194:	00 38                	add    BYTE PTR [rax],bh
     196:	07                   	(bad)
     197:	c1 51 00 00          	rcl    DWORD PTR [rcx+0x0],0x0
     19b:	08 3d 09 03 58 00    	or     BYTE PTR [rip+0x580309],bh        # 5804aa <__TMC_END__+0x57c492>
     1a1:	00 40 07             	add    BYTE PTR [rax+0x7],al
     1a4:	72 37                	jb     1dd <_init-0xe23>
     1a6:	00 00                	add    BYTE PTR [rax],al
     1a8:	08 40 09             	or     BYTE PTR [rax+0x9],al
     1ab:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
     1ae:	00 48 07             	add    BYTE PTR [rax+0x7],cl
     1b1:	b9 7e 00 00 08       	mov    ecx,0x800007e
     1b6:	41 09 03             	or     DWORD PTR [r11],eax
     1b9:	58                   	pop    rax
     1ba:	00 00                	add    BYTE PTR [rax],al
     1bc:	50                   	push   rax
     1bd:	07                   	(bad)
     1be:	cf                   	iret
     1bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1c0:	00 00                	add    BYTE PTR [rax],al
     1c2:	08 42 09             	or     BYTE PTR [rdx+0x9],al
     1c5:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
     1c8:	00 58 07             	add    BYTE PTR [rax+0x7],bl
     1cb:	9e                   	sahf
     1cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1cd:	00 00                	add    BYTE PTR [rax],al
     1cf:	08 44 16 26          	or     BYTE PTR [rsi+rdx*1+0x26],al
     1d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1d4:	00 00                	add    BYTE PTR [rax],al
     1d6:	60                   	(bad)
     1d7:	07                   	(bad)
     1d8:	69 20 00 00 08 46    	imul   esp,DWORD PTR [rax],0x46080000
     1de:	14 2b                	adc    al,0x2b
     1e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1e1:	00 00                	add    BYTE PTR [rax],al
     1e3:	68 07 86 01 00       	push   0x18607
     1e8:	00 08                	add    BYTE PTR [rax],cl
     1ea:	48 07                	rex.W (bad)
     1ec:	f1                   	int1
     1ed:	00 00                	add    BYTE PTR [rax],al
     1ef:	00 70 07             	add    BYTE PTR [rax+0x7],dh
     1f2:	72 85                	jb     179 <_init-0xe87>
     1f4:	00 00                	add    BYTE PTR [rax],al
     1f6:	08 49 07             	or     BYTE PTR [rcx+0x7],cl
     1f9:	f1                   	int1
     1fa:	00 00                	add    BYTE PTR [rax],al
     1fc:	00 74 07 6d          	add    BYTE PTR [rdi+rax*1+0x6d],dh
     200:	83 00 00             	add    DWORD PTR [rax],0x0
     203:	08 4a 0b             	or     BYTE PTR [rdx+0xb],cl
     206:	b4 68                	mov    ah,0x68
     208:	00 00                	add    BYTE PTR [rax],al
     20a:	78 07                	js     213 <_init-0xded>
     20c:	01 7b 00             	add    DWORD PTR [rbx+0x0],edi
     20f:	00 08                	add    BYTE PTR [rax],cl
     211:	4d 12 b4 02 00 00 80 	rex.WRB adc r14b,BYTE PTR [r10+rax*1+0x7800000]
     218:	07 
     219:	43 91                	rex.XB xchg r9d,eax
     21b:	00 00                	add    BYTE PTR [rax],al
     21d:	08 4e 0f             	or     BYTE PTR [rsi+0xf],cl
     220:	04 66                	add    al,0x66
     222:	00 00                	add    BYTE PTR [rax],al
     224:	82                   	(bad)
     225:	07                   	(bad)
     226:	0e                   	(bad)
     227:	06                   	(bad)
     228:	00 00                	add    BYTE PTR [rax],al
     22a:	08 4f 08             	or     BYTE PTR [rdi+0x8],cl
     22d:	30 6e 00             	xor    BYTE PTR [rsi+0x0],ch
     230:	00 83 07 c7 0c 00    	add    BYTE PTR [rbx+0xcc707],al
     236:	00 08                	add    BYTE PTR [rax],cl
     238:	51                   	push   rcx
     239:	0f 40 6e 00          	cmovo  ebp,DWORD PTR [rsi+0x0]
     23d:	00 88 07 71 83 00    	add    BYTE PTR [rax+0x837107],cl
     243:	00 08                	add    BYTE PTR [rax],cl
     245:	59                   	pop    rcx
     246:	0d c0 68 00 00       	or     eax,0x68c0
     24b:	90                   	nop
     24c:	07                   	(bad)
     24d:	1c 5f                	sbb    al,0x5f
     24f:	00 00                	add    BYTE PTR [rax],al
     251:	08 5b 17             	or     BYTE PTR [rbx+0x17],bl
     254:	4a 6e                	rex.WX outs dx,BYTE PTR ds:[rsi]
     256:	00 00                	add    BYTE PTR [rax],al
     258:	98                   	cwde
     259:	07                   	(bad)
     25a:	68 68 00 00 08       	push   0x8000068
     25f:	5c                   	pop    rsp
     260:	19 54 6e 00          	sbb    DWORD PTR [rsi+rbp*2+0x0],edx
     264:	00 a0 07 dc 7f 00    	add    BYTE PTR [rax+0x7fdc07],ah
     26a:	00 08                	add    BYTE PTR [rax],cl
     26c:	5d                   	pop    rbp
     26d:	14 2b                	adc    al,0x2b
     26f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     270:	00 00                	add    BYTE PTR [rax],al
     272:	a8 07                	test   al,0x7
     274:	3c 7a                	cmp    al,0x7a
     276:	00 00                	add    BYTE PTR [rax],al
     278:	08 5e 09             	or     BYTE PTR [rsi+0x9],bl
     27b:	7d 00                	jge    27d <_init-0xd83>
     27d:	00 00                	add    BYTE PTR [rax],al
     27f:	b0 07                	mov    al,0x7
     281:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     282:	5a                   	pop    rdx
     283:	00 00                	add    BYTE PTR [rax],al
     285:	08 5f 15             	or     BYTE PTR [rdi+0x15],bl
     288:	59                   	pop    rcx
     289:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     28a:	00 00                	add    BYTE PTR [rax],al
     28c:	b8 07 36 55 00       	mov    eax,0x553607
     291:	00 08                	add    BYTE PTR [rax],cl
     293:	60                   	(bad)
     294:	07                   	(bad)
     295:	f1                   	int1
     296:	00 00                	add    BYTE PTR [rax],al
     298:	00 c0                	add    al,al
     29a:	07                   	(bad)
     29b:	f1                   	int1
     29c:	65 00 00             	add    BYTE PTR gs:[rax],al
     29f:	08 62 08             	or     BYTE PTR [rdx+0x8],ah
     2a2:	5e                   	pop    rsi
     2a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2a4:	00 00                	add    BYTE PTR [rax],al
     2a6:	c4                   	(bad)
     2a7:	00 05 ae 67 00 00    	add    BYTE PTR [rip+0x67ae],al        # 6a5b <__TMC_END__+0x2a43>
     2ad:	09 07                	or     DWORD PTR [rdi],eax
     2af:	19 21                	sbb    DWORD PTR [rcx],esp
     2b1:	01 00                	add    DWORD PTR [rax],eax
     2b3:	00 13                	add    BYTE PTR [rbx],dl
     2b5:	02 07                	add    al,BYTE PTR [rdi]
     2b7:	de 4c 00 00          	fimul  WORD PTR [rax+rax*1+0x0]
     2bb:	0f b4 02             	lfs    eax,FWORD PTR [rdx]
     2be:	00 00                	add    BYTE PTR [rax],al
     2c0:	08 ec                	or     ah,ch
     2c2:	00 00                	add    BYTE PTR [rax],al
     2c4:	00 0f                	add    BYTE PTR [rdi],cl
     2c6:	c0 02 00             	rol    BYTE PTR [rdx],0x0
     2c9:	00 56 73             	add    BYTE PTR [rsi+0x73],dl
     2cc:	74 64                	je     332 <_init-0xcce>
     2ce:	00 0b                	add    BYTE PTR [rbx],cl
     2d0:	34 01                	xor    al,0x1
     2d2:	0b c6                	or     eax,esi
     2d4:	54                   	push   rsp
     2d5:	00 00                	add    BYTE PTR [rax],al
     2d7:	04 0a                	add    al,0xa
     2d9:	40 0b 04 01          	rex or eax,DWORD PTR [rcx+rax*1]
     2dd:	00 00                	add    BYTE PTR [rax],al
     2df:	04 0a                	add    al,0xa
     2e1:	8d 0b                	lea    ecx,[rbx]
     2e3:	7f 00                	jg     2e5 <_init-0xd1b>
     2e5:	00 00                	add    BYTE PTR [rax],al
     2e7:	04 0a                	add    al,0xa
     2e9:	8f                   	(bad)
     2ea:	0b c6                	or     eax,esi
     2ec:	54                   	push   rsp
     2ed:	00 00                	add    BYTE PTR [rax],al
     2ef:	04 0a                	add    al,0xa
     2f1:	90                   	nop
     2f2:	0b dd                	or     ebx,ebp
     2f4:	54                   	push   rsp
     2f5:	00 00                	add    BYTE PTR [rax],al
     2f7:	04 0a                	add    al,0xa
     2f9:	91                   	xchg   ecx,eax
     2fa:	0b f9                	or     edi,ecx
     2fc:	54                   	push   rsp
     2fd:	00 00                	add    BYTE PTR [rax],al
     2ff:	04 0a                	add    al,0xa
     301:	92                   	xchg   edx,eax
     302:	0b 2b                	or     ebp,DWORD PTR [rbx]
     304:	55                   	push   rbp
     305:	00 00                	add    BYTE PTR [rax],al
     307:	04 0a                	add    al,0xa
     309:	93                   	xchg   ebx,eax
     30a:	0b 47 55             	or     eax,DWORD PTR [rdi+0x55]
     30d:	00 00                	add    BYTE PTR [rax],al
     30f:	04 0a                	add    al,0xa
     311:	94                   	xchg   esp,eax
     312:	0b 6d 55             	or     ebp,DWORD PTR [rbp+0x55]
     315:	00 00                	add    BYTE PTR [rax],al
     317:	04 0a                	add    al,0xa
     319:	95                   	xchg   ebp,eax
     31a:	0b 89 55 00 00 04    	or     ecx,DWORD PTR [rcx+0x4000055]
     320:	0a 96 0b a6 55 00    	or     dl,BYTE PTR [rsi+0x55a60b]
     326:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     329:	97                   	xchg   edi,eax
     32a:	0b c7                	or     eax,edi
     32c:	55                   	push   rbp
     32d:	00 00                	add    BYTE PTR [rax],al
     32f:	04 0a                	add    al,0xa
     331:	98                   	cwde
     332:	0b de                	or     ebx,esi
     334:	55                   	push   rbp
     335:	00 00                	add    BYTE PTR [rax],al
     337:	04 0a                	add    al,0xa
     339:	99                   	cdq
     33a:	0b eb                	or     ebp,ebx
     33c:	55                   	push   rbp
     33d:	00 00                	add    BYTE PTR [rax],al
     33f:	04 0a                	add    al,0xa
     341:	9a                   	(bad)
     342:	0b 11                	or     edx,DWORD PTR [rcx]
     344:	56                   	push   rsi
     345:	00 00                	add    BYTE PTR [rax],al
     347:	04 0a                	add    al,0xa
     349:	9b                   	fwait
     34a:	0b 37                	or     esi,DWORD PTR [rdi]
     34c:	56                   	push   rsi
     34d:	00 00                	add    BYTE PTR [rax],al
     34f:	04 0a                	add    al,0xa
     351:	9c                   	pushf
     352:	0b 53 56             	or     edx,DWORD PTR [rbx+0x56]
     355:	00 00                	add    BYTE PTR [rax],al
     357:	04 0a                	add    al,0xa
     359:	9d                   	popf
     35a:	0b 7e 56             	or     edi,DWORD PTR [rsi+0x56]
     35d:	00 00                	add    BYTE PTR [rax],al
     35f:	04 0a                	add    al,0xa
     361:	9e                   	sahf
     362:	0b 9a 56 00 00 04    	or     ebx,DWORD PTR [rdx+0x4000056]
     368:	0a a0 0b b1 56 00    	or     ah,BYTE PTR [rax+0x56b10b]
     36e:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     371:	a2 0b d3 56 00 00 04 	movabs ds:0xa30a04000056d30b,al
     378:	0a a3 
     37a:	0b f4                	or     esi,esp
     37c:	56                   	push   rsi
     37d:	00 00                	add    BYTE PTR [rax],al
     37f:	04 0a                	add    al,0xa
     381:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     382:	0b 10                	or     edx,DWORD PTR [rax]
     384:	57                   	push   rdi
     385:	00 00                	add    BYTE PTR [rax],al
     387:	04 0a                	add    al,0xa
     389:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
     38a:	0b 36                	or     esi,DWORD PTR [rsi]
     38c:	57                   	push   rdi
     38d:	00 00                	add    BYTE PTR [rax],al
     38f:	04 0a                	add    al,0xa
     391:	a9 0b 5b 57 00       	test   eax,0x575b0b
     396:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     399:	ac                   	lods   al,BYTE PTR ds:[rsi]
     39a:	0b 81 57 00 00 04    	or     eax,DWORD PTR [rcx+0x4000057]
     3a0:	0a ae 0b a6 57 00    	or     ch,BYTE PTR [rsi+0x57a60b]
     3a6:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     3a9:	b0 0b                	mov    al,0xb
     3ab:	c2 57 00             	ret    0x57
     3ae:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     3b1:	b2 0b                	mov    dl,0xb
     3b3:	e2 57                	loop   40c <_init-0xbf4>
     3b5:	00 00                	add    BYTE PTR [rax],al
     3b7:	04 0a                	add    al,0xa
     3b9:	b3 0b                	mov    bl,0xb
     3bb:	0d 58 00 00 04       	or     eax,0x4000058
     3c0:	0a b4 0b 28 58 00 00 	or     dh,BYTE PTR [rbx+rcx*1+0x5828]
     3c7:	04 0a                	add    al,0xa
     3c9:	b5 0b                	mov    ch,0xb
     3cb:	43 58                	rex.XB pop r8
     3cd:	00 00                	add    BYTE PTR [rax],al
     3cf:	04 0a                	add    al,0xa
     3d1:	b6 0b                	mov    dh,0xb
     3d3:	5e                   	pop    rsi
     3d4:	58                   	pop    rax
     3d5:	00 00                	add    BYTE PTR [rax],al
     3d7:	04 0a                	add    al,0xa
     3d9:	b7 0b                	mov    bh,0xb
     3db:	79 58                	jns    435 <_init-0xbcb>
     3dd:	00 00                	add    BYTE PTR [rax],al
     3df:	04 0a                	add    al,0xa
     3e1:	b8 0b 94 58 00       	mov    eax,0x58940b
     3e6:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     3e9:	b9 0b 60 59 00       	mov    ecx,0x59600b
     3ee:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     3f1:	ba 0b 76 59 00       	mov    edx,0x59760b
     3f6:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     3f9:	bb 0b 96 59 00       	mov    ebx,0x59960b
     3fe:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     401:	bc 0b b6 59 00       	mov    esp,0x59b60b
     406:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     409:	bd 0b d6 59 00       	mov    ebp,0x59d60b
     40e:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     411:	be 0b 01 5a 00       	mov    esi,0x5a010b
     416:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     419:	bf 0b 1c 5a 00       	mov    edi,0x5a1c0b
     41e:	00 04 0a             	add    BYTE PTR [rdx+rcx*1],al
     421:	c1 0b 44             	ror    DWORD PTR [rbx],0x44
     424:	5a                   	pop    rdx
     425:	00 00                	add    BYTE PTR [rax],al
     427:	04 0a                	add    al,0xa
     429:	c3                   	ret
     42a:	0b 67 5a             	or     esp,DWORD PTR [rdi+0x5a]
     42d:	00 00                	add    BYTE PTR [rax],al
     42f:	04 0a                	add    al,0xa
     431:	c4                   	(bad)
     432:	0b 87 5a 00 00 04    	or     eax,DWORD PTR [rdi+0x400005a]
     438:	0a c5                	or     al,ch
     43a:	0b b3 5a 00 00 04    	or     esi,DWORD PTR [rbx+0x400005a]
     440:	0a c6                	or     al,dh
     442:	0b d8                	or     ebx,eax
     444:	5a                   	pop    rdx
     445:	00 00                	add    BYTE PTR [rax],al
     447:	04 0a                	add    al,0xa
     449:	c7                   	(bad)
     44a:	0b f8                	or     edi,eax
     44c:	5a                   	pop    rdx
     44d:	00 00                	add    BYTE PTR [rax],al
     44f:	04 0a                	add    al,0xa
     451:	c8 0b 0f 5b          	enter  0xf0b,0x5b
     455:	00 00                	add    BYTE PTR [rax],al
     457:	04 0a                	add    al,0xa
     459:	c9                   	leave
     45a:	0b 30                	or     esi,DWORD PTR [rax]
     45c:	5b                   	pop    rbx
     45d:	00 00                	add    BYTE PTR [rax],al
     45f:	04 0a                	add    al,0xa
     461:	ca 0b 51             	retf   0x510b
     464:	5b                   	pop    rbx
     465:	00 00                	add    BYTE PTR [rax],al
     467:	04 0a                	add    al,0xa
     469:	cb                   	retf
     46a:	0b 72 5b             	or     esi,DWORD PTR [rdx+0x5b]
     46d:	00 00                	add    BYTE PTR [rax],al
     46f:	04 0a                	add    al,0xa
     471:	cc                   	int3
     472:	0b 93 5b 00 00 04    	or     edx,DWORD PTR [rbx+0x400005b]
     478:	0a cd                	or     cl,ch
     47a:	0b ab 5b 00 00 04    	or     ebp,DWORD PTR [rbx+0x400005b]
     480:	0a ce                	or     cl,dh
     482:	0b c7                	or     eax,edi
     484:	5b                   	pop    rbx
     485:	00 00                	add    BYTE PTR [rax],al
     487:	04 0a                	add    al,0xa
     489:	ce                   	(bad)
     48a:	0b e6                	or     esp,esi
     48c:	5b                   	pop    rbx
     48d:	00 00                	add    BYTE PTR [rax],al
     48f:	04 0a                	add    al,0xa
     491:	cf                   	iret
     492:	0b 05 5c 00 00 04    	or     eax,DWORD PTR [rip+0x400005c]        # 40004f4 <__TMC_END__+0x3ffc4dc>
     498:	0a cf                	or     cl,bh
     49a:	0b 24 5c             	or     esp,DWORD PTR [rsp+rbx*2]
     49d:	00 00                	add    BYTE PTR [rax],al
     49f:	04 0a                	add    al,0xa
     4a1:	d0 0b                	ror    BYTE PTR [rbx],1
     4a3:	43 5c                	rex.XB pop r12
     4a5:	00 00                	add    BYTE PTR [rax],al
     4a7:	04 0a                	add    al,0xa
     4a9:	d0 0b                	ror    BYTE PTR [rbx],1
     4ab:	62 5c 00 00 04       	(bad)
     4b0:	0a d1                	or     dl,cl
     4b2:	0b 81 5c 00 00 04    	or     eax,DWORD PTR [rcx+0x400005c]
     4b8:	0a d1                	or     dl,cl
     4ba:	0b a0 5c 00 00 04    	or     esp,DWORD PTR [rax+0x400005c]
     4c0:	0a d2                	or     dl,dl
     4c2:	0b bf 5c 00 00 04    	or     edi,DWORD PTR [rdi+0x400005c]
     4c8:	0a d2                	or     dl,dl
     4ca:	0b e4                	or     esp,esp
     4cc:	5c                   	pop    rsp
     4cd:	00 00                	add    BYTE PTR [rax],al
     4cf:	0c 0a                	or     al,0xa
     4d1:	0b 01                	or     eax,DWORD PTR [rcx]
     4d3:	16                   	(bad)
     4d4:	37                   	(bad)
     4d5:	65 00 00             	add    BYTE PTR gs:[rax],al
     4d8:	0c 0a                	or     al,0xa
     4da:	0c 01                	or     al,0x1
     4dc:	16                   	(bad)
     4dd:	5a                   	pop    rdx
     4de:	65 00 00             	add    BYTE PTR gs:[rax],al
     4e1:	0c 0a                	or     al,0xa
     4e3:	0d 01 16 86 65       	or     eax,0x65861601
     4e8:	00 00                	add    BYTE PTR [rax],al
     4ea:	0c 0a                	or     al,0xa
     4ec:	1b 01                	sbb    eax,DWORD PTR [rcx]
     4ee:	0e                   	(bad)
     4ef:	44 5a                	rex.R pop rdx
     4f1:	00 00                	add    BYTE PTR [rax],al
     4f3:	0c 0a                	or     al,0xa
     4f5:	1e                   	(bad)
     4f6:	01 0e                	add    DWORD PTR [rsi],ecx
     4f8:	36 57                	ss push rdi
     4fa:	00 00                	add    BYTE PTR [rax],al
     4fc:	0c 0a                	or     al,0xa
     4fe:	21 01                	and    DWORD PTR [rcx],eax
     500:	0e                   	(bad)
     501:	81 57 00 00 0c 0a 24 	adc    DWORD PTR [rdi+0x0],0x240a0c00
     508:	01 0e                	add    DWORD PTR [rsi],ecx
     50a:	c2 57 00             	ret    0x57
     50d:	00 0c 0a             	add    BYTE PTR [rdx+rcx*1],cl
     510:	28 01                	sub    BYTE PTR [rcx],al
     512:	0e                   	(bad)
     513:	37                   	(bad)
     514:	65 00 00             	add    BYTE PTR gs:[rax],al
     517:	0c 0a                	or     al,0xa
     519:	29 01                	sub    DWORD PTR [rcx],eax
     51b:	0e                   	(bad)
     51c:	5a                   	pop    rdx
     51d:	65 00 00             	add    BYTE PTR gs:[rax],al
     520:	0c 0a                	or     al,0xa
     522:	2a 01                	sub    al,BYTE PTR [rcx]
     524:	0e                   	(bad)
     525:	86 65 00             	xchg   BYTE PTR [rbp+0x0],ah
     528:	00 19                	add    BYTE PTR [rcx],bl
     52a:	03 80 00 00 0b 36    	add    eax,DWORD PTR [rax+0x360b0000]
     530:	01 1a                	add    DWORD PTR [rdx],ebx
     532:	3a 00                	cmp    al,BYTE PTR [rax]
     534:	00 00                	add    BYTE PTR [rax],al
     536:	0f 29 05 00 00 1a 84 	movaps XMMWORD PTR [rip+0xffffffff841a0000],xmm0        # ffffffff841a053d <__TMC_END__+0xffffffff8419c525>
     53d:	71 00                	jno    53f <_init-0xac1>
     53f:	00 01                	add    BYTE PTR [rcx],al
     541:	0c 94                	or     al,0x94
     543:	0c 61                	or     al,0x61
     545:	05 00 00 05 04       	add    eax,0x4050000
     54a:	94                   	xchg   esp,eax
     54b:	00 00                	add    BYTE PTR [rax],al
     54d:	0c 97                	or     al,0x97
     54f:	08 51 52             	or     BYTE PTR [rcx+0x52],dl
     552:	00 00                	add    BYTE PTR [rax],al
     554:	05 04 94 00 00       	add    eax,0x9404
     559:	0c 97                	or     al,0x97
     55b:	08 6f 52             	or     BYTE PTR [rdi+0x52],ch
     55e:	00 00                	add    BYTE PTR [rax],al
     560:	00 27                	add    BYTE PTR [rdi],ah
     562:	48 31 00             	xor    QWORD PTR [rax],rax
     565:	00 0c 05 0b 0d 27 3b 	add    BYTE PTR [rax*1+0x3b270d0b],cl
     56c:	70 00                	jo     56e <_init-0xa92>
     56e:	00 0c 5a             	add    BYTE PTR [rdx+rbx*2],cl
     571:	0b 0d 28 f8 82 00    	or     ecx,DWORD PTR [rip+0x82f828]        # 82fd9f <__TMC_END__+0x82bd87>
     577:	00 0d 3d 0d 65 07    	add    BYTE PTR [rip+0x7650d3d],cl        # 76512ba <__TMC_END__+0x764d2a2>
     57d:	00 00                	add    BYTE PTR [rax],al
     57f:	1e                   	(bad)
     580:	fa                   	cli
     581:	82                   	(bad)
     582:	00 00                	add    BYTE PTR [rax],al
     584:	08 0d 61 0b 40 07    	or     BYTE PTR [rip+0x7400b61],cl        # 74010eb <__TMC_END__+0x73fd0d3>
     58a:	00 00                	add    BYTE PTR [rax],al
     58c:	07                   	(bad)
     58d:	4d 90                	rex.WRB xchg r8,rax
     58f:	00 00                	add    BYTE PTR [rax],al
     591:	0d 63 0d 7d 00       	or     eax,0x7d0d63
     596:	00 00                	add    BYTE PTR [rax],al
     598:	00 3b                	add    BYTE PTR [rbx],bh
     59a:	fa                   	cli
     59b:	82                   	(bad)
     59c:	00 00                	add    BYTE PTR [rax],al
     59e:	0d 65 10 b0 5a       	or     eax,0x5ab01065
     5a3:	00 00                	add    BYTE PTR [rax],al
     5a5:	ad                   	lods   eax,DWORD PTR ds:[rsi]
     5a6:	05 00 00 b8 05       	add    eax,0x5b80000
     5ab:	00 00                	add    BYTE PTR [rax],al
     5ad:	02 27                	add    ah,BYTE PTR [rdi]
     5af:	66 00 00             	data16 add BYTE PTR [rax],al
     5b2:	01 7d 00             	add    DWORD PTR [rbp+0x0],edi
     5b5:	00 00                	add    BYTE PTR [rax],al
     5b7:	00 21                	add    BYTE PTR [rcx],ah
     5b9:	fc                   	cld
     5ba:	29 00                	sub    DWORD PTR [rax],eax
     5bc:	00 0d 67 0c 64 6b    	add    BYTE PTR [rip+0x6b640c67],cl        # 6b641229 <__TMC_END__+0x6b63d211>
     5c2:	00 00                	add    BYTE PTR [rax],al
     5c4:	cc                   	int3
     5c5:	05 00 00 d2 05       	add    eax,0x5d20000
     5ca:	00 00                	add    BYTE PTR [rax],al
     5cc:	02 27                	add    ah,BYTE PTR [rdi]
     5ce:	66 00 00             	data16 add BYTE PTR [rax],al
     5d1:	00 21                	add    BYTE PTR [rcx],ah
     5d3:	2b 55 00             	sub    edx,DWORD PTR [rbp+0x0]
     5d6:	00 0d 68 0c fa 68    	add    BYTE PTR [rip+0x68fa0c68],cl        # 68fa1244 <__TMC_END__+0x68f9d22c>
     5dc:	00 00                	add    BYTE PTR [rax],al
     5de:	e6 05                	out    0x5,al
     5e0:	00 00                	add    BYTE PTR [rax],al
     5e2:	ec                   	in     al,dx
     5e3:	05 00 00 02 27       	add    eax,0x27020000
     5e8:	66 00 00             	data16 add BYTE PTR [rax],al
     5eb:	00 2f                	add    BYTE PTR [rdi],ch
     5ed:	c1 02 00             	rol    DWORD PTR [rdx],0x0
     5f0:	00 0d 6a 0d 37 17    	add    BYTE PTR [rip+0x17370d6a],cl        # 17371360 <__TMC_END__+0x1736d348>
     5f6:	00 00                	add    BYTE PTR [rax],al
     5f8:	7d 00                	jge    5fa <_init-0xa06>
     5fa:	00 00                	add    BYTE PTR [rax],al
     5fc:	04 06                	add    al,0x6
     5fe:	00 00                	add    BYTE PTR [rax],al
     600:	0a 06                	or     al,BYTE PTR [rsi]
     602:	00 00                	add    BYTE PTR [rax],al
     604:	02 2c 66             	add    ch,BYTE PTR [rsi+riz*2]
     607:	00 00                	add    BYTE PTR [rax],al
     609:	00 16                	add    BYTE PTR [rsi],dl
     60b:	fa                   	cli
     60c:	82                   	(bad)
     60d:	00 00                	add    BYTE PTR [rax],al
     60f:	0d 72 07 78 74       	or     eax,0x74780772
     614:	00 00                	add    BYTE PTR [rax],al
     616:	1e                   	(bad)
     617:	06                   	(bad)
     618:	00 00                	add    BYTE PTR [rax],al
     61a:	24 06                	and    al,0x6
     61c:	00 00                	add    BYTE PTR [rax],al
     61e:	02 27                	add    ah,BYTE PTR [rdi]
     620:	66 00 00             	data16 add BYTE PTR [rax],al
     623:	00 16                	add    BYTE PTR [rsi],dl
     625:	fa                   	cli
     626:	82                   	(bad)
     627:	00 00                	add    BYTE PTR [rax],al
     629:	0d 74 07 36 6b       	or     eax,0x6b360774
     62e:	00 00                	add    BYTE PTR [rax],al
     630:	38 06                	cmp    BYTE PTR [rsi],al
     632:	00 00                	add    BYTE PTR [rax],al
     634:	43 06                	rex.XB (bad)
     636:	00 00                	add    BYTE PTR [rax],al
     638:	02 27                	add    ah,BYTE PTR [rdi]
     63a:	66 00 00             	data16 add BYTE PTR [rax],al
     63d:	01 31                	add    DWORD PTR [rcx],esi
     63f:	66 00 00             	data16 add BYTE PTR [rax],al
     642:	00 16                	add    BYTE PTR [rsi],dl
     644:	fa                   	cli
     645:	82                   	(bad)
     646:	00 00                	add    BYTE PTR [rax],al
     648:	0d 77 07 14 4f       	or     eax,0x4f140777
     64d:	00 00                	add    BYTE PTR [rax],al
     64f:	57                   	push   rdi
     650:	06                   	(bad)
     651:	00 00                	add    BYTE PTR [rax],al
     653:	62 06 00 00 02       	(bad)
     658:	27                   	(bad)
     659:	66 00 00             	data16 add BYTE PTR [rax],al
     65c:	01 83 07 00 00 00    	add    DWORD PTR [rbx+0x7],eax
     662:	16                   	(bad)
     663:	fa                   	cli
     664:	82                   	(bad)
     665:	00 00                	add    BYTE PTR [rax],al
     667:	0d 7b 07 02 12       	or     eax,0x1202077b
     66c:	00 00                	add    BYTE PTR [rax],al
     66e:	76 06                	jbe    676 <_init-0x98a>
     670:	00 00                	add    BYTE PTR [rax],al
     672:	81 06 00 00 02 27    	add    DWORD PTR [rsi],0x27020000
     678:	66 00 00             	data16 add BYTE PTR [rax],al
     67b:	01 36                	add    DWORD PTR [rsi],esi
     67d:	66 00 00             	data16 add BYTE PTR [rax],al
     680:	00 15 00 1d 00 00    	add    BYTE PTR [rip+0x1d00],dl        # 2386 <__GNU_EH_FRAME_HDR+0x352>
     686:	0d 88 07 34 1c       	or     eax,0x1c340788
     68b:	00 00                	add    BYTE PTR [rax],al
     68d:	3b 66 00             	cmp    esp,DWORD PTR [rsi+0x0]
     690:	00 99 06 00 00 a4    	add    BYTE PTR [rcx-0x5bfffffa],bl
     696:	06                   	(bad)
     697:	00 00                	add    BYTE PTR [rax],al
     699:	02 27                	add    ah,BYTE PTR [rdi]
     69b:	66 00 00             	data16 add BYTE PTR [rax],al
     69e:	01 31                	add    DWORD PTR [rcx],esi
     6a0:	66 00 00             	data16 add BYTE PTR [rax],al
     6a3:	00 15 00 1d 00 00    	add    BYTE PTR [rip+0x1d00],dl        # 23a9 <__GNU_EH_FRAME_HDR+0x375>
     6a9:	0d 8c 07 6e 2e       	or     eax,0x2e6e078c
     6ae:	00 00                	add    BYTE PTR [rax],al
     6b0:	3b 66 00             	cmp    esp,DWORD PTR [rsi+0x0]
     6b3:	00 bc 06 00 00 c7 06 	add    BYTE PTR [rsi+rax*1+0x6c70000],bh
     6ba:	00 00                	add    BYTE PTR [rax],al
     6bc:	02 27                	add    ah,BYTE PTR [rdi]
     6be:	66 00 00             	data16 add BYTE PTR [rax],al
     6c1:	01 36                	add    DWORD PTR [rsi],esi
     6c3:	66 00 00             	data16 add BYTE PTR [rax],al
     6c6:	00 16                	add    BYTE PTR [rsi],dl
     6c8:	80 4b 00 00          	or     BYTE PTR [rbx+0x0],0x0
     6cc:	0d 93 07 4a 28       	or     eax,0x284a0793
     6d1:	00 00                	add    BYTE PTR [rax],al
     6d3:	db 06                	fild   DWORD PTR [rsi]
     6d5:	00 00                	add    BYTE PTR [rax],al
     6d7:	e6 06                	out    0x6,al
     6d9:	00 00                	add    BYTE PTR [rax],al
     6db:	02 27                	add    ah,BYTE PTR [rdi]
     6dd:	66 00 00             	data16 add BYTE PTR [rax],al
     6e0:	02 f1                	add    dh,cl
     6e2:	00 00                	add    BYTE PTR [rax],al
     6e4:	00 00                	add    BYTE PTR [rax],al
     6e6:	16                   	(bad)
     6e7:	f7 28                	imul   DWORD PTR [rax]
     6e9:	00 00                	add    BYTE PTR [rax],al
     6eb:	0d 96 07 6e 6e       	or     eax,0x6e6e0796
     6f0:	00 00                	add    BYTE PTR [rax],al
     6f2:	fa                   	cli
     6f3:	06                   	(bad)
     6f4:	00 00                	add    BYTE PTR [rax],al
     6f6:	05 07 00 00 02       	add    eax,0x2000007
     6fb:	27                   	(bad)
     6fc:	66 00 00             	data16 add BYTE PTR [rax],al
     6ff:	01 3b                	add    DWORD PTR [rbx],edi
     701:	66 00 00             	data16 add BYTE PTR [rax],al
     704:	00 57 f2             	add    BYTE PTR [rdi-0xe],dl
     707:	0d 00 00 0d a2       	or     eax,0xa20d0000
     70c:	10 96 2a 00 00 f1    	adc    BYTE PTR [rsi-0xeffffd6],dl
     712:	65 00 00             	add    BYTE PTR gs:[rax],al
     715:	01 1e                	add    DWORD PTR [rsi],ebx
     717:	07                   	(bad)
     718:	00 00                	add    BYTE PTR [rax],al
     71a:	24 07                	and    al,0x7
     71c:	00 00                	add    BYTE PTR [rax],al
     71e:	02 2c 66             	add    ch,BYTE PTR [rsi+riz*2]
     721:	00 00                	add    BYTE PTR [rax],al
     723:	00 58 e8             	add    BYTE PTR [rax-0x18],bl
     726:	58                   	pop    rax
     727:	00 00                	add    BYTE PTR [rax],al
     729:	0d b7 07 11 33       	or     eax,0x331107b7
     72e:	00 00                	add    BYTE PTR [rax],al
     730:	40                   	rex
     731:	66 00 00             	data16 add BYTE PTR [rax],al
     734:	01 39                	add    DWORD PTR [rcx],edi
     736:	07                   	(bad)
     737:	00 00                	add    BYTE PTR [rax],al
     739:	02 2c 66             	add    ch,BYTE PTR [rsi+riz*2]
     73c:	00 00                	add    BYTE PTR [rax],al
     73e:	00 00                	add    BYTE PTR [rax],al
     740:	0f 7f 05 00 00 04 0d 	movq   QWORD PTR [rip+0xd040000],mm0        # d040747 <__TMC_END__+0xd03c72f>
     747:	55                   	push   rbp
     748:	10 6d 07             	adc    BYTE PTR [rbp+0x7],ch
     74b:	00 00                	add    BYTE PTR [rax],al
     74d:	59                   	pop    rcx
     74e:	f7 28                	imul   DWORD PTR [rax]
     750:	00 00                	add    BYTE PTR [rax],al
     752:	0d e6 05 c0 37       	or     eax,0x37c005e6
     757:	00 00                	add    BYTE PTR [rax],al
     759:	01 3b                	add    DWORD PTR [rbx],edi
     75b:	66 00 00             	data16 add BYTE PTR [rax],al
     75e:	01 3b                	add    DWORD PTR [rbx],edi
     760:	66 00 00             	data16 add BYTE PTR [rax],al
     763:	00 00                	add    BYTE PTR [rax],al
     765:	04 0d                	add    al,0xd
     767:	42 1a 7f 05          	rex.X sbb dil,BYTE PTR [rdi+0x5]
     76b:	00 00                	add    BYTE PTR [rax],al
     76d:	5a                   	pop    rdx
     76e:	8c 68 00             	mov    WORD PTR [rax+0x0],gs
     771:	00 0d 51 08 5c 63    	add    BYTE PTR [rip+0x635c0851],cl        # 635c0fc8 <__TMC_END__+0x635bcfb0>
     777:	00 00                	add    BYTE PTR [rax],al
     779:	83 07 00             	add    DWORD PTR [rdi],0x0
     77c:	00 01                	add    BYTE PTR [rcx],al
     77e:	7f 05                	jg     785 <_init-0x87b>
     780:	00 00                	add    BYTE PTR [rax],al
     782:	00 19                	add    BYTE PTR [rcx],bl
     784:	bc 14 00 00 0b       	mov    esp,0xb000014
     789:	3a 01                	cmp    al,BYTE PTR [rcx]
     78b:	1d ec 65 00 00       	sbb    eax,0x65ec
     790:	29 98 7f 00 00 0f    	sub    DWORD PTR [rax+0xf00007f],ebx
     796:	90                   	nop
     797:	07                   	(bad)
     798:	00 00                	add    BYTE PTR [rax],al
     79a:	04 0d                	add    al,0xd
     79c:	f3 1a 4d 07          	repz sbb cl,BYTE PTR [rbp+0x7]
     7a0:	00 00                	add    BYTE PTR [rax],al
     7a2:	28 7d 36             	sub    BYTE PTR [rbp+0x36],bh
     7a5:	00 00                	add    BYTE PTR [rax],al
     7a7:	0e                   	(bad)
     7a8:	ba 0d e1 07 00       	mov    edx,0x7e10d
     7ad:	00 22                	add    BYTE PTR [rdx],ah
     7af:	f5                   	cmc
     7b0:	28 00                	sub    BYTE PTR [rax],al
     7b2:	00 0e                	add    BYTE PTR [rsi],cl
     7b4:	bd 0f 5b 8c 3c       	mov    ebp,0x3c8c5b0f
     7b9:	00 00                	add    BYTE PTR [rax],al
     7bb:	0e                   	(bad)
     7bc:	fa                   	cli
     7bd:	16                   	(bad)
     7be:	22 38                	and    bh,BYTE PTR [rax]
     7c0:	78 00                	js     7c2 <_init-0x83e>
     7c2:	00 0f                	add    BYTE PTR [rdi],cl
     7c4:	65 0f 27             	gs (bad)
     7c7:	36 13 00             	ss adc eax,DWORD PTR [rax]
     7ca:	00 0f                	add    BYTE PTR [rdi],cl
     7cc:	43 03 0d 27 b6 08 00 	rex.XB add ecx,DWORD PTR [rip+0x8b627]        # 8bdfa <__TMC_END__+0x87de2>
     7d3:	00 0f                	add    BYTE PTR [rdi],cl
     7d5:	c3                   	ret
     7d6:	03 15 22 dc 42 00    	add    edx,DWORD PTR [rip+0x42dc22]        # 42e3fe <__TMC_END__+0x42a3e6>
     7dc:	00 10                	add    BYTE PTR [rax],dl
     7de:	3d 0d 00 22 ed       	cmp    eax,0xed22000d
     7e3:	79 00                	jns    7e5 <_init-0x81b>
     7e5:	00 11                	add    BYTE PTR [rcx],dl
     7e7:	2e 0d 28 dc 42 00    	cs or  eax,0x42dc28
     7ed:	00 0c a7             	add    BYTE PTR [rdi+riz*4],cl
     7f0:	0d 89 0a 00 00       	or     eax,0xa89
     7f5:	1e                   	(bad)
     7f6:	8a 05 00 00 08 12    	mov    al,BYTE PTR [rip+0x12080000]        # 120807fc <__TMC_END__+0x1207c7e4>
     7fc:	54                   	push   rsp
     7fd:	0d 5e 08 00 00       	or     eax,0x85e
     802:	16                   	(bad)
     803:	8c 93 00 00 12 58    	mov    WORD PTR [rbx+0x58120000],ss
     809:	02 3f                	add    bh,BYTE PTR [rdi]
     80b:	36 00 00             	ss add BYTE PTR [rax],al
     80e:	16                   	(bad)
     80f:	08 00                	or     BYTE PTR [rax],al
     811:	00 21                	add    BYTE PTR [rcx],ah
     813:	08 00                	or     BYTE PTR [rax],al
     815:	00 02                	add    BYTE PTR [rdx],al
     817:	f6 72 00             	div    BYTE PTR [rdx+0x0]
     81a:	00 01                	add    BYTE PTR [rcx],al
     81c:	29 05 00 00 00 15    	sub    DWORD PTR [rip+0x15000000],eax        # 15000822 <__TMC_END__+0x14ffc80a>
     822:	74 4d                	je     871 <_init-0x78f>
     824:	00 00                	add    BYTE PTR [rax],al
     826:	12 5d 02             	adc    bl,BYTE PTR [rbp+0x2]
     829:	d6                   	(bad)
     82a:	27                   	(bad)
     82b:	00 00                	add    BYTE PTR [rax],al
     82d:	29 05 00 00 39 08    	sub    DWORD PTR [rip+0x8390000],eax        # 8390833 <__TMC_END__+0x838c81b>
     833:	00 00                	add    BYTE PTR [rax],al
     835:	3f                   	(bad)
     836:	08 00                	or     BYTE PTR [rax],al
     838:	00 02                	add    BYTE PTR [rdx],al
     83a:	fb                   	sti
     83b:	72 00                	jb     83d <_init-0x7c3>
     83d:	00 00                	add    BYTE PTR [rax],al
     83f:	07                   	(bad)
     840:	91                   	xchg   ecx,eax
     841:	11 00                	adc    DWORD PTR [rax],eax
     843:	00 12                	add    BYTE PTR [rdx],dl
     845:	61                   	(bad)
     846:	09 29                	or     DWORD PTR [rcx],ebp
     848:	05 00 00 00 41       	add    eax,0x41000000
     84d:	f2 63 00             	repnz movsxd eax,DWORD PTR [rax]
     850:	00 3a                	add    BYTE PTR [rdx],bh
     852:	00 00                	add    BYTE PTR [rax],al
     854:	00 ff                	add    bh,bh
     856:	ff                   	(bad)
     857:	ff                   	(bad)
     858:	ff                   	(bad)
     859:	ff                   	(bad)
     85a:	ff                   	(bad)
     85b:	ff                   	(bad)
     85c:	ff 00                	inc    DWORD PTR [rax]
     85e:	0f f5 07             	pmaddwd mm0,QWORD PTR [rdi]
     861:	00 00                	add    BYTE PTR [rax],al
     863:	27                   	(bad)
     864:	7f 1e                	jg     884 <_init-0x77c>
     866:	00 00                	add    BYTE PTR [rax],al
     868:	13 75 12             	adc    esi,DWORD PTR [rbp+0x12]
     86b:	17                   	(bad)
     86c:	05 6f 21 00 00       	add    eax,0x216f
     871:	0f e2 0d bd 4b 00 00 	psrad  mm1,QWORD PTR [rip+0x4bbd]        # 5435 <__TMC_END__+0x141d>
     878:	0d 1c 37 00 00       	or     eax,0x371c
     87d:	14 30                	adc    al,0x30
     87f:	14 f8                	adc    al,0xf8
     881:	65 00 00             	add    BYTE PTR gs:[rax],al
     884:	0d 1c 37 00 00       	or     eax,0x371c
     889:	14 30                	adc    al,0x30
     88b:	14 f8                	adc    al,0xf8
     88d:	65 00 00             	add    BYTE PTR gs:[rax],al
     890:	0d 1c 37 00 00       	or     eax,0x371c
     895:	14 30                	adc    al,0x30
     897:	14 f8                	adc    al,0xf8
     899:	65 00 00             	add    BYTE PTR gs:[rax],al
     89c:	0d 94 12 00 00       	or     eax,0x1294
     8a1:	0e                   	(bad)
     8a2:	86 16                	xchg   BYTE PTR [rsi],dl
     8a4:	f8                   	clc
     8a5:	65 00 00             	add    BYTE PTR gs:[rax],al
     8a8:	0d 7a 85 00 00       	or     eax,0x857a
     8ad:	0e                   	(bad)
     8ae:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     8b1:	65 00 00             	add    BYTE PTR gs:[rax],al
     8b4:	0d 94 12 00 00       	or     eax,0x1294
     8b9:	0e                   	(bad)
     8ba:	86 16                	xchg   BYTE PTR [rsi],dl
     8bc:	f8                   	clc
     8bd:	65 00 00             	add    BYTE PTR gs:[rax],al
     8c0:	0d 7a 85 00 00       	or     eax,0x857a
     8c5:	0e                   	(bad)
     8c6:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     8c9:	65 00 00             	add    BYTE PTR gs:[rax],al
     8cc:	0d 94 12 00 00       	or     eax,0x1294
     8d1:	0e                   	(bad)
     8d2:	86 16                	xchg   BYTE PTR [rsi],dl
     8d4:	f8                   	clc
     8d5:	65 00 00             	add    BYTE PTR gs:[rax],al
     8d8:	0d 7a 85 00 00       	or     eax,0x857a
     8dd:	0e                   	(bad)
     8de:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     8e1:	65 00 00             	add    BYTE PTR gs:[rax],al
     8e4:	0d 94 12 00 00       	or     eax,0x1294
     8e9:	0e                   	(bad)
     8ea:	86 16                	xchg   BYTE PTR [rsi],dl
     8ec:	f8                   	clc
     8ed:	65 00 00             	add    BYTE PTR gs:[rax],al
     8f0:	0d 7a 85 00 00       	or     eax,0x857a
     8f5:	0e                   	(bad)
     8f6:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     8f9:	65 00 00             	add    BYTE PTR gs:[rax],al
     8fc:	0d 94 12 00 00       	or     eax,0x1294
     901:	0e                   	(bad)
     902:	86 16                	xchg   BYTE PTR [rsi],dl
     904:	f8                   	clc
     905:	65 00 00             	add    BYTE PTR gs:[rax],al
     908:	0d 7a 85 00 00       	or     eax,0x857a
     90d:	0e                   	(bad)
     90e:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     911:	65 00 00             	add    BYTE PTR gs:[rax],al
     914:	0d 94 12 00 00       	or     eax,0x1294
     919:	0e                   	(bad)
     91a:	86 16                	xchg   BYTE PTR [rsi],dl
     91c:	f8                   	clc
     91d:	65 00 00             	add    BYTE PTR gs:[rax],al
     920:	0d 7a 85 00 00       	or     eax,0x857a
     925:	0e                   	(bad)
     926:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     929:	65 00 00             	add    BYTE PTR gs:[rax],al
     92c:	0d 94 12 00 00       	or     eax,0x1294
     931:	0e                   	(bad)
     932:	86 16                	xchg   BYTE PTR [rsi],dl
     934:	f8                   	clc
     935:	65 00 00             	add    BYTE PTR gs:[rax],al
     938:	0d 7a 85 00 00       	or     eax,0x857a
     93d:	0e                   	(bad)
     93e:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     941:	65 00 00             	add    BYTE PTR gs:[rax],al
     944:	0d 94 12 00 00       	or     eax,0x1294
     949:	0e                   	(bad)
     94a:	86 16                	xchg   BYTE PTR [rsi],dl
     94c:	f8                   	clc
     94d:	65 00 00             	add    BYTE PTR gs:[rax],al
     950:	0d 7a 85 00 00       	or     eax,0x857a
     955:	0e                   	(bad)
     956:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     959:	65 00 00             	add    BYTE PTR gs:[rax],al
     95c:	0d 94 12 00 00       	or     eax,0x1294
     961:	0e                   	(bad)
     962:	86 16                	xchg   BYTE PTR [rsi],dl
     964:	f8                   	clc
     965:	65 00 00             	add    BYTE PTR gs:[rax],al
     968:	0d 7a 85 00 00       	or     eax,0x857a
     96d:	0e                   	(bad)
     96e:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     971:	65 00 00             	add    BYTE PTR gs:[rax],al
     974:	0d 94 12 00 00       	or     eax,0x1294
     979:	0e                   	(bad)
     97a:	86 16                	xchg   BYTE PTR [rsi],dl
     97c:	f8                   	clc
     97d:	65 00 00             	add    BYTE PTR gs:[rax],al
     980:	0d 7a 85 00 00       	or     eax,0x857a
     985:	0e                   	(bad)
     986:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     989:	65 00 00             	add    BYTE PTR gs:[rax],al
     98c:	0d 94 12 00 00       	or     eax,0x1294
     991:	0e                   	(bad)
     992:	86 16                	xchg   BYTE PTR [rsi],dl
     994:	f8                   	clc
     995:	65 00 00             	add    BYTE PTR gs:[rax],al
     998:	0d 7a 85 00 00       	or     eax,0x857a
     99d:	0e                   	(bad)
     99e:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     9a1:	65 00 00             	add    BYTE PTR gs:[rax],al
     9a4:	0d 94 12 00 00       	or     eax,0x1294
     9a9:	0e                   	(bad)
     9aa:	86 16                	xchg   BYTE PTR [rsi],dl
     9ac:	f8                   	clc
     9ad:	65 00 00             	add    BYTE PTR gs:[rax],al
     9b0:	0d 7a 85 00 00       	or     eax,0x857a
     9b5:	0e                   	(bad)
     9b6:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     9b9:	65 00 00             	add    BYTE PTR gs:[rax],al
     9bc:	0d 94 12 00 00       	or     eax,0x1294
     9c1:	0e                   	(bad)
     9c2:	86 16                	xchg   BYTE PTR [rsi],dl
     9c4:	f8                   	clc
     9c5:	65 00 00             	add    BYTE PTR gs:[rax],al
     9c8:	0d 7a 85 00 00       	or     eax,0x857a
     9cd:	0e                   	(bad)
     9ce:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     9d1:	65 00 00             	add    BYTE PTR gs:[rax],al
     9d4:	0d 94 12 00 00       	or     eax,0x1294
     9d9:	0e                   	(bad)
     9da:	86 16                	xchg   BYTE PTR [rsi],dl
     9dc:	f8                   	clc
     9dd:	65 00 00             	add    BYTE PTR gs:[rax],al
     9e0:	0d 7a 85 00 00       	or     eax,0x857a
     9e5:	0e                   	(bad)
     9e6:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     9e9:	65 00 00             	add    BYTE PTR gs:[rax],al
     9ec:	0d 94 12 00 00       	or     eax,0x1294
     9f1:	0e                   	(bad)
     9f2:	86 16                	xchg   BYTE PTR [rsi],dl
     9f4:	f8                   	clc
     9f5:	65 00 00             	add    BYTE PTR gs:[rax],al
     9f8:	0d 7a 85 00 00       	or     eax,0x857a
     9fd:	0e                   	(bad)
     9fe:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     a01:	65 00 00             	add    BYTE PTR gs:[rax],al
     a04:	0d 94 12 00 00       	or     eax,0x1294
     a09:	0e                   	(bad)
     a0a:	86 16                	xchg   BYTE PTR [rsi],dl
     a0c:	f8                   	clc
     a0d:	65 00 00             	add    BYTE PTR gs:[rax],al
     a10:	0d 7a 85 00 00       	or     eax,0x857a
     a15:	0e                   	(bad)
     a16:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     a19:	65 00 00             	add    BYTE PTR gs:[rax],al
     a1c:	0d 94 12 00 00       	or     eax,0x1294
     a21:	0e                   	(bad)
     a22:	86 16                	xchg   BYTE PTR [rsi],dl
     a24:	f8                   	clc
     a25:	65 00 00             	add    BYTE PTR gs:[rax],al
     a28:	0d 7a 85 00 00       	or     eax,0x857a
     a2d:	0e                   	(bad)
     a2e:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     a31:	65 00 00             	add    BYTE PTR gs:[rax],al
     a34:	0d 94 12 00 00       	or     eax,0x1294
     a39:	0e                   	(bad)
     a3a:	86 16                	xchg   BYTE PTR [rsi],dl
     a3c:	f8                   	clc
     a3d:	65 00 00             	add    BYTE PTR gs:[rax],al
     a40:	0d 7a 85 00 00       	or     eax,0x857a
     a45:	0e                   	(bad)
     a46:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     a49:	65 00 00             	add    BYTE PTR gs:[rax],al
     a4c:	0d 94 12 00 00       	or     eax,0x1294
     a51:	0e                   	(bad)
     a52:	86 16                	xchg   BYTE PTR [rsi],dl
     a54:	f8                   	clc
     a55:	65 00 00             	add    BYTE PTR gs:[rax],al
     a58:	0d 7a 85 00 00       	or     eax,0x857a
     a5d:	0e                   	(bad)
     a5e:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     a61:	65 00 00             	add    BYTE PTR gs:[rax],al
     a64:	0d 94 12 00 00       	or     eax,0x1294
     a69:	0e                   	(bad)
     a6a:	86 16                	xchg   BYTE PTR [rsi],dl
     a6c:	f8                   	clc
     a6d:	65 00 00             	add    BYTE PTR gs:[rax],al
     a70:	0d 7a 85 00 00       	or     eax,0x857a
     a75:	0e                   	(bad)
     a76:	83 16 f8             	adc    DWORD PTR [rsi],0xfffffff8
     a79:	65 00 00             	add    BYTE PTR gs:[rax],al
     a7c:	0d 1c 37 00 00       	or     eax,0x371c
     a81:	14 30                	adc    al,0x30
     a83:	14 f8                	adc    al,0xf8
     a85:	65 00 00             	add    BYTE PTR gs:[rax],al
     a88:	00 27                	add    BYTE PTR [rdi],ah
     a8a:	1a 52 00             	sbb    dl,BYTE PTR [rdx+0x0]
     a8d:	00 11                	add    BYTE PTR [rcx],dl
     a8f:	3b 02                	cmp    eax,DWORD PTR [rdx]
     a91:	0d 42 8c 3c 00       	or     eax,0x3c8c42
     a96:	00 11                	add    BYTE PTR [rcx],dl
     a98:	a3 04 14 5c 70 77 00 	movabs ds:0x1000077705c1404,eax
     a9f:	00 01 
     aa1:	15 5d 0a 1a 89       	adc    eax,0x891a0a5d
     aa6:	7a 00                	jp     aa8 <_init-0x558>
     aa8:	00 01                	add    BYTE PTR [rcx],al
     aaa:	15 63 0a b7 0a       	adc    eax,0xab70a63
     aaf:	00 00                	add    BYTE PTR [rax],al
     ab1:	23 9b 0a 00 00 00    	and    ebx,DWORD PTR [rbx+0xa]
     ab7:	1a 09                	sbb    cl,BYTE PTR [rcx]
     ab9:	94                   	xchg   esp,eax
     aba:	00 00                	add    BYTE PTR [rax],al
     abc:	01 15 67 0a ca 0a    	add    DWORD PTR [rip+0xaca0a67],edx        # aca1529 <__TMC_END__+0xac9d511>
     ac2:	00 00                	add    BYTE PTR [rax],al
     ac4:	23 a4 0a 00 00 00 1a 	and    esp,DWORD PTR [rdx+rcx*1+0x1a000000]
     acb:	1e                   	(bad)
     acc:	23 00                	and    eax,DWORD PTR [rax]
     ace:	00 01                	add    BYTE PTR [rcx],al
     ad0:	15 6b 0a dd 0a       	adc    eax,0xadd0a6b
     ad5:	00 00                	add    BYTE PTR [rax],al
     ad7:	23 b7 0a 00 00 00    	and    esi,DWORD PTR [rdi+0xa]
     add:	30 0d 49 00 00 01    	xor    BYTE PTR [rip+0x1000049],cl        # 1000b2c <__TMC_END__+0xffcb14>
     ae3:	16                   	(bad)
     ae4:	49 01 c3             	add    r11,rax
     ae7:	0c 00                	or     al,0x0
     ae9:	00 1f                	add    BYTE PTR [rdi],bl
     aeb:	0a 5f 00             	or     bl,BYTE PTR [rdi+0x0]
     aee:	00 16                	add    BYTE PTR [rsi],dl
     af0:	57                   	push   rdi
     af1:	01 5d 2a             	add    DWORD PTR [rbp+0x2a],ebx
     af4:	00 00                	add    BYTE PTR [rax],al
     af6:	05 0b 00 00 01       	add    eax,0x100000b
     afb:	4c                   	rex.WR
     afc:	66 00 00             	data16 add BYTE PTR [rax],al
     aff:	01 51 66             	add    DWORD PTR [rcx+0x66],edx
     b02:	00 00                	add    BYTE PTR [rax],al
     b04:	00 19                	add    BYTE PTR [rcx],bl
     b06:	00 02                	add    BYTE PTR [rdx],al
     b08:	00 00                	add    BYTE PTR [rax],al
     b0a:	16                   	(bad)
     b0b:	4b 01 21             	rex.WXB add QWORD PTR [r9],rsp
     b0e:	e5 00                	in     eax,0x0
     b10:	00 00                	add    BYTE PTR [rax],al
     b12:	0f 05                	syscall
     b14:	0b 00                	or     eax,DWORD PTR [rax]
     b16:	00 43 65             	add    BYTE PTR [rbx+0x65],al
     b19:	71 00                	jno    b1b <_init-0x4e5>
     b1b:	62 01 55 25 00       	(bad)
     b20:	00 f1                	add    cl,dh
     b22:	65 00 00             	add    BYTE PTR gs:[rax],al
     b25:	34 0b                	xor    al,0xb
     b27:	00 00                	add    BYTE PTR [rax],al
     b29:	01 51 66             	add    DWORD PTR [rcx+0x66],edx
     b2c:	00 00                	add    BYTE PTR [rax],al
     b2e:	01 51 66             	add    DWORD PTR [rcx+0x66],edx
     b31:	00 00                	add    BYTE PTR [rax],al
     b33:	00 43 6c             	add    BYTE PTR [rbx+0x6c],al
     b36:	74 00                	je     b38 <_init-0x4c8>
     b38:	66 01 e9             	add    cx,bp
     b3b:	32 00                	xor    al,BYTE PTR [rax]
     b3d:	00 f1                	add    cl,dh
     b3f:	65 00 00             	add    BYTE PTR gs:[rax],al
     b42:	51                   	push   rcx
     b43:	0b 00                	or     eax,DWORD PTR [rax]
     b45:	00 01                	add    BYTE PTR [rcx],al
     b47:	51                   	push   rcx
     b48:	66 00 00             	data16 add BYTE PTR [rax],al
     b4b:	01 51 66             	add    DWORD PTR [rcx+0x66],edx
     b4e:	00 00                	add    BYTE PTR [rax],al
     b50:	00 09                	add    BYTE PTR [rcx],cl
     b52:	21 6c 00 00          	and    DWORD PTR [rax+rax*1+0x0],ebp
     b56:	16                   	(bad)
     b57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b58:	01 07                	add    DWORD PTR [rdi],eax
     b5a:	83 62 00 00          	and    DWORD PTR [rdx+0x0],0x0
     b5e:	f1                   	int1
     b5f:	00 00                	add    BYTE PTR [rax],al
     b61:	00 76 0b             	add    BYTE PTR [rsi+0xb],dh
     b64:	00 00                	add    BYTE PTR [rax],al
     b66:	01 56 66             	add    DWORD PTR [rsi+0x66],edx
     b69:	00 00                	add    BYTE PTR [rax],al
     b6b:	01 56 66             	add    DWORD PTR [rsi+0x66],edx
     b6e:	00 00                	add    BYTE PTR [rax],al
     b70:	01 29                	add    DWORD PTR [rcx],ebp
     b72:	05 00 00 00 09       	add    eax,0x9000000
     b77:	df 6e 00             	fild   QWORD PTR [rsi+0x0]
     b7a:	00 16                	add    BYTE PTR [rsi],dl
     b7c:	81 01 07 09 41 00    	add    DWORD PTR [rcx],0x410907
     b82:	00 29                	add    BYTE PTR [rcx],ch
     b84:	05 00 00 91 0b       	add    eax,0xb910000
     b89:	00 00                	add    BYTE PTR [rax],al
     b8b:	01 56 66             	add    DWORD PTR [rsi+0x66],edx
     b8e:	00 00                	add    BYTE PTR [rax],al
     b90:	00 09                	add    BYTE PTR [rcx],cl
     b92:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
     b95:	00 16                	add    BYTE PTR [rsi],dl
     b97:	8b 01                	mov    eax,DWORD PTR [rcx]
     b99:	07                   	(bad)
     b9a:	be 0a 00 00 56       	mov    esi,0x5600000a
     b9f:	66 00 00             	data16 add BYTE PTR [rax],al
     ba2:	b6 0b                	mov    dh,0xb
     ba4:	00 00                	add    BYTE PTR [rax],al
     ba6:	01 56 66             	add    DWORD PTR [rsi+0x66],edx
     ba9:	00 00                	add    BYTE PTR [rax],al
     bab:	01 29                	add    DWORD PTR [rcx],ebp
     bad:	05 00 00 01 51       	add    eax,0x51010000
     bb2:	66 00 00             	data16 add BYTE PTR [rax],al
     bb5:	00 09                	add    BYTE PTR [rcx],cl
     bb7:	64 0f 00 00          	sldt   WORD PTR fs:[rax]
     bbb:	16                   	(bad)
     bbc:	97                   	xchg   edi,eax
     bbd:	01 07                	add    DWORD PTR [rdi],eax
     bbf:	ce                   	(bad)
     bc0:	54                   	push   rsp
     bc1:	00 00                	add    BYTE PTR [rax],al
     bc3:	5b                   	pop    rbx
     bc4:	66 00 00             	data16 add BYTE PTR [rax],al
     bc7:	db 0b                	fisttp DWORD PTR [rbx]
     bc9:	00 00                	add    BYTE PTR [rax],al
     bcb:	01 5b 66             	add    DWORD PTR [rbx+0x66],ebx
     bce:	00 00                	add    BYTE PTR [rax],al
     bd0:	01 56 66             	add    DWORD PTR [rsi+0x66],edx
     bd3:	00 00                	add    BYTE PTR [rax],al
     bd5:	01 29                	add    DWORD PTR [rcx],ebp
     bd7:	05 00 00 00 09       	add    eax,0x9000000
     bdc:	26 1b 00             	es sbb eax,DWORD PTR [rax]
     bdf:	00 16                	add    BYTE PTR [rsi],dl
     be1:	a3 01 07 d2 16 00 00 	movabs ds:0x665b000016d20701,eax
     be8:	5b 66 
     bea:	00 00                	add    BYTE PTR [rax],al
     bec:	00 0c 00             	add    BYTE PTR [rax+rax*1],cl
     bef:	00 01                	add    BYTE PTR [rcx],al
     bf1:	5b                   	pop    rbx
     bf2:	66 00 00             	data16 add BYTE PTR [rax],al
     bf5:	01 56 66             	add    DWORD PTR [rsi+0x66],edx
     bf8:	00 00                	add    BYTE PTR [rax],al
     bfa:	01 29                	add    DWORD PTR [rcx],ebp
     bfc:	05 00 00 00 09       	add    eax,0x9000000
     c01:	0a 5f 00             	or     bl,BYTE PTR [rdi+0x0]
     c04:	00 16                	add    BYTE PTR [rsi],dl
     c06:	af                   	scas   eax,DWORD PTR es:[rdi]
     c07:	01 07                	add    DWORD PTR [rdi],eax
     c09:	f5                   	cmc
     c0a:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
     c0d:	5b                   	pop    rbx
     c0e:	66 00 00             	data16 add BYTE PTR [rax],al
     c11:	25 0c 00 00 01       	and    eax,0x100000c
     c16:	5b                   	pop    rbx
     c17:	66 00 00             	data16 add BYTE PTR [rax],al
     c1a:	01 29                	add    DWORD PTR [rcx],ebp
     c1c:	05 00 00 01 05       	add    eax,0x5010000
     c21:	0b 00                	or     eax,DWORD PTR [rax]
     c23:	00 00                	add    BYTE PTR [rax],al
     c25:	09 fd                	or     ebp,edi
     c27:	01 00                	add    DWORD PTR [rax],eax
     c29:	00 16                	add    BYTE PTR [rsi],dl
     c2b:	bb 01 07 2a 41       	mov    ebx,0x412a0701
     c30:	00 00                	add    BYTE PTR [rax],al
     c32:	05 0b 00 00 40       	add    eax,0x4000000b
     c37:	0c 00                	or     al,0x0
     c39:	00 01                	add    BYTE PTR [rcx],al
     c3b:	60                   	(bad)
     c3c:	66 00 00             	data16 add BYTE PTR [rax],al
     c3f:	00 19                	add    BYTE PTR [rcx],bl
     c41:	91                   	xchg   ecx,eax
     c42:	5a                   	pop    rdx
     c43:	00 00                	add    BYTE PTR [rax],al
     c45:	16                   	(bad)
     c46:	4c 01 21             	add    QWORD PTR [rcx],r12
     c49:	f1                   	int1
     c4a:	00 00                	add    BYTE PTR [rax],al
     c4c:	00 0f                	add    BYTE PTR [rdi],cl
     c4e:	40 0c 00             	rex or al,0x0
     c51:	00 09                	add    BYTE PTR [rcx],cl
     c53:	8e 5a 00             	mov    ds,WORD PTR [rdx+0x0]
     c56:	00 16                	add    BYTE PTR [rsi],dl
     c58:	c1 01 07             	rol    DWORD PTR [rcx],0x7
     c5b:	98                   	cwde
     c5c:	7c 00                	jl     c5e <_init-0x3a2>
     c5e:	00 40 0c             	add    BYTE PTR [rax+0xc],al
     c61:	00 00                	add    BYTE PTR [rax],al
     c63:	6d                   	ins    DWORD PTR es:[rdi],dx
     c64:	0c 00                	or     al,0x0
     c66:	00 01                	add    BYTE PTR [rcx],al
     c68:	51                   	push   rcx
     c69:	66 00 00             	data16 add BYTE PTR [rax],al
     c6c:	00 09                	add    BYTE PTR [rcx],cl
     c6e:	76 58                	jbe    cc8 <_init-0x338>
     c70:	00 00                	add    BYTE PTR [rax],al
     c72:	16                   	(bad)
     c73:	c5 01 07             	(bad)
     c76:	80 15 00 00 f1 65 00 	adc    BYTE PTR [rip+0x65f10000],0x0        # 65f10c7d <__TMC_END__+0x65f0cc65>
     c7d:	00 8d 0c 00 00 01    	add    BYTE PTR [rbp+0x100000c],cl
     c83:	60                   	(bad)
     c84:	66 00 00             	data16 add BYTE PTR [rax],al
     c87:	01 60 66             	add    DWORD PTR [rax+0x66],esp
     c8a:	00 00                	add    BYTE PTR [rax],al
     c8c:	00 5d 65             	add    BYTE PTR [rbp+0x65],bl
     c8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c90:	66 00 16             	data16 add BYTE PTR [rsi],dl
     c93:	ca 01 07             	retf   0x701
     c96:	e5 42                	in     eax,0x42
     c98:	00 00                	add    BYTE PTR [rax],al
     c9a:	40 0c 00             	rex or al,0x0
     c9d:	00 09                	add    BYTE PTR [rcx],cl
     c9f:	f0 82                	lock (bad)
     ca1:	00 00                	add    BYTE PTR [rax],al
     ca3:	16                   	(bad)
     ca4:	ce                   	(bad)
     ca5:	01 07                	add    DWORD PTR [rdi],eax
     ca7:	4e 2c 00             	rex.WRX sub al,0x0
     caa:	00 40 0c             	add    BYTE PTR [rax+0xc],al
     cad:	00 00                	add    BYTE PTR [rax],al
     caf:	b9 0c 00 00 01       	mov    ecx,0x100000c
     cb4:	60                   	(bad)
     cb5:	66 00 00             	data16 add BYTE PTR [rax],al
     cb8:	00 14 83             	add    BYTE PTR [rbx+rax*4],dl
     cbb:	33 00                	xor    eax,DWORD PTR [rax]
     cbd:	00 e5                	add    ch,ah
     cbf:	00 00                	add    BYTE PTR [rax],al
     cc1:	00 00                	add    BYTE PTR [rax],al
     cc3:	04 17                	add    al,0x17
     cc5:	35 0b 65 66 00       	xor    eax,0x66650b
     cca:	00 04 17             	add    BYTE PTR [rdi+rdx*1],al
     ccd:	36 0b ab 67 00 00 04 	ss or  ebp,DWORD PTR [rbx+0x4000067]
     cd4:	17                   	(bad)
     cd5:	37                   	(bad)
     cd6:	0b c6                	or     eax,esi
     cd8:	67 00 00             	add    BYTE PTR [eax],al
     cdb:	19 dd                	sbb    ebp,ebx
     cdd:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
     ce0:	0b 37                	or     esi,DWORD PTR [rdi]
     ce2:	01 1c ac             	add    DWORD PTR [rsp+rbp*4],ebx
     ce5:	5a                   	pop    rdx
     ce6:	00 00                	add    BYTE PTR [rax],al
     ce8:	1e                   	(bad)
     ce9:	df 28                	fild   QWORD PTR [rax]
     ceb:	00 00                	add    BYTE PTR [rax],al
     ced:	01 18                	add    DWORD PTR [rax],ebx
     cef:	3f                   	(bad)
     cf0:	0b d2                	or     edx,edx
     cf2:	0d 00 00 16 ed       	or     eax,0xed160000
     cf7:	80 00 00             	add    BYTE PTR [rax],0x0
     cfa:	18 58 07             	sbb    BYTE PTR [rax+0x7],bl
     cfd:	98                   	cwde
     cfe:	35 00 00 09 0d       	xor    eax,0xd090000
     d03:	00 00                	add    BYTE PTR [rax],al
     d05:	0f 0d 00             	prefetch BYTE PTR [rax]
     d08:	00 02                	add    BYTE PTR [rdx],al
     d0a:	4d 69 00 00 00 16 ed 	imul   r8,QWORD PTR [r8],0xffffffffed160000
     d11:	80 00 00             	add    BYTE PTR [rax],0x0
     d14:	18 5c 07 ed          	sbb    BYTE PTR [rdi+rax*1-0x13],bl
     d18:	15 00 00 23 0d       	adc    eax,0xd230000
     d1d:	00 00                	add    BYTE PTR [rax],al
     d1f:	2e 0d 00 00 02 4d    	cs or  eax,0x4d020000
     d25:	69 00 00 01 52 69    	imul   eax,DWORD PTR [rax],0x69520100
     d2b:	00 00                	add    BYTE PTR [rax],al
     d2d:	00 31                	add    BYTE PTR [rcx],dh
     d2f:	00 1d 00 00 18 64    	add    BYTE PTR [rip+0x64180000],bl        # 64180d35 <__TMC_END__+0x6417cd1d>
     d35:	18 01                	sbb    BYTE PTR [rcx],al
     d37:	7e 00                	jle    d39 <_init-0x2c7>
     d39:	00 57 69             	add    BYTE PTR [rdi+0x69],dl
     d3c:	00 00                	add    BYTE PTR [rax],al
     d3e:	46 0d 00 00 51 0d    	rex.RX or eax,0xd510000
     d44:	00 00                	add    BYTE PTR [rax],al
     d46:	02 4d 69             	add    cl,BYTE PTR [rbp+0x69]
     d49:	00 00                	add    BYTE PTR [rax],al
     d4b:	01 52 69             	add    DWORD PTR [rdx+0x69],edx
     d4e:	00 00                	add    BYTE PTR [rax],al
     d50:	00 15 32 2c 00 00    	add    BYTE PTR [rip+0x2c32],dl        # 3988 <__GNU_EH_FRAME_HDR+0x1954>
     d56:	18 7e 07             	sbb    BYTE PTR [rsi+0x7],bh
     d59:	5a                   	pop    rdx
     d5a:	7e 00                	jle    d5c <_init-0x2a4>
     d5c:	00 03                	add    BYTE PTR [rbx],al
     d5e:	58                   	pop    rax
     d5f:	00 00                	add    BYTE PTR [rax],al
     d61:	69 0d 00 00 79 0d 00 	imul   ecx,DWORD PTR [rip+0xd790000],0x4d020000        # d790d6b <__TMC_END__+0xd78cd53>
     d68:	00 02 4d 
     d6b:	69 00 00 01 79 0d    	imul   eax,DWORD PTR [rax],0xd790100
     d71:	00 00                	add    BYTE PTR [rax],al
     d73:	01 5c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebx
     d77:	00 00                	add    BYTE PTR [rax],al
     d79:	11 1f                	adc    DWORD PTR [rdi],ebx
     d7b:	2b 00                	sub    eax,DWORD PTR [rax]
     d7d:	00 18                	add    BYTE PTR [rax],bl
     d7f:	43 1f                	rex.XB (bad)
     d81:	29 05 00 00 01 16    	sub    DWORD PTR [rip+0x16010000],eax        # 16010d87 <__TMC_END__+0x1600cd6f>
     d87:	ce                   	(bad)
     d88:	02 00                	add    al,BYTE PTR [rax]
     d8a:	00 18                	add    BYTE PTR [rax],bl
     d8c:	9c                   	pushf
     d8d:	07                   	(bad)
     d8e:	05 2c 00 00 9a       	add    eax,0x9a00002c
     d93:	0d 00 00 aa 0d       	or     eax,0xdaa0000
     d98:	00 00                	add    BYTE PTR [rax],al
     d9a:	02 4d 69             	add    cl,BYTE PTR [rbp+0x69]
     d9d:	00 00                	add    BYTE PTR [rax],al
     d9f:	01 03                	add    DWORD PTR [rbx],eax
     da1:	58                   	pop    rax
     da2:	00 00                	add    BYTE PTR [rax],al
     da4:	01 79 0d             	add    DWORD PTR [rcx+0xd],edi
     da7:	00 00                	add    BYTE PTR [rax],al
     da9:	00 2f                	add    BYTE PTR [rdi],ch
     dab:	f7 6c 00 00          	imul   DWORD PTR [rax+rax*1+0x0]
     daf:	18 e6                	sbb    dh,ah
     db1:	07                   	(bad)
     db2:	52                   	push   rdx
     db3:	41 00 00             	add    BYTE PTR [r8],al
     db6:	79 0d                	jns    dc5 <_init-0x23b>
     db8:	00 00                	add    BYTE PTR [rax],al
     dba:	c2 0d 00             	ret    0xd
     dbd:	00 c8                	add    al,cl
     dbf:	0d 00 00 02 62       	or     eax,0x62020000
     dc4:	69 00 00 00 1d 5f    	imul   eax,DWORD PTR [rax],0x5f1d0000
     dca:	54                   	push   rsp
     dcb:	70 00                	jo     dcd <_init-0x233>
     dcd:	e5 00                	in     eax,0x0
     dcf:	00 00                	add    BYTE PTR [rax],al
     dd1:	00 0f                	add    BYTE PTR [rdi],cl
     dd3:	e8 0c 00 00 1e       	call   1e000de4 <__TMC_END__+0x1dffcdcc>
     dd8:	e5 28                	in     eax,0x28
     dda:	00 00                	add    BYTE PTR [rax],al
     ddc:	01 19                	add    DWORD PTR [rcx],ebx
     dde:	80 0b a9             	or     BYTE PTR [rbx],0xa9
     de1:	0e                   	(bad)
     de2:	00 00                	add    BYTE PTR [rax],al
     de4:	44 e8 0c 00 00 16    	rex.R call 16000df6 <__TMC_END__+0x15ffcdde>
     dea:	5f                   	pop    rdi
     deb:	10 00                	adc    BYTE PTR [rax],al
     ded:	00 19                	add    BYTE PTR [rcx],bl
     def:	a1 07 c8 7f 00 00 fd 	movabs eax,ds:0xdfd00007fc807
     df6:	0d 00 
     df8:	00 03                	add    BYTE PTR [rbx],al
     dfa:	0e                   	(bad)
     dfb:	00 00                	add    BYTE PTR [rax],al
     dfd:	02 67 69             	add    ah,BYTE PTR [rdi+0x69]
     e00:	00 00                	add    BYTE PTR [rax],al
     e02:	00 16                	add    BYTE PTR [rsi],dl
     e04:	5f                   	pop    rdi
     e05:	10 00                	adc    BYTE PTR [rax],al
     e07:	00 19                	add    BYTE PTR [rcx],bl
     e09:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     e0a:	07                   	(bad)
     e0b:	c5 10 00             	(bad)
     e0e:	00 17                	add    BYTE PTR [rdi],dl
     e10:	0e                   	(bad)
     e11:	00 00                	add    BYTE PTR [rax],al
     e13:	22 0e                	and    cl,BYTE PTR [rsi]
     e15:	00 00                	add    BYTE PTR [rax],al
     e17:	02 67 69             	add    ah,BYTE PTR [rdi+0x69]
     e1a:	00 00                	add    BYTE PTR [rax],al
     e1c:	01 6c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebp
     e20:	00 00                	add    BYTE PTR [rax],al
     e22:	31 00                	xor    DWORD PTR [rax],eax
     e24:	1d 00 00 19 aa       	sbb    eax,0xaa190000
     e29:	12 70 2d             	adc    dh,BYTE PTR [rax+0x2d]
     e2c:	00 00                	add    BYTE PTR [rax],al
     e2e:	71 69                	jno    e99 <_init-0x167>
     e30:	00 00                	add    BYTE PTR [rax],al
     e32:	3a 0e                	cmp    cl,BYTE PTR [rsi]
     e34:	00 00                	add    BYTE PTR [rax],al
     e36:	45 0e                	rex.RB (bad)
     e38:	00 00                	add    BYTE PTR [rax],al
     e3a:	02 67 69             	add    ah,BYTE PTR [rdi+0x69]
     e3d:	00 00                	add    BYTE PTR [rax],al
     e3f:	01 6c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebp
     e43:	00 00                	add    BYTE PTR [rax],al
     e45:	16                   	(bad)
     e46:	ed                   	in     eax,dx
     e47:	93                   	xchg   ebx,eax
     e48:	00 00                	add    BYTE PTR [rax],al
     e4a:	19 b6 07 c9 3a 00    	sbb    DWORD PTR [rsi+0x3ac907],esi
     e50:	00 59 0e             	add    BYTE PTR [rcx+0xe],bl
     e53:	00 00                	add    BYTE PTR [rax],al
     e55:	64 0e                	fs (bad)
     e57:	00 00                	add    BYTE PTR [rax],al
     e59:	02 67 69             	add    ah,BYTE PTR [rdi+0x69]
     e5c:	00 00                	add    BYTE PTR [rax],al
     e5e:	02 f1                	add    dh,cl
     e60:	00 00                	add    BYTE PTR [rax],al
     e62:	00 00                	add    BYTE PTR [rax],al
     e64:	15 32 2c 00 00       	adc    eax,0x2c32
     e69:	19 bb 07 13 0b 00    	sbb    DWORD PTR [rbx+0xb1307],edi
     e6f:	00 03                	add    BYTE PTR [rbx],al
     e71:	58                   	pop    rax
     e72:	00 00                	add    BYTE PTR [rax],al
     e74:	7c 0e                	jl     e84 <_init-0x17c>
     e76:	00 00                	add    BYTE PTR [rax],al
     e78:	87 0e                	xchg   DWORD PTR [rsi],ecx
     e7a:	00 00                	add    BYTE PTR [rax],al
     e7c:	02 67 69             	add    ah,BYTE PTR [rdi+0x69]
     e7f:	00 00                	add    BYTE PTR [rax],al
     e81:	01 29                	add    DWORD PTR [rcx],ebp
     e83:	05 00 00 00 5e       	add    eax,0x5e000000
     e88:	ce                   	(bad)
     e89:	02 00                	add    al,BYTE PTR [rax]
     e8b:	00 19                	add    BYTE PTR [rcx],bl
     e8d:	c9                   	leave
     e8e:	07                   	(bad)
     e8f:	5a                   	pop    rdx
     e90:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
     e93:	01 98 0e 00 00 02    	add    DWORD PTR [rax+0x200000e],ebx
     e99:	67 69 00 00 01 03 58 	imul   eax,DWORD PTR [eax],0x58030100
     ea0:	00 00                	add    BYTE PTR [rax],al
     ea2:	01 29                	add    DWORD PTR [rcx],ebp
     ea4:	05 00 00 00 00       	add    eax,0x0
     ea9:	0f                   	pmovmskb ecx,(bad)
     eaa:	d7                   	xlat   BYTE PTR ds:[rbx]
     eab:	0d 00 00 22 d7       	or     eax,0xd7220000
     eb0:	0f 00 00             	sldt   WORD PTR [rax]
     eb3:	1a 32                	sbb    dh,BYTE PTR [rdx]
     eb5:	0d 22 69 0f 00       	or     eax,0xf6922
     eba:	00 1b                	add    BYTE PTR [rbx],bl
     ebc:	33 0b                	xor    ecx,DWORD PTR [rbx]
     ebe:	1e                   	(bad)
     ebf:	d9 64 00 00          	fldenv [rax+rax*1+0x0]
     ec3:	10 1c 6a             	adc    BYTE PTR [rdx+rbp*2],bl
     ec6:	0b 64 19 00          	or     esp,DWORD PTR [rcx+rbx*1+0x0]
     eca:	00 11                	add    BYTE PTR [rcx],dl
     ecc:	1f                   	(bad)
     ecd:	2b 00                	sub    eax,DWORD PTR [rax]
     ecf:	00 1c 7d 0d 29 05 00 	add    BYTE PTR [rdi*2+0x5290d],bl
     ed6:	00 01                	add    BYTE PTR [rcx],al
     ed8:	16                   	(bad)
     ed9:	1c 64                	sbb    al,0x64
     edb:	00 00                	add    BYTE PTR [rax],al
     edd:	1c 84                	sbb    al,0x84
     edf:	07                   	(bad)
     ee0:	46 8b 00             	rex.RX mov r8d,DWORD PTR [rax]
     ee3:	00 ec                	add    ah,ch
     ee5:	0e                   	(bad)
     ee6:	00 00                	add    BYTE PTR [rax],al
     ee8:	f2 0e                	repnz (bad)
     eea:	00 00                	add    BYTE PTR [rax],al
     eec:	02 b5 69 00 00 00    	add    dh,BYTE PTR [rbp+0x69]
     ef2:	3c 1c                	cmp    al,0x1c
     ef4:	64 00 00             	add    BYTE PTR fs:[rax],al
     ef7:	1c 88                	sbb    al,0x88
     ef9:	11 f5                	adc    ebp,esi
     efb:	3e 00 00             	ds add BYTE PTR [rax],al
     efe:	06                   	(bad)
     eff:	0f 00 00             	sldt   WORD PTR [rax]
     f02:	11 0f                	adc    DWORD PTR [rdi],ecx
     f04:	00 00                	add    BYTE PTR [rax],al
     f06:	02 b5 69 00 00 01    	add    dh,BYTE PTR [rbp+0x1000069]
     f0c:	ba 69 00 00 00       	mov    edx,0x69
     f11:	16                   	(bad)
     f12:	1c 64                	sbb    al,0x64
     f14:	00 00                	add    BYTE PTR [rax],al
     f16:	1c 8c                	sbb    al,0x8c
     f18:	07                   	(bad)
     f19:	95                   	xchg   ebp,eax
     f1a:	64 00 00             	add    BYTE PTR fs:[rax],al
     f1d:	25 0f 00 00 30       	and    eax,0x3000000f
     f22:	0f 00 00             	sldt   WORD PTR [rax]
     f25:	02 b5 69 00 00 01    	add    dh,BYTE PTR [rbp+0x1000069]
     f2b:	c0 02 00             	rol    BYTE PTR [rdx],0x0
     f2e:	00 00                	add    BYTE PTR [rax],al
     f30:	16                   	(bad)
     f31:	1c 64                	sbb    al,0x64
     f33:	00 00                	add    BYTE PTR [rax],al
     f35:	1c 92                	sbb    al,0x92
     f37:	07                   	(bad)
     f38:	1c 65                	sbb    al,0x65
     f3a:	00 00                	add    BYTE PTR [rax],al
     f3c:	44 0f 00 00          	rex.R sldt WORD PTR [rax]
     f40:	54                   	push   rsp
     f41:	0f 00 00             	sldt   WORD PTR [rax]
     f44:	02 b5 69 00 00 01    	add    dh,BYTE PTR [rbp+0x1000069]
     f4a:	c0 02 00             	rol    BYTE PTR [rdx],0x0
     f4d:	00 01                	add    BYTE PTR [rcx],al
     f4f:	cb                   	retf
     f50:	0e                   	(bad)
     f51:	00 00                	add    BYTE PTR [rax],al
     f53:	00 5f 1c             	add    BYTE PTR [rdi+0x1c],bl
     f56:	64 00 00             	add    BYTE PTR fs:[rax],al
     f59:	1c b0                	sbb    al,0xb0
     f5b:	07                   	(bad)
     f5c:	bf 08 00 00 01       	mov    edi,0x1000008
     f61:	69 0f 00 00 74 0f    	imul   ecx,DWORD PTR [rdi],0xf740000
     f67:	00 00                	add    BYTE PTR [rax],al
     f69:	02 b5 69 00 00 01    	add    dh,BYTE PTR [rbp+0x1000069]
     f6f:	83 07 00             	add    DWORD PTR [rdi],0x0
     f72:	00 00                	add    BYTE PTR [rax],al
     f74:	31 00                	xor    DWORD PTR [rax],eax
     f76:	1d 00 00 1c b5       	sbb    eax,0xb51c0000
     f7b:	07                   	(bad)
     f7c:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
     f7d:	31 00                	xor    DWORD PTR [rax],eax
     f7f:	00 bf 69 00 00 8c    	add    BYTE PTR [rdi-0x73ffff97],bh
     f85:	0f 00 00             	sldt   WORD PTR [rax]
     f88:	97                   	xchg   edi,eax
     f89:	0f 00 00             	sldt   WORD PTR [rax]
     f8c:	02 b5 69 00 00 01    	add    dh,BYTE PTR [rbp+0x1000069]
     f92:	ba 69 00 00 00       	mov    edx,0x69
     f97:	11 05 35 00 00 1c    	adc    DWORD PTR [rip+0x1c000035],eax        # 1c000fd2 <__TMC_END__+0x1bffcfba>
     f9d:	79 0d                	jns    fac <_init-0x54>
     f9f:	c4                   	(bad)
     fa0:	69 00 00 01 11 aa    	imul   eax,DWORD PTR [rax],0xaa110100
     fa6:	14 00                	adc    al,0x0
     fa8:	00 1c 74             	add    BYTE PTR [rsp+rsi*2],bl
     fab:	0d e5 00 00 00       	or     eax,0xe5
     fb0:	01 0f                	add    DWORD PTR [rdi],ecx
     fb2:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
     fb3:	0f 00 00             	sldt   WORD PTR [rax]
     fb6:	15 e6 3e 00 00       	adc    eax,0x3ee6
     fbb:	1c bb                	sbb    al,0xbb
     fbd:	07                   	(bad)
     fbe:	23 7e 00             	and    edi,DWORD PTR [rsi+0x0]
     fc1:	00 97 0f 00 00 ce    	add    BYTE PTR [rdi-0x31fffff1],dl
     fc7:	0f 00 00             	sldt   WORD PTR [rax]
     fca:	d4                   	(bad)
     fcb:	0f 00 00             	sldt   WORD PTR [rax]
     fce:	02 c9                	add    cl,cl
     fd0:	69 00 00 00 45 65    	imul   eax,DWORD PTR [rax],0x65450000
     fd6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fd7:	64 00 1c c0          	add    BYTE PTR fs:[rax+rax*8],bl
     fdb:	f4                   	hlt
     fdc:	1b 00                	sbb    eax,DWORD PTR [rax]
     fde:	00 97 0f 00 00 eb    	add    BYTE PTR [rdi-0x14fffff1],dl
     fe4:	0f 00 00             	sldt   WORD PTR [rax]
     fe7:	f1                   	int1
     fe8:	0f 00 00             	sldt   WORD PTR [rax]
     feb:	02 c9                	add    cl,cl
     fed:	69 00 00 00 15 e5    	imul   eax,DWORD PTR [rax],0xe5150000
     ff3:	3e 00 00             	ds add BYTE PTR [rax],al
     ff6:	1c c5                	sbb    al,0xc5
     ff8:	07                   	(bad)
     ff9:	66 27                	data16 (bad)
     ffb:	00 00                	add    BYTE PTR [rax],al
     ffd:	97                   	xchg   edi,eax
     ffe:	0f 00 00             	sldt   WORD PTR [rax]
    1001:	09 10                	or     DWORD PTR [rax],edx
    1003:	00 00                	add    BYTE PTR [rax],al
    1005:	0f 10 00             	movups xmm0,XMMWORD PTR [rax]
    1008:	00 02                	add    BYTE PTR [rdx],al
    100a:	c9                   	leave
    100b:	69 00 00 00 15 8d    	imul   eax,DWORD PTR [rax],0x8d150000
    1011:	57                   	push   rdi
    1012:	00 00                	add    BYTE PTR [rax],al
    1014:	1c ca                	sbb    al,0xca
    1016:	07                   	(bad)
    1017:	bf 7c 00 00 97       	mov    edi,0x9700007c
    101c:	0f 00 00             	sldt   WORD PTR [rax]
    101f:	27                   	(bad)
    1020:	10 00                	adc    BYTE PTR [rax],al
    1022:	00 2d 10 00 00 02    	add    BYTE PTR [rip+0x2000010],ch        # 2001038 <__TMC_END__+0x1ffd020>
    1028:	c9                   	leave
    1029:	69 00 00 00 11 4c    	imul   eax,DWORD PTR [rax],0x4c110000
    102f:	6a 00                	push   0x0
    1031:	00 1c 7b             	add    BYTE PTR [rbx+rdi*2],bl
    1034:	0d 69 19 00 00       	or     eax,0x1969
    1039:	01 15 72 0f 00 00    	add    DWORD PTR [rip+0xf72],edx        # 1fb1 <_fini+0xdd5>
    103f:	1c cf                	sbb    al,0xcf
    1041:	07                   	(bad)
    1042:	9e                   	sahf
    1043:	27                   	(bad)
    1044:	00 00                	add    BYTE PTR [rax],al
    1046:	2d 10 00 00 52       	sub    eax,0x52000010
    104b:	10 00                	adc    BYTE PTR [rax],al
    104d:	00 58 10             	add    BYTE PTR [rax+0x10],bl
    1050:	00 00                	add    BYTE PTR [rax],al
    1052:	02 c9                	add    cl,cl
    1054:	69 00 00 00 15 25    	imul   eax,DWORD PTR [rax],0x25150000
    105a:	40 00 00             	rex add BYTE PTR [rax],al
    105d:	1c d4                	sbb    al,0xd4
    105f:	07                   	(bad)
    1060:	a1 0f 00 00 2d 10 00 	movabs eax,ds:0x700000102d00000f
    1067:	00 70 
    1069:	10 00                	adc    BYTE PTR [rax],al
    106b:	00 76 10             	add    BYTE PTR [rsi+0x10],dh
    106e:	00 00                	add    BYTE PTR [rax],al
    1070:	02 c9                	add    cl,cl
    1072:	69 00 00 00 15 71    	imul   eax,DWORD PTR [rax],0x71150000
    1078:	0f 00 00             	sldt   WORD PTR [rax]
    107b:	1c d9                	sbb    al,0xd9
    107d:	07                   	(bad)
    107e:	5b                   	pop    rbx
    107f:	78 00                	js     1081 <_Z8my_writeiPKvm@plt+0x41>
    1081:	00 2d 10 00 00 8e    	add    BYTE PTR [rip+0xffffffff8e000010],ch        # ffffffff8e001097 <__TMC_END__+0xffffffff8dffd07f>
    1087:	10 00                	adc    BYTE PTR [rax],al
    1089:	00 94 10 00 00 02 c9 	add    BYTE PTR [rax+rdx*1-0x36fe0000],dl
    1090:	69 00 00 00 15 24    	imul   eax,DWORD PTR [rax],0x24150000
    1096:	40 00 00             	rex add BYTE PTR [rax],al
    1099:	1c de                	sbb    al,0xde
    109b:	07                   	(bad)
    109c:	df 41 00             	fild   WORD PTR [rcx+0x0]
    109f:	00 2d 10 00 00 ac    	add    BYTE PTR [rip+0xffffffffac000010],ch        # ffffffffac0010b5 <__TMC_END__+0xffffffffabffd09d>
    10a5:	10 00                	adc    BYTE PTR [rax],al
    10a7:	00 b2 10 00 00 02    	add    BYTE PTR [rdx+0x2000010],dh
    10ad:	c9                   	leave
    10ae:	69 00 00 00 15 c8    	imul   eax,DWORD PTR [rax],0xc8150000
    10b4:	89 00                	mov    DWORD PTR [rax],eax
    10b6:	00 1c e5 07 51 65 00 	add    BYTE PTR [riz*8+0x655107],bl
    10bd:	00 cb                	add    bl,cl
    10bf:	0e                   	(bad)
    10c0:	00 00                	add    BYTE PTR [rax],al
    10c2:	ca 10 00             	retf   0x10
    10c5:	00 d0                	add    al,dl
    10c7:	10 00                	adc    BYTE PTR [rax],al
    10c9:	00 02                	add    BYTE PTR [rdx],al
    10cb:	c9                   	leave
    10cc:	69 00 00 00 15 df    	imul   eax,DWORD PTR [rax],0xdf150000
    10d2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10d3:	00 00                	add    BYTE PTR [rax],al
    10d5:	1c ea                	sbb    al,0xea
    10d7:	07                   	(bad)
    10d8:	44 23 00             	and    r8d,DWORD PTR [rax]
    10db:	00 cb                	add    bl,cl
    10dd:	0e                   	(bad)
    10de:	00 00                	add    BYTE PTR [rax],al
    10e0:	e8 10 00 00 ee       	call   ffffffffee0010f5 <__TMC_END__+0xffffffffedffd0dd>
    10e5:	10 00                	adc    BYTE PTR [rax],al
    10e7:	00 02                	add    BYTE PTR [rdx],al
    10e9:	c9                   	leave
    10ea:	69 00 00 00 15 fa    	imul   eax,DWORD PTR [rax],0xfa150000
    10f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    10f1:	00 00                	add    BYTE PTR [rax],al
    10f3:	1c ef                	sbb    al,0xef
    10f5:	07                   	(bad)
    10f6:	a3 07 00 00 cb 0e 00 	movabs ds:0x600000ecb000007,eax
    10fd:	00 06 
    10ff:	11 00                	adc    DWORD PTR [rax],eax
    1101:	00 0c 11             	add    BYTE PTR [rcx+rdx*1],cl
    1104:	00 00                	add    BYTE PTR [rax],al
    1106:	02 c9                	add    cl,cl
    1108:	69 00 00 00 15 c9    	imul   eax,DWORD PTR [rax],0xc9150000
    110e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    110f:	00 00                	add    BYTE PTR [rax],al
    1111:	1c f7                	sbb    al,0xf7
    1113:	07                   	(bad)
    1114:	a8 81                	test   al,0x81
    1116:	00 00                	add    BYTE PTR [rax],al
    1118:	f1                   	int1
    1119:	65 00 00             	add    BYTE PTR gs:[rax],al
    111c:	24 11                	and    al,0x11
    111e:	00 00                	add    BYTE PTR [rax],al
    1120:	2a 11                	sub    dl,BYTE PTR [rcx]
    1122:	00 00                	add    BYTE PTR [rax],al
    1124:	02 c9                	add    cl,cl
    1126:	69 00 00 00 11 3c    	imul   eax,DWORD PTR [rax],0x3c110000
    112c:	6c                   	ins    BYTE PTR es:[rdi],dx
    112d:	00 00                	add    BYTE PTR [rax],al
    112f:	1c 78                	sbb    al,0x78
    1131:	0d ce 69 00 00       	or     eax,0x69ce
    1136:	01 15 d1 42 00 00    	add    DWORD PTR [rip+0x42d1],edx        # 540d <__TMC_END__+0x13f5>
    113c:	1c fe                	sbb    al,0xfe
    113e:	07                   	(bad)
    113f:	52                   	push   rdx
    1140:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1141:	00 00                	add    BYTE PTR [rax],al
    1143:	2a 11                	sub    dl,BYTE PTR [rcx]
    1145:	00 00                	add    BYTE PTR [rax],al
    1147:	4f 11 00             	rex.WRXB adc QWORD PTR [r8],r8
    114a:	00 5a 11             	add    BYTE PTR [rdx+0x11],bl
    114d:	00 00                	add    BYTE PTR [rax],al
    114f:	02 c9                	add    cl,cl
    1151:	69 00 00 01 cb 0e    	imul   eax,DWORD PTR [rax],0xecb0100
    1157:	00 00                	add    BYTE PTR [rax],al
    1159:	00 24 61             	add    BYTE PTR [rcx+riz*2],ah
    115c:	74 00                	je     115e <_Z7my_exiti+0x1a>
    115e:	1c 06                	sbb    al,0x6
    1160:	01 a3 77 00 00 2a    	add    DWORD PTR [rbx+0x2a000077],esp
    1166:	11 00                	adc    DWORD PTR [rax],eax
    1168:	00 71 11             	add    BYTE PTR [rcx+0x11],dh
    116b:	00 00                	add    BYTE PTR [rax],al
    116d:	7c 11                	jl     1180 <main+0x1f>
    116f:	00 00                	add    BYTE PTR [rax],al
    1171:	02 c9                	add    cl,cl
    1173:	69 00 00 01 cb 0e    	imul   eax,DWORD PTR [rax],0xecb0100
    1179:	00 00                	add    BYTE PTR [rax],al
    117b:	00 03                	add    BYTE PTR [rbx],al
    117d:	14 35                	adc    al,0x35
    117f:	00 00                	add    BYTE PTR [rax],al
    1181:	1c 11                	sbb    al,0x11
    1183:	01 07                	add    DWORD PTR [rdi],eax
    1185:	b6 70                	mov    dh,0x70
    1187:	00 00                	add    BYTE PTR [rax],al
    1189:	2a 11                	sub    dl,BYTE PTR [rcx]
    118b:	00 00                	add    BYTE PTR [rax],al
    118d:	01 96 11 00 00 9c    	add    DWORD PTR [rsi-0x63ffffef],edx
    1193:	11 00                	adc    DWORD PTR [rax],eax
    1195:	00 02                	add    BYTE PTR [rdx],al
    1197:	c9                   	leave
    1198:	69 00 00 00 03 0f    	imul   eax,DWORD PTR [rax],0xf030000
    119e:	65 00 00             	add    BYTE PTR gs:[rax],al
    11a1:	1c 19                	sbb    al,0x19
    11a3:	01 07                	add    DWORD PTR [rdi],eax
    11a5:	52                   	push   rdx
    11a6:	91                   	xchg   ecx,eax
    11a7:	00 00                	add    BYTE PTR [rax],al
    11a9:	2a 11                	sub    dl,BYTE PTR [rcx]
    11ab:	00 00                	add    BYTE PTR [rax],al
    11ad:	01 b6 11 00 00 bc    	add    DWORD PTR [rsi-0x43ffffef],esi
    11b3:	11 00                	adc    DWORD PTR [rax],eax
    11b5:	00 02                	add    BYTE PTR [rdx],al
    11b7:	c9                   	leave
    11b8:	69 00 00 00 11 c1    	imul   eax,DWORD PTR [rax],0xc1110000
    11be:	0b 00                	or     eax,DWORD PTR [rax]
    11c0:	00 1c 76             	add    BYTE PTR [rsi+rsi*2],bl
    11c3:	0d c4 69 00 00       	or     eax,0x69c4
    11c8:	01 03                	add    DWORD PTR [rbx],eax
    11ca:	da 56 00             	ficom  DWORD PTR [rsi+0x0]
    11cd:	00 1c 21             	add    BYTE PTR [rcx+riz*1],bl
    11d0:	01 07                	add    DWORD PTR [rdi],eax
    11d2:	2e 1a 00             	cs sbb al,BYTE PTR [rax]
    11d5:	00 bc 11 00 00 01 e3 	add    BYTE PTR [rcx+rdx*1-0x1cff0000],bh
    11dc:	11 00                	adc    DWORD PTR [rax],eax
    11de:	00 e9                	add    cl,ch
    11e0:	11 00                	adc    DWORD PTR [rax],eax
    11e2:	00 02                	add    BYTE PTR [rdx],al
    11e4:	c9                   	leave
    11e5:	69 00 00 00 12 69    	imul   eax,DWORD PTR [rax],0x69120000
    11eb:	39 00                	cmp    DWORD PTR [rax],eax
    11ed:	00 1c 27             	add    BYTE PTR [rdi+riz*1],bl
    11f0:	01 07                	add    DWORD PTR [rdi],eax
    11f2:	30 21                	xor    BYTE PTR [rcx],ah
    11f4:	00 00                	add    BYTE PTR [rax],al
    11f6:	01 ff                	add    edi,edi
    11f8:	11 00                	adc    DWORD PTR [rax],eax
    11fa:	00 0a                	add    BYTE PTR [rdx],cl
    11fc:	12 00                	adc    al,BYTE PTR [rax]
    11fe:	00 02                	add    BYTE PTR [rdx],al
    1200:	b5 69                	mov    ch,0x69
    1202:	00 00                	add    BYTE PTR [rax],al
    1204:	01 cb                	add    ebx,ecx
    1206:	0e                   	(bad)
    1207:	00 00                	add    BYTE PTR [rax],al
    1209:	00 12                	add    BYTE PTR [rdx],dl
    120b:	db 50 00             	fist   DWORD PTR [rax+0x0]
    120e:	00 1c 2f             	add    BYTE PTR [rdi+rbp*1],bl
    1211:	01 07                	add    DWORD PTR [rdi],eax
    1213:	52                   	push   rdx
    1214:	67 00 00             	add    BYTE PTR [eax],al
    1217:	01 20                	add    DWORD PTR [rax],esp
    1219:	12 00                	adc    al,BYTE PTR [rax]
    121b:	00 2b                	add    BYTE PTR [rbx],ch
    121d:	12 00                	adc    al,BYTE PTR [rax]
    121f:	00 02                	add    BYTE PTR [rdx],al
    1221:	b5 69                	mov    ch,0x69
    1223:	00 00                	add    BYTE PTR [rax],al
    1225:	01 cb                	add    ebx,ecx
    1227:	0e                   	(bad)
    1228:	00 00                	add    BYTE PTR [rax],al
    122a:	00 12                	add    BYTE PTR [rdx],dl
    122c:	f7 28                	imul   DWORD PTR [rax]
    122e:	00 00                	add    BYTE PTR [rax],al
    1230:	1c 36                	sbb    al,0x36
    1232:	01 07                	add    DWORD PTR [rdi],eax
    1234:	ed                   	in     eax,dx
    1235:	53                   	push   rbx
    1236:	00 00                	add    BYTE PTR [rax],al
    1238:	01 41 12             	add    DWORD PTR [rcx+0x12],eax
    123b:	00 00                	add    BYTE PTR [rax],al
    123d:	4c 12 00             	rex.WR adc r8b,BYTE PTR [rax]
    1240:	00 02                	add    BYTE PTR [rdx],al
    1242:	b5 69                	mov    ch,0x69
    1244:	00 00                	add    BYTE PTR [rax],al
    1246:	01 bf 69 00 00 00    	add    DWORD PTR [rdi+0x69],edi
    124c:	03 26                	add    esp,DWORD PTR [rsi]
    124e:	1b 00                	sbb    eax,DWORD PTR [rax]
    1250:	00 1c 41             	add    BYTE PTR [rcx+rax*2],bl
    1253:	01 07                	add    DWORD PTR [rdi],eax
    1255:	57                   	push   rdi
    1256:	7c 00                	jl     1258 <_fini+0x7c>
    1258:	00 cb                	add    bl,cl
    125a:	0e                   	(bad)
    125b:	00 00                	add    BYTE PTR [rax],al
    125d:	01 66 12             	add    DWORD PTR [rsi+0x12],esp
    1260:	00 00                	add    BYTE PTR [rax],al
    1262:	7b 12                	jnp    1276 <_fini+0x9a>
    1264:	00 00                	add    BYTE PTR [rax],al
    1266:	02 c9                	add    cl,cl
    1268:	69 00 00 01 03 58    	imul   eax,DWORD PTR [rax],0x58030100
    126e:	00 00                	add    BYTE PTR [rax],al
    1270:	01 cb                	add    ebx,ecx
    1272:	0e                   	(bad)
    1273:	00 00                	add    BYTE PTR [rax],al
    1275:	01 cb                	add    ebx,ecx
    1277:	0e                   	(bad)
    1278:	00 00                	add    BYTE PTR [rax],al
    127a:	00 03                	add    BYTE PTR [rbx],al
    127c:	dc 0b                	fmul   QWORD PTR [rbx]
    127e:	00 00                	add    BYTE PTR [rax],al
    1280:	1c 4e                	sbb    al,0x4e
    1282:	01 07                	add    DWORD PTR [rdi],eax
    1284:	49 7a 00             	rex.WB jp 1287 <_fini+0xab>
    1287:	00 be 0e 00 00 01    	add    BYTE PTR [rsi+0x100000e],bh
    128d:	95                   	xchg   ebp,eax
    128e:	12 00                	adc    al,BYTE PTR [rax]
    1290:	00 a5 12 00 00 02    	add    BYTE PTR [rbp+0x2000012],ah
    1296:	c9                   	leave
    1297:	69 00 00 01 cb 0e    	imul   eax,DWORD PTR [rax],0xecb0100
    129d:	00 00                	add    BYTE PTR [rax],al
    129f:	01 cb                	add    ebx,ecx
    12a1:	0e                   	(bad)
    12a2:	00 00                	add    BYTE PTR [rax],al
    12a4:	00 03                	add    BYTE PTR [rbx],al
    12a6:	21 6c 00 00          	and    DWORD PTR [rax+rax*1+0x0],ebp
    12aa:	1c 57                	sbb    al,0x57
    12ac:	01 07                	add    DWORD PTR [rdi],eax
    12ae:	10 5c 00 00          	adc    BYTE PTR [rax+rax*1+0x0],bl
    12b2:	f1                   	int1
    12b3:	00 00                	add    BYTE PTR [rax],al
    12b5:	00 01                	add    BYTE PTR [rcx],al
    12b7:	bf 12 00 00 ca       	mov    edi,0xca000012
    12bc:	12 00                	adc    al,BYTE PTR [rax]
    12be:	00 02                	add    BYTE PTR [rdx],al
    12c0:	c9                   	leave
    12c1:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    12c7:	00 00                	add    BYTE PTR [rax],al
    12c9:	00 03                	add    BYTE PTR [rbx],al
    12cb:	21 6c 00 00          	and    DWORD PTR [rax+rax*1+0x0],ebp
    12cf:	1c 62                	sbb    al,0x62
    12d1:	01 07                	add    DWORD PTR [rdi],eax
    12d3:	fe                   	(bad)
    12d4:	25 00 00 f1 00       	and    eax,0xf10000
    12d9:	00 00                	add    BYTE PTR [rax],al
    12db:	01 e4                	add    esp,esp
    12dd:	12 00                	adc    al,BYTE PTR [rax]
    12df:	00 f9                	add    cl,bh
    12e1:	12 00                	adc    al,BYTE PTR [rax]
    12e3:	00 02                	add    BYTE PTR [rdx],al
    12e5:	c9                   	leave
    12e6:	69 00 00 01 cb 0e    	imul   eax,DWORD PTR [rax],0xecb0100
    12ec:	00 00                	add    BYTE PTR [rax],al
    12ee:	01 cb                	add    ebx,ecx
    12f0:	0e                   	(bad)
    12f1:	00 00                	add    BYTE PTR [rax],al
    12f3:	01 be 0e 00 00 00    	add    DWORD PTR [rsi+0xe],edi
    12f9:	03 21                	add    esp,DWORD PTR [rcx]
    12fb:	6c                   	ins    BYTE PTR es:[rdi],dx
    12fc:	00 00                	add    BYTE PTR [rax],al
    12fe:	1c 67                	sbb    al,0x67
    1300:	01 07                	add    DWORD PTR [rdi],eax
    1302:	42 03 00             	rex.X add eax,DWORD PTR [rax]
    1305:	00 f1                	add    cl,dh
    1307:	00 00                	add    BYTE PTR [rax],al
    1309:	00 01                	add    BYTE PTR [rcx],al
    130b:	13 13                	adc    edx,DWORD PTR [rbx]
    130d:	00 00                	add    BYTE PTR [rax],al
    130f:	32 13                	xor    dl,BYTE PTR [rbx]
    1311:	00 00                	add    BYTE PTR [rax],al
    1313:	02 c9                	add    cl,cl
    1315:	69 00 00 01 cb 0e    	imul   eax,DWORD PTR [rax],0xecb0100
    131b:	00 00                	add    BYTE PTR [rax],al
    131d:	01 cb                	add    ebx,ecx
    131f:	0e                   	(bad)
    1320:	00 00                	add    BYTE PTR [rax],al
    1322:	01 be 0e 00 00 01    	add    DWORD PTR [rsi+0x100000e],edi
    1328:	cb                   	retf
    1329:	0e                   	(bad)
    132a:	00 00                	add    BYTE PTR [rax],al
    132c:	01 cb                	add    ebx,ecx
    132e:	0e                   	(bad)
    132f:	00 00                	add    BYTE PTR [rax],al
    1331:	00 03                	add    BYTE PTR [rbx],al
    1333:	21 6c 00 00          	and    DWORD PTR [rax+rax*1+0x0],ebp
    1337:	1c 6f                	sbb    al,0x6f
    1339:	01 07                	add    DWORD PTR [rdi],eax
    133b:	18 6e 00             	sbb    BYTE PTR [rsi+0x0],ch
    133e:	00 f1                	add    cl,dh
    1340:	00 00                	add    BYTE PTR [rax],al
    1342:	00 01                	add    BYTE PTR [rcx],al
    1344:	4c 13 00             	adc    r8,QWORD PTR [rax]
    1347:	00 57 13             	add    BYTE PTR [rdi+0x13],dl
    134a:	00 00                	add    BYTE PTR [rax],al
    134c:	02 c9                	add    cl,cl
    134e:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1354:	00 00                	add    BYTE PTR [rax],al
    1356:	00 03                	add    BYTE PTR [rbx],al
    1358:	21 6c 00 00          	and    DWORD PTR [rax+rax*1+0x0],ebp
    135c:	1c 74                	sbb    al,0x74
    135e:	01 07                	add    DWORD PTR [rdi],eax
    1360:	64 38 00             	cmp    BYTE PTR fs:[rax],al
    1363:	00 f1                	add    cl,dh
    1365:	00 00                	add    BYTE PTR [rax],al
    1367:	00 01                	add    BYTE PTR [rcx],al
    1369:	71 13                	jno    137e <_fini+0x1a2>
    136b:	00 00                	add    BYTE PTR [rax],al
    136d:	86 13                	xchg   BYTE PTR [rbx],dl
    136f:	00 00                	add    BYTE PTR [rax],al
    1371:	02 c9                	add    cl,cl
    1373:	69 00 00 01 cb 0e    	imul   eax,DWORD PTR [rax],0xecb0100
    1379:	00 00                	add    BYTE PTR [rax],al
    137b:	01 cb                	add    ebx,ecx
    137d:	0e                   	(bad)
    137e:	00 00                	add    BYTE PTR [rax],al
    1380:	01 c0                	add    eax,eax
    1382:	02 00                	add    al,BYTE PTR [rax]
    1384:	00 00                	add    BYTE PTR [rax],al
    1386:	03 21                	add    esp,DWORD PTR [rcx]
    1388:	6c                   	ins    BYTE PTR es:[rdi],dx
    1389:	00 00                	add    BYTE PTR [rax],al
    138b:	1c 79                	sbb    al,0x79
    138d:	01 07                	add    DWORD PTR [rdi],eax
    138f:	66 32 00             	data16 xor al,BYTE PTR [rax]
    1392:	00 f1                	add    cl,dh
    1394:	00 00                	add    BYTE PTR [rax],al
    1396:	00 01                	add    BYTE PTR [rcx],al
    1398:	a0 13 00 00 ba 13 00 	movabs al,ds:0x2000013ba000013
    139f:	00 02 
    13a1:	c9                   	leave
    13a2:	69 00 00 01 cb 0e    	imul   eax,DWORD PTR [rax],0xecb0100
    13a8:	00 00                	add    BYTE PTR [rax],al
    13aa:	01 cb                	add    ebx,ecx
    13ac:	0e                   	(bad)
    13ad:	00 00                	add    BYTE PTR [rax],al
    13af:	01 c0                	add    eax,eax
    13b1:	02 00                	add    al,BYTE PTR [rax]
    13b3:	00 01                	add    BYTE PTR [rcx],al
    13b5:	cb                   	retf
    13b6:	0e                   	(bad)
    13b7:	00 00                	add    BYTE PTR [rax],al
    13b9:	00 03                	add    BYTE PTR [rbx],al
    13bb:	0f 91 00             	setno  BYTE PTR [rax]
    13be:	00 1c 83             	add    BYTE PTR [rbx+rax*4],bl
    13c1:	01 07                	add    DWORD PTR [rdi],eax
    13c3:	80 37 00             	xor    BYTE PTR [rdi],0x0
    13c6:	00 f1                	add    cl,dh
    13c8:	65 00 00             	add    BYTE PTR gs:[rax],al
    13cb:	01 d4                	add    esp,edx
    13cd:	13 00                	adc    eax,DWORD PTR [rax]
    13cf:	00 df                	add    bh,bl
    13d1:	13 00                	adc    eax,DWORD PTR [rax]
    13d3:	00 02                	add    BYTE PTR [rdx],al
    13d5:	c9                   	leave
    13d6:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    13dc:	00 00                	add    BYTE PTR [rax],al
    13de:	00 03                	add    BYTE PTR [rbx],al
    13e0:	0f 91 00             	setno  BYTE PTR [rax]
    13e3:	00 1c 88             	add    BYTE PTR [rax+rcx*4],bl
    13e6:	01 07                	add    DWORD PTR [rdi],eax
    13e8:	1c 72                	sbb    al,0x72
    13ea:	00 00                	add    BYTE PTR [rax],al
    13ec:	f1                   	int1
    13ed:	65 00 00             	add    BYTE PTR gs:[rax],al
    13f0:	01 f9                	add    ecx,edi
    13f2:	13 00                	adc    eax,DWORD PTR [rax]
    13f4:	00 04 14             	add    BYTE PTR [rsp+rdx*1],al
    13f7:	00 00                	add    BYTE PTR [rax],al
    13f9:	02 c9                	add    cl,cl
    13fb:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    1401:	00 00                	add    BYTE PTR [rax],al
    1403:	00 03                	add    BYTE PTR [rbx],al
    1405:	0f 91 00             	setno  BYTE PTR [rax]
    1408:	00 1c 8d 01 07 17 48 	add    BYTE PTR [rcx*4+0x48170701],bl
    140f:	00 00                	add    BYTE PTR [rax],al
    1411:	f1                   	int1
    1412:	65 00 00             	add    BYTE PTR gs:[rax],al
    1415:	01 1e                	add    DWORD PTR [rsi],ebx
    1417:	14 00                	adc    al,0x0
    1419:	00 29                	add    BYTE PTR [rcx],ch
    141b:	14 00                	adc    al,0x0
    141d:	00 02                	add    BYTE PTR [rdx],al
    141f:	c9                   	leave
    1420:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1426:	00 00                	add    BYTE PTR [rax],al
    1428:	00 03                	add    BYTE PTR [rbx],al
    142a:	32 1b                	xor    bl,BYTE PTR [rbx]
    142c:	00 00                	add    BYTE PTR [rax],al
    142e:	1c 92                	sbb    al,0x92
    1430:	01 07                	add    DWORD PTR [rdi],eax
    1432:	9f                   	lahf
    1433:	30 00                	xor    BYTE PTR [rax],al
    1435:	00 f1                	add    cl,dh
    1437:	65 00 00             	add    BYTE PTR gs:[rax],al
    143a:	01 43 14             	add    DWORD PTR [rbx+0x14],eax
    143d:	00 00                	add    BYTE PTR [rax],al
    143f:	4e 14 00             	rex.WRX adc al,0x0
    1442:	00 02                	add    BYTE PTR [rdx],al
    1444:	c9                   	leave
    1445:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    144b:	00 00                	add    BYTE PTR [rax],al
    144d:	00 03                	add    BYTE PTR [rbx],al
    144f:	32 1b                	xor    bl,BYTE PTR [rbx]
    1451:	00 00                	add    BYTE PTR [rax],al
    1453:	1c 9c                	sbb    al,0x9c
    1455:	01 07                	add    DWORD PTR [rdi],eax
    1457:	08 08                	or     BYTE PTR [rax],cl
    1459:	00 00                	add    BYTE PTR [rax],al
    145b:	f1                   	int1
    145c:	65 00 00             	add    BYTE PTR gs:[rax],al
    145f:	01 68 14             	add    DWORD PTR [rax+0x14],ebp
    1462:	00 00                	add    BYTE PTR [rax],al
    1464:	73 14                	jae    147a <_fini+0x29e>
    1466:	00 00                	add    BYTE PTR [rax],al
    1468:	02 c9                	add    cl,cl
    146a:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    1470:	00 00                	add    BYTE PTR [rax],al
    1472:	00 03                	add    BYTE PTR [rbx],al
    1474:	32 1b                	xor    bl,BYTE PTR [rbx]
    1476:	00 00                	add    BYTE PTR [rax],al
    1478:	1c a1                	sbb    al,0xa1
    147a:	01 07                	add    DWORD PTR [rdi],eax
    147c:	33 8f 00 00 f1 65    	xor    ecx,DWORD PTR [rdi+0x65f10000]
    1482:	00 00                	add    BYTE PTR [rax],al
    1484:	01 8d 14 00 00 98    	add    DWORD PTR [rbp-0x67ffffec],ecx
    148a:	14 00                	adc    al,0x0
    148c:	00 02                	add    BYTE PTR [rdx],al
    148e:	c9                   	leave
    148f:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1495:	00 00                	add    BYTE PTR [rax],al
    1497:	00 03                	add    BYTE PTR [rbx],al
    1499:	1f                   	(bad)
    149a:	13 00                	adc    eax,DWORD PTR [rax]
    149c:	00 1c ad 01 07 c9 2b 	add    BYTE PTR [rbp*4+0x2bc90701],bl
    14a3:	00 00                	add    BYTE PTR [rax],al
    14a5:	f1                   	int1
    14a6:	65 00 00             	add    BYTE PTR gs:[rax],al
    14a9:	01 b2 14 00 00 bd    	add    DWORD PTR [rdx-0x42ffffec],esi
    14af:	14 00                	adc    al,0x0
    14b1:	00 02                	add    BYTE PTR [rdx],al
    14b3:	c9                   	leave
    14b4:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    14ba:	00 00                	add    BYTE PTR [rax],al
    14bc:	00 03                	add    BYTE PTR [rbx],al
    14be:	1f                   	(bad)
    14bf:	13 00                	adc    eax,DWORD PTR [rax]
    14c1:	00 1c b2             	add    BYTE PTR [rdx+rsi*4],bl
    14c4:	01 07                	add    DWORD PTR [rdi],eax
    14c6:	5a                   	pop    rdx
    14c7:	72 00                	jb     14c9 <_fini+0x2ed>
    14c9:	00 f1                	add    cl,dh
    14cb:	65 00 00             	add    BYTE PTR gs:[rax],al
    14ce:	01 d7                	add    edi,edx
    14d0:	14 00                	adc    al,0x0
    14d2:	00 e2                	add    dl,ah
    14d4:	14 00                	adc    al,0x0
    14d6:	00 02                	add    BYTE PTR [rdx],al
    14d8:	c9                   	leave
    14d9:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    14df:	00 00                	add    BYTE PTR [rax],al
    14e1:	00 03                	add    BYTE PTR [rbx],al
    14e3:	1f                   	(bad)
    14e4:	13 00                	adc    eax,DWORD PTR [rax]
    14e6:	00 1c b7             	add    BYTE PTR [rdi+rsi*4],bl
    14e9:	01 07                	add    DWORD PTR [rdi],eax
    14eb:	10 3e                	adc    BYTE PTR [rsi],bh
    14ed:	00 00                	add    BYTE PTR [rax],al
    14ef:	f1                   	int1
    14f0:	65 00 00             	add    BYTE PTR gs:[rax],al
    14f3:	01 fc                	add    esp,edi
    14f5:	14 00                	adc    al,0x0
    14f7:	00 07                	add    BYTE PTR [rdi],al
    14f9:	15 00 00 02 c9       	adc    eax,0xc9020000
    14fe:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1504:	00 00                	add    BYTE PTR [rax],al
    1506:	00 03                	add    BYTE PTR [rbx],al
    1508:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
    150b:	00 1c bf             	add    BYTE PTR [rdi+rdi*4],bl
    150e:	01 07                	add    DWORD PTR [rdi],eax
    1510:	81 02 00 00 cb 0e    	add    DWORD PTR [rdx],0xecb0000
    1516:	00 00                	add    BYTE PTR [rax],al
    1518:	01 21                	add    DWORD PTR [rcx],esp
    151a:	15 00 00 31 15       	adc    eax,0x15310000
    151f:	00 00                	add    BYTE PTR [rax],al
    1521:	02 c9                	add    cl,cl
    1523:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    1529:	00 00                	add    BYTE PTR [rax],al
    152b:	01 cb                	add    ebx,ecx
    152d:	0e                   	(bad)
    152e:	00 00                	add    BYTE PTR [rax],al
    1530:	00 03                	add    BYTE PTR [rbx],al
    1532:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
    1535:	00 1c c4             	add    BYTE PTR [rsp+rax*8],bl
    1538:	01 07                	add    DWORD PTR [rdi],eax
    153a:	3b 37                	cmp    esi,DWORD PTR [rdi]
    153c:	00 00                	add    BYTE PTR [rax],al
    153e:	cb                   	retf
    153f:	0e                   	(bad)
    1540:	00 00                	add    BYTE PTR [rax],al
    1542:	01 4b 15             	add    DWORD PTR [rbx+0x15],ecx
    1545:	00 00                	add    BYTE PTR [rax],al
    1547:	5b                   	pop    rbx
    1548:	15 00 00 02 c9       	adc    eax,0xc9020000
    154d:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    1553:	00 00                	add    BYTE PTR [rax],al
    1555:	01 cb                	add    ebx,ecx
    1557:	0e                   	(bad)
    1558:	00 00                	add    BYTE PTR [rax],al
    155a:	00 03                	add    BYTE PTR [rbx],al
    155c:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
    155f:	00 1c c8             	add    BYTE PTR [rax+rcx*8],bl
    1562:	01 07                	add    DWORD PTR [rdi],eax
    1564:	72 6d                	jb     15d3 <_fini+0x3f7>
    1566:	00 00                	add    BYTE PTR [rax],al
    1568:	cb                   	retf
    1569:	0e                   	(bad)
    156a:	00 00                	add    BYTE PTR [rax],al
    156c:	01 75 15             	add    DWORD PTR [rbp+0x15],esi
    156f:	00 00                	add    BYTE PTR [rax],al
    1571:	8a 15 00 00 02 c9    	mov    dl,BYTE PTR [rip+0xffffffffc9020000]        # ffffffffc9021577 <__TMC_END__+0xffffffffc901d55f>
    1577:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    157d:	00 00                	add    BYTE PTR [rax],al
    157f:	01 cb                	add    ebx,ecx
    1581:	0e                   	(bad)
    1582:	00 00                	add    BYTE PTR [rax],al
    1584:	01 cb                	add    ebx,ecx
    1586:	0e                   	(bad)
    1587:	00 00                	add    BYTE PTR [rax],al
    1589:	00 03                	add    BYTE PTR [rbx],al
    158b:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
    158e:	00 1c cc             	add    BYTE PTR [rsp+rcx*8],bl
    1591:	01 07                	add    DWORD PTR [rdi],eax
    1593:	6a 07                	push   0x7
    1595:	00 00                	add    BYTE PTR [rax],al
    1597:	cb                   	retf
    1598:	0e                   	(bad)
    1599:	00 00                	add    BYTE PTR [rax],al
    159b:	01 a4 15 00 00 b4 15 	add    DWORD PTR [rbp+rdx*1+0x15b40000],esp
    15a2:	00 00                	add    BYTE PTR [rax],al
    15a4:	02 c9                	add    cl,cl
    15a6:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    15ac:	00 00                	add    BYTE PTR [rax],al
    15ae:	01 cb                	add    ebx,ecx
    15b0:	0e                   	(bad)
    15b1:	00 00                	add    BYTE PTR [rax],al
    15b3:	00 03                	add    BYTE PTR [rbx],al
    15b5:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    15b8:	00 1c d1             	add    BYTE PTR [rcx+rdx*8],bl
    15bb:	01 07                	add    DWORD PTR [rdi],eax
    15bd:	62 1f 00 00 cb       	(bad)
    15c2:	0e                   	(bad)
    15c3:	00 00                	add    BYTE PTR [rax],al
    15c5:	01 ce                	add    esi,ecx
    15c7:	15 00 00 de 15       	adc    eax,0x15de0000
    15cc:	00 00                	add    BYTE PTR [rax],al
    15ce:	02 c9                	add    cl,cl
    15d0:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    15d6:	00 00                	add    BYTE PTR [rax],al
    15d8:	01 cb                	add    ebx,ecx
    15da:	0e                   	(bad)
    15db:	00 00                	add    BYTE PTR [rax],al
    15dd:	00 03                	add    BYTE PTR [rbx],al
    15df:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    15e2:	00 1c d6             	add    BYTE PTR [rsi+rdx*8],bl
    15e5:	01 07                	add    DWORD PTR [rdi],eax
    15e7:	11 77 00             	adc    DWORD PTR [rdi+0x0],esi
    15ea:	00 cb                	add    bl,cl
    15ec:	0e                   	(bad)
    15ed:	00 00                	add    BYTE PTR [rax],al
    15ef:	01 f8                	add    eax,edi
    15f1:	15 00 00 08 16       	adc    eax,0x16080000
    15f6:	00 00                	add    BYTE PTR [rax],al
    15f8:	02 c9                	add    cl,cl
    15fa:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    1600:	00 00                	add    BYTE PTR [rax],al
    1602:	01 cb                	add    ebx,ecx
    1604:	0e                   	(bad)
    1605:	00 00                	add    BYTE PTR [rax],al
    1607:	00 03                	add    BYTE PTR [rbx],al
    1609:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    160c:	00 1c da             	add    BYTE PTR [rdx+rbx*8],bl
    160f:	01 07                	add    DWORD PTR [rdi],eax
    1611:	33 1d 00 00 cb 0e    	xor    ebx,DWORD PTR [rip+0xecb0000]        # ecb1617 <__TMC_END__+0xecad5ff>
    1617:	00 00                	add    BYTE PTR [rax],al
    1619:	01 22                	add    DWORD PTR [rdx],esp
    161b:	16                   	(bad)
    161c:	00 00                	add    BYTE PTR [rax],al
    161e:	37                   	(bad)
    161f:	16                   	(bad)
    1620:	00 00                	add    BYTE PTR [rax],al
    1622:	02 c9                	add    cl,cl
    1624:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    162a:	00 00                	add    BYTE PTR [rax],al
    162c:	01 cb                	add    ebx,ecx
    162e:	0e                   	(bad)
    162f:	00 00                	add    BYTE PTR [rax],al
    1631:	01 cb                	add    ebx,ecx
    1633:	0e                   	(bad)
    1634:	00 00                	add    BYTE PTR [rax],al
    1636:	00 03                	add    BYTE PTR [rbx],al
    1638:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    163b:	00 1c de             	add    BYTE PTR [rsi+rbx*8],bl
    163e:	01 07                	add    DWORD PTR [rdi],eax
    1640:	5f                   	pop    rdi
    1641:	26 00 00             	es add BYTE PTR [rax],al
    1644:	cb                   	retf
    1645:	0e                   	(bad)
    1646:	00 00                	add    BYTE PTR [rax],al
    1648:	01 51 16             	add    DWORD PTR [rcx+0x16],edx
    164b:	00 00                	add    BYTE PTR [rax],al
    164d:	61                   	(bad)
    164e:	16                   	(bad)
    164f:	00 00                	add    BYTE PTR [rax],al
    1651:	02 c9                	add    cl,cl
    1653:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1659:	00 00                	add    BYTE PTR [rax],al
    165b:	01 cb                	add    ebx,ecx
    165d:	0e                   	(bad)
    165e:	00 00                	add    BYTE PTR [rax],al
    1660:	00 03                	add    BYTE PTR [rbx],al
    1662:	1f                   	(bad)
    1663:	95                   	xchg   ebp,eax
    1664:	00 00                	add    BYTE PTR [rax],al
    1666:	1c e3                	sbb    al,0xe3
    1668:	01 07                	add    DWORD PTR [rdi],eax
    166a:	f1                   	int1
    166b:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    166e:	cb                   	retf
    166f:	0e                   	(bad)
    1670:	00 00                	add    BYTE PTR [rax],al
    1672:	01 7b 16             	add    DWORD PTR [rbx+0x16],edi
    1675:	00 00                	add    BYTE PTR [rax],al
    1677:	8b 16                	mov    edx,DWORD PTR [rsi]
    1679:	00 00                	add    BYTE PTR [rax],al
    167b:	02 c9                	add    cl,cl
    167d:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    1683:	00 00                	add    BYTE PTR [rax],al
    1685:	01 cb                	add    ebx,ecx
    1687:	0e                   	(bad)
    1688:	00 00                	add    BYTE PTR [rax],al
    168a:	00 03                	add    BYTE PTR [rbx],al
    168c:	1f                   	(bad)
    168d:	95                   	xchg   ebp,eax
    168e:	00 00                	add    BYTE PTR [rax],al
    1690:	1c e8                	sbb    al,0xe8
    1692:	01 07                	add    DWORD PTR [rdi],eax
    1694:	10 1e                	adc    BYTE PTR [rsi],bl
    1696:	00 00                	add    BYTE PTR [rax],al
    1698:	cb                   	retf
    1699:	0e                   	(bad)
    169a:	00 00                	add    BYTE PTR [rax],al
    169c:	01 a5 16 00 00 b5    	add    DWORD PTR [rbp-0x4affffea],esp
    16a2:	16                   	(bad)
    16a3:	00 00                	add    BYTE PTR [rax],al
    16a5:	02 c9                	add    cl,cl
    16a7:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    16ad:	00 00                	add    BYTE PTR [rax],al
    16af:	01 cb                	add    ebx,ecx
    16b1:	0e                   	(bad)
    16b2:	00 00                	add    BYTE PTR [rax],al
    16b4:	00 03                	add    BYTE PTR [rbx],al
    16b6:	1f                   	(bad)
    16b7:	95                   	xchg   ebp,eax
    16b8:	00 00                	add    BYTE PTR [rax],al
    16ba:	1c ed                	sbb    al,0xed
    16bc:	01 07                	add    DWORD PTR [rdi],eax
    16be:	23 76 00             	and    esi,DWORD PTR [rsi+0x0]
    16c1:	00 cb                	add    bl,cl
    16c3:	0e                   	(bad)
    16c4:	00 00                	add    BYTE PTR [rax],al
    16c6:	01 cf                	add    edi,ecx
    16c8:	16                   	(bad)
    16c9:	00 00                	add    BYTE PTR [rax],al
    16cb:	e4 16                	in     al,0x16
    16cd:	00 00                	add    BYTE PTR [rax],al
    16cf:	02 c9                	add    cl,cl
    16d1:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    16d7:	00 00                	add    BYTE PTR [rax],al
    16d9:	01 cb                	add    ebx,ecx
    16db:	0e                   	(bad)
    16dc:	00 00                	add    BYTE PTR [rax],al
    16de:	01 cb                	add    ebx,ecx
    16e0:	0e                   	(bad)
    16e1:	00 00                	add    BYTE PTR [rax],al
    16e3:	00 03                	add    BYTE PTR [rbx],al
    16e5:	1f                   	(bad)
    16e6:	95                   	xchg   ebp,eax
    16e7:	00 00                	add    BYTE PTR [rax],al
    16e9:	1c f2                	sbb    al,0xf2
    16eb:	01 07                	add    DWORD PTR [rdi],eax
    16ed:	61                   	(bad)
    16ee:	52                   	push   rdx
    16ef:	00 00                	add    BYTE PTR [rax],al
    16f1:	cb                   	retf
    16f2:	0e                   	(bad)
    16f3:	00 00                	add    BYTE PTR [rax],al
    16f5:	01 fe                	add    esi,edi
    16f7:	16                   	(bad)
    16f8:	00 00                	add    BYTE PTR [rax],al
    16fa:	0e                   	(bad)
    16fb:	17                   	(bad)
    16fc:	00 00                	add    BYTE PTR [rax],al
    16fe:	02 c9                	add    cl,cl
    1700:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1706:	00 00                	add    BYTE PTR [rax],al
    1708:	01 cb                	add    ebx,ecx
    170a:	0e                   	(bad)
    170b:	00 00                	add    BYTE PTR [rax],al
    170d:	00 03                	add    BYTE PTR [rbx],al
    170f:	de 89 00 00 1c f7    	fimul  WORD PTR [rcx-0x8e40000]
    1715:	01 07                	add    DWORD PTR [rdi],eax
    1717:	7e 4d                	jle    1766 <_fini+0x58a>
    1719:	00 00                	add    BYTE PTR [rax],al
    171b:	cb                   	retf
    171c:	0e                   	(bad)
    171d:	00 00                	add    BYTE PTR [rax],al
    171f:	01 28                	add    DWORD PTR [rax],ebp
    1721:	17                   	(bad)
    1722:	00 00                	add    BYTE PTR [rax],al
    1724:	38 17                	cmp    BYTE PTR [rdi],dl
    1726:	00 00                	add    BYTE PTR [rax],al
    1728:	02 c9                	add    cl,cl
    172a:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    1730:	00 00                	add    BYTE PTR [rax],al
    1732:	01 cb                	add    ebx,ecx
    1734:	0e                   	(bad)
    1735:	00 00                	add    BYTE PTR [rax],al
    1737:	00 03                	add    BYTE PTR [rbx],al
    1739:	de 89 00 00 1c fd    	fimul  WORD PTR [rcx-0x2e40000]
    173f:	01 07                	add    DWORD PTR [rdi],eax
    1741:	87 88 00 00 cb 0e    	xchg   DWORD PTR [rax+0xecb0000],ecx
    1747:	00 00                	add    BYTE PTR [rax],al
    1749:	01 52 17             	add    DWORD PTR [rdx+0x17],edx
    174c:	00 00                	add    BYTE PTR [rax],al
    174e:	62 17 00 00 02       	(bad)
    1753:	c9                   	leave
    1754:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    175a:	00 00                	add    BYTE PTR [rax],al
    175c:	01 cb                	add    ebx,ecx
    175e:	0e                   	(bad)
    175f:	00 00                	add    BYTE PTR [rax],al
    1761:	00 03                	add    BYTE PTR [rbx],al
    1763:	de 89 00 00 1c 02    	fimul  WORD PTR [rcx+0x21c0000]
    1769:	02 07                	add    al,BYTE PTR [rdi]
    176b:	c9                   	leave
    176c:	7e 00                	jle    176e <_fini+0x592>
    176e:	00 cb                	add    bl,cl
    1770:	0e                   	(bad)
    1771:	00 00                	add    BYTE PTR [rax],al
    1773:	01 7c 17 00          	add    DWORD PTR [rdi+rdx*1+0x0],edi
    1777:	00 91 17 00 00 02    	add    BYTE PTR [rcx+0x2000017],dl
    177d:	c9                   	leave
    177e:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1784:	00 00                	add    BYTE PTR [rax],al
    1786:	01 cb                	add    ebx,ecx
    1788:	0e                   	(bad)
    1789:	00 00                	add    BYTE PTR [rax],al
    178b:	01 cb                	add    ebx,ecx
    178d:	0e                   	(bad)
    178e:	00 00                	add    BYTE PTR [rax],al
    1790:	00 03                	add    BYTE PTR [rbx],al
    1792:	de 89 00 00 1c 07    	fimul  WORD PTR [rcx+0x71c0000]
    1798:	02 07                	add    al,BYTE PTR [rdi]
    179a:	e9 52 00 00 cb       	jmp    ffffffffcb0017f1 <__TMC_END__+0xffffffffcaffd7d9>
    179f:	0e                   	(bad)
    17a0:	00 00                	add    BYTE PTR [rax],al
    17a2:	01 ab 17 00 00 bb    	add    DWORD PTR [rbx-0x44ffffe9],ebp
    17a8:	17                   	(bad)
    17a9:	00 00                	add    BYTE PTR [rax],al
    17ab:	02 c9                	add    cl,cl
    17ad:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    17b3:	00 00                	add    BYTE PTR [rax],al
    17b5:	01 cb                	add    ebx,ecx
    17b7:	0e                   	(bad)
    17b8:	00 00                	add    BYTE PTR [rax],al
    17ba:	00 03                	add    BYTE PTR [rbx],al
    17bc:	35 7c 00 00 1c       	xor    eax,0x1c00007c
    17c1:	0c 02                	or     al,0x2
    17c3:	07                   	(bad)
    17c4:	91                   	xchg   ecx,eax
    17c5:	36 00 00             	ss add BYTE PTR [rax],al
    17c8:	cb                   	retf
    17c9:	0e                   	(bad)
    17ca:	00 00                	add    BYTE PTR [rax],al
    17cc:	01 d5                	add    ebp,edx
    17ce:	17                   	(bad)
    17cf:	00 00                	add    BYTE PTR [rax],al
    17d1:	e5 17                	in     eax,0x17
    17d3:	00 00                	add    BYTE PTR [rax],al
    17d5:	02 c9                	add    cl,cl
    17d7:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    17dd:	00 00                	add    BYTE PTR [rax],al
    17df:	01 cb                	add    ebx,ecx
    17e1:	0e                   	(bad)
    17e2:	00 00                	add    BYTE PTR [rax],al
    17e4:	00 03                	add    BYTE PTR [rbx],al
    17e6:	35 7c 00 00 1c       	xor    eax,0x1c00007c
    17eb:	12 02                	adc    al,BYTE PTR [rdx]
    17ed:	07                   	(bad)
    17ee:	06                   	(bad)
    17ef:	05 00 00 cb 0e       	add    eax,0xecb0000
    17f4:	00 00                	add    BYTE PTR [rax],al
    17f6:	01 ff                	add    edi,edi
    17f8:	17                   	(bad)
    17f9:	00 00                	add    BYTE PTR [rax],al
    17fb:	0f 18 00             	prefetchnta BYTE PTR [rax]
    17fe:	00 02                	add    BYTE PTR [rdx],al
    1800:	c9                   	leave
    1801:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    1807:	00 00                	add    BYTE PTR [rax],al
    1809:	01 cb                	add    ebx,ecx
    180b:	0e                   	(bad)
    180c:	00 00                	add    BYTE PTR [rax],al
    180e:	00 03                	add    BYTE PTR [rbx],al
    1810:	35 7c 00 00 1c       	xor    eax,0x1c00007c
    1815:	16                   	(bad)
    1816:	02 07                	add    al,BYTE PTR [rdi]
    1818:	08 1f                	or     BYTE PTR [rdi],bl
    181a:	00 00                	add    BYTE PTR [rax],al
    181c:	cb                   	retf
    181d:	0e                   	(bad)
    181e:	00 00                	add    BYTE PTR [rax],al
    1820:	01 29                	add    DWORD PTR [rcx],ebp
    1822:	18 00                	sbb    BYTE PTR [rax],al
    1824:	00 3e                	add    BYTE PTR [rsi],bh
    1826:	18 00                	sbb    BYTE PTR [rax],al
    1828:	00 02                	add    BYTE PTR [rdx],al
    182a:	c9                   	leave
    182b:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1831:	00 00                	add    BYTE PTR [rax],al
    1833:	01 cb                	add    ebx,ecx
    1835:	0e                   	(bad)
    1836:	00 00                	add    BYTE PTR [rax],al
    1838:	01 cb                	add    ebx,ecx
    183a:	0e                   	(bad)
    183b:	00 00                	add    BYTE PTR [rax],al
    183d:	00 03                	add    BYTE PTR [rbx],al
    183f:	35 7c 00 00 1c       	xor    eax,0x1c00007c
    1844:	1b 02                	sbb    eax,DWORD PTR [rdx]
    1846:	07                   	(bad)
    1847:	22 20                	and    ah,BYTE PTR [rax]
    1849:	00 00                	add    BYTE PTR [rax],al
    184b:	cb                   	retf
    184c:	0e                   	(bad)
    184d:	00 00                	add    BYTE PTR [rax],al
    184f:	01 58 18             	add    DWORD PTR [rax+0x18],ebx
    1852:	00 00                	add    BYTE PTR [rax],al
    1854:	68 18 00 00 02       	push   0x2000018
    1859:	c9                   	leave
    185a:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    1860:	00 00                	add    BYTE PTR [rax],al
    1862:	01 cb                	add    ebx,ecx
    1864:	0e                   	(bad)
    1865:	00 00                	add    BYTE PTR [rax],al
    1867:	00 03                	add    BYTE PTR [rbx],al
    1869:	1c 3a                	sbb    al,0x3a
    186b:	00 00                	add    BYTE PTR [rax],al
    186d:	1c 23                	sbb    al,0x23
    186f:	02 07                	add    al,BYTE PTR [rdi]
    1871:	7a 89                	jp     17fc <_fini+0x620>
    1873:	00 00                	add    BYTE PTR [rax],al
    1875:	cb                   	retf
    1876:	0e                   	(bad)
    1877:	00 00                	add    BYTE PTR [rax],al
    1879:	01 82 18 00 00 92    	add    DWORD PTR [rdx-0x6dffffe8],eax
    187f:	18 00                	sbb    BYTE PTR [rax],al
    1881:	00 02                	add    BYTE PTR [rdx],al
    1883:	c9                   	leave
    1884:	69 00 00 01 be 0e    	imul   eax,DWORD PTR [rax],0xebe0100
    188a:	00 00                	add    BYTE PTR [rax],al
    188c:	01 cb                	add    ebx,ecx
    188e:	0e                   	(bad)
    188f:	00 00                	add    BYTE PTR [rax],al
    1891:	00 03                	add    BYTE PTR [rbx],al
    1893:	1c 3a                	sbb    al,0x3a
    1895:	00 00                	add    BYTE PTR [rax],al
    1897:	1c 29                	sbb    al,0x29
    1899:	02 07                	add    al,BYTE PTR [rdi]
    189b:	d8 36                	fdiv   DWORD PTR [rsi]
    189d:	00 00                	add    BYTE PTR [rax],al
    189f:	cb                   	retf
    18a0:	0e                   	(bad)
    18a1:	00 00                	add    BYTE PTR [rax],al
    18a3:	01 ac 18 00 00 bc 18 	add    DWORD PTR [rax+rbx*1+0x18bc0000],ebp
    18aa:	00 00                	add    BYTE PTR [rax],al
    18ac:	02 c9                	add    cl,cl
    18ae:	69 00 00 01 e5 00    	imul   eax,DWORD PTR [rax],0xe50100
    18b4:	00 00                	add    BYTE PTR [rax],al
    18b6:	01 cb                	add    ebx,ecx
    18b8:	0e                   	(bad)
    18b9:	00 00                	add    BYTE PTR [rax],al
    18bb:	00 03                	add    BYTE PTR [rbx],al
    18bd:	1c 3a                	sbb    al,0x3a
    18bf:	00 00                	add    BYTE PTR [rax],al
    18c1:	1c 2d                	sbb    al,0x2d
    18c3:	02 07                	add    al,BYTE PTR [rdi]
    18c5:	4b 5c                	rex.WXB pop r12
    18c7:	00 00                	add    BYTE PTR [rax],al
    18c9:	cb                   	retf
    18ca:	0e                   	(bad)
    18cb:	00 00                	add    BYTE PTR [rax],al
    18cd:	01 d6                	add    esi,edx
    18cf:	18 00                	sbb    BYTE PTR [rax],al
    18d1:	00 eb                	add    bl,ch
    18d3:	18 00                	sbb    BYTE PTR [rax],al
    18d5:	00 02                	add    BYTE PTR [rdx],al
    18d7:	c9                   	leave
    18d8:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    18de:	00 00                	add    BYTE PTR [rax],al
    18e0:	01 cb                	add    ebx,ecx
    18e2:	0e                   	(bad)
    18e3:	00 00                	add    BYTE PTR [rax],al
    18e5:	01 cb                	add    ebx,ecx
    18e7:	0e                   	(bad)
    18e8:	00 00                	add    BYTE PTR [rax],al
    18ea:	00 03                	add    BYTE PTR [rbx],al
    18ec:	1c 3a                	sbb    al,0x3a
    18ee:	00 00                	add    BYTE PTR [rax],al
    18f0:	1c 32                	sbb    al,0x32
    18f2:	02 07                	add    al,BYTE PTR [rdi]
    18f4:	ed                   	in     eax,dx
    18f5:	8e 00                	mov    es,WORD PTR [rax]
    18f7:	00 cb                	add    bl,cl
    18f9:	0e                   	(bad)
    18fa:	00 00                	add    BYTE PTR [rax],al
    18fc:	01 05 19 00 00 15    	add    DWORD PTR [rip+0x15000019],eax        # 1500191b <__TMC_END__+0x14ffd903>
    1902:	19 00                	sbb    DWORD PTR [rax],eax
    1904:	00 02                	add    BYTE PTR [rdx],al
    1906:	c9                   	leave
    1907:	69 00 00 01 c0 02    	imul   eax,DWORD PTR [rax],0x2c00100
    190d:	00 00                	add    BYTE PTR [rax],al
    190f:	01 cb                	add    ebx,ecx
    1911:	0e                   	(bad)
    1912:	00 00                	add    BYTE PTR [rax],al
    1914:	00 09                	add    BYTE PTR [rcx],cl
    1916:	1e                   	(bad)
    1917:	6c                   	ins    BYTE PTR es:[rdi],dx
    1918:	00 00                	add    BYTE PTR [rax],al
    191a:	1c 3c                	sbb    al,0x3c
    191c:	02 07                	add    al,BYTE PTR [rdi]
    191e:	24 52                	and    al,0x52
    1920:	00 00                	add    BYTE PTR [rax],al
    1922:	f1                   	int1
    1923:	00 00                	add    BYTE PTR [rax],al
    1925:	00 35 19 00 00 01    	add    BYTE PTR [rip+0x1000019],dh        # 1001944 <__TMC_END__+0xffd92c>
    192b:	cb                   	retf
    192c:	0e                   	(bad)
    192d:	00 00                	add    BYTE PTR [rax],al
    192f:	01 cb                	add    ebx,ecx
    1931:	0e                   	(bad)
    1932:	00 00                	add    BYTE PTR [rax],al
    1934:	00 1c 18             	add    BYTE PTR [rax+rbx*1],bl
    1937:	95                   	xchg   ebp,eax
    1938:	00 00                	add    BYTE PTR [rax],al
    193a:	1c 47                	sbb    al,0x47
    193c:	02 12                	add    dl,BYTE PTR [rdx]
    193e:	29 05 00 00 00 1c    	sub    DWORD PTR [rip+0x1c000000],eax        # 1c001944 <__TMC_END__+0x1bffd92c>
    1944:	f4                   	hlt
    1945:	88 00                	mov    BYTE PTR [rax],al
    1947:	00 1c 48             	add    BYTE PTR [rax+rcx*2],bl
    194a:	02 15 c0 02 00 00    	add    dl,BYTE PTR [rip+0x2c0]        # 1c10 <_fini+0xa34>
    1950:	08 14 83             	or     BYTE PTR [rbx+rax*4],dl
    1953:	33 00                	xor    eax,DWORD PTR [rax]
    1955:	00 e5                	add    ch,ah
    1957:	00 00                	add    BYTE PTR [rax],al
    1959:	00 38                	add    BYTE PTR [rax],bh
    195b:	70 74                	jo     19d1 <_fini+0x7f5>
    195d:	00 00                	add    BYTE PTR [rax],al
    195f:	dd 0a                	fisttp QWORD PTR [rdx]
    1961:	00 00                	add    BYTE PTR [rax],al
    1963:	00 0f                	add    BYTE PTR [rdi],cl
    1965:	be 0e 00 00 29       	mov    esi,0x2900000e
    196a:	f3 46 00 00          	repz rex.RX add BYTE PTR [rax],r8b
    196e:	04 1d                	add    al,0x1d
    1970:	83 0b fb             	or     DWORD PTR [rbx],0xfffffffb
    1973:	69 00 00 04 1d 84    	imul   eax,DWORD PTR [rax],0x841d0400
    1979:	0b 2f                	or     ebp,DWORD PTR [rdi]
    197b:	6a 00                	push   0x0
    197d:	00 04 1d 8a 0b d1 6a 	add    BYTE PTR [rbx*1+0x6ad10b8a],al
    1984:	00 00                	add    BYTE PTR [rax],al
    1986:	04 1d                	add    al,0x1d
    1988:	8d 0b                	lea    ecx,[rbx]
    198a:	ee                   	out    dx,al
    198b:	6a 00                	push   0x0
    198d:	00 04 1d 90 0b 09 6b 	add    BYTE PTR [rbx*1+0x6b090b90],al
    1994:	00 00                	add    BYTE PTR [rax],al
    1996:	04 1d                	add    al,0x1d
    1998:	91                   	xchg   ecx,eax
    1999:	0b 1f                	or     ebx,DWORD PTR [rdi]
    199b:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    199e:	04 1d                	add    al,0x1d
    19a0:	92                   	xchg   edx,eax
    19a1:	0b 35 6b 00 00 04    	or     esi,DWORD PTR [rip+0x400006b]        # 4001a12 <__TMC_END__+0x3ffd9fa>
    19a7:	1d 93 0b 4b 6b       	sbb    eax,0x6b4b0b93
    19ac:	00 00                	add    BYTE PTR [rax],al
    19ae:	04 1d                	add    al,0x1d
    19b0:	95                   	xchg   ebp,eax
    19b1:	0b 76 6b             	or     esi,DWORD PTR [rsi+0x6b]
    19b4:	00 00                	add    BYTE PTR [rax],al
    19b6:	04 1d                	add    al,0x1d
    19b8:	98                   	cwde
    19b9:	0b 93 6b 00 00 04    	or     edx,DWORD PTR [rbx+0x400006b]
    19bf:	1d 9a 0b aa 6b       	sbb    eax,0x6baa0b9a
    19c4:	00 00                	add    BYTE PTR [rax],al
    19c6:	04 1d                	add    al,0x1d
    19c8:	9d                   	popf
    19c9:	0b c6                	or     eax,esi
    19cb:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    19ce:	04 1d                	add    al,0x1d
    19d0:	9e                   	sahf
    19d1:	0b e2                	or     esp,edx
    19d3:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    19d6:	04 1d                	add    al,0x1d
    19d8:	9f                   	lahf
    19d9:	0b 03                	or     eax,DWORD PTR [rbx]
    19db:	6c                   	ins    BYTE PTR es:[rdi],dx
    19dc:	00 00                	add    BYTE PTR [rax],al
    19de:	04 1d                	add    al,0x1d
    19e0:	a1 0b 24 6c 00 00 04 	movabs eax,ds:0xa41d0400006c240b
    19e7:	1d a4 
    19e9:	0b 45 6c             	or     eax,DWORD PTR [rbp+0x6c]
    19ec:	00 00                	add    BYTE PTR [rax],al
    19ee:	04 1d                	add    al,0x1d
    19f0:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    19f1:	0b 59 6c             	or     ebx,DWORD PTR [rcx+0x6c]
    19f4:	00 00                	add    BYTE PTR [rax],al
    19f6:	04 1d                	add    al,0x1d
    19f8:	a9 0b 66 6c 00       	test   eax,0x6c660b
    19fd:	00 04 1d aa 0b 78 6c 	add    BYTE PTR [rbx*1+0x6c780baa],al
    1a04:	00 00                	add    BYTE PTR [rax],al
    1a06:	04 1d                	add    al,0x1d
    1a08:	ab                   	stos   DWORD PTR es:[rdi],eax
    1a09:	0b 98 6c 00 00 04    	or     ebx,DWORD PTR [rax+0x400006c]
    1a0f:	1d ac 0b bc 6c       	sbb    eax,0x6cbc0bac
    1a14:	00 00                	add    BYTE PTR [rax],al
    1a16:	04 1d                	add    al,0x1d
    1a18:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    1a19:	0b e0                	or     esp,eax
    1a1b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a1c:	00 00                	add    BYTE PTR [rax],al
    1a1e:	04 1d                	add    al,0x1d
    1a20:	af                   	scas   eax,DWORD PTR es:[rdi]
    1a21:	0b f7                	or     esi,edi
    1a23:	6c                   	ins    BYTE PTR es:[rdi],dx
    1a24:	00 00                	add    BYTE PTR [rax],al
    1a26:	04 1d                	add    al,0x1d
    1a28:	b0 0b                	mov    al,0xb
    1a2a:	18 6d 00             	sbb    BYTE PTR [rbp+0x0],ch
    1a2d:	00 04 1d f4 16 63 6a 	add    BYTE PTR [rbx*1+0x6a6316f4],al
    1a34:	00 00                	add    BYTE PTR [rax],al
    1a36:	04 1d                	add    al,0x1d
    1a38:	f9                   	stc
    1a39:	16                   	(bad)
    1a3a:	7d 5d                	jge    1a99 <_fini+0x8bd>
    1a3c:	00 00                	add    BYTE PTR [rax],al
    1a3e:	04 1d                	add    al,0x1d
    1a40:	fa                   	cli
    1a41:	16                   	(bad)
    1a42:	34 6d                	xor    al,0x6d
    1a44:	00 00                	add    BYTE PTR [rax],al
    1a46:	04 1d                	add    al,0x1d
    1a48:	fc                   	cld
    1a49:	16                   	(bad)
    1a4a:	50                   	push   rax
    1a4b:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a4c:	00 00                	add    BYTE PTR [rax],al
    1a4e:	04 1d                	add    al,0x1d
    1a50:	fd                   	std
    1a51:	16                   	(bad)
    1a52:	ae                   	scas   al,BYTE PTR es:[rdi]
    1a53:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a54:	00 00                	add    BYTE PTR [rax],al
    1a56:	04 1d                	add    al,0x1d
    1a58:	fe                   	(bad)
    1a59:	16                   	(bad)
    1a5a:	66 6d                	ins    WORD PTR es:[rdi],dx
    1a5c:	00 00                	add    BYTE PTR [rax],al
    1a5e:	04 1d                	add    al,0x1d
    1a60:	ff 16                	call   QWORD PTR [rsi]
    1a62:	8a 6d 00             	mov    ch,BYTE PTR [rbp+0x0]
    1a65:	00 0c 1d 00 01 16 c9 	add    BYTE PTR [rbx*1-0x36e9ff00],cl
    1a6c:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a6d:	00 00                	add    BYTE PTR [rax],al
    1a6f:	04 1e                	add    al,0x1e
    1a71:	62 0b a8 02 00       	(bad)
    1a76:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1a79:	63 0b                	movsxd ecx,DWORD PTR [rbx]
    1a7b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a7c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a7d:	00 00                	add    BYTE PTR [rax],al
    1a7f:	04 1e                	add    al,0x1e
    1a81:	65 0b 84 6e 00 00 04 	or     eax,DWORD PTR gs:[rsi+rbp*2+0x1e040000]
    1a88:	1e 
    1a89:	66 0b 96 6e 00 00 04 	or     dx,WORD PTR [rsi+0x400006e]
    1a90:	1e                   	(bad)
    1a91:	67 0b ac 6e 00 00 04 	or     ebp,DWORD PTR [esi+ebp*2+0x1e040000]
    1a98:	1e 
    1a99:	68 0b c3 6e 00       	push   0x6ec30b
    1a9e:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1aa1:	69 0b da 6e 00 00    	imul   ecx,DWORD PTR [rbx],0x6eda
    1aa7:	04 1e                	add    al,0x1e
    1aa9:	6a 0b                	push   0xb
    1aab:	f0 6e                	lock outs dx,BYTE PTR ds:[rsi]
    1aad:	00 00                	add    BYTE PTR [rax],al
    1aaf:	04 1e                	add    al,0x1e
    1ab1:	6b 0b 07             	imul   ecx,DWORD PTR [rbx],0x7
    1ab4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ab5:	00 00                	add    BYTE PTR [rax],al
    1ab7:	04 1e                	add    al,0x1e
    1ab9:	6c                   	ins    BYTE PTR es:[rdi],dx
    1aba:	0b 28                	or     ebp,DWORD PTR [rax]
    1abc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1abd:	00 00                	add    BYTE PTR [rax],al
    1abf:	04 1e                	add    al,0x1e
    1ac1:	6d                   	ins    DWORD PTR es:[rdi],dx
    1ac2:	0b 49 6f             	or     ecx,DWORD PTR [rcx+0x6f]
    1ac5:	00 00                	add    BYTE PTR [rax],al
    1ac7:	04 1e                	add    al,0x1e
    1ac9:	71 0b                	jno    1ad6 <_fini+0x8fa>
    1acb:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
    1acd:	00 00                	add    BYTE PTR [rax],al
    1acf:	04 1e                	add    al,0x1e
    1ad1:	72 0b                	jb     1ade <_fini+0x902>
    1ad3:	8b 6f 00             	mov    ebp,DWORD PTR [rdi+0x0]
    1ad6:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1ad9:	74 0b                	je     1ae6 <_fini+0x90a>
    1adb:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1adc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1add:	00 00                	add    BYTE PTR [rax],al
    1adf:	04 1e                	add    al,0x1e
    1ae1:	75 0b                	jne    1aee <_fini+0x912>
    1ae3:	cd 6f                	int    0x6f
    1ae5:	00 00                	add    BYTE PTR [rax],al
    1ae7:	04 1e                	add    al,0x1e
    1ae9:	76 0b                	jbe    1af6 <_fini+0x91a>
    1aeb:	ee                   	out    dx,al
    1aec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1aed:	00 00                	add    BYTE PTR [rax],al
    1aef:	04 1e                	add    al,0x1e
    1af1:	78 0b                	js     1afe <_fini+0x922>
    1af3:	05 70 00 00 04       	add    eax,0x4000070
    1af8:	1e                   	(bad)
    1af9:	79 0b                	jns    1b06 <_fini+0x92a>
    1afb:	1c 70                	sbb    al,0x70
    1afd:	00 00                	add    BYTE PTR [rax],al
    1aff:	04 1e                	add    al,0x1e
    1b01:	7e 0b                	jle    1b0e <_fini+0x932>
    1b03:	29 70 00             	sub    DWORD PTR [rax+0x0],esi
    1b06:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1b09:	83 0b 3b             	or     DWORD PTR [rbx],0x3b
    1b0c:	70 00                	jo     1b0e <_fini+0x932>
    1b0e:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1b11:	84 0b                	test   BYTE PTR [rbx],cl
    1b13:	51                   	push   rcx
    1b14:	70 00                	jo     1b16 <_fini+0x93a>
    1b16:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1b19:	85 0b                	test   DWORD PTR [rbx],ecx
    1b1b:	6c                   	ins    BYTE PTR es:[rdi],dx
    1b1c:	70 00                	jo     1b1e <_fini+0x942>
    1b1e:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1b21:	87 0b                	xchg   DWORD PTR [rbx],ecx
    1b23:	7e 70                	jle    1b95 <_fini+0x9b9>
    1b25:	00 00                	add    BYTE PTR [rax],al
    1b27:	04 1e                	add    al,0x1e
    1b29:	88 0b                	mov    BYTE PTR [rbx],cl
    1b2b:	95                   	xchg   ebp,eax
    1b2c:	70 00                	jo     1b2e <_fini+0x952>
    1b2e:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1b31:	8b 0b                	mov    ecx,DWORD PTR [rbx]
    1b33:	bb 70 00 00 04       	mov    ebx,0x4000070
    1b38:	1e                   	(bad)
    1b39:	8d 0b                	lea    ecx,[rbx]
    1b3b:	c7                   	(bad)
    1b3c:	70 00                	jo     1b3e <_fini+0x962>
    1b3e:	00 04 1e             	add    BYTE PTR [rsi+rbx*1],al
    1b41:	8f                   	(bad)
    1b42:	0b dd                	or     ebx,ebp
    1b44:	70 00                	jo     1b46 <_fini+0x96a>
    1b46:	00 30                	add    BYTE PTR [rax],dh
    1b48:	f2 5a                	repnz pop rdx
    1b4a:	00 00                	add    BYTE PTR [rax],al
    1b4c:	01 1f                	add    DWORD PTR [rdi],ebx
    1b4e:	a8 01                	test   al,0x1
    1b50:	43 1c 00             	rex.XB sbb al,0x0
    1b53:	00 19                	add    BYTE PTR [rcx],bl
    1b55:	34 6c                	xor    al,0x6c
    1b57:	00 00                	add    BYTE PTR [rax],al
    1b59:	1f                   	(bad)
    1b5a:	b1 01                	mov    cl,0x1
    1b5c:	0d 03 58 00 00       	or     eax,0x5803
    1b61:	09 32                	or     DWORD PTR [rdx],esi
    1b63:	2c 00                	sub    al,0x0
    1b65:	00 1f                	add    BYTE PTR [rdi],bl
    1b67:	dd 01                	fld    QWORD PTR [rcx]
    1b69:	07                   	(bad)
    1b6a:	cc                   	int3
    1b6b:	33 00                	xor    eax,DWORD PTR [rax]
    1b6d:	00 54 1b 00          	add    BYTE PTR [rbx+rbx*1+0x0],dl
    1b71:	00 81 1b 00 00 01    	add    BYTE PTR [rcx+0x100001b],al
    1b77:	f9                   	stc
    1b78:	70 00                	jo     1b7a <_fini+0x99e>
    1b7a:	00 01                	add    BYTE PTR [rcx],al
    1b7c:	93                   	xchg   ebx,eax
    1b7d:	1b 00                	sbb    eax,DWORD PTR [rax]
    1b7f:	00 00                	add    BYTE PTR [rax],al
    1b81:	19 fd                	sbb    ebp,edi
    1b83:	45 00 00             	add    BYTE PTR [r8],r8b
    1b86:	1f                   	(bad)
    1b87:	ab                   	stos   DWORD PTR es:[rdi],eax
    1b88:	01 0d d7 0d 00 00    	add    DWORD PTR [rip+0xdd7],ecx        # 2965 <__GNU_EH_FRAME_HDR+0x931>
    1b8e:	0f 81 1b 00 00 19    	jno    19001baf <__TMC_END__+0x18ffdb97>
    1b94:	1f                   	(bad)
    1b95:	2b 00                	sub    eax,DWORD PTR [rax]
    1b97:	00 1f                	add    BYTE PTR [rdi],bl
    1b99:	c0 01 0d             	rol    BYTE PTR [rcx],0xd
    1b9c:	29 05 00 00 09 32    	sub    DWORD PTR [rip+0x32090000],eax        # 32091ba2 <__TMC_END__+0x3208db8a>
    1ba2:	2c 00                	sub    al,0x0
    1ba4:	00 1f                	add    BYTE PTR [rdi],bl
    1ba6:	ec                   	in     al,dx
    1ba7:	01 07                	add    DWORD PTR [rdi],eax
    1ba9:	bc 15 00 00 54       	mov    esp,0x54000015
    1bae:	1b 00                	sbb    eax,DWORD PTR [rax]
    1bb0:	00 c5                	add    ch,al
    1bb2:	1b 00                	sbb    eax,DWORD PTR [rax]
    1bb4:	00 01                	add    BYTE PTR [rcx],al
    1bb6:	f9                   	stc
    1bb7:	70 00                	jo     1bb9 <_fini+0x9dd>
    1bb9:	00 01                	add    BYTE PTR [rcx],al
    1bbb:	93                   	xchg   ebx,eax
    1bbc:	1b 00                	sbb    eax,DWORD PTR [rax]
    1bbe:	00 01                	add    BYTE PTR [rcx],al
    1bc0:	c5 1b 00             	(bad)
    1bc3:	00 00                	add    BYTE PTR [rax],al
    1bc5:	19 29                	sbb    DWORD PTR [rcx],ebp
    1bc7:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bc8:	00 00                	add    BYTE PTR [rax],al
    1bca:	1f                   	(bad)
    1bcb:	ba 01 0d 5c 69       	mov    edx,0x695c0d01
    1bd0:	00 00                	add    BYTE PTR [rax],al
    1bd2:	1f                   	(bad)
    1bd3:	ce                   	(bad)
    1bd4:	02 00                	add    al,BYTE PTR [rax]
    1bd6:	00 1f                	add    BYTE PTR [rdi],bl
    1bd8:	00 02                	add    BYTE PTR [rdx],al
    1bda:	d0 62 00             	shl    BYTE PTR [rdx+0x0],1
    1bdd:	00 f2                	add    dl,dh
    1bdf:	1b 00                	sbb    eax,DWORD PTR [rax]
    1be1:	00 01                	add    BYTE PTR [rcx],al
    1be3:	f9                   	stc
    1be4:	70 00                	jo     1be6 <_fini+0xa0a>
    1be6:	00 01                	add    BYTE PTR [rcx],al
    1be8:	54                   	push   rsp
    1be9:	1b 00                	sbb    eax,DWORD PTR [rax]
    1beb:	00 01                	add    BYTE PTR [rcx],al
    1bed:	93                   	xchg   ebx,eax
    1bee:	1b 00                	sbb    eax,DWORD PTR [rax]
    1bf0:	00 00                	add    BYTE PTR [rax],al
    1bf2:	09 fa                	or     edx,edi
    1bf4:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bf5:	00 00                	add    BYTE PTR [rax],al
    1bf7:	1f                   	(bad)
    1bf8:	37                   	(bad)
    1bf9:	02 07                	add    al,BYTE PTR [rdi]
    1bfb:	7f 69                	jg     1c66 <_fini+0xa8a>
    1bfd:	00 00                	add    BYTE PTR [rax],al
    1bff:	93                   	xchg   ebx,eax
    1c00:	1b 00                	sbb    eax,DWORD PTR [rax]
    1c02:	00 0d 1c 00 00 01    	add    BYTE PTR [rip+0x100001c],cl        # 1001c24 <__TMC_END__+0xffdc0c>
    1c08:	fe                   	(bad)
    1c09:	70 00                	jo     1c0b <_fini+0xa2f>
    1c0b:	00 00                	add    BYTE PTR [rax],al
    1c0d:	09 7d 59             	or     DWORD PTR [rbp+0x59],edi
    1c10:	00 00                	add    BYTE PTR [rax],al
    1c12:	1f                   	(bad)
    1c13:	47 02 07             	rex.RXB add r8b,BYTE PTR [r15]
    1c16:	87 4f 00             	xchg   DWORD PTR [rdi+0x0],ecx
    1c19:	00 81 1b 00 00 28    	add    BYTE PTR [rcx+0x2800001b],al
    1c1f:	1c 00                	sbb    al,0x0
    1c21:	00 01                	add    BYTE PTR [rcx],al
    1c23:	fe                   	(bad)
    1c24:	70 00                	jo     1c26 <_fini+0xa4a>
    1c26:	00 00                	add    BYTE PTR [rax],al
    1c28:	19 aa 14 00 00 1f    	sbb    DWORD PTR [rdx+0x1f000014],ebp
    1c2e:	ae                   	scas   al,BYTE PTR es:[rdi]
    1c2f:	01 0d e5 00 00 00    	add    DWORD PTR [rip+0xe5],ecx        # 1d1a <_fini+0xb3e>
    1c35:	19 c1                	sbb    ecx,eax
    1c37:	0b 00                	or     eax,DWORD PTR [rax]
    1c39:	00 1f                	add    BYTE PTR [rdi],bl
    1c3b:	b4 01                	mov    ah,0x1
    1c3d:	0d c0 02 00 00       	or     eax,0x2c0
    1c42:	00 60 fa             	add    BYTE PTR [rax-0x6],ah
    1c45:	11 00                	adc    DWORD PTR [rax],eax
    1c47:	00 0b                	add    BYTE PTR [rbx],cl
    1c49:	57                   	push   rdi
    1c4a:	01 41 e8             	add    DWORD PTR [rcx-0x18],eax
    1c4d:	38 00                	cmp    BYTE PTR [rax],al
    1c4f:	00 1e                	add    BYTE PTR [rsi],bl
    1c51:	63 6a 00             	movsxd ebp,DWORD PTR [rdx+0x0]
    1c54:	00 20                	add    BYTE PTR [rax],ah
    1c56:	13 56 0b             	adc    edx,DWORD PTR [rsi+0xb]
    1c59:	e2 38                	loop   1c93 <_fini+0xab7>
    1c5b:	00 00                	add    BYTE PTR [rax],al
    1c5d:	1a 68 18             	sbb    ch,BYTE PTR [rax+0x18]
    1c60:	00 00                	add    BYTE PTR [rax],al
    1c62:	08 13                	or     BYTE PTR [rbx],dl
    1c64:	ba 0e c5 1c 00       	mov    edx,0x1cc50e
    1c69:	00 23                	add    BYTE PTR [rbx],ah
    1c6b:	d7                   	xlat   BYTE PTR ds:[rbx]
    1c6c:	0d 00 00 21 68       	or     eax,0x68210000
    1c71:	18 00                	sbb    BYTE PTR [rax],al
    1c73:	00 13                	add    BYTE PTR [rbx],dl
    1c75:	c1 02 e2             	rol    DWORD PTR [rdx],0xe2
    1c78:	09 00                	or     DWORD PTR [rax],eax
    1c7a:	00 83 1c 00 00 93    	add    BYTE PTR [rbx-0x6cffffe4],al
    1c80:	1c 00                	sbb    al,0x0
    1c82:	00 02                	add    BYTE PTR [rdx],al
    1c84:	0d 71 00 00 01       	or     eax,0x1000071
    1c89:	c5 1c 00             	(bad)
    1c8c:	00 01                	add    BYTE PTR [rcx],al
    1c8e:	6c                   	ins    BYTE PTR es:[rdi],dx
    1c8f:	69 00 00 00 21 68    	imul   eax,DWORD PTR [rax],0x68210000
    1c95:	18 00                	sbb    BYTE PTR [rax],al
    1c97:	00 13                	add    BYTE PTR [rbx],dl
    1c99:	c5 02 8e             	(bad)
    1c9c:	2f                   	(bad)
    1c9d:	00 00                	add    BYTE PTR [rax],al
    1c9f:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    1ca0:	1c 00                	sbb    al,0x0
    1ca2:	00 b7 1c 00 00 02    	add    BYTE PTR [rdi+0x200001c],dh
    1ca8:	0d 71 00 00 01       	or     eax,0x1000071
    1cad:	c5 1c 00             	(bad)
    1cb0:	00 01                	add    BYTE PTR [rcx],al
    1cb2:	12 71 00             	adc    dh,BYTE PTR [rcx+0x0]
    1cb5:	00 00                	add    BYTE PTR [rax],al
    1cb7:	07                   	(bad)
    1cb8:	f9                   	stc
    1cb9:	0e                   	(bad)
    1cba:	00 00                	add    BYTE PTR [rax],al
    1cbc:	13 c9                	adc    ecx,ecx
    1cbe:	0a c5                	or     al,ch
    1cc0:	1c 00                	sbb    al,0x0
    1cc2:	00 00                	add    BYTE PTR [rax],al
    1cc4:	00 11                	add    BYTE PTR [rcx],dl
    1cc6:	34 6c                	xor    al,0x6c
    1cc8:	00 00                	add    BYTE PTR [rax],al
    1cca:	13 6c 30 5a          	adc    ebp,DWORD PTR [rax+rsi*1+0x5a]
    1cce:	5e                   	pop    rsi
    1ccf:	00 00                	add    BYTE PTR [rax],al
    1cd1:	01 61 07             	add    DWORD PTR [rcx+0x7],esp
    1cd4:	04 76                	add    al,0x76
    1cd6:	00 00                	add    BYTE PTR [rax],al
    1cd8:	00 13                	add    BYTE PTR [rbx],dl
    1cda:	cf                   	iret
    1cdb:	0c e7                	or     al,0xe7
    1cdd:	1c 00                	sbb    al,0x0
    1cdf:	00 06                	add    BYTE PTR [rsi],al
    1ce1:	aa                   	stos   BYTE PTR es:[rdi],al
    1ce2:	15 00 00 0f 00       	adc    eax,0xf0000
    1ce7:	62                   	(bad)
    1ce8:	10 13                	adc    BYTE PTR [rbx],dl
    1cea:	d2 07                	rol    BYTE PTR [rdi],cl
    1cec:	09 1d 00 00 37 9d    	or     DWORD PTR [rip+0xffffffff9d370000],ebx        # ffffffff9d371cf2 <__TMC_END__+0xffffffff9d36dcda>
    1cf2:	1e                   	(bad)
    1cf3:	00 00                	add    BYTE PTR [rax],al
    1cf5:	13 d3                	adc    edx,ebx
    1cf7:	13 17                	adc    edx,DWORD PTR [rdi]
    1cf9:	71 00                	jno    1cfb <_fini+0xb1f>
    1cfb:	00 37                	add    BYTE PTR [rdi],dh
    1cfd:	8d 77 00             	lea    esi,[rdi+0x0]
    1d00:	00 13                	add    BYTE PTR [rbx],dl
    1d02:	d4                   	(bad)
    1d03:	13 09                	adc    ecx,DWORD PTR [rcx]
    1d05:	1d 00 00 00 11       	sbb    eax,0x11000000
    1d0a:	1f                   	(bad)
    1d0b:	2b 00                	sub    eax,DWORD PTR [rax]
    1d0d:	00 13                	add    BYTE PTR [rbx],dl
    1d0f:	68 32 72 5e 00       	push   0x5e7232
    1d14:	00 01                	add    BYTE PTR [rcx],al
    1d16:	1b 2f                	sbb    ebp,DWORD PTR [rdi]
    1d18:	2c 00                	sub    al,0x0
    1d1a:	00 13                	add    BYTE PTR [rbx],dl
    1d1c:	81 07 fd 58 00 00    	add    DWORD PTR [rdi],0x58fd
    1d22:	c5 1c 00             	(bad)
    1d25:	00 35 1d 00 00 01    	add    BYTE PTR [rip+0x100001d],dh        # 1001d48 <__TMC_END__+0xffdd30>
    1d2b:	27                   	(bad)
    1d2c:	71 00                	jno    1d2e <_fini+0xb52>
    1d2e:	00 01                	add    BYTE PTR [rcx],al
    1d30:	09 1d 00 00 00 05    	or     DWORD PTR [rip+0x5000000],ebx        # 5001d36 <__TMC_END__+0x4ffdd1e>
    1d36:	f8                   	clc
    1d37:	93                   	xchg   ebx,eax
    1d38:	00 00                	add    BYTE PTR [rax],al
    1d3a:	13 5b 0d             	adc    ebx,DWORD PTR [rbx+0xd]
    1d3d:	d7                   	xlat   BYTE PTR ds:[rbx]
    1d3e:	0d 00 00 05 a0       	or     eax,0xa0050000
    1d43:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    1d46:	13 92 32 be 0e 00    	adc    edx,DWORD PTR [rdx+0xebe32]
    1d4c:	00 1b                	add    BYTE PTR [rbx],bl
    1d4e:	14 4a                	adc    al,0x4a
    1d50:	00 00                	add    BYTE PTR [rax],al
    1d52:	13 9e 07 de 59 00    	adc    ebx,DWORD PTR [rsi+0x59de07]
    1d58:	00 41 1d             	add    BYTE PTR [rcx+0x1d],al
    1d5b:	00 00                	add    BYTE PTR [rax],al
    1d5d:	67 1d 00 00 01 41    	addr32 sbb eax,0x41010000
    1d63:	1d 00 00 00 3b       	sbb    eax,0x3b000000
    1d68:	90                   	nop
    1d69:	2d 00 00 13 b5       	sub    eax,0xb5130000
    1d6e:	07                   	(bad)
    1d6f:	81 03 00 00 7b 1d    	add    DWORD PTR [rbx],0x1d7b0000
    1d75:	00 00                	add    BYTE PTR [rax],al
    1d77:	8b 1d 00 00 02 2c    	mov    ebx,DWORD PTR [rip+0x2c020000]        # 2c021d7d <__TMC_END__+0x2c01dd65>
    1d7d:	71 00                	jno    1d7f <_fini+0xba3>
    1d7f:	00 01                	add    BYTE PTR [rcx],al
    1d81:	8b 1d 00 00 01 6c    	mov    ebx,DWORD PTR [rip+0x6c010000]        # 6c011d87 <__TMC_END__+0x6c00dd6f>
    1d87:	69 00 00 00 1a b1    	imul   eax,DWORD PTR [rax],0xb11a0000
    1d8d:	16                   	(bad)
    1d8e:	00 00                	add    BYTE PTR [rax],al
    1d90:	10 13                	adc    BYTE PTR [rbx],dl
    1d92:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    1d93:	0e                   	(bad)
    1d94:	c5 1d 00             	(bad)
    1d97:	00 3b                	add    BYTE PTR [rbx],bh
    1d99:	b1 16                	mov    cl,0x16
    1d9b:	00 00                	add    BYTE PTR [rax],al
    1d9d:	13 a8 02 9e 1c 00    	adc    ebp,DWORD PTR [rax+0x1c9e02]
    1da3:	00 ac 1d 00 00 b7 1d 	add    BYTE PTR [rbp+rbx*1+0x1db70000],ch
    1daa:	00 00                	add    BYTE PTR [rax],al
    1dac:	02 63 71             	add    ah,BYTE PTR [rbx+0x71]
    1daf:	00 00                	add    BYTE PTR [rax],al
    1db1:	01 41 1d             	add    DWORD PTR [rcx+0x1d],eax
    1db4:	00 00                	add    BYTE PTR [rax],al
    1db6:	00 07                	add    BYTE PTR [rdi],al
    1db8:	87 7d 00             	xchg   DWORD PTR [rbp+0x0],edi
    1dbb:	00 13                	add    BYTE PTR [rbx],dl
    1dbd:	aa                   	stos   BYTE PTR es:[rdi],al
    1dbe:	0c 41                	or     al,0x41
    1dc0:	1d 00 00 00 00       	sbb    eax,0x0
    1dc5:	07                   	(bad)
    1dc6:	2e 64 00 00          	cs add BYTE PTR fs:[rax],al
    1dca:	13 cc                	adc    ecx,esp
    1dcc:	14 5d                	adc    al,0x5d
    1dce:	1c 00                	sbb    al,0x0
    1dd0:	00 00                	add    BYTE PTR [rax],al
    1dd2:	07                   	(bad)
    1dd3:	72 3c                	jb     1e11 <_fini+0xc35>
    1dd5:	00 00                	add    BYTE PTR [rax],al
    1dd7:	13 cd                	adc    ecx,ebp
    1dd9:	12 09                	adc    cl,BYTE PTR [rcx]
    1ddb:	1d 00 00 08 63       	sbb    eax,0x63080000
    1de0:	e7 1c                	out    0x1c,eax
    1de2:	00 00                	add    BYTE PTR [rax],al
    1de4:	10 21                	adc    BYTE PTR [rcx],ah
    1de6:	d7                   	xlat   BYTE PTR ds:[rbx]
    1de7:	56                   	push   rsi
    1de8:	00 00                	add    BYTE PTR [rax],al
    1dea:	13 d9                	adc    ebx,ecx
    1dec:	07                   	(bad)
    1ded:	2f                   	(bad)
    1dee:	2d 00 00 f9 1d       	sub    eax,0x1df90000
    1df3:	00 00                	add    BYTE PTR [rax],al
    1df5:	04 1e                	add    al,0x1e
    1df7:	00 00                	add    BYTE PTR [rax],al
    1df9:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1dfc:	00 00                	add    BYTE PTR [rax],al
    1dfe:	01 c5                	add    ebp,eax
    1e00:	1c 00                	sbb    al,0x0
    1e02:	00 00                	add    BYTE PTR [rax],al
    1e04:	21 dc                	and    esp,ebx
    1e06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e07:	00 00                	add    BYTE PTR [rax],al
    1e09:	13 de                	adc    ebx,esi
    1e0b:	07                   	(bad)
    1e0c:	78 8b                	js     1d99 <_fini+0xbbd>
    1e0e:	00 00                	add    BYTE PTR [rax],al
    1e10:	18 1e                	sbb    BYTE PTR [rsi],bl
    1e12:	00 00                	add    BYTE PTR [rax],al
    1e14:	23 1e                	and    ebx,DWORD PTR [rsi]
    1e16:	00 00                	add    BYTE PTR [rax],al
    1e18:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1e1b:	00 00                	add    BYTE PTR [rax],al
    1e1d:	01 09                	add    DWORD PTR [rcx],ecx
    1e1f:	1d 00 00 00 2f       	sbb    eax,0x2f000000
    1e24:	d7                   	xlat   BYTE PTR ds:[rbx]
    1e25:	56                   	push   rsi
    1e26:	00 00                	add    BYTE PTR [rax],al
    1e28:	13 e3                	adc    esp,ebx
    1e2a:	07                   	(bad)
    1e2b:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1e2c:	63 00                	movsxd eax,DWORD PTR [rax]
    1e2e:	00 c5                	add    ch,al
    1e30:	1c 00                	sbb    al,0x0
    1e32:	00 3b                	add    BYTE PTR [rbx],bh
    1e34:	1e                   	(bad)
    1e35:	00 00                	add    BYTE PTR [rax],al
    1e37:	41 1e                	rex.B (bad)
    1e39:	00 00                	add    BYTE PTR [rax],al
    1e3b:	02 31                	add    dh,BYTE PTR [rcx]
    1e3d:	71 00                	jno    1e3f <_fini+0xc63>
    1e3f:	00 00                	add    BYTE PTR [rax],al
    1e41:	2f                   	(bad)
    1e42:	e9 0a 00 00 13       	jmp    13001e51 <__TMC_END__+0x12ffde39>
    1e47:	e8 07 40 51 00       	call   515e53 <__TMC_END__+0x511e3b>
    1e4c:	00 c5                	add    ch,al
    1e4e:	1c 00                	sbb    al,0x0
    1e50:	00 59 1e             	add    BYTE PTR [rcx+0x1e],bl
    1e53:	00 00                	add    BYTE PTR [rax],al
    1e55:	5f                   	pop    rdi
    1e56:	1e                   	(bad)
    1e57:	00 00                	add    BYTE PTR [rax],al
    1e59:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1e5c:	00 00                	add    BYTE PTR [rax],al
    1e5e:	00 11                	add    BYTE PTR [rcx],dl
    1e60:	c1 0b 00             	ror    DWORD PTR [rbx],0x0
    1e63:	00 13                	add    BYTE PTR [rbx],dl
    1e65:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e66:	35 66 5e 00 00       	xor    eax,0x5e66
    1e6b:	01 2f                	add    DWORD PTR [rdi],ebp
    1e6d:	e9 0a 00 00 13       	jmp    13001e7c <__TMC_END__+0x12ffde64>
    1e72:	f3 07                	repz (bad)
    1e74:	8f                   	(bad)
    1e75:	56                   	push   rsi
    1e76:	00 00                	add    BYTE PTR [rax],al
    1e78:	5f                   	pop    rdi
    1e79:	1e                   	(bad)
    1e7a:	00 00                	add    BYTE PTR [rax],al
    1e7c:	84 1e                	test   BYTE PTR [rsi],bl
    1e7e:	00 00                	add    BYTE PTR [rax],al
    1e80:	8a 1e                	mov    bl,BYTE PTR [rsi]
    1e82:	00 00                	add    BYTE PTR [rax],al
    1e84:	02 31                	add    dh,BYTE PTR [rcx]
    1e86:	71 00                	jno    1e88 <_fini+0xcac>
    1e88:	00 00                	add    BYTE PTR [rax],al
    1e8a:	21 fb                	and    ebx,edi
    1e8c:	66 00 00             	data16 add BYTE PTR [rax],al
    1e8f:	13 fe                	adc    edi,esi
    1e91:	07                   	(bad)
    1e92:	69 10 00 00 9e 1e    	imul   edx,DWORD PTR [rax],0x1e9e0000
    1e98:	00 00                	add    BYTE PTR [rax],al
    1e9a:	a9 1e 00 00 02       	test   eax,0x200001e
    1e9f:	2c 71                	sub    al,0x71
    1ea1:	00 00                	add    BYTE PTR [rax],al
    1ea3:	01 09                	add    DWORD PTR [rcx],ecx
    1ea5:	1d 00 00 00 17       	sbb    eax,0x17000000
    1eaa:	25 91 00 00 13       	and    eax,0x13000091
    1eaf:	03 01                	add    eax,DWORD PTR [rcx]
    1eb1:	b2 3f                	mov    dl,0x3f
    1eb3:	00 00                	add    BYTE PTR [rax],al
    1eb5:	bd 1e 00 00 c8       	mov    ebp,0xc800001e
    1eba:	1e                   	(bad)
    1ebb:	00 00                	add    BYTE PTR [rax],al
    1ebd:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1ec0:	00 00                	add    BYTE PTR [rax],al
    1ec2:	01 09                	add    DWORD PTR [rcx],ecx
    1ec4:	1d 00 00 00 18       	sbb    eax,0x18000000
    1ec9:	c7                   	(bad)
    1eca:	48 00 00             	rex.W add BYTE PTR [rax],al
    1ecd:	13 0b                	adc    ecx,DWORD PTR [rbx]
    1ecf:	01 4e 86             	add    DWORD PTR [rsi-0x7a],ecx
    1ed2:	00 00                	add    BYTE PTR [rax],al
    1ed4:	f1                   	int1
    1ed5:	65 00 00             	add    BYTE PTR gs:[rax],al
    1ed8:	e0 1e                	loopne 1ef8 <_fini+0xd1c>
    1eda:	00 00                	add    BYTE PTR [rax],al
    1edc:	e6 1e                	out    0x1e,al
    1ede:	00 00                	add    BYTE PTR [rax],al
    1ee0:	02 31                	add    dh,BYTE PTR [rcx]
    1ee2:	71 00                	jno    1ee4 <_fini+0xd08>
    1ee4:	00 00                	add    BYTE PTR [rax],al
    1ee6:	18 83 77 00 00 13    	sbb    BYTE PTR [rbx+0x13000077],al
    1eec:	19 01                	sbb    DWORD PTR [rcx],eax
    1eee:	f5                   	cmc
    1eef:	7c 00                	jl     1ef1 <_fini+0xd15>
    1ef1:	00 c5                	add    ch,al
    1ef3:	1c 00                	sbb    al,0x0
    1ef5:	00 fe                	add    dh,bh
    1ef7:	1e                   	(bad)
    1ef8:	00 00                	add    BYTE PTR [rax],al
    1efa:	0e                   	(bad)
    1efb:	1f                   	(bad)
    1efc:	00 00                	add    BYTE PTR [rax],al
    1efe:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1f01:	00 00                	add    BYTE PTR [rax],al
    1f03:	01 36                	add    DWORD PTR [rsi],esi
    1f05:	71 00                	jno    1f07 <_fini+0xd2b>
    1f07:	00 01                	add    BYTE PTR [rcx],al
    1f09:	09 1d 00 00 00 17    	or     DWORD PTR [rip+0x17000000],ebx        # 17001f0f <__TMC_END__+0x16ffdef7>
    1f0f:	e8 46 00 00 13       	call   13001f5a <__TMC_END__+0x12ffdf42>
    1f14:	1d 01 00 0e 00       	sbb    eax,0xe0001
    1f19:	00 22                	add    BYTE PTR [rdx],ah
    1f1b:	1f                   	(bad)
    1f1c:	00 00                	add    BYTE PTR [rax],al
    1f1e:	28 1f                	sub    BYTE PTR [rdi],bl
    1f20:	00 00                	add    BYTE PTR [rax],al
    1f22:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1f25:	00 00                	add    BYTE PTR [rax],al
    1f27:	00 17                	add    BYTE PTR [rdi],dl
    1f29:	d8 18                	fcomp  DWORD PTR [rax]
    1f2b:	00 00                	add    BYTE PTR [rax],al
    1f2d:	13 25 01 db 2f 00    	adc    esp,DWORD PTR [rip+0x2fdb01]        # 2ffa34 <__TMC_END__+0x2fba1c>
    1f33:	00 3c 1f             	add    BYTE PTR [rdi+rbx*1],bh
    1f36:	00 00                	add    BYTE PTR [rax],al
    1f38:	47 1f                	rex.RXB (bad)
    1f3a:	00 00                	add    BYTE PTR [rax],al
    1f3c:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1f3f:	00 00                	add    BYTE PTR [rax],al
    1f41:	01 09                	add    DWORD PTR [rcx],ecx
    1f43:	1d 00 00 00 17       	sbb    eax,0x17000000
    1f48:	80 57 00 00          	adc    BYTE PTR [rdi+0x0],0x0
    1f4c:	13 51 01             	adc    edx,DWORD PTR [rcx+0x1]
    1f4f:	e6 87                	out    0x87,al
    1f51:	00 00                	add    BYTE PTR [rax],al
    1f53:	5b                   	pop    rbx
    1f54:	1f                   	(bad)
    1f55:	00 00                	add    BYTE PTR [rax],al
    1f57:	6b 1f 00             	imul   ebx,DWORD PTR [rdi],0x0
    1f5a:	00 02                	add    BYTE PTR [rdx],al
    1f5c:	2c 71                	sub    al,0x71
    1f5e:	00 00                	add    BYTE PTR [rax],al
    1f60:	01 09                	add    DWORD PTR [rcx],ecx
    1f62:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    1f67:	00 00                	add    BYTE PTR [rax],al
    1f69:	00 00                	add    BYTE PTR [rax],al
    1f6b:	11 fd                	adc    ebp,edi
    1f6d:	45 00 00             	add    BYTE PTR [r8],r8b
    1f70:	13 67 23             	adc    esp,DWORD PTR [rdi+0x23]
    1f73:	35 1d 00 00 01       	xor    eax,0x100001d
    1f78:	0f 6b 1f             	packssdw mm3,QWORD PTR [rdi]
    1f7b:	00 00                	add    BYTE PTR [rax],al
    1f7d:	18 58 10             	sbb    BYTE PTR [rax+0x10],bl
    1f80:	00 00                	add    BYTE PTR [rax],al
    1f82:	13 55 01             	adc    edx,DWORD PTR [rbp+0x1]
    1f85:	1c 27                	sbb    al,0x27
    1f87:	00 00                	add    BYTE PTR [rax],al
    1f89:	3b 71 00             	cmp    esi,DWORD PTR [rcx+0x0]
    1f8c:	00 95 1f 00 00 9b    	add    BYTE PTR [rbp-0x64ffffe1],dl
    1f92:	1f                   	(bad)
    1f93:	00 00                	add    BYTE PTR [rax],al
    1f95:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1f98:	00 00                	add    BYTE PTR [rax],al
    1f9a:	00 18                	add    BYTE PTR [rax],bl
    1f9c:	58                   	pop    rax
    1f9d:	10 00                	adc    BYTE PTR [rax],al
    1f9f:	00 13                	add    BYTE PTR [rbx],dl
    1fa1:	5a                   	pop    rdx
    1fa2:	01 aa 47 00 00 40    	add    DWORD PTR [rdx+0x40000047],ebp
    1fa8:	71 00                	jno    1faa <_fini+0xdce>
    1faa:	00 b3 1f 00 00 b9    	add    BYTE PTR [rbx-0x46ffffe1],dh
    1fb0:	1f                   	(bad)
    1fb1:	00 00                	add    BYTE PTR [rax],al
    1fb3:	02 31                	add    dh,BYTE PTR [rcx]
    1fb5:	71 00                	jno    1fb7 <_fini+0xddb>
    1fb7:	00 00                	add    BYTE PTR [rax],al
    1fb9:	17                   	(bad)
    1fba:	ac                   	lods   al,BYTE PTR ds:[rsi]
    1fbb:	8f 00                	pop    QWORD PTR [rax]
    1fbd:	00 13                	add    BYTE PTR [rbx],dl
    1fbf:	61                   	(bad)
    1fc0:	01 d7                	add    edi,edx
    1fc2:	77 00                	ja     1fc4 <_fini+0xde8>
    1fc4:	00 cd                	add    ch,cl
    1fc6:	1f                   	(bad)
    1fc7:	00 00                	add    BYTE PTR [rax],al
    1fc9:	d3 1f                	rcr    DWORD PTR [rdi],cl
    1fcb:	00 00                	add    BYTE PTR [rax],al
    1fcd:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1fd0:	00 00                	add    BYTE PTR [rax],al
    1fd2:	00 18                	add    BYTE PTR [rax],bl
    1fd4:	fa                   	cli
    1fd5:	65 00 00             	add    BYTE PTR gs:[rax],al
    1fd8:	13 6d 01             	adc    ebp,DWORD PTR [rbp+0x1]
    1fdb:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    1fdc:	24 00                	and    al,0x0
    1fde:	00 c5                	add    ch,al
    1fe0:	1c 00                	sbb    al,0x0
    1fe2:	00 eb                	add    bl,ch
    1fe4:	1f                   	(bad)
    1fe5:	00 00                	add    BYTE PTR [rax],al
    1fe7:	f1                   	int1
    1fe8:	1f                   	(bad)
    1fe9:	00 00                	add    BYTE PTR [rax],al
    1feb:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    1fee:	00 00                	add    BYTE PTR [rax],al
    1ff0:	00 18                	add    BYTE PTR [rax],bl
    1ff2:	b2 25                	mov    dl,0x25
    1ff4:	00 00                	add    BYTE PTR [rax],al
    1ff6:	13 87 01 a4 52 00    	adc    eax,DWORD PTR [rdi+0x52a401]
    1ffc:	00 09                	add    BYTE PTR [rcx],cl
    1ffe:	1d 00 00 09 20       	sbb    eax,0x20090000
    2003:	00 00                	add    BYTE PTR [rax],al
    2005:	19 20                	sbb    DWORD PTR [rax],esp
    2007:	00 00                	add    BYTE PTR [rax],al
    2009:	02 31                	add    dh,BYTE PTR [rcx]
    200b:	71 00                	jno    200d <_ZNSt8__detail14__destructibleISt16reverse_iteratorIN9__gnu_cxx17__normal_iteratorIPwSt4spanIwLm18446744073709551615EEEEEEE>
    200d:	00 01                	add    BYTE PTR [rcx],al
    200f:	09 1d 00 00 01 c0    	or     DWORD PTR [rip+0xffffffffc0010000],ebx        # ffffffffc0012015 <__TMC_END__+0xffffffffc000dffd>
    2015:	02 00                	add    al,BYTE PTR [rax]
    2017:	00 00                	add    BYTE PTR [rax],al
    2019:	17                   	(bad)
    201a:	f1                   	int1
    201b:	0b 00                	or     eax,DWORD PTR [rax]
    201d:	00 13                	add    BYTE PTR [rbx],dl
    201f:	92                   	xchg   edx,eax
    2020:	01 2b                	add    DWORD PTR [rbx],ebp
    2022:	53                   	push   rbx
    2023:	00 00                	add    BYTE PTR [rax],al
    2025:	2d 20 00 00 42       	sub    eax,0x42000020
    202a:	20 00                	and    BYTE PTR [rax],al
    202c:	00 02                	add    BYTE PTR [rdx],al
    202e:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    2031:	00 01                	add    BYTE PTR [rcx],al
    2033:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9012039 <__TMC_END__+0x900e021>
    2039:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    203e:	02 00                	add    al,BYTE PTR [rax]
    2040:	00 00                	add    BYTE PTR [rax],al
    2042:	18 ec                	sbb    ah,ch
    2044:	3e 00 00             	ds add BYTE PTR [rax],al
    2047:	13 9c 01 7e 0b 00 00 	adc    ebx,DWORD PTR [rcx+rax*1+0xb7e]
    204e:	09 1d 00 00 5a 20    	or     DWORD PTR [rip+0x205a0000],ebx        # 205a2054 <__TMC_END__+0x2059e03c>
    2054:	00 00                	add    BYTE PTR [rax],al
    2056:	6a 20                	push   0x20
    2058:	00 00                	add    BYTE PTR [rax],al
    205a:	02 31                	add    dh,BYTE PTR [rcx]
    205c:	71 00                	jno    205e <__GNU_EH_FRAME_HDR+0x2a>
    205e:	00 01                	add    BYTE PTR [rcx],al
    2060:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9012066 <__TMC_END__+0x900e04e>
    2066:	1d 00 00 00 18       	sbb    eax,0x18000000
    206b:	d9 8e 00 00 13 a4    	(bad) [rsi-0x5bed0000]
    2071:	01 15 2a 00 00 f1    	add    DWORD PTR [rip+0xfffffffff100002a],edx        # fffffffff10020a1 <__TMC_END__+0xfffffffff0ffe089>
    2077:	65 00 00             	add    BYTE PTR gs:[rax],al
    207a:	82                   	(bad)
    207b:	20 00                	and    BYTE PTR [rax],al
    207d:	00 8d 20 00 00 02    	add    BYTE PTR [rbp+0x2000020],cl
    2083:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    2086:	00 01                	add    BYTE PTR [rcx],al
    2088:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    208b:	00 00                	add    BYTE PTR [rax],al
    208d:	1f                   	(bad)
    208e:	23 1b                	and    ebx,DWORD PTR [rbx]
    2090:	00 00                	add    BYTE PTR [rax],al
    2092:	13 ae 01 db 8a 00    	adc    ebp,DWORD PTR [rsi+0x8adb01]
    2098:	00 ad 20 00 00 01    	add    BYTE PTR [rbp+0x1000020],ch
    209e:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    20a1:	00 01                	add    BYTE PTR [rcx],al
    20a3:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    20a6:	00 01                	add    BYTE PTR [rcx],al
    20a8:	09 1d 00 00 00 1f    	or     DWORD PTR [rip+0x1f000000],ebx        # 1f0020ae <__TMC_END__+0x1effe096>
    20ae:	61                   	(bad)
    20af:	0f 00 00             	sldt   WORD PTR [rax]
    20b2:	13 b8 01 50 34 00    	adc    edi,DWORD PTR [rax+0x345001]
    20b8:	00 cd                	add    ch,cl
    20ba:	20 00                	and    BYTE PTR [rax],al
    20bc:	00 01                	add    BYTE PTR [rcx],al
    20be:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    20c1:	00 01                	add    BYTE PTR [rcx],al
    20c3:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    20c6:	00 01                	add    BYTE PTR [rcx],al
    20c8:	09 1d 00 00 00 1f    	or     DWORD PTR [rip+0x1f000000],ebx        # 1f0020ce <__TMC_END__+0x1effe0b6>
    20ce:	77 8d                	ja     205d <__GNU_EH_FRAME_HDR+0x29>
    20d0:	00 00                	add    BYTE PTR [rax],al
    20d2:	13 c2                	adc    eax,edx
    20d4:	01 53 35             	add    DWORD PTR [rbx+0x35],edx
    20d7:	00 00                	add    BYTE PTR [rax],al
    20d9:	ed                   	in     eax,dx
    20da:	20 00                	and    BYTE PTR [rax],al
    20dc:	00 01                	add    BYTE PTR [rcx],al
    20de:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    20e1:	00 01                	add    BYTE PTR [rcx],al
    20e3:	09 1d 00 00 01 e5    	or     DWORD PTR [rip+0xffffffffe5010000],ebx        # ffffffffe50120e9 <__TMC_END__+0xffffffffe500e0d1>
    20e9:	00 00                	add    BYTE PTR [rax],al
    20eb:	00 00                	add    BYTE PTR [rax],al
    20ed:	1f                   	(bad)
    20ee:	c6                   	(bad)
    20ef:	8f 00                	pop    QWORD PTR [rax]
    20f1:	00 13                	add    BYTE PTR [rbx],dl
    20f3:	d7                   	xlat   BYTE PTR ds:[rbx]
    20f4:	01 29                	add    DWORD PTR [rcx],ebp
    20f6:	2b 00                	sub    eax,DWORD PTR [rax]
    20f8:	00 0d 21 00 00 01    	add    BYTE PTR [rip+0x1000021],cl        # 100211f <__TMC_END__+0xffe107>
    20fe:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    2101:	00 01                	add    BYTE PTR [rcx],al
    2103:	0d 21 00 00 01       	or     eax,0x1000021
    2108:	0d 21 00 00 00       	or     eax,0x21
    210d:	11 5a 6a             	adc    DWORD PTR [rdx+0x6a],ebx
    2110:	00 00                	add    BYTE PTR [rax],al
    2112:	13 6e 44             	adc    ebp,DWORD PTR [rsi+0x44]
    2115:	a0 5e 00 00 01 1f c6 	movabs al,ds:0x8fc61f0100005e
    211c:	8f 00 
    211e:	00 13                	add    BYTE PTR [rbx],dl
    2120:	dc 01                	fadd   QWORD PTR [rcx]
    2122:	aa                   	stos   BYTE PTR es:[rdi],al
    2123:	71 00                	jno    2125 <__GNU_EH_FRAME_HDR+0xf1>
    2125:	00 3a                	add    BYTE PTR [rdx],bh
    2127:	21 00                	and    DWORD PTR [rax],eax
    2129:	00 01                	add    BYTE PTR [rcx],al
    212b:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    212e:	00 01                	add    BYTE PTR [rcx],al
    2130:	3a 21                	cmp    ah,BYTE PTR [rcx]
    2132:	00 00                	add    BYTE PTR [rax],al
    2134:	01 3a                	add    DWORD PTR [rdx],edi
    2136:	21 00                	and    DWORD PTR [rax],eax
    2138:	00 00                	add    BYTE PTR [rax],al
    213a:	11 05 35 00 00 13    	adc    DWORD PTR [rip+0x13000035],eax        # 13002175 <__TMC_END__+0x12ffe15d>
    2140:	70 08                	jo     214a <__GNU_EH_FRAME_HDR+0x116>
    2142:	d2 60 00             	shl    BYTE PTR [rax+0x0],cl
    2145:	00 01                	add    BYTE PTR [rcx],al
    2147:	1f                   	(bad)
    2148:	c6                   	(bad)
    2149:	8f 00                	pop    QWORD PTR [rax]
    214b:	00 13                	add    BYTE PTR [rbx],dl
    214d:	e2 01                	loop   2150 <__GNU_EH_FRAME_HDR+0x11c>
    214f:	81 8d 00 00 67 21 00 	or     DWORD PTR [rbp+0x21670000],0x3010000
    2156:	00 01 03 
    2159:	58                   	pop    rax
    215a:	00 00                	add    BYTE PTR [rax],al
    215c:	01 03                	add    DWORD PTR [rbx],eax
    215e:	58                   	pop    rax
    215f:	00 00                	add    BYTE PTR [rax],al
    2161:	01 03                	add    DWORD PTR [rbx],eax
    2163:	58                   	pop    rax
    2164:	00 00                	add    BYTE PTR [rax],al
    2166:	00 1f                	add    BYTE PTR [rdi],bl
    2168:	c6                   	(bad)
    2169:	8f 00                	pop    QWORD PTR [rax]
    216b:	00 13                	add    BYTE PTR [rbx],dl
    216d:	e7 01                	out    0x1,eax
    216f:	60                   	(bad)
    2170:	48 00 00             	rex.W add BYTE PTR [rax],al
    2173:	87 21                	xchg   DWORD PTR [rcx],esp
    2175:	00 00                	add    BYTE PTR [rax],al
    2177:	01 03                	add    DWORD PTR [rbx],eax
    2179:	58                   	pop    rax
    217a:	00 00                	add    BYTE PTR [rax],al
    217c:	01 c0                	add    eax,eax
    217e:	02 00                	add    al,BYTE PTR [rax]
    2180:	00 01                	add    BYTE PTR [rcx],al
    2182:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    2185:	00 00                	add    BYTE PTR [rax],al
    2187:	09 1e                	or     DWORD PTR [rsi],ebx
    2189:	6c                   	ins    BYTE PTR es:[rdi],dx
    218a:	00 00                	add    BYTE PTR [rax],al
    218c:	13 ed                	adc    ebp,ebp
    218e:	01 07                	add    DWORD PTR [rdi],eax
    2190:	32 8d 00 00 f1 00    	xor    cl,BYTE PTR [rbp+0xf10000]
    2196:	00 00                	add    BYTE PTR [rax],al
    2198:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    2199:	21 00                	and    DWORD PTR [rax],eax
    219b:	00 01                	add    BYTE PTR [rcx],al
    219d:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 90121a3 <__TMC_END__+0x900e18b>
    21a3:	1d 00 00 00 17       	sbb    eax,0x17000000
    21a8:	07                   	(bad)
    21a9:	5f                   	pop    rdi
    21aa:	00 00                	add    BYTE PTR [rax],al
    21ac:	13 fb                	adc    edi,ebx
    21ae:	01 96 6b 00 00 bb    	add    DWORD PTR [rsi-0x44ffff95],edx
    21b4:	21 00                	and    DWORD PTR [rax],eax
    21b6:	00 c6                	add    dh,al
    21b8:	21 00                	and    DWORD PTR [rax],eax
    21ba:	00 02                	add    BYTE PTR [rdx],al
    21bc:	2c 71                	sub    al,0x71
    21be:	00 00                	add    BYTE PTR [rax],al
    21c0:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    21c3:	00 00                	add    BYTE PTR [rax],al
    21c5:	00 17                	add    BYTE PTR [rdi],dl
    21c7:	b5 48                	mov    ch,0x48
    21c9:	00 00                	add    BYTE PTR [rax],al
    21cb:	13 ff                	adc    edi,edi
    21cd:	01 c0                	add    eax,eax
    21cf:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    21d2:	da 21                	fisub  DWORD PTR [rcx]
    21d4:	00 00                	add    BYTE PTR [rax],al
    21d6:	f4                   	hlt
    21d7:	21 00                	and    DWORD PTR [rax],eax
    21d9:	00 02                	add    BYTE PTR [rdx],al
    21db:	2c 71                	sub    al,0x71
    21dd:	00 00                	add    BYTE PTR [rax],al
    21df:	01 09                	add    DWORD PTR [rcx],ecx
    21e1:	1d 00 00 01 09       	sbb    eax,0x9010000
    21e6:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    21eb:	02 00                	add    al,BYTE PTR [rax]
    21ed:	00 01                	add    BYTE PTR [rcx],al
    21ef:	09 1d 00 00 00 17    	or     DWORD PTR [rip+0x17000000],ebx        # 170021f5 <__TMC_END__+0x16ffe1dd>
    21f5:	6b 54 00 00 13       	imul   edx,DWORD PTR [rax+rax*1+0x0],0x13
    21fa:	04 02                	add    al,0x2
    21fc:	bb 01 00 00 08       	mov    ebx,0x8000001
    2201:	22 00                	and    al,BYTE PTR [rax]
    2203:	00 18                	add    BYTE PTR [rax],bl
    2205:	22 00                	and    al,BYTE PTR [rax]
    2207:	00 02                	add    BYTE PTR [rdx],al
    2209:	2c 71                	sub    al,0x71
    220b:	00 00                	add    BYTE PTR [rax],al
    220d:	01 09                	add    DWORD PTR [rcx],ecx
    220f:	1d 00 00 01 09       	sbb    eax,0x9010000
    2214:	1d 00 00 00 12       	sbb    eax,0x12000000
    2219:	90                   	nop
    221a:	2d 00 00 13 0f       	sub    eax,0xf130000
    221f:	02 07                	add    al,BYTE PTR [rdi]
    2221:	e4 6b                	in     al,0x6b
    2223:	00 00                	add    BYTE PTR [rax],al
    2225:	01 2e                	add    DWORD PTR [rsi],ebp
    2227:	22 00                	and    al,BYTE PTR [rax]
    2229:	00 34 22             	add    BYTE PTR [rdx+riz*1],dh
    222c:	00 00                	add    BYTE PTR [rax],al
    222e:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2231:	00 00                	add    BYTE PTR [rax],al
    2233:	00 2a                	add    BYTE PTR [rdx],ch
    2235:	90                   	nop
    2236:	2d 00 00 13 1c       	sub    eax,0x1c130000
    223b:	02 d6                	add    dl,dh
    223d:	06                   	(bad)
    223e:	00 00                	add    BYTE PTR [rax],al
    2240:	01 49 22             	add    DWORD PTR [rcx+0x22],ecx
    2243:	00 00                	add    BYTE PTR [rax],al
    2245:	54                   	push   rsp
    2246:	22 00                	and    al,BYTE PTR [rax]
    2248:	00 02                	add    BYTE PTR [rdx],al
    224a:	2c 71                	sub    al,0x71
    224c:	00 00                	add    BYTE PTR [rax],al
    224e:	01 6c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebp
    2252:	00 00                	add    BYTE PTR [rax],al
    2254:	12 90 2d 00 00 13    	adc    dl,BYTE PTR [rax+0x1300002d]
    225a:	28 02                	sub    BYTE PTR [rdx],al
    225c:	07                   	(bad)
    225d:	30 0a                	xor    BYTE PTR [rdx],cl
    225f:	00 00                	add    BYTE PTR [rax],al
    2261:	01 6a 22             	add    DWORD PTR [rdx+0x22],ebp
    2264:	00 00                	add    BYTE PTR [rax],al
    2266:	75 22                	jne    228a <__GNU_EH_FRAME_HDR+0x256>
    2268:	00 00                	add    BYTE PTR [rax],al
    226a:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    226d:	00 00                	add    BYTE PTR [rax],al
    226f:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    2272:	00 00                	add    BYTE PTR [rax],al
    2274:	00 12                	add    BYTE PTR [rdx],dl
    2276:	90                   	nop
    2277:	2d 00 00 13 39       	sub    eax,0x39130000
    227c:	02 07                	add    al,BYTE PTR [rdi]
    227e:	29 83 00 00 01 8b    	sub    DWORD PTR [rbx-0x74ff0000],eax
    2284:	22 00                	and    al,BYTE PTR [rax]
    2286:	00 a0 22 00 00 02    	add    BYTE PTR [rax+0x2000022],ah
    228c:	2c 71                	sub    al,0x71
    228e:	00 00                	add    BYTE PTR [rax],al
    2290:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    2293:	00 00                	add    BYTE PTR [rax],al
    2295:	01 09                	add    DWORD PTR [rcx],ecx
    2297:	1d 00 00 01 6c       	sbb    eax,0x6c010000
    229c:	69 00 00 00 12 90    	imul   eax,DWORD PTR [rax],0x90120000
    22a2:	2d 00 00 13 4a       	sub    eax,0x4a130000
    22a7:	02 07                	add    al,BYTE PTR [rdi]
    22a9:	0c 66                	or     al,0x66
    22ab:	00 00                	add    BYTE PTR [rax],al
    22ad:	01 b6 22 00 00 cb    	add    DWORD PTR [rsi-0x34ffffde],esi
    22b3:	22 00                	and    al,BYTE PTR [rax]
    22b5:	00 02                	add    BYTE PTR [rdx],al
    22b7:	2c 71                	sub    al,0x71
    22b9:	00 00                	add    BYTE PTR [rax],al
    22bb:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    22be:	00 00                	add    BYTE PTR [rax],al
    22c0:	01 09                	add    DWORD PTR [rcx],ecx
    22c2:	1d 00 00 01 09       	sbb    eax,0x9010000
    22c7:	1d 00 00 00 12       	sbb    eax,0x12000000
    22cc:	90                   	nop
    22cd:	2d 00 00 13 5c       	sub    eax,0x5c130000
    22d2:	02 07                	add    al,BYTE PTR [rdi]
    22d4:	fb                   	sti
    22d5:	50                   	push   rax
    22d6:	00 00                	add    BYTE PTR [rax],al
    22d8:	01 e1                	add    ecx,esp
    22da:	22 00                	and    al,BYTE PTR [rax]
    22dc:	00 fb                	add    bl,bh
    22de:	22 00                	and    al,BYTE PTR [rax]
    22e0:	00 02                	add    BYTE PTR [rdx],al
    22e2:	2c 71                	sub    al,0x71
    22e4:	00 00                	add    BYTE PTR [rax],al
    22e6:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    22e9:	00 00                	add    BYTE PTR [rax],al
    22eb:	01 09                	add    DWORD PTR [rcx],ecx
    22ed:	1d 00 00 01 09       	sbb    eax,0x9010000
    22f2:	1d 00 00 01 6c       	sbb    eax,0x6c010000
    22f7:	69 00 00 00 12 90    	imul   eax,DWORD PTR [rax],0x90120000
    22fd:	2d 00 00 13 70       	sub    eax,0x70130000
    2302:	02 07                	add    al,BYTE PTR [rdi]
    2304:	2f                   	(bad)
    2305:	0b 00                	or     eax,DWORD PTR [rax]
    2307:	00 01                	add    BYTE PTR [rcx],al
    2309:	11 23                	adc    DWORD PTR [rbx],esp
    230b:	00 00                	add    BYTE PTR [rax],al
    230d:	26 23 00             	es and eax,DWORD PTR [rax]
    2310:	00 02                	add    BYTE PTR [rdx],al
    2312:	2c 71                	sub    al,0x71
    2314:	00 00                	add    BYTE PTR [rax],al
    2316:	01 c0                	add    eax,eax
    2318:	02 00                	add    al,BYTE PTR [rax]
    231a:	00 01                	add    BYTE PTR [rcx],al
    231c:	09 1d 00 00 01 6c    	or     DWORD PTR [rip+0x6c010000],ebx        # 6c012322 <__TMC_END__+0x6c00e30a>
    2322:	69 00 00 00 12 90    	imul   eax,DWORD PTR [rax],0x90120000
    2328:	2d 00 00 13 aa       	sub    eax,0xaa130000
    232d:	02 07                	add    al,BYTE PTR [rdi]
    232f:	4e 13 00             	rex.WRX adc r8,QWORD PTR [rax]
    2332:	00 01                	add    BYTE PTR [rcx],al
    2334:	3c 23                	cmp    al,0x23
    2336:	00 00                	add    BYTE PTR [rax],al
    2338:	47 23 00             	rex.RXB and r8d,DWORD PTR [r8]
    233b:	00 02                	add    BYTE PTR [rdx],al
    233d:	2c 71                	sub    al,0x71
    233f:	00 00                	add    BYTE PTR [rax],al
    2341:	01 4a 71             	add    DWORD PTR [rdx+0x71],ecx
    2344:	00 00                	add    BYTE PTR [rax],al
    2346:	00 12                	add    BYTE PTR [rdx],dl
    2348:	90                   	nop
    2349:	2d 00 00 13 c7       	sub    eax,0xc7130000
    234e:	02 07                	add    al,BYTE PTR [rdi]
    2350:	cd 0c                	int    0xc
    2352:	00 00                	add    BYTE PTR [rax],al
    2354:	01 5d 23             	add    DWORD PTR [rbp+0x23],ebx
    2357:	00 00                	add    BYTE PTR [rax],al
    2359:	6d                   	ins    DWORD PTR es:[rdi],dx
    235a:	23 00                	and    eax,DWORD PTR [rax]
    235c:	00 02                	add    BYTE PTR [rdx],al
    235e:	2c 71                	sub    al,0x71
    2360:	00 00                	add    BYTE PTR [rax],al
    2362:	01 e8                	add    eax,ebp
    2364:	38 00                	cmp    BYTE PTR [rax],al
    2366:	00 01                	add    BYTE PTR [rcx],al
    2368:	6c                   	ins    BYTE PTR es:[rdi],dx
    2369:	69 00 00 00 12 90    	imul   eax,DWORD PTR [rax],0x90120000
    236f:	2d 00 00 13 cc       	sub    eax,0xcc130000
    2374:	02 07                	add    al,BYTE PTR [rdi]
    2376:	d9 21                	fldenv [rcx]
    2378:	00 00                	add    BYTE PTR [rax],al
    237a:	01 83 23 00 00 93    	add    DWORD PTR [rbx-0x6cffffdd],eax
    2380:	23 00                	and    eax,DWORD PTR [rax]
    2382:	00 02                	add    BYTE PTR [rdx],al
    2384:	2c 71                	sub    al,0x71
    2386:	00 00                	add    BYTE PTR [rax],al
    2388:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    238b:	00 00                	add    BYTE PTR [rax],al
    238d:	01 6c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebp
    2391:	00 00                	add    BYTE PTR [rax],al
    2393:	12 90 2d 00 00 13    	adc    dl,BYTE PTR [rax+0x1300002d]
    2399:	d1 02                	rol    DWORD PTR [rdx],1
    239b:	07                   	(bad)
    239c:	19 38                	sbb    DWORD PTR [rax],edi
    239e:	00 00                	add    BYTE PTR [rax],al
    23a0:	01 a9 23 00 00 b9    	add    DWORD PTR [rcx-0x46ffffdd],ebp
    23a6:	23 00                	and    eax,DWORD PTR [rax]
    23a8:	00 02                	add    BYTE PTR [rdx],al
    23aa:	2c 71                	sub    al,0x71
    23ac:	00 00                	add    BYTE PTR [rax],al
    23ae:	01 4a 71             	add    DWORD PTR [rdx+0x71],ecx
    23b1:	00 00                	add    BYTE PTR [rax],al
    23b3:	01 6c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebp
    23b7:	00 00                	add    BYTE PTR [rax],al
    23b9:	46 90                	rex.RX nop
    23bb:	2d 00 00 13 ec       	sub    eax,0xec130000
    23c0:	02 f0                	add    dh,al
    23c2:	54                   	push   rsp
    23c3:	00 00                	add    BYTE PTR [rax],al
    23c5:	cd 23                	int    0x23
    23c7:	00 00                	add    BYTE PTR [rax],al
    23c9:	d8 23                	fsub   DWORD PTR [rbx]
    23cb:	00 00                	add    BYTE PTR [rax],al
    23cd:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    23d0:	00 00                	add    BYTE PTR [rax],al
    23d2:	01 83 07 00 00 00    	add    DWORD PTR [rbx+0x7],eax
    23d8:	47 00 1d 00 00 13 ed 	rex.RXB add BYTE PTR [rip+0xffffffffed130000],r11b        # ffffffffed1323df <__TMC_END__+0xffffffffed12e3c7>
    23df:	02 15 f4 70 00 00    	add    dl,BYTE PTR [rip+0x70f4]        # 94d9 <__TMC_END__+0x54c1>
    23e5:	4f 71 00             	rex.WRXB jno 23e8 <__GNU_EH_FRAME_HDR+0x3b4>
    23e8:	00 f1                	add    cl,dh
    23ea:	23 00                	and    eax,DWORD PTR [rax]
    23ec:	00 fc                	add    ah,bh
    23ee:	23 00                	and    eax,DWORD PTR [rax]
    23f0:	00 02                	add    BYTE PTR [rdx],al
    23f2:	2c 71                	sub    al,0x71
    23f4:	00 00                	add    BYTE PTR [rax],al
    23f6:	01 83 07 00 00 00    	add    DWORD PTR [rbx+0x7],eax
    23fc:	12 8f 2d 00 00 13    	adc    cl,BYTE PTR [rdi+0x1300002d]
    2402:	28 03                	sub    BYTE PTR [rbx],al
    2404:	07                   	(bad)
    2405:	77 1d                	ja     2424 <__GNU_EH_FRAME_HDR+0x3f0>
    2407:	00 00                	add    BYTE PTR [rax],al
    2409:	01 12                	add    DWORD PTR [rdx],edx
    240b:	24 00                	and    al,0x0
    240d:	00 1d 24 00 00 02    	add    BYTE PTR [rip+0x2000024],bl        # 2002437 <__TMC_END__+0x1ffe41f>
    2413:	2c 71                	sub    al,0x71
    2415:	00 00                	add    BYTE PTR [rax],al
    2417:	02 f1                	add    dh,cl
    2419:	00 00                	add    BYTE PTR [rax],al
    241b:	00 00                	add    BYTE PTR [rax],al
    241d:	03 00                	add    eax,DWORD PTR [rax]
    241f:	1d 00 00 13 31       	sbb    eax,0x31130000
    2424:	03 07                	add    eax,DWORD PTR [rdi]
    2426:	8f                   	(bad)
    2427:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    242a:	4f 71 00             	rex.WRXB jno 242d <__GNU_EH_FRAME_HDR+0x3f9>
    242d:	00 01                	add    BYTE PTR [rcx],al
    242f:	37                   	(bad)
    2430:	24 00                	and    al,0x0
    2432:	00 42 24             	add    BYTE PTR [rdx+0x24],al
    2435:	00 00                	add    BYTE PTR [rax],al
    2437:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    243a:	00 00                	add    BYTE PTR [rax],al
    243c:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    243f:	00 00                	add    BYTE PTR [rax],al
    2441:	00 03                	add    BYTE PTR [rbx],al
    2443:	00 1d 00 00 13 3c    	add    BYTE PTR [rip+0x3c130000],bl        # 3c132449 <__TMC_END__+0x3c12e431>
    2449:	03 07                	add    eax,DWORD PTR [rdi]
    244b:	e7 1a                	out    0x1a,eax
    244d:	00 00                	add    BYTE PTR [rax],al
    244f:	4f 71 00             	rex.WRXB jno 2452 <__GNU_EH_FRAME_HDR+0x41e>
    2452:	00 01                	add    BYTE PTR [rcx],al
    2454:	5c                   	pop    rsp
    2455:	24 00                	and    al,0x0
    2457:	00 67 24             	add    BYTE PTR [rdi+0x24],ah
    245a:	00 00                	add    BYTE PTR [rax],al
    245c:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    245f:	00 00                	add    BYTE PTR [rax],al
    2461:	01 c0                	add    eax,eax
    2463:	02 00                	add    al,BYTE PTR [rax]
    2465:	00 00                	add    BYTE PTR [rax],al
    2467:	03 00                	add    eax,DWORD PTR [rax]
    2469:	1d 00 00 13 48       	sbb    eax,0x48130000
    246e:	03 07                	add    eax,DWORD PTR [rdi]
    2470:	3c 1b                	cmp    al,0x1b
    2472:	00 00                	add    BYTE PTR [rax],al
    2474:	4f 71 00             	rex.WRXB jno 2477 <__GNU_EH_FRAME_HDR+0x443>
    2477:	00 01                	add    BYTE PTR [rcx],al
    2479:	81 24 00 00 8c 24 00 	and    DWORD PTR [rax+rax*1],0x248c00
    2480:	00 02                	add    BYTE PTR [rdx],al
    2482:	2c 71                	sub    al,0x71
    2484:	00 00                	add    BYTE PTR [rax],al
    2486:	01 e5                	add    ebp,esp
    2488:	00 00                	add    BYTE PTR [rax],al
    248a:	00 00                	add    BYTE PTR [rax],al
    248c:	03 00                	add    eax,DWORD PTR [rax]
    248e:	1d 00 00 13 5a       	sbb    eax,0x5a130000
    2493:	03 07                	add    eax,DWORD PTR [rdi]
    2495:	9a                   	(bad)
    2496:	83 00 00             	add    DWORD PTR [rax],0x0
    2499:	4f 71 00             	rex.WRXB jno 249c <__GNU_EH_FRAME_HDR+0x468>
    249c:	00 01                	add    BYTE PTR [rcx],al
    249e:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    249f:	24 00                	and    al,0x0
    24a1:	00 b1 24 00 00 02    	add    BYTE PTR [rcx+0x2000024],dh
    24a7:	2c 71                	sub    al,0x71
    24a9:	00 00                	add    BYTE PTR [rax],al
    24ab:	01 4a 71             	add    DWORD PTR [rdx+0x71],ecx
    24ae:	00 00                	add    BYTE PTR [rax],al
    24b0:	00 03                	add    BYTE PTR [rbx],al
    24b2:	00 1d 00 00 13 9e    	add    BYTE PTR [rip+0xffffffff9e130000],bl        # ffffffff9e1324b8 <__TMC_END__+0xffffffff9e12e4a0>
    24b8:	03 07                	add    eax,DWORD PTR [rdi]
    24ba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24bb:	0a 00                	or     al,BYTE PTR [rax]
    24bd:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    24c0:	00 00                	add    BYTE PTR [rax],al
    24c2:	01 cb                	add    ebx,ecx
    24c4:	24 00                	and    al,0x0
    24c6:	00 d6                	add    dh,dl
    24c8:	24 00                	and    al,0x0
    24ca:	00 02                	add    BYTE PTR [rdx],al
    24cc:	2c 71                	sub    al,0x71
    24ce:	00 00                	add    BYTE PTR [rax],al
    24d0:	01 e8                	add    eax,ebp
    24d2:	38 00                	cmp    BYTE PTR [rax],al
    24d4:	00 00                	add    BYTE PTR [rax],al
    24d6:	03 75 47             	add    esi,DWORD PTR [rbp+0x47]
    24d9:	00 00                	add    BYTE PTR [rax],al
    24db:	13 b5 03 07 f3 4b    	adc    esi,DWORD PTR [rbp+0x4bf30703]
    24e1:	00 00                	add    BYTE PTR [rax],al
    24e3:	41 1d 00 00 01 f0    	rex.B sbb eax,0xf0010000
    24e9:	24 00                	and    al,0x0
    24eb:	00 f6                	add    dh,dh
    24ed:	24 00                	and    al,0x0
    24ef:	00 02                	add    BYTE PTR [rdx],al
    24f1:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    24f4:	00 00                	add    BYTE PTR [rax],al
    24f6:	03 e6                	add    esp,esi
    24f8:	3e 00 00             	ds add BYTE PTR [rax],al
    24fb:	13 c0                	adc    eax,eax
    24fd:	03 07                	add    eax,DWORD PTR [rdi]
    24ff:	4b 7b 00             	rex.WXB jnp 2502 <__GNU_EH_FRAME_HDR+0x4ce>
    2502:	00 0d 21 00 00 01    	add    BYTE PTR [rip+0x1000021],cl        # 1002529 <__TMC_END__+0xffe511>
    2508:	10 25 00 00 16 25    	adc    BYTE PTR [rip+0x25160000],ah        # 2516250e <__TMC_END__+0x2515e4f6>
    250e:	00 00                	add    BYTE PTR [rax],al
    2510:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2513:	00 00                	add    BYTE PTR [rax],al
    2515:	00 03                	add    BYTE PTR [rbx],al
    2517:	e6 3e                	out    0x3e,al
    2519:	00 00                	add    BYTE PTR [rax],al
    251b:	13 c9                	adc    ecx,ecx
    251d:	03 07                	add    eax,DWORD PTR [rdi]
    251f:	4b 05 00 00 3a 21    	rex.WXB add rax,0x213a0000
    2525:	00 00                	add    BYTE PTR [rax],al
    2527:	01 30                	add    DWORD PTR [rax],esi
    2529:	25 00 00 36 25       	and    eax,0x25360000
    252e:	00 00                	add    BYTE PTR [rax],al
    2530:	02 31                	add    dh,BYTE PTR [rcx]
    2532:	71 00                	jno    2534 <__GNU_EH_FRAME_HDR+0x500>
    2534:	00 00                	add    BYTE PTR [rax],al
    2536:	24 65                	and    al,0x65
    2538:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2539:	64 00 13             	add    BYTE PTR fs:[rbx],dl
    253c:	d2 03                	rol    BYTE PTR [rbx],cl
    253e:	cf                   	iret
    253f:	91                   	xchg   ecx,eax
    2540:	00 00                	add    BYTE PTR [rax],al
    2542:	0d 21 00 00 4e       	or     eax,0x4e000021
    2547:	25 00 00 54 25       	and    eax,0x25540000
    254c:	00 00                	add    BYTE PTR [rax],al
    254e:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2551:	00 00                	add    BYTE PTR [rax],al
    2553:	00 24 65 6e 64 00 13 	add    BYTE PTR [riz*2+0x1300646e],ah
    255a:	db 03                	fild   DWORD PTR [rbx]
    255c:	e5 1f                	in     eax,0x1f
    255e:	00 00                	add    BYTE PTR [rax],al
    2560:	3a 21                	cmp    ah,BYTE PTR [rcx]
    2562:	00 00                	add    BYTE PTR [rax],al
    2564:	6c                   	ins    BYTE PTR es:[rdi],dx
    2565:	25 00 00 72 25       	and    eax,0x25720000
    256a:	00 00                	add    BYTE PTR [rax],al
    256c:	02 31                	add    dh,BYTE PTR [rcx]
    256e:	71 00                	jno    2570 <__GNU_EH_FRAME_HDR+0x53c>
    2570:	00 00                	add    BYTE PTR [rax],al
    2572:	11 52 6a             	adc    DWORD PTR [rdx+0x6a],edx
    2575:	00 00                	add    BYTE PTR [rax],al
    2577:	13 72 30             	adc    esi,DWORD PTR [rdx+0x30]
    257a:	db 39                	fstp   TBYTE PTR [rcx]
    257c:	00 00                	add    BYTE PTR [rax],al
    257e:	01 03                	add    DWORD PTR [rbx],eax
    2580:	72 0f                	jb     2591 <__GNU_EH_FRAME_HDR+0x55d>
    2582:	00 00                	add    BYTE PTR [rax],al
    2584:	13 e5                	adc    esp,ebp
    2586:	03 07                	add    eax,DWORD PTR [rdi]
    2588:	bd 29 00 00 72       	mov    ebp,0x72000029
    258d:	25 00 00 01 99       	and    eax,0x99010000
    2592:	25 00 00 9f 25       	and    eax,0x259f0000
    2597:	00 00                	add    BYTE PTR [rax],al
    2599:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    259c:	00 00                	add    BYTE PTR [rax],al
    259e:	00 11                	add    BYTE PTR [rcx],dl
    25a0:	4c 6a 00             	rex.WR push 0x0
    25a3:	00 13                	add    BYTE PTR [rbx],dl
    25a5:	71 35                	jno    25dc <__GNU_EH_FRAME_HDR+0x5a8>
    25a7:	e0 39                	loopne 25e2 <__GNU_EH_FRAME_HDR+0x5ae>
    25a9:	00 00                	add    BYTE PTR [rax],al
    25ab:	01 03                	add    DWORD PTR [rbx],eax
    25ad:	72 0f                	jb     25be <__GNU_EH_FRAME_HDR+0x58a>
    25af:	00 00                	add    BYTE PTR [rax],al
    25b1:	13 ef                	adc    ebp,edi
    25b3:	03 07                	add    eax,DWORD PTR [rdi]
    25b5:	2e 2e 00 00          	cs cs add BYTE PTR [rax],al
    25b9:	9f                   	lahf
    25ba:	25 00 00 01 c6       	and    eax,0xc6010000
    25bf:	25 00 00 cc 25       	and    eax,0x25cc0000
    25c4:	00 00                	add    BYTE PTR [rax],al
    25c6:	02 31                	add    dh,BYTE PTR [rcx]
    25c8:	71 00                	jno    25ca <__GNU_EH_FRAME_HDR+0x596>
    25ca:	00 00                	add    BYTE PTR [rax],al
    25cc:	03 25 40 00 00 13    	add    esp,DWORD PTR [rip+0x13000040]        # 13002612 <__TMC_END__+0x12ffe5fa>
    25d2:	f9                   	stc
    25d3:	03 07                	add    eax,DWORD PTR [rdi]
    25d5:	db 94 00 00 72 25 00 	fist   DWORD PTR [rax+rax*1+0x257200]
    25dc:	00 01                	add    BYTE PTR [rcx],al
    25de:	e6 25                	out    0x25,al
    25e0:	00 00                	add    BYTE PTR [rax],al
    25e2:	ec                   	in     al,dx
    25e3:	25 00 00 02 2c       	and    eax,0x2c020000
    25e8:	71 00                	jno    25ea <__GNU_EH_FRAME_HDR+0x5b6>
    25ea:	00 00                	add    BYTE PTR [rax],al
    25ec:	03 25 40 00 00 13    	add    esp,DWORD PTR [rip+0x13000040]        # 13002632 <__TMC_END__+0x12ffe61a>
    25f2:	03 04 07             	add    eax,DWORD PTR [rdi+rax*1]
    25f5:	0d 7b 00 00 9f       	or     eax,0x9f00007b
    25fa:	25 00 00 01 06       	and    eax,0x6010000
    25ff:	26 00 00             	es add BYTE PTR [rax],al
    2602:	0c 26                	or     al,0x26
    2604:	00 00                	add    BYTE PTR [rax],al
    2606:	02 31                	add    dh,BYTE PTR [rcx]
    2608:	71 00                	jno    260a <__GNU_EH_FRAME_HDR+0x5d6>
    260a:	00 00                	add    BYTE PTR [rax],al
    260c:	03 e5                	add    esp,ebp
    260e:	3e 00 00             	ds add BYTE PTR [rax],al
    2611:	13 0d 04 07 df 12    	adc    ecx,DWORD PTR [rip+0x12df0704]        # 12df2d1b <__TMC_END__+0x12deed03>
    2617:	00 00                	add    BYTE PTR [rax],al
    2619:	3a 21                	cmp    ah,BYTE PTR [rcx]
    261b:	00 00                	add    BYTE PTR [rax],al
    261d:	01 26                	add    DWORD PTR [rsi],esp
    261f:	26 00 00             	es add BYTE PTR [rax],al
    2622:	2c 26                	sub    al,0x26
    2624:	00 00                	add    BYTE PTR [rax],al
    2626:	02 31                	add    dh,BYTE PTR [rcx]
    2628:	71 00                	jno    262a <__GNU_EH_FRAME_HDR+0x5f6>
    262a:	00 00                	add    BYTE PTR [rax],al
    262c:	03 8d 57 00 00 13    	add    ecx,DWORD PTR [rbp+0x13000057]
    2632:	16                   	(bad)
    2633:	04 07                	add    al,0x7
    2635:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    2636:	2c 00                	sub    al,0x0
    2638:	00 3a                	add    BYTE PTR [rdx],bh
    263a:	21 00                	and    DWORD PTR [rax],eax
    263c:	00 01                	add    BYTE PTR [rcx],al
    263e:	46                   	rex.RX
    263f:	26 00 00             	es add BYTE PTR [rax],al
    2642:	4c                   	rex.WR
    2643:	26 00 00             	es add BYTE PTR [rax],al
    2646:	02 31                	add    dh,BYTE PTR [rcx]
    2648:	71 00                	jno    264a <__GNU_EH_FRAME_HDR+0x616>
    264a:	00 00                	add    BYTE PTR [rax],al
    264c:	03 71 0f             	add    esi,DWORD PTR [rcx+0xf]
    264f:	00 00                	add    BYTE PTR [rax],al
    2651:	13 20                	adc    esp,DWORD PTR [rax]
    2653:	04 07                	add    al,0x7
    2655:	0f 16 00             	movhps xmm0,QWORD PTR [rax]
    2658:	00 9f 25 00 00 01    	add    BYTE PTR [rdi+0x1000025],bl
    265e:	66 26 00 00          	data16 es add BYTE PTR [rax],al
    2662:	6c                   	ins    BYTE PTR es:[rdi],dx
    2663:	26 00 00             	es add BYTE PTR [rax],al
    2666:	02 31                	add    dh,BYTE PTR [rcx]
    2668:	71 00                	jno    266a <__GNU_EH_FRAME_HDR+0x636>
    266a:	00 00                	add    BYTE PTR [rax],al
    266c:	03 24 40             	add    esp,DWORD PTR [rax+rax*2]
    266f:	00 00                	add    BYTE PTR [rax],al
    2671:	13 2a                	adc    ebp,DWORD PTR [rdx]
    2673:	04 07                	add    al,0x7
    2675:	c1 5c 00 00 9f       	rcr    DWORD PTR [rax+rax*1+0x0],0x9f
    267a:	25 00 00 01 86       	and    eax,0x86010000
    267f:	26 00 00             	es add BYTE PTR [rax],al
    2682:	8c 26                	mov    WORD PTR [rsi],fs
    2684:	00 00                	add    BYTE PTR [rax],al
    2686:	02 31                	add    dh,BYTE PTR [rcx]
    2688:	71 00                	jno    268a <__GNU_EH_FRAME_HDR+0x656>
    268a:	00 00                	add    BYTE PTR [rax],al
    268c:	03 c8                	add    ecx,eax
    268e:	89 00                	mov    DWORD PTR [rax],eax
    2690:	00 13                	add    BYTE PTR [rbx],dl
    2692:	34 04                	xor    al,0x4
    2694:	07                   	(bad)
    2695:	3e 3b 00             	ds cmp eax,DWORD PTR [rax]
    2698:	00 09                	add    BYTE PTR [rcx],cl
    269a:	1d 00 00 01 a6       	sbb    eax,0xa6010000
    269f:	26 00 00             	es add BYTE PTR [rax],al
    26a2:	ac                   	lods   al,BYTE PTR ds:[rsi]
    26a3:	26 00 00             	es add BYTE PTR [rax],al
    26a6:	02 31                	add    dh,BYTE PTR [rcx]
    26a8:	71 00                	jno    26aa <__GNU_EH_FRAME_HDR+0x676>
    26aa:	00 00                	add    BYTE PTR [rax],al
    26ac:	03 df                	add    ebx,edi
    26ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26af:	00 00                	add    BYTE PTR [rax],al
    26b1:	13 3b                	adc    edi,DWORD PTR [rbx]
    26b3:	04 07                	add    al,0x7
    26b5:	d0 2e                	shr    BYTE PTR [rsi],1
    26b7:	00 00                	add    BYTE PTR [rax],al
    26b9:	09 1d 00 00 01 c6    	or     DWORD PTR [rip+0xffffffffc6010000],ebx        # ffffffffc60126bf <__TMC_END__+0xffffffffc600e6a7>
    26bf:	26 00 00             	es add BYTE PTR [rax],al
    26c2:	cc                   	int3
    26c3:	26 00 00             	es add BYTE PTR [rax],al
    26c6:	02 31                	add    dh,BYTE PTR [rcx]
    26c8:	71 00                	jno    26ca <__GNU_EH_FRAME_HDR+0x696>
    26ca:	00 00                	add    BYTE PTR [rax],al
    26cc:	03 fa                	add    edi,edx
    26ce:	6c                   	ins    BYTE PTR es:[rdi],dx
    26cf:	00 00                	add    BYTE PTR [rax],al
    26d1:	13 41 04             	adc    eax,DWORD PTR [rcx+0x4]
    26d4:	07                   	(bad)
    26d5:	c6                   	(bad)
    26d6:	14 00                	adc    al,0x0
    26d8:	00 09                	add    BYTE PTR [rcx],cl
    26da:	1d 00 00 01 e6       	sbb    eax,0xe6010000
    26df:	26 00 00             	es add BYTE PTR [rax],al
    26e2:	ec                   	in     al,dx
    26e3:	26 00 00             	es add BYTE PTR [rax],al
    26e6:	02 31                	add    dh,BYTE PTR [rcx]
    26e8:	71 00                	jno    26ea <__GNU_EH_FRAME_HDR+0x6b6>
    26ea:	00 00                	add    BYTE PTR [rax],al
    26ec:	12 ba 51 00 00 13    	adc    bh,BYTE PTR [rdx+0x13000051]
    26f2:	50                   	push   rax
    26f3:	04 07                	add    al,0x7
    26f5:	cc                   	int3
    26f6:	57                   	push   rdi
    26f7:	00 00                	add    BYTE PTR [rax],al
    26f9:	01 02                	add    DWORD PTR [rdx],eax
    26fb:	27                   	(bad)
    26fc:	00 00                	add    BYTE PTR [rax],al
    26fe:	12 27                	adc    ah,BYTE PTR [rdi]
    2700:	00 00                	add    BYTE PTR [rax],al
    2702:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2705:	00 00                	add    BYTE PTR [rax],al
    2707:	01 09                	add    DWORD PTR [rcx],ecx
    2709:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    270e:	00 00                	add    BYTE PTR [rax],al
    2710:	00 00                	add    BYTE PTR [rax],al
    2712:	12 ba 51 00 00 13    	adc    bh,BYTE PTR [rdx+0x13000051]
    2718:	5e                   	pop    rsi
    2719:	04 07                	add    al,0x7
    271b:	c2 7d 00             	ret    0x7d
    271e:	00 01                	add    BYTE PTR [rcx],al
    2720:	28 27                	sub    BYTE PTR [rdi],ah
    2722:	00 00                	add    BYTE PTR [rax],al
    2724:	33 27                	xor    esp,DWORD PTR [rdi]
    2726:	00 00                	add    BYTE PTR [rax],al
    2728:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    272b:	00 00                	add    BYTE PTR [rax],al
    272d:	01 09                	add    DWORD PTR [rcx],ecx
    272f:	1d 00 00 00 12       	sbb    eax,0x12000000
    2734:	cf                   	iret
    2735:	8d 00                	lea    eax,[rax]
    2737:	00 13                	add    BYTE PTR [rbx],dl
    2739:	67 04 07             	addr32 add al,0x7
    273c:	01 0c 00             	add    DWORD PTR [rax+rax*1],ecx
    273f:	00 01                	add    BYTE PTR [rcx],al
    2741:	49 27                	rex.WB (bad)
    2743:	00 00                	add    BYTE PTR [rax],al
    2745:	4f 27                	rex.WRXB (bad)
    2747:	00 00                	add    BYTE PTR [rax],al
    2749:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    274c:	00 00                	add    BYTE PTR [rax],al
    274e:	00 03                	add    BYTE PTR [rbx],al
    2750:	fe                   	(bad)
    2751:	66 00 00             	data16 add BYTE PTR [rax],al
    2754:	13 9c 04 07 98 3c 00 	adc    ebx,DWORD PTR [rsp+rax*1+0x3c9807]
    275b:	00 09                	add    BYTE PTR [rcx],cl
    275d:	1d 00 00 01 69       	sbb    eax,0x69010000
    2762:	27                   	(bad)
    2763:	00 00                	add    BYTE PTR [rax],al
    2765:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2766:	27                   	(bad)
    2767:	00 00                	add    BYTE PTR [rax],al
    2769:	02 31                	add    dh,BYTE PTR [rcx]
    276b:	71 00                	jno    276d <__GNU_EH_FRAME_HDR+0x739>
    276d:	00 00                	add    BYTE PTR [rax],al
    276f:	12 d8                	adc    bl,al
    2771:	45 00 00             	add    BYTE PTR [r8],r8b
    2774:	13 b5 04 07 98 4c    	adc    esi,DWORD PTR [rbp+0x4c980704]
    277a:	00 00                	add    BYTE PTR [rax],al
    277c:	01 85 27 00 00 90    	add    DWORD PTR [rbp-0x6fffffd9],eax
    2782:	27                   	(bad)
    2783:	00 00                	add    BYTE PTR [rax],al
    2785:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2788:	00 00                	add    BYTE PTR [rax],al
    278a:	01 09                	add    DWORD PTR [rcx],ecx
    278c:	1d 00 00 00 12       	sbb    eax,0x12000000
    2791:	d8 45 00             	fadd   DWORD PTR [rbp+0x0]
    2794:	00 13                	add    BYTE PTR [rbx],dl
    2796:	bf 04 07 34 4d       	mov    edi,0x4d340704
    279b:	00 00                	add    BYTE PTR [rax],al
    279d:	01 a6 27 00 00 ac    	add    DWORD PTR [rsi-0x53ffffd9],esp
    27a3:	27                   	(bad)
    27a4:	00 00                	add    BYTE PTR [rax],al
    27a6:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    27a9:	00 00                	add    BYTE PTR [rax],al
    27ab:	00 12                	add    BYTE PTR [rdx],dl
    27ad:	e3 32                	jrcxz  27e1 <__GNU_EH_FRAME_HDR+0x7ad>
    27af:	00 00                	add    BYTE PTR [rax],al
    27b1:	13 c6                	adc    eax,esi
    27b3:	04 07                	add    al,0x7
    27b5:	0e                   	(bad)
    27b6:	6a 00                	push   0x0
    27b8:	00 01                	add    BYTE PTR [rcx],al
    27ba:	c2 27 00             	ret    0x27
    27bd:	00 c8                	add    al,cl
    27bf:	27                   	(bad)
    27c0:	00 00                	add    BYTE PTR [rax],al
    27c2:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    27c5:	00 00                	add    BYTE PTR [rax],al
    27c7:	00 03                	add    BYTE PTR [rbx],al
    27c9:	c9                   	leave
    27ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27cb:	00 00                	add    BYTE PTR [rax],al
    27cd:	13 cf                	adc    ecx,edi
    27cf:	04 07                	add    al,0x7
    27d1:	3e 5b                	ds pop rbx
    27d3:	00 00                	add    BYTE PTR [rax],al
    27d5:	f1                   	int1
    27d6:	65 00 00             	add    BYTE PTR gs:[rax],al
    27d9:	01 e2                	add    edx,esp
    27db:	27                   	(bad)
    27dc:	00 00                	add    BYTE PTR [rax],al
    27de:	e8 27 00 00 02       	call   200280a <__TMC_END__+0x1ffe7f2>
    27e3:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    27e6:	00 00                	add    BYTE PTR [rax],al
    27e8:	11 3c 6c             	adc    DWORD PTR [rsp+rbp*2],edi
    27eb:	00 00                	add    BYTE PTR [rax],al
    27ed:	13 6b 37             	adc    ebp,DWORD PTR [rbx+0x37]
    27f0:	8a 5e 00             	mov    bl,BYTE PTR [rsi+0x0]
    27f3:	00 01                	add    BYTE PTR [rcx],al
    27f5:	03 d1                	add    edx,ecx
    27f7:	42 00 00             	rex.X add BYTE PTR [rax],al
    27fa:	13 df                	adc    ebx,edi
    27fc:	04 07                	add    al,0x7
    27fe:	7c 23                	jl     2823 <__GNU_EH_FRAME_HDR+0x7ef>
    2800:	00 00                	add    BYTE PTR [rax],al
    2802:	e8 27 00 00 01       	call   100282e <__TMC_END__+0xffe816>
    2807:	0f 28 00             	movaps xmm0,XMMWORD PTR [rax]
    280a:	00 1a                	add    BYTE PTR [rdx],bl
    280c:	28 00                	sub    BYTE PTR [rax],al
    280e:	00 02                	add    BYTE PTR [rdx],al
    2810:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    2813:	00 01                	add    BYTE PTR [rcx],al
    2815:	09 1d 00 00 00 11    	or     DWORD PTR [rip+0x11000000],ebx        # 1100281b <__TMC_END__+0x10ffe803>
    281b:	42 6c                	rex.X ins BYTE PTR es:[rdi],dx
    281d:	00 00                	add    BYTE PTR [rax],al
    281f:	13 6a 32             	adc    ebp,DWORD PTR [rdx+0x32]
    2822:	7e 5e                	jle    2882 <__GNU_EH_FRAME_HDR+0x84e>
    2824:	00 00                	add    BYTE PTR [rax],al
    2826:	01 03                	add    DWORD PTR [rbx],eax
    2828:	d1 42 00             	rol    DWORD PTR [rdx+0x0],1
    282b:	00 13                	add    BYTE PTR [rbx],dl
    282d:	f1                   	int1
    282e:	04 07                	add    al,0x7
    2830:	4d 11 00             	adc    QWORD PTR [r8],r8
    2833:	00 1a                	add    BYTE PTR [rdx],bl
    2835:	28 00                	sub    BYTE PTR [rax],al
    2837:	00 01                	add    BYTE PTR [rcx],al
    2839:	41 28 00             	sub    BYTE PTR [r8],al
    283c:	00 4c 28 00          	add    BYTE PTR [rax+rbp*1+0x0],cl
    2840:	00 02                	add    BYTE PTR [rdx],al
    2842:	2c 71                	sub    al,0x71
    2844:	00 00                	add    BYTE PTR [rax],al
    2846:	01 09                	add    DWORD PTR [rcx],ecx
    2848:	1d 00 00 00 24       	sbb    eax,0x24000000
    284d:	61                   	(bad)
    284e:	74 00                	je     2850 <__GNU_EH_FRAME_HDR+0x81c>
    2850:	13 07                	adc    eax,DWORD PTR [rdi]
    2852:	05 05 90 00 00       	add    eax,0x9005
    2857:	e8 27 00 00 63       	call   63002883 <__TMC_END__+0x62ffe86b>
    285c:	28 00                	sub    BYTE PTR [rax],al
    285e:	00 6e 28             	add    BYTE PTR [rsi+0x28],ch
    2861:	00 00                	add    BYTE PTR [rax],al
    2863:	02 31                	add    dh,BYTE PTR [rcx]
    2865:	71 00                	jno    2867 <__GNU_EH_FRAME_HDR+0x833>
    2867:	00 01                	add    BYTE PTR [rcx],al
    2869:	09 1d 00 00 00 24    	or     DWORD PTR [rip+0x24000000],ebx        # 2400286f <__TMC_END__+0x23ffe857>
    286f:	61                   	(bad)
    2870:	74 00                	je     2872 <__GNU_EH_FRAME_HDR+0x83e>
    2872:	13 1d 05 8c 8a 00    	adc    ebx,DWORD PTR [rip+0x8a8c05]        # 8ab47d <__TMC_END__+0x8a7465>
    2878:	00 1a                	add    BYTE PTR [rdx],bl
    287a:	28 00                	sub    BYTE PTR [rax],al
    287c:	00 85 28 00 00 90    	add    BYTE PTR [rbp-0x6fffffd8],al
    2882:	28 00                	sub    BYTE PTR [rax],al
    2884:	00 02                	add    BYTE PTR [rdx],al
    2886:	2c 71                	sub    al,0x71
    2888:	00 00                	add    BYTE PTR [rax],al
    288a:	01 09                	add    DWORD PTR [rcx],ecx
    288c:	1d 00 00 00 03       	sbb    eax,0x3000000
    2891:	14 35                	adc    al,0x35
    2893:	00 00                	add    BYTE PTR [rax],al
    2895:	13 2e                	adc    ebp,DWORD PTR [rsi]
    2897:	05 07 a9 1a 00       	add    eax,0x1aa907
    289c:	00 1a                	add    BYTE PTR [rdx],bl
    289e:	28 00                	sub    BYTE PTR [rax],al
    28a0:	00 01                	add    BYTE PTR [rcx],al
    28a2:	aa                   	stos   BYTE PTR es:[rdi],al
    28a3:	28 00                	sub    BYTE PTR [rax],al
    28a5:	00 b0 28 00 00 02    	add    BYTE PTR [rax+0x2000028],dh
    28ab:	2c 71                	sub    al,0x71
    28ad:	00 00                	add    BYTE PTR [rax],al
    28af:	00 03                	add    BYTE PTR [rbx],al
    28b1:	14 35                	adc    al,0x35
    28b3:	00 00                	add    BYTE PTR [rax],al
    28b5:	13 3a                	adc    edi,DWORD PTR [rdx]
    28b7:	05 07 d7 86 00       	add    eax,0x86d707
    28bc:	00 e8                	add    al,ch
    28be:	27                   	(bad)
    28bf:	00 00                	add    BYTE PTR [rax],al
    28c1:	01 ca                	add    edx,ecx
    28c3:	28 00                	sub    BYTE PTR [rax],al
    28c5:	00 d0                	add    al,dl
    28c7:	28 00                	sub    BYTE PTR [rax],al
    28c9:	00 02                	add    BYTE PTR [rdx],al
    28cb:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    28ce:	00 00                	add    BYTE PTR [rax],al
    28d0:	03 0f                	add    ecx,DWORD PTR [rdi]
    28d2:	65 00 00             	add    BYTE PTR gs:[rax],al
    28d5:	13 46 05             	adc    eax,DWORD PTR [rsi+0x5]
    28d8:	07                   	(bad)
    28d9:	0b 92 00 00 1a 28    	or     edx,DWORD PTR [rdx+0x281a0000]
    28df:	00 00                	add    BYTE PTR [rax],al
    28e1:	01 ea                	add    edx,ebp
    28e3:	28 00                	sub    BYTE PTR [rax],al
    28e5:	00 f0                	add    al,dh
    28e7:	28 00                	sub    BYTE PTR [rax],al
    28e9:	00 02                	add    BYTE PTR [rdx],al
    28eb:	2c 71                	sub    al,0x71
    28ed:	00 00                	add    BYTE PTR [rax],al
    28ef:	00 03                	add    BYTE PTR [rbx],al
    28f1:	0f 65 00             	pcmpgtw mm0,QWORD PTR [rax]
    28f4:	00 13                	add    BYTE PTR [rbx],dl
    28f6:	52                   	push   rdx
    28f7:	05 07 52 00 00       	add    eax,0x5207
    28fc:	00 e8                	add    al,ch
    28fe:	27                   	(bad)
    28ff:	00 00                	add    BYTE PTR [rax],al
    2901:	01 0a                	add    DWORD PTR [rdx],ecx
    2903:	29 00                	sub    DWORD PTR [rax],eax
    2905:	00 10                	add    BYTE PTR [rax],dl
    2907:	29 00                	sub    DWORD PTR [rax],eax
    2909:	00 02                	add    BYTE PTR [rdx],al
    290b:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    290e:	00 00                	add    BYTE PTR [rax],al
    2910:	03 30                	add    esi,DWORD PTR [rax]
    2912:	63 00                	movsxd eax,DWORD PTR [rax]
    2914:	00 13                	add    BYTE PTR [rbx],dl
    2916:	61                   	(bad)
    2917:	05 07 5a 24 00       	add    eax,0x245a07
    291c:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    291f:	00 00                	add    BYTE PTR [rax],al
    2921:	01 2a                	add    DWORD PTR [rdx],ebp
    2923:	29 00                	sub    DWORD PTR [rax],eax
    2925:	00 35 29 00 00 02    	add    BYTE PTR [rip+0x2000029],dh        # 2002954 <__TMC_END__+0x1ffe93c>
    292b:	2c 71                	sub    al,0x71
    292d:	00 00                	add    BYTE PTR [rax],al
    292f:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    2932:	00 00                	add    BYTE PTR [rax],al
    2934:	00 03                	add    BYTE PTR [rbx],al
    2936:	30 63 00             	xor    BYTE PTR [rbx+0x0],ah
    2939:	00 13                	add    BYTE PTR [rbx],dl
    293b:	6b 05 07 70 8f 00 00 	imul   eax,DWORD PTR [rip+0x8f7007],0x0        # 8f9949 <__TMC_END__+0x8f5931>
    2942:	4f 71 00             	rex.WRXB jno 2945 <__GNU_EH_FRAME_HDR+0x911>
    2945:	00 01                	add    BYTE PTR [rcx],al
    2947:	4f 29 00             	rex.WRXB sub QWORD PTR [r8],r8
    294a:	00 5a 29             	add    BYTE PTR [rdx+0x29],bl
    294d:	00 00                	add    BYTE PTR [rax],al
    294f:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2952:	00 00                	add    BYTE PTR [rax],al
    2954:	01 c0                	add    eax,eax
    2956:	02 00                	add    al,BYTE PTR [rax]
    2958:	00 00                	add    BYTE PTR [rax],al
    295a:	03 30                	add    esi,DWORD PTR [rax]
    295c:	63 00                	movsxd eax,DWORD PTR [rax]
    295e:	00 13                	add    BYTE PTR [rbx],dl
    2960:	75 05                	jne    2967 <__GNU_EH_FRAME_HDR+0x933>
    2962:	07                   	(bad)
    2963:	e6 6e                	out    0x6e,al
    2965:	00 00                	add    BYTE PTR [rax],al
    2967:	4f 71 00             	rex.WRXB jno 296a <__GNU_EH_FRAME_HDR+0x936>
    296a:	00 01                	add    BYTE PTR [rcx],al
    296c:	74 29                	je     2997 <__GNU_EH_FRAME_HDR+0x963>
    296e:	00 00                	add    BYTE PTR [rax],al
    2970:	7f 29                	jg     299b <__GNU_EH_FRAME_HDR+0x967>
    2972:	00 00                	add    BYTE PTR [rax],al
    2974:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2977:	00 00                	add    BYTE PTR [rax],al
    2979:	01 e5                	add    ebp,esp
    297b:	00 00                	add    BYTE PTR [rax],al
    297d:	00 00                	add    BYTE PTR [rax],al
    297f:	03 30                	add    esi,DWORD PTR [rax]
    2981:	63 00                	movsxd eax,DWORD PTR [rax]
    2983:	00 13                	add    BYTE PTR [rbx],dl
    2985:	83 05 07 8d 92 00 00 	add    DWORD PTR [rip+0x928d07],0x0        # 92b693 <__TMC_END__+0x92767b>
    298c:	4f 71 00             	rex.WRXB jno 298f <__GNU_EH_FRAME_HDR+0x95b>
    298f:	00 01                	add    BYTE PTR [rcx],al
    2991:	99                   	cdq
    2992:	29 00                	sub    DWORD PTR [rax],eax
    2994:	00 a4 29 00 00 02 2c 	add    BYTE PTR [rcx+rbp*1+0x2c020000],ah
    299b:	71 00                	jno    299d <__GNU_EH_FRAME_HDR+0x969>
    299d:	00 01                	add    BYTE PTR [rcx],al
    299f:	e8 38 00 00 00       	call   29dc <__GNU_EH_FRAME_HDR+0x9a8>
    29a4:	03 31                	add    esi,DWORD PTR [rcx]
    29a6:	69 00 00 13 9b 05    	imul   eax,DWORD PTR [rax],0x59b1300
    29ac:	07                   	(bad)
    29ad:	c6                   	(bad)
    29ae:	35 00 00 4f 71       	xor    eax,0x714f0000
    29b3:	00 00                	add    BYTE PTR [rax],al
    29b5:	01 be 29 00 00 c9    	add    DWORD PTR [rsi-0x36ffffd7],edi
    29bb:	29 00                	sub    DWORD PTR [rax],eax
    29bd:	00 02                	add    BYTE PTR [rdx],al
    29bf:	2c 71                	sub    al,0x71
    29c1:	00 00                	add    BYTE PTR [rax],al
    29c3:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    29c6:	00 00                	add    BYTE PTR [rax],al
    29c8:	00 03                	add    BYTE PTR [rbx],al
    29ca:	31 69 00             	xor    DWORD PTR [rcx+0x0],ebp
    29cd:	00 13                	add    BYTE PTR [rbx],dl
    29cf:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    29d0:	05 07 fc 5f 00       	add    eax,0x5ffc07
    29d5:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    29d8:	00 00                	add    BYTE PTR [rax],al
    29da:	01 e3                	add    ebx,esp
    29dc:	29 00                	sub    DWORD PTR [rax],eax
    29de:	00 f8                	add    al,bh
    29e0:	29 00                	sub    DWORD PTR [rax],eax
    29e2:	00 02                	add    BYTE PTR [rdx],al
    29e4:	2c 71                	sub    al,0x71
    29e6:	00 00                	add    BYTE PTR [rax],al
    29e8:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    29eb:	00 00                	add    BYTE PTR [rax],al
    29ed:	01 09                	add    DWORD PTR [rcx],ecx
    29ef:	1d 00 00 01 09       	sbb    eax,0x9010000
    29f4:	1d 00 00 00 03       	sbb    eax,0x3000000
    29f9:	31 69 00             	xor    DWORD PTR [rcx+0x0],ebp
    29fc:	00 13                	add    BYTE PTR [rbx],dl
    29fe:	ba 05 07 2a 22       	mov    edx,0x222a0705
    2a03:	00 00                	add    BYTE PTR [rax],al
    2a05:	4f 71 00             	rex.WRXB jno 2a08 <__GNU_EH_FRAME_HDR+0x9d4>
    2a08:	00 01                	add    BYTE PTR [rcx],al
    2a0a:	12 2a                	adc    ch,BYTE PTR [rdx]
    2a0c:	00 00                	add    BYTE PTR [rax],al
    2a0e:	22 2a                	and    ch,BYTE PTR [rdx]
    2a10:	00 00                	add    BYTE PTR [rax],al
    2a12:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2a15:	00 00                	add    BYTE PTR [rax],al
    2a17:	01 c0                	add    eax,eax
    2a19:	02 00                	add    al,BYTE PTR [rax]
    2a1b:	00 01                	add    BYTE PTR [rcx],al
    2a1d:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3002a23 <__TMC_END__+0x2ffea0b>
    2a23:	31 69 00             	xor    DWORD PTR [rcx+0x0],ebp
    2a26:	00 13                	add    BYTE PTR [rbx],dl
    2a28:	c8 05 07 07          	enter  0x705,0x7
    2a2c:	39 00                	cmp    DWORD PTR [rax],eax
    2a2e:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2a31:	00 00                	add    BYTE PTR [rax],al
    2a33:	01 3c 2a             	add    DWORD PTR [rdx+rbp*1],edi
    2a36:	00 00                	add    BYTE PTR [rax],al
    2a38:	47 2a 00             	rex.RXB sub r8b,BYTE PTR [r8]
    2a3b:	00 02                	add    BYTE PTR [rdx],al
    2a3d:	2c 71                	sub    al,0x71
    2a3f:	00 00                	add    BYTE PTR [rax],al
    2a41:	01 c0                	add    eax,eax
    2a43:	02 00                	add    al,BYTE PTR [rax]
    2a45:	00 00                	add    BYTE PTR [rax],al
    2a47:	03 31                	add    esi,DWORD PTR [rcx]
    2a49:	69 00 00 13 da 05    	imul   eax,DWORD PTR [rax],0x5da1300
    2a4f:	07                   	(bad)
    2a50:	cf                   	iret
    2a51:	90                   	nop
    2a52:	00 00                	add    BYTE PTR [rax],al
    2a54:	4f 71 00             	rex.WRXB jno 2a57 <__GNU_EH_FRAME_HDR+0xa23>
    2a57:	00 01                	add    BYTE PTR [rcx],al
    2a59:	61                   	(bad)
    2a5a:	2a 00                	sub    al,BYTE PTR [rax]
    2a5c:	00 71 2a             	add    BYTE PTR [rcx+0x2a],dh
    2a5f:	00 00                	add    BYTE PTR [rax],al
    2a61:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2a64:	00 00                	add    BYTE PTR [rax],al
    2a66:	01 09                	add    DWORD PTR [rcx],ecx
    2a68:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    2a6d:	00 00                	add    BYTE PTR [rax],al
    2a6f:	00 00                	add    BYTE PTR [rax],al
    2a71:	03 31                	add    esi,DWORD PTR [rcx]
    2a73:	69 00 00 13 e5 05    	imul   eax,DWORD PTR [rax],0x5e51300
    2a79:	07                   	(bad)
    2a7a:	d5 10 00 00          	add    BYTE PTR [r16],al
    2a7e:	4f 71 00             	rex.WRXB jno 2a81 <__GNU_EH_FRAME_HDR+0xa4d>
    2a81:	00 01                	add    BYTE PTR [rcx],al
    2a83:	8b 2a                	mov    ebp,DWORD PTR [rdx]
    2a85:	00 00                	add    BYTE PTR [rax],al
    2a87:	96                   	xchg   esi,eax
    2a88:	2a 00                	sub    al,BYTE PTR [rax]
    2a8a:	00 02                	add    BYTE PTR [rdx],al
    2a8c:	2c 71                	sub    al,0x71
    2a8e:	00 00                	add    BYTE PTR [rax],al
    2a90:	01 e8                	add    eax,ebp
    2a92:	38 00                	cmp    BYTE PTR [rax],al
    2a94:	00 00                	add    BYTE PTR [rax],al
    2a96:	12 0a                	adc    cl,BYTE PTR [rdx]
    2a98:	65 00 00             	add    BYTE PTR gs:[rax],al
    2a9b:	13 24 06             	adc    esp,DWORD PTR [rsi+rax*1]
    2a9e:	07                   	(bad)
    2a9f:	c5 3b 00             	(bad)
    2aa2:	00 01                	add    BYTE PTR [rcx],al
    2aa4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2aa5:	2a 00                	sub    al,BYTE PTR [rax]
    2aa7:	00 b7 2a 00 00 02    	add    BYTE PTR [rdi+0x200002a],dh
    2aad:	2c 71                	sub    al,0x71
    2aaf:	00 00                	add    BYTE PTR [rax],al
    2ab1:	01 e5                	add    ebp,esp
    2ab3:	00 00                	add    BYTE PTR [rax],al
    2ab5:	00 00                	add    BYTE PTR [rax],al
    2ab7:	03 0a                	add    ecx,DWORD PTR [rdx]
    2ab9:	5f                   	pop    rdi
    2aba:	00 00                	add    BYTE PTR [rax],al
    2abc:	13 34 06             	adc    esi,DWORD PTR [rsi+rax*1]
    2abf:	07                   	(bad)
    2ac0:	bb 25 00 00 4f       	mov    ebx,0x4f000025
    2ac5:	71 00                	jno    2ac7 <__GNU_EH_FRAME_HDR+0xa93>
    2ac7:	00 01                	add    BYTE PTR [rcx],al
    2ac9:	d1 2a                	shr    DWORD PTR [rdx],1
    2acb:	00 00                	add    BYTE PTR [rax],al
    2acd:	dc 2a                	fsubr  QWORD PTR [rdx]
    2acf:	00 00                	add    BYTE PTR [rax],al
    2ad1:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2ad4:	00 00                	add    BYTE PTR [rax],al
    2ad6:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    2ad9:	00 00                	add    BYTE PTR [rax],al
    2adb:	00 03                	add    BYTE PTR [rbx],al
    2add:	0a 5f 00             	or     bl,BYTE PTR [rdi+0x0]
    2ae0:	00 13                	add    BYTE PTR [rbx],dl
    2ae2:	62 06 07 31 5e       	(bad)
    2ae7:	00 00                	add    BYTE PTR [rax],al
    2ae9:	4f 71 00             	rex.WRXB jno 2aec <__GNU_EH_FRAME_HDR+0xab8>
    2aec:	00 01                	add    BYTE PTR [rcx],al
    2aee:	f6 2a                	imul   BYTE PTR [rdx]
    2af0:	00 00                	add    BYTE PTR [rax],al
    2af2:	01 2b                	add    DWORD PTR [rbx],ebp
    2af4:	00 00                	add    BYTE PTR [rax],al
    2af6:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2af9:	00 00                	add    BYTE PTR [rax],al
    2afb:	01 4a 71             	add    DWORD PTR [rdx+0x71],ecx
    2afe:	00 00                	add    BYTE PTR [rax],al
    2b00:	00 03                	add    BYTE PTR [rbx],al
    2b02:	0a 5f 00             	or     bl,BYTE PTR [rdi+0x0]
    2b05:	00 13                	add    BYTE PTR [rbx],dl
    2b07:	7a 06                	jp     2b0f <__GNU_EH_FRAME_HDR+0xadb>
    2b09:	07                   	(bad)
    2b0a:	ac                   	lods   al,BYTE PTR ds:[rsi]
    2b0b:	6d                   	ins    DWORD PTR es:[rdi],dx
    2b0c:	00 00                	add    BYTE PTR [rax],al
    2b0e:	4f 71 00             	rex.WRXB jno 2b11 <__GNU_EH_FRAME_HDR+0xadd>
    2b11:	00 01                	add    BYTE PTR [rcx],al
    2b13:	1b 2b                	sbb    ebp,DWORD PTR [rbx]
    2b15:	00 00                	add    BYTE PTR [rax],al
    2b17:	30 2b                	xor    BYTE PTR [rbx],ch
    2b19:	00 00                	add    BYTE PTR [rax],al
    2b1b:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2b1e:	00 00                	add    BYTE PTR [rax],al
    2b20:	01 45 71             	add    DWORD PTR [rbp+0x71],eax
    2b23:	00 00                	add    BYTE PTR [rax],al
    2b25:	01 09                	add    DWORD PTR [rcx],ecx
    2b27:	1d 00 00 01 09       	sbb    eax,0x9010000
    2b2c:	1d 00 00 00 03       	sbb    eax,0x3000000
    2b31:	0a 5f 00             	or     bl,BYTE PTR [rdi+0x0]
    2b34:	00 13                	add    BYTE PTR [rbx],dl
    2b36:	8b 06                	mov    eax,DWORD PTR [rsi]
    2b38:	07                   	(bad)
    2b39:	16                   	(bad)
    2b3a:	10 00                	adc    BYTE PTR [rax],al
    2b3c:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2b3f:	00 00                	add    BYTE PTR [rax],al
    2b41:	01 4a 2b             	add    DWORD PTR [rdx+0x2b],ecx
    2b44:	00 00                	add    BYTE PTR [rax],al
    2b46:	5a                   	pop    rdx
    2b47:	2b 00                	sub    eax,DWORD PTR [rax]
    2b49:	00 02                	add    BYTE PTR [rdx],al
    2b4b:	2c 71                	sub    al,0x71
    2b4d:	00 00                	add    BYTE PTR [rax],al
    2b4f:	01 c0                	add    eax,eax
    2b51:	02 00                	add    al,BYTE PTR [rax]
    2b53:	00 01                	add    BYTE PTR [rcx],al
    2b55:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3002b5b <__TMC_END__+0x2ffeb43>
    2b5b:	0a 5f 00             	or     bl,BYTE PTR [rdi+0x0]
    2b5e:	00 13                	add    BYTE PTR [rbx],dl
    2b60:	9c                   	pushf
    2b61:	06                   	(bad)
    2b62:	07                   	(bad)
    2b63:	20 0f                	and    BYTE PTR [rdi],cl
    2b65:	00 00                	add    BYTE PTR [rax],al
    2b67:	4f 71 00             	rex.WRXB jno 2b6a <__GNU_EH_FRAME_HDR+0xb36>
    2b6a:	00 01                	add    BYTE PTR [rcx],al
    2b6c:	74 2b                	je     2b99 <__GNU_EH_FRAME_HDR+0xb65>
    2b6e:	00 00                	add    BYTE PTR [rax],al
    2b70:	7f 2b                	jg     2b9d <__GNU_EH_FRAME_HDR+0xb69>
    2b72:	00 00                	add    BYTE PTR [rax],al
    2b74:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2b77:	00 00                	add    BYTE PTR [rax],al
    2b79:	01 c0                	add    eax,eax
    2b7b:	02 00                	add    al,BYTE PTR [rax]
    2b7d:	00 00                	add    BYTE PTR [rax],al
    2b7f:	03 0a                	add    ecx,DWORD PTR [rdx]
    2b81:	5f                   	pop    rdi
    2b82:	00 00                	add    BYTE PTR [rax],al
    2b84:	13 ae 06 07 2f 12    	adc    ebp,DWORD PTR [rsi+0x122f0706]
    2b8a:	00 00                	add    BYTE PTR [rax],al
    2b8c:	4f 71 00             	rex.WRXB jno 2b8f <__GNU_EH_FRAME_HDR+0xb5b>
    2b8f:	00 01                	add    BYTE PTR [rcx],al
    2b91:	99                   	cdq
    2b92:	2b 00                	sub    eax,DWORD PTR [rax]
    2b94:	00 a9 2b 00 00 02    	add    BYTE PTR [rcx+0x200002b],ch
    2b9a:	2c 71                	sub    al,0x71
    2b9c:	00 00                	add    BYTE PTR [rax],al
    2b9e:	01 09                	add    DWORD PTR [rcx],ecx
    2ba0:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    2ba5:	00 00                	add    BYTE PTR [rax],al
    2ba7:	00 00                	add    BYTE PTR [rax],al
    2ba9:	03 0a                	add    ecx,DWORD PTR [rdx]
    2bab:	5f                   	pop    rdi
    2bac:	00 00                	add    BYTE PTR [rax],al
    2bae:	13 e1                	adc    esp,ecx
    2bb0:	06                   	(bad)
    2bb1:	07                   	(bad)
    2bb2:	fe                   	(bad)
    2bb3:	67 00 00             	add    BYTE PTR [eax],al
    2bb6:	4f 71 00             	rex.WRXB jno 2bb9 <__GNU_EH_FRAME_HDR+0xb85>
    2bb9:	00 01                	add    BYTE PTR [rcx],al
    2bbb:	c3                   	ret
    2bbc:	2b 00                	sub    eax,DWORD PTR [rax]
    2bbe:	00 ce                	add    dh,cl
    2bc0:	2b 00                	sub    eax,DWORD PTR [rax]
    2bc2:	00 02                	add    BYTE PTR [rdx],al
    2bc4:	2c 71                	sub    al,0x71
    2bc6:	00 00                	add    BYTE PTR [rax],al
    2bc8:	01 e8                	add    eax,ebp
    2bca:	38 00                	cmp    BYTE PTR [rax],al
    2bcc:	00 00                	add    BYTE PTR [rax],al
    2bce:	03 90 65 00 00 13    	add    edx,DWORD PTR [rax+0x13000065]
    2bd4:	27                   	(bad)
    2bd5:	07                   	(bad)
    2bd6:	07                   	(bad)
    2bd7:	76 4e                	jbe    2c27 <__GNU_EH_FRAME_HDR+0xbf3>
    2bd9:	00 00                	add    BYTE PTR [rax],al
    2bdb:	0d 21 00 00 01       	or     eax,0x1000021
    2be0:	e8 2b 00 00 fd       	call   fffffffffd002c10 <__TMC_END__+0xfffffffffcffebf8>
    2be5:	2b 00                	sub    eax,DWORD PTR [rax]
    2be7:	00 02                	add    BYTE PTR [rdx],al
    2be9:	2c 71                	sub    al,0x71
    2beb:	00 00                	add    BYTE PTR [rax],al
    2bed:	01 3a                	add    DWORD PTR [rdx],edi
    2bef:	21 00                	and    DWORD PTR [rax],eax
    2bf1:	00 01                	add    BYTE PTR [rcx],al
    2bf3:	09 1d 00 00 01 e5    	or     DWORD PTR [rip+0xffffffffe5010000],ebx        # ffffffffe5012bf9 <__TMC_END__+0xffffffffe500ebe1>
    2bf9:	00 00                	add    BYTE PTR [rax],al
    2bfb:	00 00                	add    BYTE PTR [rax],al
    2bfd:	03 90 65 00 00 13    	add    edx,DWORD PTR [rax+0x13000065]
    2c03:	77 07                	ja     2c0c <__GNU_EH_FRAME_HDR+0xbd8>
    2c05:	07                   	(bad)
    2c06:	f2 78 00             	bnd js 2c09 <__GNU_EH_FRAME_HDR+0xbd5>
    2c09:	00 0d 21 00 00 01    	add    BYTE PTR [rip+0x1000021],cl        # 1002c30 <__TMC_END__+0xffec18>
    2c0f:	17                   	(bad)
    2c10:	2c 00                	sub    al,0x0
    2c12:	00 27                	add    BYTE PTR [rdi],ah
    2c14:	2c 00                	sub    al,0x0
    2c16:	00 02                	add    BYTE PTR [rdx],al
    2c18:	2c 71                	sub    al,0x71
    2c1a:	00 00                	add    BYTE PTR [rax],al
    2c1c:	01 3a                	add    DWORD PTR [rdx],edi
    2c1e:	21 00                	and    DWORD PTR [rax],eax
    2c20:	00 01                	add    BYTE PTR [rcx],al
    2c22:	e8 38 00 00 00       	call   2c5f <__GNU_EH_FRAME_HDR+0xc2b>
    2c27:	03 90 65 00 00 13    	add    edx,DWORD PTR [rax+0x13000065]
    2c2d:	93                   	xchg   ebx,eax
    2c2e:	07                   	(bad)
    2c2f:	07                   	(bad)
    2c30:	14 07                	adc    al,0x7
    2c32:	00 00                	add    BYTE PTR [rax],al
    2c34:	4f 71 00             	rex.WRXB jno 2c37 <__GNU_EH_FRAME_HDR+0xc03>
    2c37:	00 01                	add    BYTE PTR [rcx],al
    2c39:	41 2c 00             	rex.B sub al,0x0
    2c3c:	00 51 2c             	add    BYTE PTR [rcx+0x2c],dl
    2c3f:	00 00                	add    BYTE PTR [rax],al
    2c41:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2c44:	00 00                	add    BYTE PTR [rax],al
    2c46:	01 09                	add    DWORD PTR [rcx],ecx
    2c48:	1d 00 00 01 45       	sbb    eax,0x45010000
    2c4d:	71 00                	jno    2c4f <__GNU_EH_FRAME_HDR+0xc1b>
    2c4f:	00 00                	add    BYTE PTR [rax],al
    2c51:	03 90 65 00 00 13    	add    edx,DWORD PTR [rax+0x13000065]
    2c57:	ab                   	stos   DWORD PTR es:[rdi],eax
    2c58:	07                   	(bad)
    2c59:	07                   	(bad)
    2c5a:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c5b:	3f                   	(bad)
    2c5c:	00 00                	add    BYTE PTR [rax],al
    2c5e:	4f 71 00             	rex.WRXB jno 2c61 <__GNU_EH_FRAME_HDR+0xc2d>
    2c61:	00 01                	add    BYTE PTR [rcx],al
    2c63:	6b 2c 00 00          	imul   ebp,DWORD PTR [rax+rax*1],0x0
    2c67:	85 2c 00             	test   DWORD PTR [rax+rax*1],ebp
    2c6a:	00 02                	add    BYTE PTR [rdx],al
    2c6c:	2c 71                	sub    al,0x71
    2c6e:	00 00                	add    BYTE PTR [rax],al
    2c70:	01 09                	add    DWORD PTR [rcx],ecx
    2c72:	1d 00 00 01 45       	sbb    eax,0x45010000
    2c77:	71 00                	jno    2c79 <__GNU_EH_FRAME_HDR+0xc45>
    2c79:	00 01                	add    BYTE PTR [rcx],al
    2c7b:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9012c81 <__TMC_END__+0x900ec69>
    2c81:	1d 00 00 00 03       	sbb    eax,0x3000000
    2c86:	90                   	nop
    2c87:	65 00 00             	add    BYTE PTR gs:[rax],al
    2c8a:	13 c3                	adc    eax,ebx
    2c8c:	07                   	(bad)
    2c8d:	07                   	(bad)
    2c8e:	67 14 00             	addr32 adc al,0x0
    2c91:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2c94:	00 00                	add    BYTE PTR [rax],al
    2c96:	01 9f 2c 00 00 b4    	add    DWORD PTR [rdi-0x4bffffd4],ebx
    2c9c:	2c 00                	sub    al,0x0
    2c9e:	00 02                	add    BYTE PTR [rdx],al
    2ca0:	2c 71                	sub    al,0x71
    2ca2:	00 00                	add    BYTE PTR [rax],al
    2ca4:	01 09                	add    DWORD PTR [rcx],ecx
    2ca6:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    2cab:	02 00                	add    al,BYTE PTR [rax]
    2cad:	00 01                	add    BYTE PTR [rcx],al
    2caf:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3002cb5 <__TMC_END__+0x2ffec9d>
    2cb5:	90                   	nop
    2cb6:	65 00 00             	add    BYTE PTR gs:[rax],al
    2cb9:	13 d7                	adc    edx,edi
    2cbb:	07                   	(bad)
    2cbc:	07                   	(bad)
    2cbd:	1e                   	(bad)
    2cbe:	32 00                	xor    al,BYTE PTR [rax]
    2cc0:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2cc3:	00 00                	add    BYTE PTR [rax],al
    2cc5:	01 ce                	add    esi,ecx
    2cc7:	2c 00                	sub    al,0x0
    2cc9:	00 de                	add    dh,bl
    2ccb:	2c 00                	sub    al,0x0
    2ccd:	00 02                	add    BYTE PTR [rdx],al
    2ccf:	2c 71                	sub    al,0x71
    2cd1:	00 00                	add    BYTE PTR [rax],al
    2cd3:	01 09                	add    DWORD PTR [rcx],ecx
    2cd5:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    2cda:	02 00                	add    al,BYTE PTR [rax]
    2cdc:	00 00                	add    BYTE PTR [rax],al
    2cde:	03 90 65 00 00 13    	add    edx,DWORD PTR [rax+0x13000065]
    2ce4:	f0 07                	lock (bad)
    2ce6:	07                   	(bad)
    2ce7:	a0 5e 00 00 4f 71 00 	movabs al,ds:0x10000714f00005e
    2cee:	00 01 
    2cf0:	f8                   	clc
    2cf1:	2c 00                	sub    al,0x0
    2cf3:	00 0d 2d 00 00 02    	add    BYTE PTR [rip+0x200002d],cl        # 2002d26 <__TMC_END__+0x1ffed0e>
    2cf9:	2c 71                	sub    al,0x71
    2cfb:	00 00                	add    BYTE PTR [rax],al
    2cfd:	01 09                	add    DWORD PTR [rcx],ecx
    2cff:	1d 00 00 01 09       	sbb    eax,0x9010000
    2d04:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    2d09:	00 00                	add    BYTE PTR [rax],al
    2d0b:	00 00                	add    BYTE PTR [rax],al
    2d0d:	03 90 65 00 00 13    	add    edx,DWORD PTR [rax+0x13000065]
    2d13:	03 08                	add    ecx,DWORD PTR [rax]
    2d15:	07                   	(bad)
    2d16:	0b 73 00             	or     esi,DWORD PTR [rbx+0x0]
    2d19:	00 0d 21 00 00 01    	add    BYTE PTR [rip+0x1000021],cl        # 1002d40 <__TMC_END__+0xffed28>
    2d1f:	27                   	(bad)
    2d20:	2d 00 00 37 2d       	sub    eax,0x2d370000
    2d25:	00 00                	add    BYTE PTR [rax],al
    2d27:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2d2a:	00 00                	add    BYTE PTR [rax],al
    2d2c:	01 37                	add    DWORD PTR [rdi],esi
    2d2e:	2d 00 00 01 e5       	sub    eax,0xe5010000
    2d33:	00 00                	add    BYTE PTR [rax],al
    2d35:	00 00                	add    BYTE PTR [rax],al
    2d37:	11 03                	adc    DWORD PTR [rbx],eax
    2d39:	35 00 00 13 7c       	xor    eax,0x7c130000
    2d3e:	1e                   	(bad)
    2d3f:	3a 21                	cmp    ah,BYTE PTR [rcx]
    2d41:	00 00                	add    BYTE PTR [rax],al
    2d43:	02 03                	add    al,BYTE PTR [rbx]
    2d45:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d46:	54                   	push   rsp
    2d47:	00 00                	add    BYTE PTR [rax],al
    2d49:	13 42 08             	adc    eax,DWORD PTR [rdx+0x8]
    2d4c:	07                   	(bad)
    2d4d:	44 0e                	rex.R (bad)
    2d4f:	00 00                	add    BYTE PTR [rax],al
    2d51:	4f 71 00             	rex.WRXB jno 2d54 <__GNU_EH_FRAME_HDR+0xd20>
    2d54:	00 01                	add    BYTE PTR [rcx],al
    2d56:	5e                   	pop    rsi
    2d57:	2d 00 00 6e 2d       	sub    eax,0x2d6e0000
    2d5c:	00 00                	add    BYTE PTR [rax],al
    2d5e:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2d61:	00 00                	add    BYTE PTR [rax],al
    2d63:	01 09                	add    DWORD PTR [rcx],ecx
    2d65:	1d 00 00 01 09       	sbb    eax,0x9010000
    2d6a:	1d 00 00 00 03       	sbb    eax,0x3000000
    2d6f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d70:	54                   	push   rsp
    2d71:	00 00                	add    BYTE PTR [rax],al
    2d73:	13 56 08             	adc    edx,DWORD PTR [rsi+0x8]
    2d76:	07                   	(bad)
    2d77:	c3                   	ret
    2d78:	8c 00                	mov    WORD PTR [rax],es
    2d7a:	00 0d 21 00 00 01    	add    BYTE PTR [rip+0x1000021],cl        # 1002da1 <__TMC_END__+0xffed89>
    2d80:	88 2d 00 00 93 2d    	mov    BYTE PTR [rip+0x2d930000],ch        # 2d932d86 <__TMC_END__+0x2d92ed6e>
    2d86:	00 00                	add    BYTE PTR [rax],al
    2d88:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2d8b:	00 00                	add    BYTE PTR [rax],al
    2d8d:	01 37                	add    DWORD PTR [rdi],esi
    2d8f:	2d 00 00 00 03       	sub    eax,0x3000000
    2d94:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d95:	54                   	push   rsp
    2d96:	00 00                	add    BYTE PTR [rax],al
    2d98:	13 6a 08             	adc    ebp,DWORD PTR [rdx+0x8]
    2d9b:	07                   	(bad)
    2d9c:	97                   	xchg   edi,eax
    2d9d:	7b 00                	jnp    2d9f <__GNU_EH_FRAME_HDR+0xd6b>
    2d9f:	00 0d 21 00 00 01    	add    BYTE PTR [rip+0x1000021],cl        # 1002dc6 <__TMC_END__+0xffedae>
    2da5:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    2da6:	2d 00 00 bd 2d       	sub    eax,0x2dbd0000
    2dab:	00 00                	add    BYTE PTR [rax],al
    2dad:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2db0:	00 00                	add    BYTE PTR [rax],al
    2db2:	01 37                	add    DWORD PTR [rdi],esi
    2db4:	2d 00 00 01 37       	sub    eax,0x37010000
    2db9:	2d 00 00 00 12       	sub    eax,0x12000000
    2dbe:	57                   	push   rdi
    2dbf:	48 00 00             	rex.W add BYTE PTR [rax],al
    2dc2:	13 7e 08             	adc    edi,DWORD PTR [rsi+0x8]
    2dc5:	07                   	(bad)
    2dc6:	3e 69 00 00 01 d3 2d 	ds imul eax,DWORD PTR [rax],0x2dd30100
    2dcd:	00 00                	add    BYTE PTR [rax],al
    2dcf:	d9 2d 00 00 02 2c    	fldcw  WORD PTR [rip+0x2c020000]        # 2c022dd5 <__TMC_END__+0x2c01edbd>
    2dd5:	71 00                	jno    2dd7 <__GNU_EH_FRAME_HDR+0xda3>
    2dd7:	00 00                	add    BYTE PTR [rax],al
    2dd9:	03 2a                	add    ebp,DWORD PTR [rdx]
    2ddb:	8d 00                	lea    eax,[rax]
    2ddd:	00 13                	add    BYTE PTR [rbx],dl
    2ddf:	98                   	cwde
    2de0:	08 07                	or     BYTE PTR [rdi],al
    2de2:	8b 13                	mov    edx,DWORD PTR [rbx]
    2de4:	00 00                	add    BYTE PTR [rax],al
    2de6:	4f 71 00             	rex.WRXB jno 2de9 <__GNU_EH_FRAME_HDR+0xdb5>
    2de9:	00 01                	add    BYTE PTR [rcx],al
    2deb:	f3 2d 00 00 08 2e    	repz sub eax,0x2e080000
    2df1:	00 00                	add    BYTE PTR [rax],al
    2df3:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2df6:	00 00                	add    BYTE PTR [rax],al
    2df8:	01 09                	add    DWORD PTR [rcx],ecx
    2dfa:	1d 00 00 01 09       	sbb    eax,0x9010000
    2dff:	1d 00 00 01 45       	sbb    eax,0x45010000
    2e04:	71 00                	jno    2e06 <__GNU_EH_FRAME_HDR+0xdd2>
    2e06:	00 00                	add    BYTE PTR [rax],al
    2e08:	03 2a                	add    ebp,DWORD PTR [rdx]
    2e0a:	8d 00                	lea    eax,[rax]
    2e0c:	00 13                	add    BYTE PTR [rbx],dl
    2e0e:	af                   	scas   eax,DWORD PTR es:[rdi]
    2e0f:	08 07                	or     BYTE PTR [rdi],al
    2e11:	3a 49 00             	cmp    cl,BYTE PTR [rcx+0x0]
    2e14:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2e17:	00 00                	add    BYTE PTR [rax],al
    2e19:	01 22                	add    DWORD PTR [rdx],esp
    2e1b:	2e 00 00             	cs add BYTE PTR [rax],al
    2e1e:	41                   	rex.B
    2e1f:	2e 00 00             	cs add BYTE PTR [rax],al
    2e22:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2e25:	00 00                	add    BYTE PTR [rax],al
    2e27:	01 09                	add    DWORD PTR [rcx],ecx
    2e29:	1d 00 00 01 09       	sbb    eax,0x9010000
    2e2e:	1d 00 00 01 45       	sbb    eax,0x45010000
    2e33:	71 00                	jno    2e35 <__GNU_EH_FRAME_HDR+0xe01>
    2e35:	00 01                	add    BYTE PTR [rcx],al
    2e37:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9012e3d <__TMC_END__+0x900ee25>
    2e3d:	1d 00 00 00 03       	sbb    eax,0x3000000
    2e42:	2a 8d 00 00 13 c9    	sub    cl,BYTE PTR [rbp-0x36ed0000]
    2e48:	08 07                	or     BYTE PTR [rdi],al
    2e4a:	90                   	nop
    2e4b:	00 00                	add    BYTE PTR [rax],al
    2e4d:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2e50:	00 00                	add    BYTE PTR [rax],al
    2e52:	01 5b 2e             	add    DWORD PTR [rbx+0x2e],ebx
    2e55:	00 00                	add    BYTE PTR [rax],al
    2e57:	75 2e                	jne    2e87 <__GNU_EH_FRAME_HDR+0xe53>
    2e59:	00 00                	add    BYTE PTR [rax],al
    2e5b:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2e5e:	00 00                	add    BYTE PTR [rax],al
    2e60:	01 09                	add    DWORD PTR [rcx],ecx
    2e62:	1d 00 00 01 09       	sbb    eax,0x9010000
    2e67:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    2e6c:	02 00                	add    al,BYTE PTR [rax]
    2e6e:	00 01                	add    BYTE PTR [rcx],al
    2e70:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3002e76 <__TMC_END__+0x2ffee5e>
    2e76:	2a 8d 00 00 13 e3    	sub    cl,BYTE PTR [rbp-0x1ced0000]
    2e7c:	08 07                	or     BYTE PTR [rdi],al
    2e7e:	ba 8b 00 00 4f       	mov    edx,0x4f00008b
    2e83:	71 00                	jno    2e85 <__GNU_EH_FRAME_HDR+0xe51>
    2e85:	00 01                	add    BYTE PTR [rcx],al
    2e87:	8f                   	(bad)
    2e88:	2e 00 00             	cs add BYTE PTR [rax],al
    2e8b:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    2e8c:	2e 00 00             	cs add BYTE PTR [rax],al
    2e8f:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2e92:	00 00                	add    BYTE PTR [rax],al
    2e94:	01 09                	add    DWORD PTR [rcx],ecx
    2e96:	1d 00 00 01 09       	sbb    eax,0x9010000
    2e9b:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    2ea0:	02 00                	add    al,BYTE PTR [rax]
    2ea2:	00 00                	add    BYTE PTR [rax],al
    2ea4:	03 2a                	add    ebp,DWORD PTR [rdx]
    2ea6:	8d 00                	lea    eax,[rax]
    2ea8:	00 13                	add    BYTE PTR [rbx],dl
    2eaa:	fc                   	cld
    2eab:	08 07                	or     BYTE PTR [rdi],al
    2ead:	f4                   	hlt
    2eae:	16                   	(bad)
    2eaf:	00 00                	add    BYTE PTR [rax],al
    2eb1:	4f 71 00             	rex.WRXB jno 2eb4 <__GNU_EH_FRAME_HDR+0xe80>
    2eb4:	00 01                	add    BYTE PTR [rcx],al
    2eb6:	be 2e 00 00 d8       	mov    esi,0xd800002e
    2ebb:	2e 00 00             	cs add BYTE PTR [rax],al
    2ebe:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2ec1:	00 00                	add    BYTE PTR [rax],al
    2ec3:	01 09                	add    DWORD PTR [rcx],ecx
    2ec5:	1d 00 00 01 09       	sbb    eax,0x9010000
    2eca:	1d 00 00 01 09       	sbb    eax,0x9010000
    2ecf:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    2ed4:	00 00                	add    BYTE PTR [rax],al
    2ed6:	00 00                	add    BYTE PTR [rax],al
    2ed8:	03 2a                	add    ebp,DWORD PTR [rdx]
    2eda:	8d 00                	lea    eax,[rax]
    2edc:	00 13                	add    BYTE PTR [rbx],dl
    2ede:	0f 09                	wbinvd
    2ee0:	07                   	(bad)
    2ee1:	76 1b                	jbe    2efe <__GNU_EH_FRAME_HDR+0xeca>
    2ee3:	00 00                	add    BYTE PTR [rax],al
    2ee5:	4f 71 00             	rex.WRXB jno 2ee8 <__GNU_EH_FRAME_HDR+0xeb4>
    2ee8:	00 01                	add    BYTE PTR [rcx],al
    2eea:	f2 2e 00 00          	repnz cs add BYTE PTR [rax],al
    2eee:	07                   	(bad)
    2eef:	2f                   	(bad)
    2ef0:	00 00                	add    BYTE PTR [rax],al
    2ef2:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2ef5:	00 00                	add    BYTE PTR [rax],al
    2ef7:	01 37                	add    DWORD PTR [rdi],esi
    2ef9:	2d 00 00 01 37       	sub    eax,0x37010000
    2efe:	2d 00 00 01 45       	sub    eax,0x45010000
    2f03:	71 00                	jno    2f05 <__GNU_EH_FRAME_HDR+0xed1>
    2f05:	00 00                	add    BYTE PTR [rax],al
    2f07:	03 2a                	add    ebp,DWORD PTR [rdx]
    2f09:	8d 00                	lea    eax,[rax]
    2f0b:	00 13                	add    BYTE PTR [rbx],dl
    2f0d:	24 09                	and    al,0x9
    2f0f:	07                   	(bad)
    2f10:	dd 43 00             	fld    QWORD PTR [rbx+0x0]
    2f13:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2f16:	00 00                	add    BYTE PTR [rax],al
    2f18:	01 21                	add    DWORD PTR [rcx],esp
    2f1a:	2f                   	(bad)
    2f1b:	00 00                	add    BYTE PTR [rax],al
    2f1d:	3b 2f                	cmp    ebp,DWORD PTR [rdi]
    2f1f:	00 00                	add    BYTE PTR [rax],al
    2f21:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2f24:	00 00                	add    BYTE PTR [rax],al
    2f26:	01 37                	add    DWORD PTR [rdi],esi
    2f28:	2d 00 00 01 37       	sub    eax,0x37010000
    2f2d:	2d 00 00 01 c0       	sub    eax,0xc0010000
    2f32:	02 00                	add    al,BYTE PTR [rax]
    2f34:	00 01                	add    BYTE PTR [rcx],al
    2f36:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3002f3c <__TMC_END__+0x2ffef24>
    2f3c:	2a 8d 00 00 13 3b    	sub    cl,BYTE PTR [rbp+0x3b130000]
    2f42:	09 07                	or     DWORD PTR [rdi],eax
    2f44:	23 56 00             	and    edx,DWORD PTR [rsi+0x0]
    2f47:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2f4a:	00 00                	add    BYTE PTR [rax],al
    2f4c:	01 55 2f             	add    DWORD PTR [rbp+0x2f],edx
    2f4f:	00 00                	add    BYTE PTR [rax],al
    2f51:	6a 2f                	push   0x2f
    2f53:	00 00                	add    BYTE PTR [rax],al
    2f55:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2f58:	00 00                	add    BYTE PTR [rax],al
    2f5a:	01 37                	add    DWORD PTR [rdi],esi
    2f5c:	2d 00 00 01 37       	sub    eax,0x37010000
    2f61:	2d 00 00 01 c0       	sub    eax,0xc0010000
    2f66:	02 00                	add    al,BYTE PTR [rax]
    2f68:	00 00                	add    BYTE PTR [rax],al
    2f6a:	03 2a                	add    ebp,DWORD PTR [rdx]
    2f6c:	8d 00                	lea    eax,[rax]
    2f6e:	00 13                	add    BYTE PTR [rbx],dl
    2f70:	51                   	push   rcx
    2f71:	09 07                	or     DWORD PTR [rdi],eax
    2f73:	23 2f                	and    ebp,DWORD PTR [rdi]
    2f75:	00 00                	add    BYTE PTR [rax],al
    2f77:	4f 71 00             	rex.WRXB jno 2f7a <__GNU_EH_FRAME_HDR+0xf46>
    2f7a:	00 01                	add    BYTE PTR [rcx],al
    2f7c:	84 2f                	test   BYTE PTR [rdi],ch
    2f7e:	00 00                	add    BYTE PTR [rax],al
    2f80:	9e                   	sahf
    2f81:	2f                   	(bad)
    2f82:	00 00                	add    BYTE PTR [rax],al
    2f84:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2f87:	00 00                	add    BYTE PTR [rax],al
    2f89:	01 37                	add    DWORD PTR [rdi],esi
    2f8b:	2d 00 00 01 37       	sub    eax,0x37010000
    2f90:	2d 00 00 01 09       	sub    eax,0x9010000
    2f95:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    2f9a:	00 00                	add    BYTE PTR [rax],al
    2f9c:	00 00                	add    BYTE PTR [rax],al
    2f9e:	03 2a                	add    ebp,DWORD PTR [rdx]
    2fa0:	8d 00                	lea    eax,[rax]
    2fa2:	00 13                	add    BYTE PTR [rbx],dl
    2fa4:	8c 09                	mov    WORD PTR [rcx],cs
    2fa6:	07                   	(bad)
    2fa7:	95                   	xchg   ebp,eax
    2fa8:	34 00                	xor    al,0x0
    2faa:	00 4f 71             	add    BYTE PTR [rdi+0x71],cl
    2fad:	00 00                	add    BYTE PTR [rax],al
    2faf:	01 b8 2f 00 00 d2    	add    DWORD PTR [rax-0x2dffffd1],edi
    2fb5:	2f                   	(bad)
    2fb6:	00 00                	add    BYTE PTR [rax],al
    2fb8:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    2fbb:	00 00                	add    BYTE PTR [rax],al
    2fbd:	01 37                	add    DWORD PTR [rdi],esi
    2fbf:	2d 00 00 01 37       	sub    eax,0x37010000
    2fc4:	2d 00 00 01 03       	sub    eax,0x3010000
    2fc9:	58                   	pop    rax
    2fca:	00 00                	add    BYTE PTR [rax],al
    2fcc:	01 03                	add    DWORD PTR [rbx],eax
    2fce:	58                   	pop    rax
    2fcf:	00 00                	add    BYTE PTR [rax],al
    2fd1:	00 03                	add    BYTE PTR [rbx],al
    2fd3:	2a 8d 00 00 13 98    	sub    cl,BYTE PTR [rbp-0x67ed0000]
    2fd9:	09 07                	or     DWORD PTR [rdi],eax
    2fdb:	46 50                	rex.RX push rax
    2fdd:	00 00                	add    BYTE PTR [rax],al
    2fdf:	4f 71 00             	rex.WRXB jno 2fe2 <__GNU_EH_FRAME_HDR+0xfae>
    2fe2:	00 01                	add    BYTE PTR [rcx],al
    2fe4:	ec                   	in     al,dx
    2fe5:	2f                   	(bad)
    2fe6:	00 00                	add    BYTE PTR [rax],al
    2fe8:	06                   	(bad)
    2fe9:	30 00                	xor    BYTE PTR [rax],al
    2feb:	00 02                	add    BYTE PTR [rdx],al
    2fed:	2c 71                	sub    al,0x71
    2fef:	00 00                	add    BYTE PTR [rax],al
    2ff1:	01 37                	add    DWORD PTR [rdi],esi
    2ff3:	2d 00 00 01 37       	sub    eax,0x37010000
    2ff8:	2d 00 00 01 c0       	sub    eax,0xc0010000
    2ffd:	02 00                	add    al,BYTE PTR [rax]
    2fff:	00 01                	add    BYTE PTR [rcx],al
    3001:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3004:	00 00                	add    BYTE PTR [rax],al
    3006:	03 2a                	add    ebp,DWORD PTR [rdx]
    3008:	8d 00                	lea    eax,[rax]
    300a:	00 13                	add    BYTE PTR [rbx],dl
    300c:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    300d:	09 07                	or     DWORD PTR [rdi],eax
    300f:	08 15 00 00 4f 71    	or     BYTE PTR [rip+0x714f0000],dl        # 714f3015 <__TMC_END__+0x714eeffd>
    3015:	00 00                	add    BYTE PTR [rax],al
    3017:	01 20                	add    DWORD PTR [rax],esp
    3019:	30 00                	xor    BYTE PTR [rax],al
    301b:	00 3a                	add    BYTE PTR [rdx],bh
    301d:	30 00                	xor    BYTE PTR [rax],al
    301f:	00 02                	add    BYTE PTR [rdx],al
    3021:	2c 71                	sub    al,0x71
    3023:	00 00                	add    BYTE PTR [rax],al
    3025:	01 37                	add    DWORD PTR [rdi],esi
    3027:	2d 00 00 01 37       	sub    eax,0x37010000
    302c:	2d 00 00 01 0d       	sub    eax,0xd010000
    3031:	21 00                	and    DWORD PTR [rax],eax
    3033:	00 01                	add    BYTE PTR [rcx],al
    3035:	0d 21 00 00 00       	or     eax,0x21
    303a:	03 2a                	add    ebp,DWORD PTR [rdx]
    303c:	8d 00                	lea    eax,[rax]
    303e:	00 13                	add    BYTE PTR [rbx],dl
    3040:	b0 09                	mov    al,0x9
    3042:	07                   	(bad)
    3043:	41 60                	rex.B (bad)
    3045:	00 00                	add    BYTE PTR [rax],al
    3047:	4f 71 00             	rex.WRXB jno 304a <__GNU_EH_FRAME_HDR+0x1016>
    304a:	00 01                	add    BYTE PTR [rcx],al
    304c:	54                   	push   rsp
    304d:	30 00                	xor    BYTE PTR [rax],al
    304f:	00 6e 30             	add    BYTE PTR [rsi+0x30],ch
    3052:	00 00                	add    BYTE PTR [rax],al
    3054:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    3057:	00 00                	add    BYTE PTR [rax],al
    3059:	01 37                	add    DWORD PTR [rdi],esi
    305b:	2d 00 00 01 37       	sub    eax,0x37010000
    3060:	2d 00 00 01 3a       	sub    eax,0x3a010000
    3065:	21 00                	and    DWORD PTR [rax],eax
    3067:	00 01                	add    BYTE PTR [rcx],al
    3069:	3a 21                	cmp    ah,BYTE PTR [rcx]
    306b:	00 00                	add    BYTE PTR [rax],al
    306d:	00 03                	add    BYTE PTR [rbx],al
    306f:	2a 8d 00 00 13 ca    	sub    cl,BYTE PTR [rbp-0x35ed0000]
    3075:	09 15 1f 30 00 00    	or     DWORD PTR [rip+0x301f],edx        # 609a <__TMC_END__+0x2082>
    307b:	4f 71 00             	rex.WRXB jno 307e <__GNU_EH_FRAME_HDR+0x104a>
    307e:	00 01                	add    BYTE PTR [rcx],al
    3080:	88 30                	mov    BYTE PTR [rax],dh
    3082:	00 00                	add    BYTE PTR [rax],al
    3084:	9d                   	popf
    3085:	30 00                	xor    BYTE PTR [rax],al
    3087:	00 02                	add    BYTE PTR [rdx],al
    3089:	2c 71                	sub    al,0x71
    308b:	00 00                	add    BYTE PTR [rax],al
    308d:	01 3a                	add    DWORD PTR [rdx],edi
    308f:	21 00                	and    DWORD PTR [rax],eax
    3091:	00 01                	add    BYTE PTR [rcx],al
    3093:	3a 21                	cmp    ah,BYTE PTR [rcx]
    3095:	00 00                	add    BYTE PTR [rax],al
    3097:	01 e8                	add    eax,ebp
    3099:	38 00                	cmp    BYTE PTR [rax],al
    309b:	00 00                	add    BYTE PTR [rax],al
    309d:	18 43 87             	sbb    BYTE PTR [rbx-0x79],al
    30a0:	00 00                	add    BYTE PTR [rax],al
    30a2:	13 1a                	adc    ebx,DWORD PTR [rdx]
    30a4:	0a 88 43 00 00 4f    	or     cl,BYTE PTR [rax+0x4f000043]
    30aa:	71 00                	jno    30ac <__GNU_EH_FRAME_HDR+0x1078>
    30ac:	00 b5 30 00 00 cf    	add    BYTE PTR [rbp-0x30ffffd0],dh
    30b2:	30 00                	xor    BYTE PTR [rax],al
    30b4:	00 02                	add    BYTE PTR [rdx],al
    30b6:	2c 71                	sub    al,0x71
    30b8:	00 00                	add    BYTE PTR [rax],al
    30ba:	01 09                	add    DWORD PTR [rcx],ecx
    30bc:	1d 00 00 01 09       	sbb    eax,0x9010000
    30c1:	1d 00 00 01 09       	sbb    eax,0x9010000
    30c6:	1d 00 00 01 e5       	sbb    eax,0xe5010000
    30cb:	00 00                	add    BYTE PTR [rax],al
    30cd:	00 00                	add    BYTE PTR [rax],al
    30cf:	17                   	(bad)
    30d0:	48 39 00             	cmp    QWORD PTR [rax],rax
    30d3:	00 13                	add    BYTE PTR [rbx],dl
    30d5:	1e                   	(bad)
    30d6:	0a 7d 8e             	or     bh,BYTE PTR [rbp-0x72]
    30d9:	00 00                	add    BYTE PTR [rax],al
    30db:	e3 30                	jrcxz  310d <__GNU_EH_FRAME_HDR+0x10d9>
    30dd:	00 00                	add    BYTE PTR [rax],al
    30df:	02 31                	add    dh,BYTE PTR [rcx]
    30e1:	00 00                	add    BYTE PTR [rax],al
    30e3:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    30e6:	00 00                	add    BYTE PTR [rax],al
    30e8:	01 c5                	add    ebp,eax
    30ea:	1c 00                	sbb    al,0x0
    30ec:	00 01                	add    BYTE PTR [rcx],al
    30ee:	09 1d 00 00 01 c0    	or     DWORD PTR [rip+0xffffffffc0010000],ebx        # ffffffffc00130f4 <__TMC_END__+0xffffffffc000f0dc>
    30f4:	02 00                	add    al,BYTE PTR [rax]
    30f6:	00 01                	add    BYTE PTR [rcx],al
    30f8:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 90130fe <__TMC_END__+0x900f0e6>
    30fe:	1d 00 00 00 18       	sbb    eax,0x18000000
    3103:	27                   	(bad)
    3104:	8d 00                	lea    eax,[rax]
    3106:	00 13                	add    BYTE PTR [rbx],dl
    3108:	23 0a                	and    ecx,DWORD PTR [rdx]
    310a:	5f                   	pop    rdi
    310b:	55                   	push   rbp
    310c:	00 00                	add    BYTE PTR [rax],al
    310e:	4f 71 00             	rex.WRXB jno 3111 <__GNU_EH_FRAME_HDR+0x10dd>
    3111:	00 1a                	add    BYTE PTR [rdx],bl
    3113:	31 00                	xor    DWORD PTR [rax],eax
    3115:	00 34 31             	add    BYTE PTR [rcx+rsi*1],dh
    3118:	00 00                	add    BYTE PTR [rax],al
    311a:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    311d:	00 00                	add    BYTE PTR [rax],al
    311f:	01 09                	add    DWORD PTR [rcx],ecx
    3121:	1d 00 00 01 09       	sbb    eax,0x9010000
    3126:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    312b:	02 00                	add    al,BYTE PTR [rax]
    312d:	00 01                	add    BYTE PTR [rcx],al
    312f:	09 1d 00 00 00 18    	or     DWORD PTR [rip+0x18000000],ebx        # 18003135 <__TMC_END__+0x17fff11d>
    3135:	2e 69 00 00 13 28 0a 	cs imul eax,DWORD PTR [rax],0xa281300
    313c:	51                   	push   rcx
    313d:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    3140:	4f 71 00             	rex.WRXB jno 3143 <__GNU_EH_FRAME_HDR+0x110f>
    3143:	00 4c 31 00          	add    BYTE PTR [rcx+rsi*1+0x0],cl
    3147:	00 5c 31 00          	add    BYTE PTR [rcx+rsi*1+0x0],bl
    314b:	00 02                	add    BYTE PTR [rdx],al
    314d:	2c 71                	sub    al,0x71
    314f:	00 00                	add    BYTE PTR [rax],al
    3151:	01 c0                	add    eax,eax
    3153:	02 00                	add    al,BYTE PTR [rax]
    3155:	00 01                	add    BYTE PTR [rcx],al
    3157:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 300315d <__TMC_END__+0x2fff145>
    315d:	26 1b 00             	es sbb eax,DWORD PTR [rax]
    3160:	00 13                	add    BYTE PTR [rbx],dl
    3162:	3a 0a                	cmp    cl,BYTE PTR [rdx]
    3164:	07                   	(bad)
    3165:	b5 19                	mov    ch,0x19
    3167:	00 00                	add    BYTE PTR [rax],al
    3169:	09 1d 00 00 01 76    	or     DWORD PTR [rip+0x76010000],ebx        # 7601316f <__TMC_END__+0x7600f157>
    316f:	31 00                	xor    DWORD PTR [rax],eax
    3171:	00 8b 31 00 00 02    	add    BYTE PTR [rbx+0x2000031],cl
    3177:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    317a:	00 01                	add    BYTE PTR [rcx],al
    317c:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    317f:	00 01                	add    BYTE PTR [rcx],al
    3181:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9013187 <__TMC_END__+0x900f16f>
    3187:	1d 00 00 00 12       	sbb    eax,0x12000000
    318c:	f7 28                	imul   DWORD PTR [rax]
    318e:	00 00                	add    BYTE PTR [rax],al
    3190:	13 45 0a             	adc    eax,DWORD PTR [rbp+0xa]
    3193:	07                   	(bad)
    3194:	43                   	rex.XB
    3195:	64 00 00             	add    BYTE PTR fs:[rax],al
    3198:	01 a1 31 00 00 ac    	add    DWORD PTR [rcx-0x53ffffcf],esp
    319e:	31 00                	xor    DWORD PTR [rax],eax
    31a0:	00 02                	add    BYTE PTR [rdx],al
    31a2:	2c 71                	sub    al,0x71
    31a4:	00 00                	add    BYTE PTR [rax],al
    31a6:	01 4f 71             	add    DWORD PTR [rdi+0x71],ecx
    31a9:	00 00                	add    BYTE PTR [rax],al
    31ab:	00 03                	add    BYTE PTR [rbx],al
    31ad:	d8 4c 00 00          	fmul   DWORD PTR [rax+rax*1+0x0]
    31b1:	13 50 0a             	adc    edx,DWORD PTR [rax+0xa]
    31b4:	07                   	(bad)
    31b5:	7a 87                	jp     313e <__GNU_EH_FRAME_HDR+0x110a>
    31b7:	00 00                	add    BYTE PTR [rax],al
    31b9:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    31bc:	00 01                	add    BYTE PTR [rcx],al
    31be:	c6                   	(bad)
    31bf:	31 00                	xor    DWORD PTR [rax],eax
    31c1:	00 cc                	add    ah,cl
    31c3:	31 00                	xor    DWORD PTR [rax],eax
    31c5:	00 02                	add    BYTE PTR [rdx],al
    31c7:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    31ca:	00 00                	add    BYTE PTR [rax],al
    31cc:	03 da                	add    ebx,edx
    31ce:	56                   	push   rsi
    31cf:	00 00                	add    BYTE PTR [rax],al
    31d1:	13 5d 0a             	adc    ebx,DWORD PTR [rbp+0xa]
    31d4:	07                   	(bad)
    31d5:	83 5f 00 00          	sbb    DWORD PTR [rdi+0x0],0x0
    31d9:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    31dc:	00 01                	add    BYTE PTR [rcx],al
    31de:	e6 31                	out    0x31,al
    31e0:	00 00                	add    BYTE PTR [rax],al
    31e2:	ec                   	in     al,dx
    31e3:	31 00                	xor    DWORD PTR [rax],eax
    31e5:	00 02                	add    BYTE PTR [rdx],al
    31e7:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    31ea:	00 00                	add    BYTE PTR [rax],al
    31ec:	03 da                	add    ebx,edx
    31ee:	56                   	push   rsi
    31ef:	00 00                	add    BYTE PTR [rax],al
    31f1:	13 69 0a             	adc    ebp,DWORD PTR [rcx+0xa]
    31f4:	07                   	(bad)
    31f5:	d3 5b 00             	rcr    DWORD PTR [rbx+0x0],cl
    31f8:	00 03                	add    BYTE PTR [rbx],al
    31fa:	58                   	pop    rax
    31fb:	00 00                	add    BYTE PTR [rax],al
    31fd:	01 06                	add    DWORD PTR [rsi],eax
    31ff:	32 00                	xor    al,BYTE PTR [rax]
    3201:	00 0c 32             	add    BYTE PTR [rdx+rsi*1],cl
    3204:	00 00                	add    BYTE PTR [rax],al
    3206:	02 2c 71             	add    ch,BYTE PTR [rcx+rsi*2]
    3209:	00 00                	add    BYTE PTR [rax],al
    320b:	00 03                	add    BYTE PTR [rbx],al
    320d:	5b                   	pop    rbx
    320e:	10 00                	adc    BYTE PTR [rax],al
    3210:	00 13                	add    BYTE PTR [rbx],dl
    3212:	72 0a                	jb     321e <__GNU_EH_FRAME_HDR+0x11ea>
    3214:	07                   	(bad)
    3215:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3216:	79 00                	jns    3218 <__GNU_EH_FRAME_HDR+0x11e4>
    3218:	00 6b 1f             	add    BYTE PTR [rbx+0x1f],ch
    321b:	00 00                	add    BYTE PTR [rax],al
    321d:	01 26                	add    DWORD PTR [rsi],esp
    321f:	32 00                	xor    al,BYTE PTR [rax]
    3221:	00 2c 32             	add    BYTE PTR [rdx+rsi*1],ch
    3224:	00 00                	add    BYTE PTR [rax],al
    3226:	02 31                	add    dh,BYTE PTR [rcx]
    3228:	71 00                	jno    322a <__GNU_EH_FRAME_HDR+0x11f6>
    322a:	00 00                	add    BYTE PTR [rax],al
    322c:	03 4b 19             	add    ecx,DWORD PTR [rbx+0x19]
    322f:	00 00                	add    BYTE PTR [rax],al
    3231:	13 83 0a 07 8a 33    	adc    eax,DWORD PTR [rbx+0x338a070a]
    3237:	00 00                	add    BYTE PTR [rax],al
    3239:	09 1d 00 00 01 46    	or     DWORD PTR [rip+0x46010000],ebx        # 4601323f <__TMC_END__+0x4600f227>
    323f:	32 00                	xor    al,BYTE PTR [rax]
    3241:	00 5b 32             	add    BYTE PTR [rbx+0x32],bl
    3244:	00 00                	add    BYTE PTR [rax],al
    3246:	02 31                	add    dh,BYTE PTR [rcx]
    3248:	71 00                	jno    324a <__GNU_EH_FRAME_HDR+0x1216>
    324a:	00 01                	add    BYTE PTR [rcx],al
    324c:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    324f:	00 01                	add    BYTE PTR [rcx],al
    3251:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9013257 <__TMC_END__+0x900f23f>
    3257:	1d 00 00 00 03       	sbb    eax,0x3000000
    325c:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
    325f:	00 13                	add    BYTE PTR [rbx],dl
    3261:	92                   	xchg   edx,eax
    3262:	0a 07                	or     al,BYTE PTR [rdi]
    3264:	62 66 00 00 09       	(bad)
    3269:	1d 00 00 01 75       	sbb    eax,0x75010000
    326e:	32 00                	xor    al,BYTE PTR [rax]
    3270:	00 85 32 00 00 02    	add    BYTE PTR [rbp+0x2000032],al
    3276:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    3279:	00 01                	add    BYTE PTR [rcx],al
    327b:	45 71 00             	rex.RB jno 327e <__GNU_EH_FRAME_HDR+0x124a>
    327e:	00 01                	add    BYTE PTR [rcx],al
    3280:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3003286 <__TMC_END__+0x2fff26e>
    3286:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
    3289:	00 13                	add    BYTE PTR [rbx],dl
    328b:	b4 0a                	mov    ah,0xa
    328d:	07                   	(bad)
    328e:	05 29 00 00 09       	add    eax,0x9000029
    3293:	1d 00 00 01 9f       	sbb    eax,0x9f010000
    3298:	32 00                	xor    al,BYTE PTR [rax]
    329a:	00 af 32 00 00 02    	add    BYTE PTR [rdi+0x2000032],ch
    32a0:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    32a3:	00 01                	add    BYTE PTR [rcx],al
    32a5:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    32a8:	00 01                	add    BYTE PTR [rcx],al
    32aa:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 30032b0 <__TMC_END__+0x2fff298>
    32b0:	4b 19 00             	rex.WXB sbb QWORD PTR [r8],rax
    32b3:	00 13                	add    BYTE PTR [rbx],dl
    32b5:	c6                   	(bad)
    32b6:	0a 07                	or     al,BYTE PTR [rdi]
    32b8:	48                   	rex.W
    32b9:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    32bc:	09 1d 00 00 01 c9    	or     DWORD PTR [rip+0xffffffffc9010000],ebx        # ffffffffc90132c2 <__TMC_END__+0xffffffffc900f2aa>
    32c2:	32 00                	xor    al,BYTE PTR [rax]
    32c4:	00 d9                	add    cl,bl
    32c6:	32 00                	xor    al,BYTE PTR [rax]
    32c8:	00 02                	add    BYTE PTR [rdx],al
    32ca:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    32cd:	00 01                	add    BYTE PTR [rcx],al
    32cf:	e5 00                	in     eax,0x0
    32d1:	00 00                	add    BYTE PTR [rax],al
    32d3:	01 09                	add    DWORD PTR [rcx],ecx
    32d5:	1d 00 00 00 03       	sbb    eax,0x3000000
    32da:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    32dd:	00 13                	add    BYTE PTR [rbx],dl
    32df:	d4                   	(bad)
    32e0:	0a 07                	or     al,BYTE PTR [rdi]
    32e2:	2d 42 00 00 09       	sub    eax,0x9000042
    32e7:	1d 00 00 01 f3       	sbb    eax,0xf3010000
    32ec:	32 00                	xor    al,BYTE PTR [rax]
    32ee:	00 03                	add    BYTE PTR [rbx],al
    32f0:	33 00                	xor    eax,DWORD PTR [rax]
    32f2:	00 02                	add    BYTE PTR [rdx],al
    32f4:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    32f7:	00 01                	add    BYTE PTR [rcx],al
    32f9:	45 71 00             	rex.RB jno 32fc <__GNU_EH_FRAME_HDR+0x12c8>
    32fc:	00 01                	add    BYTE PTR [rcx],al
    32fe:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3003304 <__TMC_END__+0x2fff2ec>
    3304:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    3307:	00 13                	add    BYTE PTR [rbx],dl
    3309:	f8                   	clc
    330a:	0a 07                	or     al,BYTE PTR [rdi]
    330c:	3d 57 00 00 09       	cmp    eax,0x9000057
    3311:	1d 00 00 01 1d       	sbb    eax,0x1d010000
    3316:	33 00                	xor    eax,DWORD PTR [rax]
    3318:	00 32                	add    BYTE PTR [rdx],dh
    331a:	33 00                	xor    eax,DWORD PTR [rax]
    331c:	00 02                	add    BYTE PTR [rdx],al
    331e:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    3321:	00 01                	add    BYTE PTR [rcx],al
    3323:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3326:	00 01                	add    BYTE PTR [rcx],al
    3328:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 901332e <__TMC_END__+0x900f316>
    332e:	1d 00 00 00 03       	sbb    eax,0x3000000
    3333:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    3336:	00 13                	add    BYTE PTR [rbx],dl
    3338:	07                   	(bad)
    3339:	0b 07                	or     eax,DWORD PTR [rdi]
    333b:	b9 66 00 00 09       	mov    ecx,0x9000066
    3340:	1d 00 00 01 4c       	sbb    eax,0x4c010000
    3345:	33 00                	xor    eax,DWORD PTR [rax]
    3347:	00 5c 33 00          	add    BYTE PTR [rbx+rsi*1+0x0],bl
    334b:	00 02                	add    BYTE PTR [rdx],al
    334d:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    3350:	00 01                	add    BYTE PTR [rcx],al
    3352:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3355:	00 01                	add    BYTE PTR [rcx],al
    3357:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 300335d <__TMC_END__+0x2fff345>
    335d:	4a 19 00             	rex.WX sbb QWORD PTR [rax],rax
    3360:	00 13                	add    BYTE PTR [rbx],dl
    3362:	19 0b                	sbb    DWORD PTR [rbx],ecx
    3364:	07                   	(bad)
    3365:	fd                   	std
    3366:	80 00 00             	add    BYTE PTR [rax],0x0
    3369:	09 1d 00 00 01 76    	or     DWORD PTR [rip+0x76010000],ebx        # 7601336f <__TMC_END__+0x7600f357>
    336f:	33 00                	xor    eax,DWORD PTR [rax]
    3371:	00 86 33 00 00 02    	add    BYTE PTR [rsi+0x2000033],al
    3377:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    337a:	00 01                	add    BYTE PTR [rcx],al
    337c:	e5 00                	in     eax,0x0
    337e:	00 00                	add    BYTE PTR [rax],al
    3380:	01 09                	add    DWORD PTR [rcx],ecx
    3382:	1d 00 00 00 03       	sbb    eax,0x3000000
    3387:	1f                   	(bad)
    3388:	95                   	xchg   ebp,eax
    3389:	00 00                	add    BYTE PTR [rax],al
    338b:	13 28                	adc    ebp,DWORD PTR [rax]
    338d:	0b 07                	or     eax,DWORD PTR [rdi]
    338f:	0c 58                	or     al,0x58
    3391:	00 00                	add    BYTE PTR [rax],al
    3393:	09 1d 00 00 01 a0    	or     DWORD PTR [rip+0xffffffffa0010000],ebx        # ffffffffa0013399 <__TMC_END__+0xffffffffa000f381>
    3399:	33 00                	xor    eax,DWORD PTR [rax]
    339b:	00 b0 33 00 00 02    	add    BYTE PTR [rax+0x2000033],dh
    33a1:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    33a4:	00 01                	add    BYTE PTR [rcx],al
    33a6:	45 71 00             	rex.RB jno 33a9 <__GNU_EH_FRAME_HDR+0x1375>
    33a9:	00 01                	add    BYTE PTR [rcx],al
    33ab:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 30033b1 <__TMC_END__+0x2fff399>
    33b1:	1f                   	(bad)
    33b2:	95                   	xchg   ebp,eax
    33b3:	00 00                	add    BYTE PTR [rax],al
    33b5:	13 4d 0b             	adc    ecx,DWORD PTR [rbp+0xb]
    33b8:	07                   	(bad)
    33b9:	d1 20                	shl    DWORD PTR [rax],1
    33bb:	00 00                	add    BYTE PTR [rax],al
    33bd:	09 1d 00 00 01 ca    	or     DWORD PTR [rip+0xffffffffca010000],ebx        # ffffffffca0133c3 <__TMC_END__+0xffffffffca00f3ab>
    33c3:	33 00                	xor    eax,DWORD PTR [rax]
    33c5:	00 df                	add    bh,bl
    33c7:	33 00                	xor    eax,DWORD PTR [rax]
    33c9:	00 02                	add    BYTE PTR [rdx],al
    33cb:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    33ce:	00 01                	add    BYTE PTR [rcx],al
    33d0:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    33d3:	00 01                	add    BYTE PTR [rcx],al
    33d5:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 90133db <__TMC_END__+0x900f3c3>
    33db:	1d 00 00 00 03       	sbb    eax,0x3000000
    33e0:	1f                   	(bad)
    33e1:	95                   	xchg   ebp,eax
    33e2:	00 00                	add    BYTE PTR [rax],al
    33e4:	13 5c 0b 07          	adc    ebx,DWORD PTR [rbx+rcx*1+0x7]
    33e8:	88 5b 00             	mov    BYTE PTR [rbx+0x0],bl
    33eb:	00 09                	add    BYTE PTR [rcx],cl
    33ed:	1d 00 00 01 f9       	sbb    eax,0xf9010000
    33f2:	33 00                	xor    eax,DWORD PTR [rax]
    33f4:	00 09                	add    BYTE PTR [rcx],cl
    33f6:	34 00                	xor    al,0x0
    33f8:	00 02                	add    BYTE PTR [rdx],al
    33fa:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    33fd:	00 01                	add    BYTE PTR [rcx],al
    33ff:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3402:	00 01                	add    BYTE PTR [rcx],al
    3404:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 300340a <__TMC_END__+0x2fff3f2>
    340a:	1f                   	(bad)
    340b:	95                   	xchg   ebp,eax
    340c:	00 00                	add    BYTE PTR [rax],al
    340e:	13 71 0b             	adc    esi,DWORD PTR [rcx+0xb]
    3411:	07                   	(bad)
    3412:	9c                   	pushf
    3413:	1f                   	(bad)
    3414:	00 00                	add    BYTE PTR [rax],al
    3416:	09 1d 00 00 01 23    	or     DWORD PTR [rip+0x23010000],ebx        # 2301341c <__TMC_END__+0x2300f404>
    341c:	34 00                	xor    al,0x0
    341e:	00 33                	add    BYTE PTR [rbx],dh
    3420:	34 00                	xor    al,0x0
    3422:	00 02                	add    BYTE PTR [rdx],al
    3424:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    3427:	00 01                	add    BYTE PTR [rcx],al
    3429:	e5 00                	in     eax,0x0
    342b:	00 00                	add    BYTE PTR [rax],al
    342d:	01 09                	add    DWORD PTR [rcx],ecx
    342f:	1d 00 00 00 03       	sbb    eax,0x3000000
    3434:	de 89 00 00 13 81    	fimul  WORD PTR [rcx-0x7eed0000]
    343a:	0b 07                	or     eax,DWORD PTR [rdi]
    343c:	43 61                	rex.XB (bad)
    343e:	00 00                	add    BYTE PTR [rax],al
    3440:	09 1d 00 00 01 4d    	or     DWORD PTR [rip+0x4d010000],ebx        # 4d013446 <__TMC_END__+0x4d00f42e>
    3446:	34 00                	xor    al,0x0
    3448:	00 5d 34             	add    BYTE PTR [rbp+0x34],bl
    344b:	00 00                	add    BYTE PTR [rax],al
    344d:	02 31                	add    dh,BYTE PTR [rcx]
    344f:	71 00                	jno    3451 <__GNU_EH_FRAME_HDR+0x141d>
    3451:	00 01                	add    BYTE PTR [rcx],al
    3453:	45 71 00             	rex.RB jno 3456 <__GNU_EH_FRAME_HDR+0x1422>
    3456:	00 01                	add    BYTE PTR [rcx],al
    3458:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 300345e <__TMC_END__+0x2fff446>
    345e:	de 89 00 00 13 a6    	fimul  WORD PTR [rcx-0x59ed0000]
    3464:	0b 07                	or     eax,DWORD PTR [rdi]
    3466:	c5 3d 00             	(bad)
    3469:	00 09                	add    BYTE PTR [rcx],cl
    346b:	1d 00 00 01 77       	sbb    eax,0x77010000
    3470:	34 00                	xor    al,0x0
    3472:	00 8c 34 00 00 02 31 	add    BYTE PTR [rsp+rsi*1+0x31020000],cl
    3479:	71 00                	jno    347b <__GNU_EH_FRAME_HDR+0x1447>
    347b:	00 01                	add    BYTE PTR [rcx],al
    347d:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3480:	00 01                	add    BYTE PTR [rcx],al
    3482:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9013488 <__TMC_END__+0x900f470>
    3488:	1d 00 00 00 03       	sbb    eax,0x3000000
    348d:	de 89 00 00 13 b5    	fimul  WORD PTR [rcx-0x4aed0000]
    3493:	0b 07                	or     eax,DWORD PTR [rdi]
    3495:	90                   	nop
    3496:	22 00                	and    al,BYTE PTR [rax]
    3498:	00 09                	add    BYTE PTR [rcx],cl
    349a:	1d 00 00 01 a6       	sbb    eax,0xa6010000
    349f:	34 00                	xor    al,0x0
    34a1:	00 b6 34 00 00 02    	add    BYTE PTR [rsi+0x2000034],dh
    34a7:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    34aa:	00 01                	add    BYTE PTR [rcx],al
    34ac:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    34af:	00 01                	add    BYTE PTR [rcx],al
    34b1:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 30034b7 <__TMC_END__+0x2fff49f>
    34b7:	de 89 00 00 13 ca    	fimul  WORD PTR [rcx-0x35ed0000]
    34bd:	0b 07                	or     eax,DWORD PTR [rdi]
    34bf:	1d 80 00 00 09       	sbb    eax,0x9000080
    34c4:	1d 00 00 01 d0       	sbb    eax,0xd0010000
    34c9:	34 00                	xor    al,0x0
    34cb:	00 e0                	add    al,ah
    34cd:	34 00                	xor    al,0x0
    34cf:	00 02                	add    BYTE PTR [rdx],al
    34d1:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    34d4:	00 01                	add    BYTE PTR [rcx],al
    34d6:	e5 00                	in     eax,0x0
    34d8:	00 00                	add    BYTE PTR [rax],al
    34da:	01 09                	add    DWORD PTR [rcx],ecx
    34dc:	1d 00 00 00 03       	sbb    eax,0x3000000
    34e1:	35 7c 00 00 13       	xor    eax,0x1300007c
    34e6:	d9 0b                	(bad) [rbx]
    34e8:	07                   	(bad)
    34e9:	e3 3a                	jrcxz  3525 <__GNU_EH_FRAME_HDR+0x14f1>
    34eb:	00 00                	add    BYTE PTR [rax],al
    34ed:	09 1d 00 00 01 fa    	or     DWORD PTR [rip+0xfffffffffa010000],ebx        # fffffffffa0134f3 <__TMC_END__+0xfffffffffa00f4db>
    34f3:	34 00                	xor    al,0x0
    34f5:	00 0a                	add    BYTE PTR [rdx],cl
    34f7:	35 00 00 02 31       	xor    eax,0x31020000
    34fc:	71 00                	jno    34fe <__GNU_EH_FRAME_HDR+0x14ca>
    34fe:	00 01                	add    BYTE PTR [rcx],al
    3500:	45 71 00             	rex.RB jno 3503 <__GNU_EH_FRAME_HDR+0x14cf>
    3503:	00 01                	add    BYTE PTR [rcx],al
    3505:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 300350b <__TMC_END__+0x2fff4f3>
    350b:	35 7c 00 00 13       	xor    eax,0x1300007c
    3510:	fe 0b                	dec    BYTE PTR [rbx]
    3512:	07                   	(bad)
    3513:	9d                   	popf
    3514:	93                   	xchg   ebx,eax
    3515:	00 00                	add    BYTE PTR [rax],al
    3517:	09 1d 00 00 01 24    	or     DWORD PTR [rip+0x24010000],ebx        # 2401351d <__TMC_END__+0x2400f505>
    351d:	35 00 00 39 35       	xor    eax,0x35390000
    3522:	00 00                	add    BYTE PTR [rax],al
    3524:	02 31                	add    dh,BYTE PTR [rcx]
    3526:	71 00                	jno    3528 <__GNU_EH_FRAME_HDR+0x14f4>
    3528:	00 01                	add    BYTE PTR [rcx],al
    352a:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    352d:	00 01                	add    BYTE PTR [rcx],al
    352f:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9013535 <__TMC_END__+0x900f51d>
    3535:	1d 00 00 00 03       	sbb    eax,0x3000000
    353a:	35 7c 00 00 13       	xor    eax,0x1300007c
    353f:	0d 0c 07 00 85       	or     eax,0x8500070c
    3544:	00 00                	add    BYTE PTR [rax],al
    3546:	09 1d 00 00 01 53    	or     DWORD PTR [rip+0x53010000],ebx        # 5301354c <__TMC_END__+0x5300f534>
    354c:	35 00 00 63 35       	xor    eax,0x35630000
    3551:	00 00                	add    BYTE PTR [rax],al
    3553:	02 31                	add    dh,BYTE PTR [rcx]
    3555:	71 00                	jno    3557 <__GNU_EH_FRAME_HDR+0x1523>
    3557:	00 01                	add    BYTE PTR [rcx],al
    3559:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    355c:	00 01                	add    BYTE PTR [rcx],al
    355e:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3003564 <__TMC_END__+0x2fff54c>
    3564:	35 7c 00 00 13       	xor    eax,0x1300007c
    3569:	20 0c 07             	and    BYTE PTR [rdi+rax*1],cl
    356c:	cd 51                	int    0x51
    356e:	00 00                	add    BYTE PTR [rax],al
    3570:	09 1d 00 00 01 7d    	or     DWORD PTR [rip+0x7d010000],ebx        # 7d013576 <__TMC_END__+0x7d00f55e>
    3576:	35 00 00 8d 35       	xor    eax,0x358d0000
    357b:	00 00                	add    BYTE PTR [rax],al
    357d:	02 31                	add    dh,BYTE PTR [rcx]
    357f:	71 00                	jno    3581 <__GNU_EH_FRAME_HDR+0x154d>
    3581:	00 01                	add    BYTE PTR [rcx],al
    3583:	e5 00                	in     eax,0x0
    3585:	00 00                	add    BYTE PTR [rax],al
    3587:	01 09                	add    DWORD PTR [rcx],ecx
    3589:	1d 00 00 00 03       	sbb    eax,0x3000000
    358e:	1c 3a                	sbb    al,0x3a
    3590:	00 00                	add    BYTE PTR [rax],al
    3592:	13 30                	adc    esi,DWORD PTR [rax]
    3594:	0c 07                	or     al,0x7
    3596:	65 80 00 00          	add    BYTE PTR gs:[rax],0x0
    359a:	09 1d 00 00 01 a7    	or     DWORD PTR [rip+0xffffffffa7010000],ebx        # ffffffffa70135a0 <__TMC_END__+0xffffffffa700f588>
    35a0:	35 00 00 b7 35       	xor    eax,0x35b70000
    35a5:	00 00                	add    BYTE PTR [rax],al
    35a7:	02 31                	add    dh,BYTE PTR [rcx]
    35a9:	71 00                	jno    35ab <__GNU_EH_FRAME_HDR+0x1577>
    35ab:	00 01                	add    BYTE PTR [rcx],al
    35ad:	45 71 00             	rex.RB jno 35b0 <__GNU_EH_FRAME_HDR+0x157c>
    35b0:	00 01                	add    BYTE PTR [rcx],al
    35b2:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 30035b8 <__TMC_END__+0x2fff5a0>
    35b8:	1c 3a                	sbb    al,0x3a
    35ba:	00 00                	add    BYTE PTR [rax],al
    35bc:	13 55 0c             	adc    edx,DWORD PTR [rbp+0xc]
    35bf:	07                   	(bad)
    35c0:	b1 1d                	mov    cl,0x1d
    35c2:	00 00                	add    BYTE PTR [rax],al
    35c4:	09 1d 00 00 01 d1    	or     DWORD PTR [rip+0xffffffffd1010000],ebx        # ffffffffd10135ca <__TMC_END__+0xffffffffd100f5b2>
    35ca:	35 00 00 e6 35       	xor    eax,0x35e60000
    35cf:	00 00                	add    BYTE PTR [rax],al
    35d1:	02 31                	add    dh,BYTE PTR [rcx]
    35d3:	71 00                	jno    35d5 <__GNU_EH_FRAME_HDR+0x15a1>
    35d5:	00 01                	add    BYTE PTR [rcx],al
    35d7:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    35da:	00 01                	add    BYTE PTR [rcx],al
    35dc:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 90135e2 <__TMC_END__+0x900f5ca>
    35e2:	1d 00 00 00 03       	sbb    eax,0x3000000
    35e7:	1c 3a                	sbb    al,0x3a
    35e9:	00 00                	add    BYTE PTR [rax],al
    35eb:	13 64 0c 07          	adc    esp,DWORD PTR [rsp+rcx*1+0x7]
    35ef:	8b 21                	mov    esp,DWORD PTR [rcx]
    35f1:	00 00                	add    BYTE PTR [rax],al
    35f3:	09 1d 00 00 01 00    	or     DWORD PTR [rip+0x10000],ebx        # 135f9 <__TMC_END__+0xf5e1>
    35f9:	36 00 00             	ss add BYTE PTR [rax],al
    35fc:	10 36                	adc    BYTE PTR [rsi],dh
    35fe:	00 00                	add    BYTE PTR [rax],al
    3600:	02 31                	add    dh,BYTE PTR [rcx]
    3602:	71 00                	jno    3604 <__GNU_EH_FRAME_HDR+0x15d0>
    3604:	00 01                	add    BYTE PTR [rcx],al
    3606:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3609:	00 01                	add    BYTE PTR [rcx],al
    360b:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 3003611 <__TMC_END__+0x2fff5f9>
    3611:	1c 3a                	sbb    al,0x3a
    3613:	00 00                	add    BYTE PTR [rax],al
    3615:	13 77 0c             	adc    esi,DWORD PTR [rdi+0xc]
    3618:	07                   	(bad)
    3619:	67 76 00             	addr32 jbe 361c <__GNU_EH_FRAME_HDR+0x15e8>
    361c:	00 09                	add    BYTE PTR [rcx],cl
    361e:	1d 00 00 01 2a       	sbb    eax,0x2a010000
    3623:	36 00 00             	ss add BYTE PTR [rax],al
    3626:	3a 36                	cmp    dh,BYTE PTR [rsi]
    3628:	00 00                	add    BYTE PTR [rax],al
    362a:	02 31                	add    dh,BYTE PTR [rcx]
    362c:	71 00                	jno    362e <__GNU_EH_FRAME_HDR+0x15fa>
    362e:	00 01                	add    BYTE PTR [rcx],al
    3630:	e5 00                	in     eax,0x0
    3632:	00 00                	add    BYTE PTR [rax],al
    3634:	01 09                	add    DWORD PTR [rcx],ecx
    3636:	1d 00 00 00 03       	sbb    eax,0x3000000
    363b:	dc 0b                	fmul   QWORD PTR [rbx]
    363d:	00 00                	add    BYTE PTR [rax],al
    363f:	13 88 0c 07 94 17    	adc    ecx,DWORD PTR [rax+0x1794070c]
    3645:	00 00                	add    BYTE PTR [rax],al
    3647:	50                   	push   rax
    3648:	1c 00                	sbb    al,0x0
    364a:	00 01                	add    BYTE PTR [rcx],al
    364c:	54                   	push   rsp
    364d:	36 00 00             	ss add BYTE PTR [rax],al
    3650:	64 36 00 00          	fs add BYTE PTR fs:[rax],al
    3654:	02 31                	add    dh,BYTE PTR [rcx]
    3656:	71 00                	jno    3658 <__GNU_EH_FRAME_HDR+0x1624>
    3658:	00 01                	add    BYTE PTR [rcx],al
    365a:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 9013660 <__TMC_END__+0x900f648>
    3660:	1d 00 00 00 03       	sbb    eax,0x3000000
    3665:	21 6c 00 00          	and    DWORD PTR [rax+rax*1+0x0],ebp
    3669:	13 9c 0c 07 ab 82 00 	adc    ebx,DWORD PTR [rsp+rcx*1+0x82ab07]
    3670:	00 f1                	add    cl,dh
    3672:	00 00                	add    BYTE PTR [rax],al
    3674:	00 01                	add    BYTE PTR [rcx],al
    3676:	7e 36                	jle    36ae <__GNU_EH_FRAME_HDR+0x167a>
    3678:	00 00                	add    BYTE PTR [rax],al
    367a:	89 36                	mov    DWORD PTR [rsi],esi
    367c:	00 00                	add    BYTE PTR [rax],al
    367e:	02 31                	add    dh,BYTE PTR [rcx]
    3680:	71 00                	jno    3682 <__GNU_EH_FRAME_HDR+0x164e>
    3682:	00 01                	add    BYTE PTR [rcx],al
    3684:	45 71 00             	rex.RB jno 3687 <__GNU_EH_FRAME_HDR+0x1653>
    3687:	00 00                	add    BYTE PTR [rax],al
    3689:	03 21                	add    esp,DWORD PTR [rcx]
    368b:	6c                   	ins    BYTE PTR es:[rdi],dx
    368c:	00 00                	add    BYTE PTR [rax],al
    368e:	13 fd                	adc    edi,ebp
    3690:	0c 07                	or     al,0x7
    3692:	05 8e 00 00 f1       	add    eax,0xf100008e
    3697:	00 00                	add    BYTE PTR [rax],al
    3699:	00 01                	add    BYTE PTR [rcx],al
    369b:	a3 36 00 00 b8 36 00 	movabs ds:0x2000036b8000036,eax
    36a2:	00 02 
    36a4:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    36a7:	00 01                	add    BYTE PTR [rcx],al
    36a9:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 90136af <__TMC_END__+0x900f697>
    36af:	1d 00 00 01 45       	sbb    eax,0x45010000
    36b4:	71 00                	jno    36b6 <__GNU_EH_FRAME_HDR+0x1682>
    36b6:	00 00                	add    BYTE PTR [rax],al
    36b8:	03 21                	add    esp,DWORD PTR [rcx]
    36ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    36bb:	00 00                	add    BYTE PTR [rax],al
    36bd:	13 22                	adc    esp,DWORD PTR [rdx]
    36bf:	0d 07 5c 31 00       	or     eax,0x315c07
    36c4:	00 f1                	add    cl,dh
    36c6:	00 00                	add    BYTE PTR [rax],al
    36c8:	00 01                	add    BYTE PTR [rcx],al
    36ca:	d2 36                	shl    BYTE PTR [rsi],cl
    36cc:	00 00                	add    BYTE PTR [rax],al
    36ce:	f1                   	int1
    36cf:	36 00 00             	ss add BYTE PTR [rax],al
    36d2:	02 31                	add    dh,BYTE PTR [rcx]
    36d4:	71 00                	jno    36d6 <__GNU_EH_FRAME_HDR+0x16a2>
    36d6:	00 01                	add    BYTE PTR [rcx],al
    36d8:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 90136de <__TMC_END__+0x900f6c6>
    36de:	1d 00 00 01 45       	sbb    eax,0x45010000
    36e3:	71 00                	jno    36e5 <__GNU_EH_FRAME_HDR+0x16b1>
    36e5:	00 01                	add    BYTE PTR [rcx],al
    36e7:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 90136ed <__TMC_END__+0x900f6d5>
    36ed:	1d 00 00 00 03       	sbb    eax,0x3000000
    36f2:	21 6c 00 00          	and    DWORD PTR [rax+rax*1+0x0],ebp
    36f6:	13 41 0d             	adc    eax,DWORD PTR [rcx+0xd]
    36f9:	07                   	(bad)
    36fa:	1e                   	(bad)
    36fb:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    36fe:	f1                   	int1
    36ff:	00 00                	add    BYTE PTR [rax],al
    3701:	00 01                	add    BYTE PTR [rcx],al
    3703:	0b 37                	or     esi,DWORD PTR [rdi]
    3705:	00 00                	add    BYTE PTR [rax],al
    3707:	16                   	(bad)
    3708:	37                   	(bad)
    3709:	00 00                	add    BYTE PTR [rax],al
    370b:	02 31                	add    dh,BYTE PTR [rcx]
    370d:	71 00                	jno    370f <__GNU_EH_FRAME_HDR+0x16db>
    370f:	00 01                	add    BYTE PTR [rcx],al
    3711:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3714:	00 00                	add    BYTE PTR [rax],al
    3716:	03 21                	add    esp,DWORD PTR [rcx]
    3718:	6c                   	ins    BYTE PTR es:[rdi],dx
    3719:	00 00                	add    BYTE PTR [rax],al
    371b:	13 64 0d 07          	adc    esp,DWORD PTR [rbp+rcx*1+0x7]
    371f:	f7 79 00             	idiv   DWORD PTR [rcx+0x0]
    3722:	00 f1                	add    cl,dh
    3724:	00 00                	add    BYTE PTR [rax],al
    3726:	00 01                	add    BYTE PTR [rcx],al
    3728:	30 37                	xor    BYTE PTR [rdi],dh
    372a:	00 00                	add    BYTE PTR [rax],al
    372c:	45 37                	rex.RB (bad)
    372e:	00 00                	add    BYTE PTR [rax],al
    3730:	02 31                	add    dh,BYTE PTR [rcx]
    3732:	71 00                	jno    3734 <__GNU_EH_FRAME_HDR+0x1700>
    3734:	00 01                	add    BYTE PTR [rcx],al
    3736:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 901373c <__TMC_END__+0x900f724>
    373c:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    3741:	02 00                	add    al,BYTE PTR [rax]
    3743:	00 00                	add    BYTE PTR [rax],al
    3745:	03 21                	add    esp,DWORD PTR [rcx]
    3747:	6c                   	ins    BYTE PTR es:[rdi],dx
    3748:	00 00                	add    BYTE PTR [rax],al
    374a:	13 8b 0d 07 92 18    	adc    ecx,DWORD PTR [rbx+0x1892070d]
    3750:	00 00                	add    BYTE PTR [rax],al
    3752:	f1                   	int1
    3753:	00 00                	add    BYTE PTR [rax],al
    3755:	00 01                	add    BYTE PTR [rcx],al
    3757:	5f                   	pop    rdi
    3758:	37                   	(bad)
    3759:	00 00                	add    BYTE PTR [rax],al
    375b:	79 37                	jns    3794 <__GNU_EH_FRAME_HDR+0x1760>
    375d:	00 00                	add    BYTE PTR [rax],al
    375f:	02 31                	add    dh,BYTE PTR [rcx]
    3761:	71 00                	jno    3763 <__GNU_EH_FRAME_HDR+0x172f>
    3763:	00 01                	add    BYTE PTR [rcx],al
    3765:	09 1d 00 00 01 09    	or     DWORD PTR [rip+0x9010000],ebx        # 901376b <__TMC_END__+0x900f753>
    376b:	1d 00 00 01 c0       	sbb    eax,0xc0010000
    3770:	02 00                	add    al,BYTE PTR [rax]
    3772:	00 01                	add    BYTE PTR [rcx],al
    3774:	09 1d 00 00 00 03    	or     DWORD PTR [rip+0x3000000],ebx        # 300377a <__TMC_END__+0x2fff762>
    377a:	0f 91 00             	setno  BYTE PTR [rax]
    377d:	00 13                	add    BYTE PTR [rbx],dl
    377f:	9b                   	fwait
    3780:	0d 07 18 62 00       	or     eax,0x621807
    3785:	00 f1                	add    cl,dh
    3787:	65 00 00             	add    BYTE PTR gs:[rax],al
    378a:	01 93 37 00 00 9e    	add    DWORD PTR [rbx-0x61ffffc9],edx
    3790:	37                   	(bad)
    3791:	00 00                	add    BYTE PTR [rax],al
    3793:	02 31                	add    dh,BYTE PTR [rcx]
    3795:	71 00                	jno    3797 <__GNU_EH_FRAME_HDR+0x1763>
    3797:	00 01                	add    BYTE PTR [rcx],al
    3799:	be 0e 00 00 00       	mov    esi,0xe
    379e:	03 0f                	add    ecx,DWORD PTR [rdi]
    37a0:	91                   	xchg   ecx,eax
    37a1:	00 00                	add    BYTE PTR [rax],al
    37a3:	13 a0 0d 07 41 88    	adc    esp,DWORD PTR [rax-0x77bef8f3]
    37a9:	00 00                	add    BYTE PTR [rax],al
    37ab:	f1                   	int1
    37ac:	65 00 00             	add    BYTE PTR gs:[rax],al
    37af:	01 b8 37 00 00 c3    	add    DWORD PTR [rax-0x3cffffc9],edi
    37b5:	37                   	(bad)
    37b6:	00 00                	add    BYTE PTR [rax],al
    37b8:	02 31                	add    dh,BYTE PTR [rcx]
    37ba:	71 00                	jno    37bc <__GNU_EH_FRAME_HDR+0x1788>
    37bc:	00 01                	add    BYTE PTR [rcx],al
    37be:	e5 00                	in     eax,0x0
    37c0:	00 00                	add    BYTE PTR [rax],al
    37c2:	00 03                	add    BYTE PTR [rbx],al
    37c4:	0f 91 00             	setno  BYTE PTR [rax]
    37c7:	00 13                	add    BYTE PTR [rbx],dl
    37c9:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    37ca:	0d 07 7a 42 00       	or     eax,0x427a07
    37cf:	00 f1                	add    cl,dh
    37d1:	65 00 00             	add    BYTE PTR gs:[rax],al
    37d4:	01 dd                	add    ebp,ebx
    37d6:	37                   	(bad)
    37d7:	00 00                	add    BYTE PTR [rax],al
    37d9:	e8 37 00 00 02       	call   2003815 <__TMC_END__+0x1fff7fd>
    37de:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    37e1:	00 01                	add    BYTE PTR [rcx],al
    37e3:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    37e6:	00 00                	add    BYTE PTR [rax],al
    37e8:	03 32                	add    esi,DWORD PTR [rdx]
    37ea:	1b 00                	sbb    eax,DWORD PTR [rax]
    37ec:	00 13                	add    BYTE PTR [rbx],dl
    37ee:	aa                   	stos   BYTE PTR es:[rdi],al
    37ef:	0d 07 0a 14 00       	or     eax,0x140a07
    37f4:	00 f1                	add    cl,dh
    37f6:	65 00 00             	add    BYTE PTR gs:[rax],al
    37f9:	01 02                	add    DWORD PTR [rdx],eax
    37fb:	38 00                	cmp    BYTE PTR [rax],al
    37fd:	00 0d 38 00 00 02    	add    BYTE PTR [rip+0x2000038],cl        # 200383b <__TMC_END__+0x1fff823>
    3803:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    3806:	00 01                	add    BYTE PTR [rcx],al
    3808:	be 0e 00 00 00       	mov    esi,0xe
    380d:	03 32                	add    esi,DWORD PTR [rdx]
    380f:	1b 00                	sbb    eax,DWORD PTR [rax]
    3811:	00 13                	add    BYTE PTR [rbx],dl
    3813:	af                   	scas   eax,DWORD PTR es:[rdi]
    3814:	0d 07 fe 8b 00       	or     eax,0x8bfe07
    3819:	00 f1                	add    cl,dh
    381b:	65 00 00             	add    BYTE PTR gs:[rax],al
    381e:	01 27                	add    DWORD PTR [rdi],esp
    3820:	38 00                	cmp    BYTE PTR [rax],al
    3822:	00 32                	add    BYTE PTR [rdx],dh
    3824:	38 00                	cmp    BYTE PTR [rax],al
    3826:	00 02                	add    BYTE PTR [rdx],al
    3828:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    382b:	00 01                	add    BYTE PTR [rcx],al
    382d:	e5 00                	in     eax,0x0
    382f:	00 00                	add    BYTE PTR [rax],al
    3831:	00 03                	add    BYTE PTR [rbx],al
    3833:	32 1b                	xor    bl,BYTE PTR [rbx]
    3835:	00 00                	add    BYTE PTR [rax],al
    3837:	13 b4 0d 07 ed 83 00 	adc    esi,DWORD PTR [rbp+rcx*1+0x83ed07]
    383e:	00 f1                	add    cl,dh
    3840:	65 00 00             	add    BYTE PTR gs:[rax],al
    3843:	01 4c 38 00          	add    DWORD PTR [rax+rdi*1+0x0],ecx
    3847:	00 57 38             	add    BYTE PTR [rdi+0x38],dl
    384a:	00 00                	add    BYTE PTR [rax],al
    384c:	02 31                	add    dh,BYTE PTR [rcx]
    384e:	71 00                	jno    3850 <__GNU_EH_FRAME_HDR+0x181c>
    3850:	00 01                	add    BYTE PTR [rcx],al
    3852:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3855:	00 00                	add    BYTE PTR [rax],al
    3857:	03 1f                	add    ebx,DWORD PTR [rdi]
    3859:	13 00                	adc    eax,DWORD PTR [rax]
    385b:	00 13                	add    BYTE PTR [rbx],dl
    385d:	bb 0d 07 43 08       	mov    ebx,0x843070d
    3862:	00 00                	add    BYTE PTR [rax],al
    3864:	f1                   	int1
    3865:	65 00 00             	add    BYTE PTR gs:[rax],al
    3868:	01 71 38             	add    DWORD PTR [rcx+0x38],esi
    386b:	00 00                	add    BYTE PTR [rax],al
    386d:	7c 38                	jl     38a7 <__GNU_EH_FRAME_HDR+0x1873>
    386f:	00 00                	add    BYTE PTR [rax],al
    3871:	02 31                	add    dh,BYTE PTR [rcx]
    3873:	71 00                	jno    3875 <__GNU_EH_FRAME_HDR+0x1841>
    3875:	00 01                	add    BYTE PTR [rcx],al
    3877:	be 0e 00 00 00       	mov    esi,0xe
    387c:	03 1f                	add    ebx,DWORD PTR [rdi]
    387e:	13 00                	adc    eax,DWORD PTR [rax]
    3880:	00 13                	add    BYTE PTR [rbx],dl
    3882:	c0 0d 07 44 01 00 00 	ror    BYTE PTR [rip+0x14407],0x0        # 17c90 <__TMC_END__+0x13c78>
    3889:	f1                   	int1
    388a:	65 00 00             	add    BYTE PTR gs:[rax],al
    388d:	01 96 38 00 00 a1    	add    DWORD PTR [rsi-0x5effffc8],edx
    3893:	38 00                	cmp    BYTE PTR [rax],al
    3895:	00 02                	add    BYTE PTR [rdx],al
    3897:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    389a:	00 01                	add    BYTE PTR [rcx],al
    389c:	e5 00                	in     eax,0x0
    389e:	00 00                	add    BYTE PTR [rax],al
    38a0:	00 03                	add    BYTE PTR [rbx],al
    38a2:	1f                   	(bad)
    38a3:	13 00                	adc    eax,DWORD PTR [rax]
    38a5:	00 13                	add    BYTE PTR [rbx],dl
    38a7:	c5 0d 07             	(bad)
    38aa:	3f                   	(bad)
    38ab:	45 00 00             	add    BYTE PTR [r8],r8b
    38ae:	f1                   	int1
    38af:	65 00 00             	add    BYTE PTR gs:[rax],al
    38b2:	01 bb 38 00 00 c6    	add    DWORD PTR [rbx-0x39ffffc8],edi
    38b8:	38 00                	cmp    BYTE PTR [rax],al
    38ba:	00 02                	add    BYTE PTR [rdx],al
    38bc:	31 71 00             	xor    DWORD PTR [rcx+0x0],esi
    38bf:	00 01                	add    BYTE PTR [rcx],al
    38c1:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    38c4:	00 00                	add    BYTE PTR [rax],al
    38c6:	14 83                	adc    al,0x83
    38c8:	33 00                	xor    eax,DWORD PTR [rax]
    38ca:	00 e5                	add    ch,ah
    38cc:	00 00                	add    BYTE PTR [rax],al
    38ce:	00 38                	add    BYTE PTR [rax],bh
    38d0:	70 74                	jo     3946 <__GNU_EH_FRAME_HDR+0x1912>
    38d2:	00 00                	add    BYTE PTR [rax],al
    38d4:	dd 0a                	fisttp QWORD PTR [rdx]
    38d6:	00 00                	add    BYTE PTR [rax],al
    38d8:	38 9f 63 00 00 d7    	cmp    BYTE PTR [rdi-0x28ffff9d],bl
    38de:	0d 00 00 00 0f       	or     eax,0xf000000
    38e3:	50                   	push   rax
    38e4:	1c 00                	sbb    al,0x0
    38e6:	00 00                	add    BYTE PTR [rax],al
    38e8:	1e                   	(bad)
    38e9:	79 53                	jns    393e <__GNU_EH_FRAME_HDR+0x190a>
    38eb:	00 00                	add    BYTE PTR [rax],al
    38ed:	10 20                	adc    BYTE PTR [rax],ah
    38ef:	2d 0b d6 39 00       	sub    eax,0x39d60b
    38f4:	00 11                	add    BYTE PTR [rcx],dl
    38f6:	5a                   	pop    rdx
    38f7:	6a 00                	push   0x0
    38f9:	00 20                	add    BYTE PTR [rax],ah
    38fb:	34 1a                	xor    al,0x1a
    38fd:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3900:	00 01                	add    BYTE PTR [rcx],al
    3902:	07                   	(bad)
    3903:	87 65 00             	xchg   DWORD PTR [rbp+0x0],esp
    3906:	00 20                	add    BYTE PTR [rax],ah
    3908:	38 12                	cmp    BYTE PTR [rdx],dl
    390a:	f5                   	cmc
    390b:	38 00                	cmp    BYTE PTR [rax],al
    390d:	00 00                	add    BYTE PTR [rax],al
    390f:	11 1f                	adc    DWORD PTR [rdi],ebx
    3911:	2b 00                	sub    eax,DWORD PTR [rax]
    3913:	00 20                	add    BYTE PTR [rax],ah
    3915:	33 18                	xor    ebx,DWORD PTR [rax]
    3917:	29 05 00 00 01 07    	sub    DWORD PTR [rip+0x7010000],eax        # 701391d <__TMC_END__+0x700f905>
    391d:	18 95 00 00 20 39    	sbb    BYTE PTR [rbp+0x39200000],dl
    3923:	13 0f                	adc    ecx,DWORD PTR [rdi]
    3925:	39 00                	cmp    DWORD PTR [rax],eax
    3927:	00 08                	add    BYTE PTR [rax],cl
    3929:	21 cd                	and    ebp,ecx
    392b:	89 00                	mov    DWORD PTR [rax],eax
    392d:	00 20                	add    BYTE PTR [rax],ah
    392f:	3c 11                	cmp    al,0x11
    3931:	9d                   	popf
    3932:	2d 00 00 3d 39       	sub    eax,0x393d0000
    3937:	00 00                	add    BYTE PTR [rax],al
    3939:	4d 39 00             	cmp    QWORD PTR [r8],r8
    393c:	00 02                	add    BYTE PTR [rdx],al
    393e:	54                   	push   rsp
    393f:	71 00                	jno    3941 <__GNU_EH_FRAME_HDR+0x190d>
    3941:	00 01                	add    BYTE PTR [rcx],al
    3943:	4d 39 00             	cmp    QWORD PTR [r8],r8
    3946:	00 01                	add    BYTE PTR [rcx],al
    3948:	0f 39                	(bad)
    394a:	00 00                	add    BYTE PTR [rax],al
    394c:	00 11                	add    BYTE PTR [rcx],dl
    394e:	05 35 00 00 20       	add    eax,0x20000035
    3953:	35 1a c0 02 00       	xor    eax,0x2c01a
    3958:	00 01                	add    BYTE PTR [rcx],al
    395a:	16                   	(bad)
    395b:	cd 89                	int    0x89
    395d:	00 00                	add    BYTE PTR [rax],al
    395f:	20 40 11             	and    BYTE PTR [rax+0x11],al
    3962:	4c 6c                	rex.WR ins BYTE PTR es:[rdi],dx
    3964:	00 00                	add    BYTE PTR [rax],al
    3966:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3967:	39 00                	cmp    DWORD PTR [rax],eax
    3969:	00 74 39 00          	add    BYTE PTR [rcx+rdi*1+0x0],dh
    396d:	00 02                	add    BYTE PTR [rdx],al
    396f:	54                   	push   rsp
    3970:	71 00                	jno    3972 <__GNU_EH_FRAME_HDR+0x193e>
    3972:	00 00                	add    BYTE PTR [rax],al
    3974:	15 c8 89 00 00       	adc    eax,0x89c8
    3979:	20 45 07             	and    BYTE PTR [rbp+0x7],al
    397c:	96                   	xchg   esi,eax
    397d:	0d 00 00 0f 39       	or     eax,0x390f0000
    3982:	00 00                	add    BYTE PTR [rax],al
    3984:	8c 39                	mov    WORD PTR [rcx],?
    3986:	00 00                	add    BYTE PTR [rax],al
    3988:	92                   	xchg   edx,eax
    3989:	39 00                	cmp    DWORD PTR [rax],eax
    398b:	00 02                	add    BYTE PTR [rdx],al
    398d:	59                   	pop    rcx
    398e:	71 00                	jno    3990 <__GNU_EH_FRAME_HDR+0x195c>
    3990:	00 00                	add    BYTE PTR [rax],al
    3992:	15 e6 3e 00 00       	adc    eax,0x3ee6
    3997:	20 49 07             	and    BYTE PTR [rcx+0x7],cl
    399a:	f6 30                	div    BYTE PTR [rax]
    399c:	00 00                	add    BYTE PTR [rax],al
    399e:	4d 39 00             	cmp    QWORD PTR [r8],r8
    39a1:	00 aa 39 00 00 b0    	add    BYTE PTR [rdx-0x4fffffc7],ch
    39a7:	39 00                	cmp    DWORD PTR [rax],eax
    39a9:	00 02                	add    BYTE PTR [rdx],al
    39ab:	59                   	pop    rcx
    39ac:	71 00                	jno    39ae <__GNU_EH_FRAME_HDR+0x197a>
    39ae:	00 00                	add    BYTE PTR [rax],al
    39b0:	45                   	rex.RB
    39b1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    39b3:	64 00 20             	add    BYTE PTR fs:[rax],ah
    39b6:	4d 30 6f 00          	rex.WRB xor BYTE PTR [r15+0x0],r13b
    39ba:	00 4d 39             	add    BYTE PTR [rbp+0x39],cl
    39bd:	00 00                	add    BYTE PTR [rax],al
    39bf:	c7                   	(bad)
    39c0:	39 00                	cmp    DWORD PTR [rax],eax
    39c2:	00 cd                	add    ch,cl
    39c4:	39 00                	cmp    DWORD PTR [rax],eax
    39c6:	00 02                	add    BYTE PTR [rdx],al
    39c8:	59                   	pop    rcx
    39c9:	71 00                	jno    39cb <__GNU_EH_FRAME_HDR+0x1997>
    39cb:	00 00                	add    BYTE PTR [rax],al
    39cd:	1d 5f 45 00 e5       	sbb    eax,0xe500455f
    39d2:	00 00                	add    BYTE PTR [rax],al
    39d4:	00 00                	add    BYTE PTR [rax],al
    39d6:	0f e8 38             	psubsb mm7,QWORD PTR [rax]
    39d9:	00 00                	add    BYTE PTR [rax],al
    39db:	29 77 04             	sub    DWORD PTR [rdi+0x4],esi
    39de:	00 00                	add    BYTE PTR [rax],al
    39e0:	29 85 6f 00 00 1a    	sub    DWORD PTR [rbp+0x1a00006f],eax
    39e6:	80 06 00             	add    BYTE PTR [rsi],0x0
    39e9:	00 01                	add    BYTE PTR [rcx],al
    39eb:	15 c6 0c 20 3a       	adc    eax,0x3a200cc6
    39f0:	00 00                	add    BYTE PTR [rax],al
    39f2:	05 66 4e 00 00       	add    eax,0x4e66
    39f7:	15 cb 0d db 0c       	adc    eax,0xcdb0dcb
    39fc:	00 00                	add    BYTE PTR [rax],al
    39fe:	05 34 6c 00 00       	add    eax,0x6c34
    3a03:	15 cc 0d c0 02       	adc    eax,0x2c00dcc
    3a08:	00 00                	add    BYTE PTR [rax],al
    3a0a:	05 42 6c 00 00       	add    eax,0x6c42
    3a0f:	15 cd 0d 5e 71       	adc    eax,0x715e0dcd
    3a14:	00 00                	add    BYTE PTR [rax],al
    3a16:	14 71                	adc    al,0x71
    3a18:	73 00                	jae    3a1a <__GNU_EH_FRAME_HDR+0x19e6>
    3a1a:	00 c0                	add    al,al
    3a1c:	02 00                	add    al,BYTE PTR [rax]
    3a1e:	00 00                	add    BYTE PTR [rax],al
    3a20:	04 21                	add    al,0x21
    3a22:	3d 0b de 65 00       	cmp    eax,0x65de0b
    3a27:	00 64 70 6d          	add    BYTE PTR [rax+rsi*2+0x6d],ah
    3a2b:	72 00                	jb     3a2d <__GNU_EH_FRAME_HDR+0x19f9>
    3a2d:	42 35 0b 65 19 32    	rex.X xor eax,0x3219650b
    3a33:	00 00                	add    BYTE PTR [rax],al
    3a35:	05 04 f1 00 00       	add    eax,0xf104
    3a3a:	00 24 28             	add    BYTE PTR [rax+rbp*1],ah
    3a3d:	0e                   	(bad)
    3a3e:	17                   	(bad)
    3a3f:	3c 00                	cmp    al,0x0
    3a41:	00 06                	add    BYTE PTR [rsi],al
    3a43:	62 5d 00 00 61       	(bad)
    3a48:	06                   	(bad)
    3a49:	08 83 00 00 62 06    	or     BYTE PTR [rbx+0x6620000],al
    3a4f:	d7                   	xlat   BYTE PTR ds:[rbx]
    3a50:	83 00 00             	add    DWORD PTR [rax],0x0
    3a53:	63 06                	movsxd eax,DWORD PTR [rsi]
    3a55:	83 64 00 00 6a       	and    DWORD PTR [rax+rax*1+0x0],0x6a
    3a5a:	06                   	(bad)
    3a5b:	a1 5d 00 00 07 06 a2 	movabs eax,ds:0x7fa2060700005d
    3a62:	7f 00 
    3a64:	00 21                	add    BYTE PTR [rcx],ah
    3a66:	06                   	(bad)
    3a67:	3b 2c 00             	cmp    ebp,DWORD PTR [rax+rax*1]
    3a6a:	00 0e                	add    BYTE PTR [rsi],cl
    3a6c:	06                   	(bad)
    3a6d:	f9                   	stc
    3a6e:	48 00 00             	rex.W add BYTE PTR [rax],al
    3a71:	09 06                	or     DWORD PTR [rsi],eax
    3a73:	11 80 00 00 4a 06    	adc    DWORD PTR [rax+0x64a0000],eax
    3a79:	61                   	(bad)
    3a7a:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    3a7d:	20 06                	and    BYTE PTR [rsi],al
    3a7f:	14 70                	adc    al,0x70
    3a81:	00 00                	add    BYTE PTR [rax],al
    3a83:	67 06                	addr32 (bad)
    3a85:	b2 20                	mov    dl,0x20
    3a87:	00 00                	add    BYTE PTR [rax],al
    3a89:	72 06                	jb     3a91 <__GNU_EH_FRAME_HDR+0x1a5d>
    3a8b:	5b                   	pop    rbx
    3a8c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3a8d:	00 00                	add    BYTE PTR [rax],al
    3a8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3a90:	06                   	(bad)
    3a91:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    3a92:	65 00 00             	add    BYTE PTR gs:[rax],al
    3a95:	68 06 83 45 00       	push   0x458306
    3a9a:	00 12                	add    BYTE PTR [rdx],dl
    3a9c:	06                   	(bad)
    3a9d:	e0 45                	loopne 3ae4 <__GNU_EH_FRAME_HDR+0x1ab0>
    3a9f:	00 00                	add    BYTE PTR [rax],al
    3aa1:	59                   	pop    rcx
    3aa2:	06                   	(bad)
    3aa3:	10 19                	adc    BYTE PTR [rcx],bl
    3aa5:	00 00                	add    BYTE PTR [rax],al
    3aa7:	10 06                	adc    BYTE PTR [rsi],al
    3aa9:	bb 6e 00 00 27       	mov    ebx,0x2700006e
    3aae:	06                   	(bad)
    3aaf:	0b 56 00             	or     edx,DWORD PTR [rsi+0x0]
    3ab2:	00 08                	add    BYTE PTR [rax],cl
    3ab4:	06                   	(bad)
    3ab5:	cd 8e                	int    0x8e
    3ab7:	00 00                	add    BYTE PTR [rax],al
    3ab9:	11 06                	adc    DWORD PTR [rsi],eax
    3abb:	4a 8c 00             	rex.WX mov WORD PTR [rax],es
    3abe:	00 1b                	add    BYTE PTR [rbx],bl
    3ac0:	06                   	(bad)
    3ac1:	77 44                	ja     3b07 <__GNU_EH_FRAME_HDR+0x1ad3>
    3ac3:	00 00                	add    BYTE PTR [rax],al
    3ac5:	24 06                	and    al,0x6
    3ac7:	8d 7d 00             	lea    edi,[rbp+0x0]
    3aca:	00 26                	add    BYTE PTR [rsi],ah
    3acc:	06                   	(bad)
    3acd:	f5                   	cmc
    3ace:	5d                   	pop    rbp
    3acf:	00 00                	add    BYTE PTR [rax],al
    3ad1:	71 06                	jno    3ad9 <__GNU_EH_FRAME_HDR+0x1aa5>
    3ad3:	f2 08 00             	repnz or BYTE PTR [rax],al
    3ad6:	00 2b                	add    BYTE PTR [rbx],ch
    3ad8:	06                   	(bad)
    3ad9:	67 3d 00 00 54 06    	addr32 cmp eax,0x6540000
    3adf:	3c 55                	cmp    al,0x55
    3ae1:	00 00                	add    BYTE PTR [rax],al
    3ae3:	19 06                	sbb    DWORD PTR [rsi],eax
    3ae5:	41 90                	xchg   r8d,eax
    3ae7:	00 00                	add    BYTE PTR [rax],al
    3ae9:	04 06                	add    al,0x6
    3aeb:	32 61 00             	xor    ah,BYTE PTR [rcx+0x0]
    3aee:	00 16                	add    BYTE PTR [rsi],dl
    3af0:	06                   	(bad)
    3af1:	11 47 00             	adc    DWORD PTR [rdi+0x0],eax
    3af4:	00 1d 06 5b 38 00    	add    BYTE PTR [rip+0x385b06],bl        # 389600 <__TMC_END__+0x3855e8>
    3afa:	00 05 06 97 65 00    	add    BYTE PTR [rip+0x659706],al        # 65d206 <__TMC_END__+0x6591ee>
    3b00:	00 15 06 c0 89 00    	add    BYTE PTR [rip+0x89c006],dl        # 89fb0c <__TMC_END__+0x89baf4>
    3b06:	00 5a 06             	add    BYTE PTR [rdx+0x6],bl
    3b09:	b5 50                	mov    ch,0x50
    3b0b:	00 00                	add    BYTE PTR [rax],al
    3b0d:	64 06                	fs (bad)
    3b0f:	e3 0b                	jrcxz  3b1c <__GNU_EH_FRAME_HDR+0x1ae8>
    3b11:	00 00                	add    BYTE PTR [rax],al
    3b13:	66 06                	data16 (bad)
    3b15:	89 1e                	mov    DWORD PTR [rsi],ebx
    3b17:	00 00                	add    BYTE PTR [rax],al
    3b19:	65 06                	gs (bad)
    3b1b:	67 46 00 00          	rex.RX add BYTE PTR [eax],r8b
    3b1f:	69 06 15 46 00 00    	imul   eax,DWORD PTR [rsi],0x4615
    3b25:	0a 06                	or     al,BYTE PTR [rsi]
    3b27:	cf                   	iret
    3b28:	0b 00                	or     eax,DWORD PTR [rax]
    3b2a:	00 43 06             	add    BYTE PTR [rbx+0x6],al
    3b2d:	1c 2e                	sbb    al,0x2e
    3b2f:	00 00                	add    BYTE PTR [rax],al
    3b31:	25 06 4b 71 00       	and    eax,0x714b06
    3b36:	00 3d 06 7d 5b 00    	add    BYTE PTR [rip+0x5b7d06],bh        # 5bb842 <__TMC_END__+0x5b782a>
    3b3c:	00 2a                	add    BYTE PTR [rdx],ch
    3b3e:	06                   	(bad)
    3b3f:	10 2f                	adc    BYTE PTR [rdi],ch
    3b41:	00 00                	add    BYTE PTR [rax],al
    3b43:	5c                   	pop    rsp
    3b44:	06                   	(bad)
    3b45:	5d                   	pop    rbp
    3b46:	74 00                	je     3b48 <__GNU_EH_FRAME_HDR+0x1b14>
    3b48:	00 1c 06             	add    BYTE PTR [rsi+rax*1],bl
    3b4b:	95                   	xchg   ebp,eax
    3b4c:	45 00 00             	add    BYTE PTR [r8],r8b
    3b4f:	3f                   	(bad)
    3b50:	06                   	(bad)
    3b51:	69 33 00 00 06 06    	imul   esi,DWORD PTR [rbx],0x6060000
    3b57:	06                   	(bad)
    3b58:	5e                   	pop    rsi
    3b59:	00 00                	add    BYTE PTR [rax],al
    3b5b:	13 06                	adc    eax,DWORD PTR [rsi]
    3b5d:	f1                   	int1
    3b5e:	6d                   	ins    DWORD PTR es:[rdi],dx
    3b5f:	00 00                	add    BYTE PTR [rax],al
    3b61:	02 06                	add    al,BYTE PTR [rsi]
    3b63:	47 7c 00             	rex.RXB jl 3b66 <__GNU_EH_FRAME_HDR+0x1b32>
    3b66:	00 03                	add    BYTE PTR [rbx],al
    3b68:	06                   	(bad)
    3b69:	b5 80                	mov    ch,0x80
    3b6b:	00 00                	add    BYTE PTR [rax],al
    3b6d:	14 06                	adc    al,0x6
    3b6f:	30 57 00             	xor    BYTE PTR [rdi+0x0],dl
    3b72:	00 58 06             	add    BYTE PTR [rax+0x6],bl
    3b75:	0b 6e 00             	or     ebp,DWORD PTR [rsi+0x0]
    3b78:	00 3c 06             	add    BYTE PTR [rsi+rax*1],bh
    3b7b:	f7 0a 00 00 6b 06    	test   DWORD PTR [rdx],0x66b0000
    3b81:	53                   	push   rbx
    3b82:	68 00 00 0c 06       	push   0x60c0000
    3b87:	b7 10                	mov    bh,0x10
    3b89:	00 00                	add    BYTE PTR [rax],al
    3b8b:	5f                   	pop    rdi
    3b8c:	06                   	(bad)
    3b8d:	03 93 00 00 7d 06    	add    edx,DWORD PTR [rbx+0x67d0000]
    3b93:	46 59                	rex.RX pop rcx
    3b95:	00 00                	add    BYTE PTR [rax],al
    3b97:	73 06                	jae    3b9f <__GNU_EH_FRAME_HDR+0x1b6b>
    3b99:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    3b9a:	73 00                	jae    3b9c <__GNU_EH_FRAME_HDR+0x1b68>
    3b9c:	00 01                	add    BYTE PTR [rcx],al
    3b9e:	06                   	(bad)
    3b9f:	52                   	push   rdx
    3ba0:	87 00                	xchg   DWORD PTR [rax],eax
    3ba2:	00 5f 06             	add    BYTE PTR [rdi+0x6],bl
    3ba5:	e2 84                	loop   3b2b <__GNU_EH_FRAME_HDR+0x1af7>
    3ba7:	00 00                	add    BYTE PTR [rax],al
    3ba9:	0b 06                	or     eax,DWORD PTR [rsi]
    3bab:	39 23                	cmp    DWORD PTR [rbx],esp
    3bad:	00 00                	add    BYTE PTR [rax],al
    3baf:	82                   	(bad)
    3bb0:	06                   	(bad)
    3bb1:	50                   	push   rax
    3bb2:	1f                   	(bad)
    3bb3:	00 00                	add    BYTE PTR [rax],al
    3bb5:	0d 06 db 5a 00       	or     eax,0x5adb06
    3bba:	00 47 06             	add    BYTE PTR [rdi+0x6],al
    3bbd:	ae                   	scas   al,BYTE PTR es:[rdi]
    3bbe:	10 00                	adc    BYTE PTR [rax],al
    3bc0:	00 5d 06             	add    BYTE PTR [rbp+0x6],bl
    3bc3:	80 2a 00             	sub    BYTE PTR [rdx],0x0
    3bc6:	00 1e                	add    BYTE PTR [rsi],bl
    3bc8:	06                   	(bad)
    3bc9:	28 8b 00 00 23 06    	sub    BYTE PTR [rbx+0x6230000],cl
    3bcf:	b1 2e                	mov    cl,0x2e
    3bd1:	00 00                	add    BYTE PTR [rax],al
    3bd3:	0b 06                	or     eax,DWORD PTR [rsi]
    3bd5:	3b 26                	cmp    esp,DWORD PTR [rsi]
    3bd7:	00 00                	add    BYTE PTR [rax],al
    3bd9:	22 06                	and    al,BYTE PTR [rsi]
    3bdb:	59                   	pop    rcx
    3bdc:	58                   	pop    rax
    3bdd:	00 00                	add    BYTE PTR [rax],al
    3bdf:	83 06 3b             	add    DWORD PTR [rsi],0x3b
    3be2:	63 00                	movsxd eax,DWORD PTR [rax]
    3be4:	00 3e                	add    BYTE PTR [rsi],bh
    3be6:	06                   	(bad)
    3be7:	c2 42 00             	ret    0x42
    3bea:	00 1a                	add    BYTE PTR [rdx],bl
    3bec:	06                   	(bad)
    3bed:	c1 5f 00 00          	rcr    DWORD PTR [rdi+0x0],0x0
    3bf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3bf2:	06                   	(bad)
    3bf3:	7b 1a                	jnp    3c0f <__GNU_EH_FRAME_HDR+0x1bdb>
    3bf5:	00 00                	add    BYTE PTR [rax],al
    3bf7:	17                   	(bad)
    3bf8:	06                   	(bad)
    3bf9:	61                   	(bad)
    3bfa:	3e 00 00             	ds add BYTE PTR [rax],al
    3bfd:	18 06                	sbb    BYTE PTR [rsi],al
    3bff:	79 83                	jns    3b84 <__GNU_EH_FRAME_HDR+0x1b50>
    3c01:	00 00                	add    BYTE PTR [rax],al
    3c03:	1f                   	(bad)
    3c04:	06                   	(bad)
    3c05:	95                   	xchg   ebp,eax
    3c06:	51                   	push   rcx
    3c07:	00 00                	add    BYTE PTR [rax],al
    3c09:	28 06                	sub    BYTE PTR [rsi],al
    3c0b:	25 7c 00 00 4b       	and    eax,0x4b00007c
    3c10:	06                   	(bad)
    3c11:	cc                   	int3
    3c12:	65 00 00             	add    BYTE PTR gs:[rax],al
    3c15:	5b                   	pop    rbx
    3c16:	00 66 5f             	add    BYTE PTR [rsi+0x5f],ah
    3c19:	56                   	push   rsi
    3c1a:	32 00                	xor    al,BYTE PTR [rax]
    3c1c:	43 52                	rex.XB push r10
    3c1e:	01 04 22             	add    DWORD PTR [rdx+riz*1],eax
    3c21:	52                   	push   rdx
    3c22:	0b 74 71 00          	or     esi,DWORD PTR [rcx+rsi*2+0x0]
    3c26:	00 04 22             	add    BYTE PTR [rdx+riz*1],al
    3c29:	53                   	push   rbx
    3c2a:	0b 68 71             	or     ebp,DWORD PTR [rax+0x71]
    3c2d:	00 00                	add    BYTE PTR [rax],al
    3c2f:	04 22                	add    al,0x22
    3c31:	54                   	push   rsp
    3c32:	0b 7f 00             	or     edi,DWORD PTR [rdi+0x0]
    3c35:	00 00                	add    BYTE PTR [rax],al
    3c37:	04 22                	add    al,0x22
    3c39:	5c                   	pop    rsp
    3c3a:	0b 85 71 00 00 04    	or     eax,DWORD PTR [rbp+0x4000071]
    3c40:	22 65 0b             	and    ah,BYTE PTR [rbp+0xb]
    3c43:	a0 71 00 00 04 22 68 	movabs al,ds:0xbb0b682204000071
    3c4a:	0b bb 
    3c4c:	71 00                	jno    3c4e <__GNU_EH_FRAME_HDR+0x1c1a>
    3c4e:	00 04 22             	add    BYTE PTR [rdx+riz*1],al
    3c51:	69 0b d1 71 00 00    	imul   ecx,DWORD PTR [rbx],0x71d1
    3c57:	1a 33                	sbb    dh,BYTE PTR [rbx]
    3c59:	91                   	xchg   ecx,eax
    3c5a:	00 00                	add    BYTE PTR [rax],al
    3c5c:	10 23                	adc    BYTE PTR [rbx],ah
    3c5e:	39 0a                	cmp    DWORD PTR [rdx],ecx
    3c60:	7e 3c                	jle    3c9e <__GNU_EH_FRAME_HDR+0x1c6a>
    3c62:	00 00                	add    BYTE PTR [rax],al
    3c64:	32 70 74             	xor    dh,BYTE PTR [rax+0x74]
    3c67:	72 00                	jb     3c69 <__GNU_EH_FRAME_HDR+0x1c35>
    3c69:	23 3b                	and    edi,DWORD PTR [rbx]
    3c6b:	0b 03                	or     eax,DWORD PTR [rbx]
    3c6d:	58                   	pop    rax
    3c6e:	00 00                	add    BYTE PTR [rax],al
    3c70:	00 32                	add    BYTE PTR [rdx],dh
    3c72:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
    3c75:	23 3c 0a             	and    edi,DWORD PTR [rdx+rcx*1]
    3c78:	30 3a                	xor    BYTE PTR [rdx],bh
    3c7a:	00 00                	add    BYTE PTR [rax],al
    3c7c:	08 00                	or     BYTE PTR [rax],al
    3c7e:	67 c3                	addr32 ret
    3c80:	62                   	(bad)
    3c81:	00 00                	add    BYTE PTR [rax],al
    3c83:	05 04 f1 00 00       	add    eax,0xf104
    3c88:	00 23                	add    BYTE PTR [rbx],ah
    3c8a:	6c                   	ins    BYTE PTR es:[rdi],dx
    3c8b:	02 0e                	add    cl,BYTE PTR [rsi]
    3c8d:	aa                   	stos   BYTE PTR es:[rdi],al
    3c8e:	3c 00                	cmp    al,0x0
    3c90:	00 06                	add    BYTE PTR [rsi],al
    3c92:	29 1c 00             	sub    DWORD PTR [rax+rax*1],ebx
    3c95:	00 01                	add    BYTE PTR [rcx],al
    3c97:	06                   	(bad)
    3c98:	30 6b 00             	xor    BYTE PTR [rbx+0x0],ch
    3c9b:	00 02                	add    BYTE PTR [rdx],al
    3c9d:	68 68 65 78 00       	push   0x786568
    3ca2:	04 06                	add    al,0x6
    3ca4:	e5 8e                	in     eax,0x8e
    3ca6:	00 00                	add    BYTE PTR [rax],al
    3ca8:	03 00                	add    eax,DWORD PTR [rax]
    3caa:	04 25                	add    al,0x25
    3cac:	3c 0b                	cmp    al,0xb
    3cae:	41 69 00 00 04 25 3d 	imul   eax,DWORD PTR [r8],0x3d250400
    3cb5:	0b 08                	or     ecx,DWORD PTR [rax]
    3cb7:	69 00 00 04 25 3e    	imul   eax,DWORD PTR [rax],0x3e250400
    3cbd:	0b bf 58 00 00 04    	or     edi,DWORD PTR [rdi+0x4000058]
    3cc3:	25 40 0b ee 71       	and    eax,0x71ee0b40
    3cc8:	00 00                	add    BYTE PTR [rax],al
    3cca:	04 25                	add    al,0x25
    3ccc:	41 0b fa             	or     edi,r10d
    3ccf:	71 00                	jno    3cd1 <__GNU_EH_FRAME_HDR+0x1c9d>
    3cd1:	00 04 25 42 0b 15 72 	add    BYTE PTR ds:0x72150b42,al
    3cd8:	00 00                	add    BYTE PTR [rax],al
    3cda:	04 25                	add    al,0x25
    3cdc:	43 0b 30             	rex.XB or esi,DWORD PTR [r8]
    3cdf:	72 00                	jb     3ce1 <__GNU_EH_FRAME_HDR+0x1cad>
    3ce1:	00 04 25 44 0b 4b 72 	add    BYTE PTR ds:0x724b0b44,al
    3ce8:	00 00                	add    BYTE PTR [rax],al
    3cea:	04 25                	add    al,0x25
    3cec:	45 0b 61 72          	or     r12d,DWORD PTR [r9+0x72]
    3cf0:	00 00                	add    BYTE PTR [rax],al
    3cf2:	04 25                	add    al,0x25
    3cf4:	46 0b 7c 72 00       	or     r15d,DWORD PTR [rdx+r14*2+0x0]
    3cf9:	00 04 25 47 0b 92 72 	add    BYTE PTR ds:0x72920b47,al
    3d00:	00 00                	add    BYTE PTR [rax],al
    3d02:	04 25                	add    al,0x25
    3d04:	4f 0b 19             	rex.WRXB or r11,QWORD PTR [r9]
    3d07:	69 00 00 04 25 50    	imul   eax,DWORD PTR [rax],0x50250400
    3d0d:	0b a8 72 00 00 1a    	or     ebp,DWORD PTR [rax+0x1a000072]
    3d13:	16                   	(bad)
    3d14:	42 00 00             	rex.X add BYTE PTR [rax],al
    3d17:	01 15 c6 0c 4d 3d    	add    DWORD PTR [rip+0x3d4d0cc6],edx        # 3d4d49e3 <__TMC_END__+0x3d4d09cb>
    3d1d:	00 00                	add    BYTE PTR [rax],al
    3d1f:	05 66 4e 00 00       	add    eax,0x4e66
    3d24:	15 cb 0d db 0c       	adc    eax,0xcdb0dcb
    3d29:	00 00                	add    BYTE PTR [rax],al
    3d2b:	05 34 6c 00 00       	add    eax,0x6c34
    3d30:	15 cc 0d 03 58       	adc    eax,0x58030dcc
    3d35:	00 00                	add    BYTE PTR [rax],al
    3d37:	05 42 6c 00 00       	add    eax,0x6c42
    3d3c:	15 cd 0d c9 72       	adc    eax,0x72c90dcd
    3d41:	00 00                	add    BYTE PTR [rax],al
    3d43:	14 71                	adc    al,0x71
    3d45:	73 00                	jae    3d47 <__GNU_EH_FRAME_HDR+0x1d13>
    3d47:	00 03                	add    BYTE PTR [rbx],al
    3d49:	58                   	pop    rax
    3d4a:	00 00                	add    BYTE PTR [rax],al
    3d4c:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3d4f:	33 0b                	xor    ecx,DWORD PTR [rbx]
    3d51:	7b 6a                	jnp    3dbd <__GNU_EH_FRAME_HDR+0x1d89>
    3d53:	00 00                	add    BYTE PTR [rax],al
    3d55:	04 26                	add    al,0x26
    3d57:	34 0b                	xor    al,0xb
    3d59:	87 6a 00             	xchg   DWORD PTR [rdx+0x0],ebp
    3d5c:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3d5f:	35 0b 93 6a 00       	xor    eax,0x6a930b
    3d64:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3d67:	36 0b 9f 6a 00 00 04 	ss or  ebx,DWORD PTR [rdi+0x400006a]
    3d6e:	26 38 0b             	es cmp BYTE PTR [rbx],cl
    3d71:	90                   	nop
    3d72:	73 00                	jae    3d74 <__GNU_EH_FRAME_HDR+0x1d40>
    3d74:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3d77:	39 0b                	cmp    DWORD PTR [rbx],ecx
    3d79:	9c                   	pushf
    3d7a:	73 00                	jae    3d7c <__GNU_EH_FRAME_HDR+0x1d48>
    3d7c:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3d7f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
    3d81:	a8 73                	test   al,0x73
    3d83:	00 00                	add    BYTE PTR [rax],al
    3d85:	04 26                	add    al,0x26
    3d87:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
    3d89:	b4 73                	mov    ah,0x73
    3d8b:	00 00                	add    BYTE PTR [rax],al
    3d8d:	04 26                	add    al,0x26
    3d8f:	3d 0b 30 73 00       	cmp    eax,0x73300b
    3d94:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3d97:	3e 0b 3c 73          	ds or  edi,DWORD PTR [rbx+rsi*2]
    3d9b:	00 00                	add    BYTE PTR [rax],al
    3d9d:	04 26                	add    al,0x26
    3d9f:	3f                   	(bad)
    3da0:	0b 48 73             	or     ecx,DWORD PTR [rax+0x73]
    3da3:	00 00                	add    BYTE PTR [rax],al
    3da5:	04 26                	add    al,0x26
    3da7:	40 0b 54 73 00       	rex or edx,DWORD PTR [rbx+rsi*2+0x0]
    3dac:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3daf:	42 0b 08             	rex.X or ecx,DWORD PTR [rax]
    3db2:	74 00                	je     3db4 <__GNU_EH_FRAME_HDR+0x1d80>
    3db4:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3db7:	43 0b f0             	rex.XB or esi,r8d
    3dba:	73 00                	jae    3dbc <__GNU_EH_FRAME_HDR+0x1d88>
    3dbc:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3dbf:	45 0b 00             	or     r8d,DWORD PTR [r8]
    3dc2:	73 00                	jae    3dc4 <__GNU_EH_FRAME_HDR+0x1d90>
    3dc4:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3dc7:	46 0b 0c 73          	or     r9d,DWORD PTR [rbx+r14*2]
    3dcb:	00 00                	add    BYTE PTR [rax],al
    3dcd:	04 26                	add    al,0x26
    3dcf:	47 0b 18             	rex.RXB or r11d,DWORD PTR [r8]
    3dd2:	73 00                	jae    3dd4 <__GNU_EH_FRAME_HDR+0x1da0>
    3dd4:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3dd7:	48 0b 24 73          	or     rsp,QWORD PTR [rbx+rsi*2]
    3ddb:	00 00                	add    BYTE PTR [rax],al
    3ddd:	04 26                	add    al,0x26
    3ddf:	4a 0b c0             	rex.WX or rax,rax
    3de2:	73 00                	jae    3de4 <_DYNAMIC+0xc>
    3de4:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3de7:	4b 0b cc             	rex.WXB or rcx,r12
    3dea:	73 00                	jae    3dec <_DYNAMIC+0x14>
    3dec:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3def:	4c 0b d8             	or     r11,rax
    3df2:	73 00                	jae    3df4 <_DYNAMIC+0x1c>
    3df4:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3df7:	4d 0b e4             	or     r12,r12
    3dfa:	73 00                	jae    3dfc <_DYNAMIC+0x24>
    3dfc:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3dff:	4f 0b 60 73          	rex.WRXB or r12,QWORD PTR [r8+0x73]
    3e03:	00 00                	add    BYTE PTR [rax],al
    3e05:	04 26                	add    al,0x26
    3e07:	50                   	push   rax
    3e08:	0b 6c 73 00          	or     ebp,DWORD PTR [rbx+rsi*2+0x0]
    3e0c:	00 04 26             	add    BYTE PTR [rsi+riz*1],al
    3e0f:	51                   	push   rcx
    3e10:	0b 78 73             	or     edi,DWORD PTR [rax+0x73]
    3e13:	00 00                	add    BYTE PTR [rax],al
    3e15:	04 26                	add    al,0x26
    3e17:	52                   	push   rdx
    3e18:	0b 84 73 00 00 04 26 	or     eax,DWORD PTR [rbx+rsi*2+0x26040000]
    3e1f:	54                   	push   rsp
    3e20:	0b 14 74             	or     edx,DWORD PTR [rsp+rsi*2]
    3e23:	00 00                	add    BYTE PTR [rax],al
    3e25:	04 26                	add    al,0x26
    3e27:	55                   	push   rbp
    3e28:	0b fc                	or     edi,esp
    3e2a:	73 00                	jae    3e2c <_DYNAMIC+0x54>
    3e2c:	00 28                	add    BYTE PTR [rax],ch
    3e2e:	d3 43 00             	rol    DWORD PTR [rbx+0x0],cl
    3e31:	00 27                	add    BYTE PTR [rdi],ah
    3e33:	2f                   	(bad)
    3e34:	0b 43 3e             	or     eax,DWORD PTR [rbx+0x3e]
    3e37:	00 00                	add    BYTE PTR [rax],al
    3e39:	42 d3 48 00          	rex.X ror DWORD PTR [rax+0x0],cl
    3e3d:	00 27                	add    BYTE PTR [rdi],ah
    3e3f:	51                   	push   rcx
    3e40:	02 12                	add    dl,BYTE PTR [rdx]
    3e42:	00 2b                	add    BYTE PTR [rbx],ch
    3e44:	8e 01                	mov    es,WORD PTR [rcx]
    3e46:	00 00                	add    BYTE PTR [rax],al
    3e48:	01 28                	add    DWORD PTR [rax],ebp
    3e4a:	04 01                	add    al,0x1
    3e4c:	2e 64 3e 00 00       	cs fs add BYTE PTR fs:[rax],al
    3e51:	1d 5f 55 31 00       	sbb    eax,0x31555f
    3e56:	b4 02                	mov    ah,0x2
    3e58:	00 00                	add    BYTE PTR [rax],al
    3e5a:	1d 5f 55 32 00       	sbb    eax,0x32555f
    3e5f:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3e62:	00 00                	add    BYTE PTR [rax],al
    3e64:	30 dd                	xor    ch,bl
    3e66:	92                   	xchg   edx,eax
    3e67:	00 00                	add    BYTE PTR [rax],al
    3e69:	10 28                	adc    BYTE PTR [rax],ch
    3e6b:	1c 01                	sbb    al,0x1
    3e6d:	09 40 00             	or     DWORD PTR [rax+0x0],eax
    3e70:	00 23                	add    BYTE PTR [rbx],ah
    3e72:	43                   	rex.XB
    3e73:	3e 00 00             	ds add BYTE PTR [rax],al
    3e76:	1c 2d                	sbb    al,0x2d
    3e78:	3a 00                	cmp    al,BYTE PTR [rax]
    3e7a:	00 28                	add    BYTE PTR [rax],ch
    3e7c:	22 01                	and    al,BYTE PTR [rcx]
    3e7e:	0b b4 02 00 00 00 1c 	or     esi,DWORD PTR [rdx+rax*1+0x1c000000]
    3e85:	2c 1d                	sub    al,0x1d
    3e87:	00 00                	add    BYTE PTR [rax],al
    3e89:	28 23                	sub    BYTE PTR [rbx],ah
    3e8b:	01 0b                	add    DWORD PTR [rbx],ecx
    3e8d:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    3e90:	00 08                	add    BYTE PTR [rax],cl
    3e92:	39 81 3b 00 00 26    	cmp    DWORD PTR [rcx+0x2600003b],eax
    3e98:	01 7c 90 00          	add    DWORD PTR [rax+rdx*4+0x0],edi
    3e9c:	00 a5 3e 00 00 b0    	add    BYTE PTR [rbp-0x4fffffc2],ah
    3ea2:	3e 00 00             	ds add BYTE PTR [rax],al
    3ea5:	02 20                	add    ah,BYTE PTR [rax]
    3ea7:	74 00                	je     3ea9 <_DYNAMIC+0xd1>
    3ea9:	00 01                	add    BYTE PTR [rcx],al
    3eab:	25 74 00 00 00       	and    eax,0x74
    3eb0:	39 81 3b 00 00 27    	cmp    DWORD PTR [rcx+0x2700003b],eax
    3eb6:	01 94 72 00 00 c3 3e 	add    DWORD PTR [rdx+rsi*2+0x3ec30000],edx
    3ebd:	00 00                	add    BYTE PTR [rax],al
    3ebf:	ce                   	(bad)
    3ec0:	3e 00 00             	ds add BYTE PTR [rax],al
    3ec3:	02 20                	add    ah,BYTE PTR [rax]
    3ec5:	74 00                	je     3ec7 <_DYNAMIC+0xef>
    3ec7:	00 01                	add    BYTE PTR [rcx],al
    3ec9:	2a 74 00 00          	sub    dh,BYTE PTR [rax+rax*1+0x0]
    3ecd:	00 17                	add    BYTE PTR [rdi],dl
    3ecf:	f7 28                	imul   DWORD PTR [rax]
    3ed1:	00 00                	add    BYTE PTR [rax],al
    3ed3:	28 2f                	sub    BYTE PTR [rdi],ch
    3ed5:	01 90 82 00 00 e2    	add    DWORD PTR [rax-0x1dffff7e],edx
    3edb:	3e 00 00             	ds add BYTE PTR [rax],al
    3ede:	ed                   	in     eax,dx
    3edf:	3e 00 00             	ds add BYTE PTR [rax],al
    3ee2:	02 20                	add    ah,BYTE PTR [rax]
    3ee4:	74 00                	je     3ee6 <_DYNAMIC+0x10e>
    3ee6:	00 01                	add    BYTE PTR [rcx],al
    3ee8:	2f                   	(bad)
    3ee9:	74 00                	je     3eeb <_DYNAMIC+0x113>
    3eeb:	00 00                	add    BYTE PTR [rax],al
    3eed:	17                   	(bad)
    3eee:	f7 28                	imul   DWORD PTR [rax]
    3ef0:	00 00                	add    BYTE PTR [rax],al
    3ef2:	28 40 01             	sub    BYTE PTR [rax+0x1],al
    3ef5:	89 44 00 00          	mov    DWORD PTR [rax+rax*1+0x0],eax
    3ef9:	01 3f                	add    DWORD PTR [rdi],edi
    3efb:	00 00                	add    BYTE PTR [rax],al
    3efd:	0c 3f                	or     al,0x3f
    3eff:	00 00                	add    BYTE PTR [rax],al
    3f01:	02 34 74             	add    dh,BYTE PTR [rsp+rsi*2]
    3f04:	00 00                	add    BYTE PTR [rax],al
    3f06:	01 25 74 00 00 00    	add    DWORD PTR [rip+0x74],esp        # 3f80 <_DYNAMIC+0x1a8>
    3f0c:	17                   	(bad)
    3f0d:	81 3b 00 00 28 5a    	cmp    DWORD PTR [rbx],0x5a280000
    3f13:	01 a1 11 00 00 20    	add    DWORD PTR [rcx+0x20000011],esp
    3f19:	3f                   	(bad)
    3f1a:	00 00                	add    BYTE PTR [rax],al
    3f1c:	26 3f                	es (bad)
    3f1e:	00 00                	add    BYTE PTR [rax],al
    3f20:	02 20                	add    ah,BYTE PTR [rax]
    3f22:	74 00                	je     3f24 <_DYNAMIC+0x14c>
    3f24:	00 00                	add    BYTE PTR [rax],al
    3f26:	17                   	(bad)
    3f27:	81 3b 00 00 28 ac    	cmp    DWORD PTR [rbx],0xac280000
    3f2d:	01 b8 5d 00 00 3a    	add    DWORD PTR [rax+0x3a00005d],edi
    3f33:	3f                   	(bad)
    3f34:	00 00                	add    BYTE PTR [rax],al
    3f36:	4a 3f                	rex.WX (bad)
    3f38:	00 00                	add    BYTE PTR [rax],al
    3f3a:	02 20                	add    ah,BYTE PTR [rax]
    3f3c:	74 00                	je     3f3e <_DYNAMIC+0x166>
    3f3e:	00 01                	add    BYTE PTR [rcx],al
    3f40:	39 74 00 00          	cmp    DWORD PTR [rax+rax*1+0x0],esi
    3f44:	01 e7                	add    edi,esp
    3f46:	72 00                	jb     3f48 <_DYNAMIC+0x170>
    3f48:	00 00                	add    BYTE PTR [rax],al
    3f4a:	48 00 1d 00 00 f9 3f 	rex.W add BYTE PTR [rip+0x3ff90000],bl        # 3ff93f51 <__TMC_END__+0x3ff8ff39>
    3f51:	00 00                	add    BYTE PTR [rax],al
    3f53:	2f                   	(bad)
    3f54:	74 00                	je     3f56 <_DYNAMIC+0x17e>
    3f56:	00 5f 3f             	add    BYTE PTR [rdi+0x3f],bl
    3f59:	00 00                	add    BYTE PTR [rax],al
    3f5b:	6a 3f                	push   0x3f
    3f5d:	00 00                	add    BYTE PTR [rax],al
    3f5f:	02 20                	add    ah,BYTE PTR [rax]
    3f61:	74 00                	je     3f63 <_DYNAMIC+0x18b>
    3f63:	00 01                	add    BYTE PTR [rcx],al
    3f65:	25 74 00 00 00       	and    eax,0x74
    3f6a:	18 00                	sbb    BYTE PTR [rax],al
    3f6c:	1d 00 00 28 4f       	sbb    eax,0x4f280000
    3f71:	02 82 7e 00 00 2f    	add    al,BYTE PTR [rdx+0x2f00007e]
    3f77:	74 00                	je     3f79 <_DYNAMIC+0x1a1>
    3f79:	00 82 3f 00 00 8d    	add    BYTE PTR [rdx-0x72ffffc1],al
    3f7f:	3f                   	(bad)
    3f80:	00 00                	add    BYTE PTR [rax],al
    3f82:	02 20                	add    ah,BYTE PTR [rax]
    3f84:	74 00                	je     3f86 <_DYNAMIC+0x1ae>
    3f86:	00 01                	add    BYTE PTR [rcx],al
    3f88:	25 74 00 00 00       	and    eax,0x74
    3f8d:	18 00                	sbb    BYTE PTR [rax],al
    3f8f:	1d 00 00 28 5a       	sbb    eax,0x5a280000
    3f94:	02 25 54 00 00 2f    	add    ah,BYTE PTR [rip+0x2f000054]        # 2f003fee <__TMC_END__+0x2effffd6>
    3f9a:	74 00                	je     3f9c <_DYNAMIC+0x1c4>
    3f9c:	00 a5 3f 00 00 b0    	add    BYTE PTR [rbp-0x4fffffc1],ah
    3fa2:	3f                   	(bad)
    3fa3:	00 00                	add    BYTE PTR [rax],al
    3fa5:	02 20                	add    ah,BYTE PTR [rax]
    3fa7:	74 00                	je     3fa9 <_DYNAMIC+0x1d1>
    3fa9:	00 01                	add    BYTE PTR [rcx],al
    3fab:	2a 74 00 00          	sub    dh,BYTE PTR [rax+rax*1+0x0]
    3faf:	00 18                	add    BYTE PTR [rax],bl
    3fb1:	00 1d 00 00 28 7e    	add    BYTE PTR [rip+0x7e280000],bl        # 7e283fb7 <__TMC_END__+0x7e27ff9f>
    3fb7:	02 73 16             	add    dh,BYTE PTR [rbx+0x16]
    3fba:	00 00                	add    BYTE PTR [rax],al
    3fbc:	25 74 00 00 c8       	and    eax,0xc8000074
    3fc1:	3f                   	(bad)
    3fc2:	00 00                	add    BYTE PTR [rax],al
    3fc4:	d3 3f                	sar    DWORD PTR [rdi],cl
    3fc6:	00 00                	add    BYTE PTR [rax],al
    3fc8:	02 34 74             	add    dh,BYTE PTR [rsp+rsi*2]
    3fcb:	00 00                	add    BYTE PTR [rax],al
    3fcd:	01 25 74 00 00 00    	add    DWORD PTR [rip+0x74],esp        # 4047 <__TMC_END__+0x2f>
    3fd3:	18 00                	sbb    BYTE PTR [rax],al
    3fd5:	1d 00 00 28 88       	sbb    eax,0x88280000
    3fda:	02 1a                	add    bl,BYTE PTR [rdx]
    3fdc:	35 00 00 25 74       	xor    eax,0x74250000
    3fe1:	00 00                	add    BYTE PTR [rax],al
    3fe3:	eb 3f                	jmp    4024 <__TMC_END__+0xc>
    3fe5:	00 00                	add    BYTE PTR [rax],al
    3fe7:	f6 3f                	idiv   BYTE PTR [rdi]
    3fe9:	00 00                	add    BYTE PTR [rax],al
    3feb:	02 34 74             	add    dh,BYTE PTR [rsp+rsi*2]
    3fee:	00 00                	add    BYTE PTR [rax],al
    3ff0:	01 2a                	add    DWORD PTR [rdx],ebp
    3ff2:	74 00                	je     3ff4 <_GLOBAL_OFFSET_TABLE_+0xc>
    3ff4:	00 00                	add    BYTE PTR [rax],al
    3ff6:	1d 5f 54 31 00       	sbb    eax,0x31545f
    3ffb:	b4 02                	mov    ah,0x2
    3ffd:	00 00                	add    BYTE PTR [rax],al
    3fff:	1d 5f 54 32 00       	sbb    eax,0x32545f
    4004:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    4007:	00 00                	add    BYTE PTR [rax],al
    4009:	0f 64 3e             	pcmpgtb mm7,QWORD PTR [rsi]
    400c:	00 00                	add    BYTE PTR [rax],al
    400e:	28 d9                	sub    cl,bl
    4010:	09 00                	or     DWORD PTR [rax],eax
    4012:	00 29                	add    BYTE PTR [rcx],ch
    4014:	4d 0b 7e 45          	or     r15,QWORD PTR [r14+0x45]
    4018:	00 00                	add    BYTE PTR [rax],al
    401a:	0c 29                	or     al,0x29
    401c:	71 05                	jno    4023 <__TMC_END__+0xb>
    401e:	0e                   	(bad)
    401f:	7e 45                	jle    4066 <__TMC_END__+0x4e>
    4021:	00 00                	add    BYTE PTR [rax],al
    4023:	0c 29                	or     al,0x29
    4025:	71 05                	jno    402c <__TMC_END__+0x14>
    4027:	0e                   	(bad)
    4028:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    4029:	45 00 00             	add    BYTE PTR [r8],r8b
    402c:	0c 29                	or     al,0x29
    402e:	71 05                	jno    4035 <__TMC_END__+0x1d>
    4030:	0e                   	(bad)
    4031:	d7                   	xlat   BYTE PTR ds:[rbx]
    4032:	45 00 00             	add    BYTE PTR [r8],r8b
    4035:	0c 29                	or     al,0x29
    4037:	71 05                	jno    403e <__TMC_END__+0x26>
    4039:	0e                   	(bad)
    403a:	fc                   	cld
    403b:	45 00 00             	add    BYTE PTR [r8],r8b
    403e:	0c 29                	or     al,0x29
    4040:	71 05                	jno    4047 <__TMC_END__+0x2f>
    4042:	0e                   	(bad)
    4043:	2b 46 00             	sub    eax,DWORD PTR [rsi+0x0]
    4046:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    4049:	71 05                	jno    4050 <__TMC_END__+0x38>
    404b:	0e                   	(bad)
    404c:	55                   	push   rbp
    404d:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    4050:	0c 29                	or     al,0x29
    4052:	71 05                	jno    4059 <__TMC_END__+0x41>
    4054:	0e                   	(bad)
    4055:	7a 46                	jp     409d <__TMC_END__+0x85>
    4057:	00 00                	add    BYTE PTR [rax],al
    4059:	0c 29                	or     al,0x29
    405b:	71 05                	jno    4062 <__TMC_END__+0x4a>
    405d:	0e                   	(bad)
    405e:	a9 46 00 00 0c       	test   eax,0xc000046
    4063:	29 71 05             	sub    DWORD PTR [rcx+0x5],esi
    4066:	0e                   	(bad)
    4067:	d3 46 00             	rol    DWORD PTR [rsi+0x0],cl
    406a:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    406d:	71 05                	jno    4074 <__TMC_END__+0x5c>
    406f:	0e                   	(bad)
    4070:	f8                   	clc
    4071:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    4074:	0c 29                	or     al,0x29
    4076:	71 05                	jno    407d <__TMC_END__+0x65>
    4078:	0e                   	(bad)
    4079:	27                   	(bad)
    407a:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    407d:	0c 29                	or     al,0x29
    407f:	71 05                	jno    4086 <__TMC_END__+0x6e>
    4081:	0e                   	(bad)
    4082:	51                   	push   rcx
    4083:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    4086:	0c 29                	or     al,0x29
    4088:	71 05                	jno    408f <__TMC_END__+0x77>
    408a:	0e                   	(bad)
    408b:	76 47                	jbe    40d4 <__TMC_END__+0xbc>
    408d:	00 00                	add    BYTE PTR [rax],al
    408f:	0c 29                	or     al,0x29
    4091:	71 05                	jno    4098 <__TMC_END__+0x80>
    4093:	0e                   	(bad)
    4094:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    4095:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    4098:	0c 29                	or     al,0x29
    409a:	71 05                	jno    40a1 <__TMC_END__+0x89>
    409c:	0e                   	(bad)
    409d:	cf                   	iret
    409e:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    40a1:	0c 29                	or     al,0x29
    40a3:	71 05                	jno    40aa <__TMC_END__+0x92>
    40a5:	0e                   	(bad)
    40a6:	f4                   	hlt
    40a7:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    40aa:	0c 29                	or     al,0x29
    40ac:	71 05                	jno    40b3 <__TMC_END__+0x9b>
    40ae:	0e                   	(bad)
    40af:	23 48 00             	and    ecx,DWORD PTR [rax+0x0]
    40b2:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    40b5:	71 05                	jno    40bc <__TMC_END__+0xa4>
    40b7:	0e                   	(bad)
    40b8:	4d                   	rex.WRB
    40b9:	48 00 00             	rex.W add BYTE PTR [rax],al
    40bc:	0c 29                	or     al,0x29
    40be:	71 05                	jno    40c5 <__TMC_END__+0xad>
    40c0:	0e                   	(bad)
    40c1:	72 48                	jb     410b <__TMC_END__+0xf3>
    40c3:	00 00                	add    BYTE PTR [rax],al
    40c5:	0c 29                	or     al,0x29
    40c7:	71 05                	jno    40ce <__TMC_END__+0xb6>
    40c9:	0e                   	(bad)
    40ca:	a1 48 00 00 0c 29 71 	movabs eax,ds:0xe0571290c000048
    40d1:	05 0e 
    40d3:	cb                   	retf
    40d4:	48 00 00             	rex.W add BYTE PTR [rax],al
    40d7:	0c 29                	or     al,0x29
    40d9:	71 05                	jno    40e0 <__TMC_END__+0xc8>
    40db:	0e                   	(bad)
    40dc:	f0 48 00 00          	lock rex.W add BYTE PTR [rax],al
    40e0:	0c 29                	or     al,0x29
    40e2:	71 05                	jno    40e9 <__TMC_END__+0xd1>
    40e4:	0e                   	(bad)
    40e5:	1f                   	(bad)
    40e6:	49 00 00             	rex.WB add BYTE PTR [r8],al
    40e9:	0c 29                	or     al,0x29
    40eb:	71 05                	jno    40f2 <__TMC_END__+0xda>
    40ed:	0e                   	(bad)
    40ee:	49                   	rex.WB
    40ef:	49 00 00             	rex.WB add BYTE PTR [r8],al
    40f2:	0c 29                	or     al,0x29
    40f4:	71 05                	jno    40fb <__TMC_END__+0xe3>
    40f6:	0e                   	(bad)
    40f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40f8:	49 00 00             	rex.WB add BYTE PTR [r8],al
    40fb:	0c 29                	or     al,0x29
    40fd:	71 05                	jno    4104 <__TMC_END__+0xec>
    40ff:	0e                   	(bad)
    4100:	98                   	cwde
    4101:	49 00 00             	rex.WB add BYTE PTR [r8],al
    4104:	0c 29                	or     al,0x29
    4106:	71 05                	jno    410d <__TMC_END__+0xf5>
    4108:	0e                   	(bad)
    4109:	c2 49 00             	ret    0x49
    410c:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    410f:	71 05                	jno    4116 <__TMC_END__+0xfe>
    4111:	0e                   	(bad)
    4112:	ec                   	in     al,dx
    4113:	49 00 00             	rex.WB add BYTE PTR [r8],al
    4116:	0c 29                	or     al,0x29
    4118:	71 05                	jno    411f <__TMC_END__+0x107>
    411a:	0e                   	(bad)
    411b:	16                   	(bad)
    411c:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    411f:	0c 29                	or     al,0x29
    4121:	71 05                	jno    4128 <__TMC_END__+0x110>
    4123:	0e                   	(bad)
    4124:	40                   	rex
    4125:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    4128:	0c 29                	or     al,0x29
    412a:	71 05                	jno    4131 <__TMC_END__+0x119>
    412c:	0e                   	(bad)
    412d:	6a 4a                	push   0x4a
    412f:	00 00                	add    BYTE PTR [rax],al
    4131:	0c 29                	or     al,0x29
    4133:	71 05                	jno    413a <__TMC_END__+0x122>
    4135:	0e                   	(bad)
    4136:	94                   	xchg   esp,eax
    4137:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    413a:	0c 29                	or     al,0x29
    413c:	71 05                	jno    4143 <__TMC_END__+0x12b>
    413e:	0e                   	(bad)
    413f:	be 4a 00 00 0c       	mov    esi,0xc00004a
    4144:	29 71 05             	sub    DWORD PTR [rcx+0x5],esi
    4147:	0e                   	(bad)
    4148:	e8 4a 00 00 0c       	call   c004197 <__TMC_END__+0xc00017f>
    414d:	29 71 05             	sub    DWORD PTR [rcx+0x5],esi
    4150:	0e                   	(bad)
    4151:	12 4b 00             	adc    cl,BYTE PTR [rbx+0x0]
    4154:	00 0c 29             	add    BYTE PTR [rcx+rbp*1],cl
    4157:	71 05                	jno    415e <__TMC_END__+0x146>
    4159:	0e                   	(bad)
    415a:	3c 4b                	cmp    al,0x4b
    415c:	00 00                	add    BYTE PTR [rax],al
    415e:	69 48 24 00 00 20 29 	imul   ecx,DWORD PTR [rax+0x24],0x29200000
    4165:	50                   	push   rax
    4166:	0a 0b                	or     cl,BYTE PTR [rbx]
    4168:	5e                   	pop    rsi
    4169:	41 00 00             	add    BYTE PTR [r8],al
    416c:	fc                   	cld
    416d:	43 00 00             	rex.XB add BYTE PTR [r8],al
    4170:	49                   	rex.WB
    4171:	44                   	rex.R
    4172:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    4175:	08 29                	or     BYTE PTR [rcx],ch
    4177:	9d                   	popf
    4178:	0a 0e                	or     cl,BYTE PTR [rsi]
    417a:	02 eb                	add    ch,bl
    417c:	41 00 00             	add    BYTE PTR [r8],al
    417f:	6a f2                	push   0xfffffffffffffff2
    4181:	0d 00 00 29 a0       	or     eax,0xa0290000
    4186:	0a 0b                	or     cl,BYTE PTR [rbx]
    4188:	a9 45 00 00 f1       	test   eax,0xf1000045
    418d:	65 00 00             	add    BYTE PTR gs:[rax],al
    4190:	98                   	cwde
    4191:	41 00 00             	add    BYTE PTR [r8],al
    4194:	9e                   	sahf
    4195:	41 00 00             	add    BYTE PTR [r8],al
    4198:	02 a2 74 00 00 00    	add    ah,BYTE PTR [rdx+0x74]
    419e:	6b 67 65 74          	imul   esp,DWORD PTR [rdi+0x65],0x74
    41a2:	00 29                	add    BYTE PTR [rcx],ch
    41a4:	a2 0a 0a d1 13 00 00 	movabs ds:0x5803000013d10a0a,al
    41ab:	03 58 
    41ad:	00 00                	add    BYTE PTR [rax],al
    41af:	b7 41                	mov    bh,0x41
    41b1:	00 00                	add    BYTE PTR [rax],al
    41b3:	bd 41 00 00 02       	mov    ebp,0x2000041
    41b8:	a2 74 00 00 00 17 01 	movabs ds:0x41011700000074,al
    41bf:	41 00 
    41c1:	00 29                	add    BYTE PTR [rcx],ch
    41c3:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    41c4:	0a 58 43             	or     bl,BYTE PTR [rax+0x43]
    41c7:	00 00                	add    BYTE PTR [rax],al
    41c9:	d1 41 00             	rol    DWORD PTR [rcx+0x0],1
    41cc:	00 dc                	add    ah,bl
    41ce:	41 00 00             	add    BYTE PTR [r8],al
    41d1:	02 a7 74 00 00 01    	add    ah,BYTE PTR [rdi+0x1000074]
    41d7:	29 05 00 00 00 1c    	sub    DWORD PTR [rip+0x1c000000],eax        # 1c0041dd <__TMC_END__+0x1c0001c5>
    41dd:	bf 48 00 00 29       	mov    edi,0x29000048
    41e2:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    41e3:	0a 09                	or     cl,BYTE PTR [rcx]
    41e5:	7a 74                	jp     425b <__TMC_END__+0x243>
    41e7:	00 00                	add    BYTE PTR [rax],al
    41e9:	00 00                	add    BYTE PTR [rax],al
    41eb:	0f 70 41 00 00       	pshufw mm0,QWORD PTR [rcx+0x0],0x0
    41f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    41f1:	2b 1b                	sub    ebx,DWORD PTR [rbx]
    41f3:	00 00                	add    BYTE PTR [rax],al
    41f5:	2f                   	(bad)
    41f6:	71 00                	jno    41f8 <__TMC_END__+0x1e0>
    41f8:	00 01                	add    BYTE PTR [rcx],al
    41fa:	02 42 00             	add    al,BYTE PTR [rdx+0x0]
    41fd:	00 0d 42 00 00 02    	add    BYTE PTR [rip+0x2000042],cl        # 2004245 <__TMC_END__+0x200022d>
    4203:	7a 74                	jp     4279 <__TMC_END__+0x261>
    4205:	00 00                	add    BYTE PTR [rax],al
    4207:	02 f1                	add    dh,cl
    4209:	00 00                	add    BYTE PTR [rax],al
    420b:	00 00                	add    BYTE PTR [rax],al
    420d:	6d                   	ins    DWORD PTR es:[rdi],dx
    420e:	01 43 00             	add    DWORD PTR [rbx+0x0],eax
    4211:	00 d0                	add    al,dl
    4213:	74 00                	je     4215 <__TMC_END__+0x1fd>
    4215:	00 00                	add    BYTE PTR [rax],al
    4217:	01 1c be             	add    DWORD PTR [rsi+rdi*4],ebx
    421a:	8f 00                	pop    QWORD PTR [rax]
    421c:	00 29                	add    BYTE PTR [rcx],ch
    421e:	54                   	push   rsp
    421f:	0a 14 9d 4e 00 00 08 	or     dl,BYTE PTR [rbx*4+0x800004e]
    4226:	1c b9                	sbb    al,0xb9
    4228:	7f 00                	jg     422a <__TMC_END__+0x212>
    422a:	00 29                	add    BYTE PTR [rcx],ch
    422c:	55                   	push   rbp
    422d:	0a 27                	or     ah,BYTE PTR [rdi]
    422f:	56                   	push   rsi
    4230:	50                   	push   rax
    4231:	00 00                	add    BYTE PTR [rax],al
    4233:	18 6e fe             	sbb    BYTE PTR [rsi-0x2],ch
    4236:	13 00                	adc    eax,DWORD PTR [rax]
    4238:	00 29                	add    BYTE PTR [rcx],ch
    423a:	5b                   	pop    rbx
    423b:	0a 14 41             	or     dl,BYTE PTR [rcx+rax*2]
    423e:	18 00                	sbb    BYTE PTR [rax],al
    4240:	00 01                	add    BYTE PTR [rcx],al
    4242:	02 10                	add    dl,BYTE PTR [rax]
    4244:	00 5e 41             	add    BYTE PTR [rsi+0x41],bl
    4247:	00 00                	add    BYTE PTR [rax],al
    4249:	51                   	push   rcx
    424a:	42 00 00             	rex.X add BYTE PTR [rax],al
    424d:	57                   	push   rdi
    424e:	42 00 00             	rex.X add BYTE PTR [rax],al
    4251:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    4254:	00 00                	add    BYTE PTR [rax],al
    4256:	00 2a                	add    BYTE PTR [rdx],ch
    4258:	07                   	(bad)
    4259:	43 00 00             	rex.XB add BYTE PTR [r8],al
    425c:	29 61 0a             	sub    DWORD PTR [rcx+0xa],esp
    425f:	94                   	xchg   esp,eax
    4260:	86 00                	xchg   BYTE PTR [rax],al
    4262:	00 02                	add    BYTE PTR [rdx],al
    4264:	6c                   	ins    BYTE PTR es:[rdi],dx
    4265:	42 00 00             	rex.X add BYTE PTR [rax],al
    4268:	77 42                	ja     42ac <__TMC_END__+0x294>
    426a:	00 00                	add    BYTE PTR [rax],al
    426c:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    426f:	00 00                	add    BYTE PTR [rax],al
    4271:	01 9d 4e 00 00 00    	add    DWORD PTR [rbp+0x4e],ebx
    4277:	03 0d 2a 00 00 29    	add    ecx,DWORD PTR [rip+0x2900002a]        # 290042a7 <__TMC_END__+0x2900028f>
    427d:	68 0a 07 4f 85       	push   0xffffffff854f070a
    4282:	00 00                	add    BYTE PTR [rax],al
    4284:	9d                   	popf
    4285:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4288:	02 91 42 00 00 97    	add    dl,BYTE PTR [rcx-0x68ffffbe]
    428e:	42 00 00             	rex.X add BYTE PTR [rax],al
    4291:	02 e0                	add    ah,al
    4293:	74 00                	je     4295 <__TMC_END__+0x27d>
    4295:	00 00                	add    BYTE PTR [rax],al
    4297:	03 9d 06 00 00 29    	add    ebx,DWORD PTR [rbp+0x29000006]
    429d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    429e:	0a 07                	or     al,BYTE PTR [rdi]
    42a0:	73 4c                	jae    42ee <__TMC_END__+0x2d6>
    42a2:	00 00                	add    BYTE PTR [rax],al
    42a4:	9d                   	popf
    42a5:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    42a8:	02 b1 42 00 00 b7    	add    dh,BYTE PTR [rcx-0x48ffffbe]
    42ae:	42 00 00             	rex.X add BYTE PTR [rax],al
    42b1:	02 e0                	add    ah,al
    42b3:	74 00                	je     42b5 <__TMC_END__+0x29d>
    42b5:	00 00                	add    BYTE PTR [rax],al
    42b7:	12 1b                	adc    bl,BYTE PTR [rbx]
    42b9:	91                   	xchg   ecx,eax
    42ba:	00 00                	add    BYTE PTR [rax],al
    42bc:	29 74 0a 07          	sub    DWORD PTR [rdx+rcx*1+0x7],esi
    42c0:	6c                   	ins    BYTE PTR es:[rdi],dx
    42c1:	22 00                	and    al,BYTE PTR [rax]
    42c3:	00 02                	add    BYTE PTR [rdx],al
    42c5:	cd 42                	int    0x42
    42c7:	00 00                	add    BYTE PTR [rax],al
    42c9:	d3 42 00             	rol    DWORD PTR [rdx+0x0],cl
    42cc:	00 02                	add    BYTE PTR [rdx],al
    42ce:	7a 74                	jp     4344 <__TMC_END__+0x32c>
    42d0:	00 00                	add    BYTE PTR [rax],al
    42d2:	00 12                	add    BYTE PTR [rdx],dl
    42d4:	a0 84 00 00 29 79 0a 	movabs al,ds:0xda070a7929000084
    42db:	07 da 
    42dd:	22 00                	and    al,BYTE PTR [rax]
    42df:	00 02                	add    BYTE PTR [rdx],al
    42e1:	e9 42 00 00 f9       	jmp    fffffffff9004328 <__TMC_END__+0xfffffffff9000310>
    42e6:	42 00 00             	rex.X add BYTE PTR [rax],al
    42e9:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    42ec:	00 00                	add    BYTE PTR [rax],al
    42ee:	01 9d 4e 00 00 01    	add    DWORD PTR [rbp+0x100004e],ebx
    42f4:	29 05 00 00 00 12    	sub    DWORD PTR [rip+0x12000000],eax        # 120042fa <__TMC_END__+0x120002e2>
    42fa:	2a 40 00             	sub    al,BYTE PTR [rax+0x0]
    42fd:	00 29                	add    BYTE PTR [rcx],ch
    42ff:	81 0a 07 cb 5f 00    	or     DWORD PTR [rdx],0x5fcb07
    4305:	00 02                	add    BYTE PTR [rdx],al
    4307:	0f 43 00             	cmovae eax,DWORD PTR [rax]
    430a:	00 1a                	add    BYTE PTR [rdx],bl
    430c:	43 00 00             	rex.XB add BYTE PTR [r8],al
    430f:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    4312:	00 00                	add    BYTE PTR [rax],al
    4314:	01 e5                	add    ebp,esp
    4316:	00 00                	add    BYTE PTR [rax],al
    4318:	00 00                	add    BYTE PTR [rax],al
    431a:	12 2a                	adc    ch,BYTE PTR [rdx]
    431c:	40 00 00             	rex add BYTE PTR [rax],al
    431f:	29 89 0a 07 b5 49    	sub    DWORD PTR [rcx+0x49b5070a],ecx
    4325:	00 00                	add    BYTE PTR [rax],al
    4327:	02 30                	add    dh,BYTE PTR [rax]
    4329:	43 00 00             	rex.XB add BYTE PTR [r8],al
    432c:	3b 43 00             	cmp    eax,DWORD PTR [rbx+0x0]
    432f:	00 02                	add    BYTE PTR [rdx],al
    4331:	7a 74                	jp     43a7 <__TMC_END__+0x38f>
    4333:	00 00                	add    BYTE PTR [rax],al
    4335:	01 be 0e 00 00 00    	add    DWORD PTR [rsi+0xe],edi
    433b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    433c:	d5 45 00 00          	add    BYTE PTR [r8],r24b
    4340:	29 ad 0a 07 cd 4b    	sub    DWORD PTR [rbp+0x4bcd070a],ebp
    4346:	00 00                	add    BYTE PTR [rax],al
    4348:	70 41                	jo     438b <__TMC_END__+0x373>
    434a:	00 00                	add    BYTE PTR [rax],al
    434c:	01 02                	add    DWORD PTR [rdx],eax
    434e:	10 01                	adc    BYTE PTR [rcx],al
    4350:	5e                   	pop    rsi
    4351:	41 00 00             	add    BYTE PTR [r8],al
    4354:	02 5d 43             	add    bl,BYTE PTR [rbp+0x43]
    4357:	00 00                	add    BYTE PTR [rax],al
    4359:	68 43 00 00 02       	push   0x2000043
    435e:	7a 74                	jp     43d4 <__TMC_END__+0x3bc>
    4360:	00 00                	add    BYTE PTR [rax],al
    4362:	01 29                	add    DWORD PTR [rcx],ebp
    4364:	05 00 00 00 70       	add    eax,0x70000000
    4369:	01 41 00             	add    DWORD PTR [rcx+0x0],eax
    436c:	00 29                	add    BYTE PTR [rcx],ch
    436e:	be 0a 07 28 19       	mov    esi,0x1928070a
    4373:	00 00                	add    BYTE PTR [rax],al
    4375:	01 02                	add    DWORD PTR [rdx],eax
    4377:	10 02                	adc    BYTE PTR [rdx],al
    4379:	5e                   	pop    rsi
    437a:	41 00 00             	add    BYTE PTR [r8],al
    437d:	02 86 43 00 00 91    	add    al,BYTE PTR [rsi-0x6effffbd]
    4383:	43 00 00             	rex.XB add BYTE PTR [r8],al
    4386:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    4389:	00 00                	add    BYTE PTR [rax],al
    438b:	01 29                	add    DWORD PTR [rcx],ebp
    438d:	05 00 00 00 46       	add    eax,0x46000000
    4392:	07                   	(bad)
    4393:	43 00 00             	rex.XB add BYTE PTR [r8],al
    4396:	29 c2                	sub    edx,eax
    4398:	0a 83 0e 00 00 a5    	or     al,BYTE PTR [rbx-0x5afffff2]
    439e:	43 00 00             	rex.XB add BYTE PTR [r8],al
    43a1:	b0 43                	mov    al,0x43
    43a3:	00 00                	add    BYTE PTR [rax],al
    43a5:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    43a8:	00 00                	add    BYTE PTR [rax],al
    43aa:	01 e5                	add    ebp,esp
    43ac:	74 00                	je     43ae <__TMC_END__+0x396>
    43ae:	00 00                	add    BYTE PTR [rax],al
    43b0:	47 00 1d 00 00 29 c3 	rex.RXB add BYTE PTR [rip+0xffffffffc3290000],r11b        # ffffffffc32943b7 <__TMC_END__+0xffffffffc329039f>
    43b7:	0a 0e                	or     cl,BYTE PTR [rsi]
    43b9:	00 00                	add    BYTE PTR [rax],al
    43bb:	00 00                	add    BYTE PTR [rax],al
    43bd:	8e 74 00 00          	mov    ?,WORD PTR [rax+rax*1+0x0]
    43c1:	c9                   	leave
    43c2:	43 00 00             	rex.XB add BYTE PTR [r8],al
    43c5:	d4                   	(bad)
    43c6:	43 00 00             	rex.XB add BYTE PTR [r8],al
    43c9:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    43cc:	00 00                	add    BYTE PTR [rax],al
    43ce:	01 e5                	add    ebp,esp
    43d0:	74 00                	je     43d2 <__TMC_END__+0x3ba>
    43d2:	00 00                	add    BYTE PTR [rax],al
    43d4:	24 6f                	and    al,0x6f
    43d6:	75 74                	jne    444c <__TMC_END__+0x434>
    43d8:	00 29                	add    BYTE PTR [rcx],ch
    43da:	c7                   	(bad)
    43db:	0a 9f 90 00 00 01    	or     bl,BYTE PTR [rdi+0x1000090]
    43e1:	44 00 00             	add    BYTE PTR [rax],r8b
    43e4:	ec                   	in     al,dx
    43e5:	43 00 00             	rex.XB add BYTE PTR [r8],al
    43e8:	f2 43 00 00          	repnz rex.XB add BYTE PTR [r8],al
    43ec:	02 7a 74             	add    bh,BYTE PTR [rdx+0x74]
    43ef:	00 00                	add    BYTE PTR [rax],al
    43f1:	00 14 83             	add    BYTE PTR [rbx+rax*4],dl
    43f4:	33 00                	xor    eax,DWORD PTR [rax]
    43f6:	00 e5                	add    ch,ah
    43f8:	00 00                	add    BYTE PTR [rax],al
    43fa:	00 00                	add    BYTE PTR [rax],al
    43fc:	0f 5e 41 00          	divps  xmm0,XMMWORD PTR [rcx+0x0]
    4400:	00 2b                	add    BYTE PTR [rbx],ch
    4402:	73 68                	jae    446c <__TMC_END__+0x454>
    4404:	00 00                	add    BYTE PTR [rax],al
    4406:	08 29                	or     BYTE PTR [rcx],ch
    4408:	18 0a                	sbb    BYTE PTR [rdx],cl
    440a:	0b 78 45             	or     edi,DWORD PTR [rax+0x45]
    440d:	00 00                	add    BYTE PTR [rax],al
    440f:	1c bf                	sbb    al,0xbf
    4411:	48 00 00             	rex.W add BYTE PTR [rax],al
    4414:	29 1a                	sub    DWORD PTR [rdx],ebx
    4416:	0a 16                	or     dl,BYTE PTR [rsi]
    4418:	7a 74                	jp     448e <__TMC_END__+0x476>
    441a:	00 00                	add    BYTE PTR [rax],al
    441c:	00 4a 51             	add    BYTE PTR [rdx+0x51],cl
    441f:	63 00                	movsxd eax,DWORD PTR [rax]
    4421:	00 23                	add    BYTE PTR [rbx],ah
    4423:	0a 0a                	or     cl,BYTE PTR [rdx]
    4425:	1d 00 00 30 44       	sbb    eax,0x44300000
    442a:	00 00                	add    BYTE PTR [rax],al
    442c:	36 44 00 00          	ss add BYTE PTR [rax],r8b
    4430:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    4433:	00 00                	add    BYTE PTR [rax],al
    4435:	00 4a 51             	add    BYTE PTR [rdx+0x51],cl
    4438:	63 00                	movsxd eax,DWORD PTR [rax]
    443a:	00 24 0a             	add    BYTE PTR [rdx+rcx*1],ah
    443d:	9b                   	fwait
    443e:	2b 00                	sub    eax,DWORD PTR [rax]
    4440:	00 49 44             	add    BYTE PTR [rcx+0x44],cl
    4443:	00 00                	add    BYTE PTR [rax],al
    4445:	54                   	push   rsp
    4446:	44 00 00             	add    BYTE PTR [rax],r8b
    4449:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    444c:	00 00                	add    BYTE PTR [rax],al
    444e:	01 84 74 00 00 00 71 	add    DWORD PTR [rsp+rsi*2+0x71000000],eax
    4455:	00 1d 00 00 29 25    	add    BYTE PTR [rip+0x25290000],bl        # 2529445b <__TMC_END__+0x25290443>
    445b:	0a 13                	or     dl,BYTE PTR [rbx]
    445d:	e1 5e                	loope  44bd <__TMC_END__+0x4a5>
    445f:	00 00                	add    BYTE PTR [rax],al
    4461:	89 74 00 00          	mov    DWORD PTR [rax+rax*1+0x0],esi
    4465:	01 01                	add    DWORD PTR [rcx],eax
    4467:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4468:	44 00 00             	add    BYTE PTR [rax],r8b
    446b:	7a 44                	jp     44b1 <__TMC_END__+0x499>
    446d:	00 00                	add    BYTE PTR [rax],al
    446f:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    4472:	00 00                	add    BYTE PTR [rax],al
    4474:	01 84 74 00 00 00 2a 	add    DWORD PTR [rsp+rsi*2+0x2a000000],eax
    447b:	51                   	push   rcx
    447c:	63 00                	movsxd eax,DWORD PTR [rax]
    447e:	00 29                	add    BYTE PTR [rcx],ch
    4480:	29 0a                	sub    DWORD PTR [rdx],ecx
    4482:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    4483:	06                   	(bad)
    4484:	00 00                	add    BYTE PTR [rax],al
    4486:	01 8f 44 00 00 9a    	add    DWORD PTR [rdi-0x65ffffbc],ecx
    448c:	44 00 00             	add    BYTE PTR [rax],r8b
    448f:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    4492:	00 00                	add    BYTE PTR [rax],al
    4494:	01 8e 74 00 00 00    	add    DWORD PTR [rsi+0x74],ecx
    449a:	03 00                	add    eax,DWORD PTR [rax]
    449c:	1d 00 00 29 2d       	sbb    eax,0x2d290000
    44a1:	0a 07                	or     al,BYTE PTR [rdi]
    44a3:	fa                   	cli
    44a4:	63 00                	movsxd eax,DWORD PTR [rax]
    44a6:	00 89 74 00 00 01    	add    BYTE PTR [rcx+0x1000074],cl
    44ac:	b4 44                	mov    ah,0x44
    44ae:	00 00                	add    BYTE PTR [rax],al
    44b0:	bf 44 00 00 02       	mov    edi,0x2000044
    44b5:	7f 74                	jg     452b <__TMC_END__+0x513>
    44b7:	00 00                	add    BYTE PTR [rax],al
    44b9:	01 e5                	add    ebp,esp
    44bb:	00 00                	add    BYTE PTR [rax],al
    44bd:	00 00                	add    BYTE PTR [rax],al
    44bf:	03 00                	add    eax,DWORD PTR [rax]
    44c1:	1d 00 00 29 35       	sbb    eax,0x35290000
    44c6:	0a 07                	or     al,BYTE PTR [rdi]
    44c8:	e5 56                	in     eax,0x56
    44ca:	00 00                	add    BYTE PTR [rax],al
    44cc:	89 74 00 00          	mov    DWORD PTR [rax+rax*1+0x0],esi
    44d0:	01 d9                	add    ecx,ebx
    44d2:	44 00 00             	add    BYTE PTR [rax],r8b
    44d5:	e4 44                	in     al,0x44
    44d7:	00 00                	add    BYTE PTR [rax],al
    44d9:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    44dc:	00 00                	add    BYTE PTR [rax],al
    44de:	01 be 0e 00 00 00    	add    DWORD PTR [rsi+0xe],edi
    44e4:	03 62 1c             	add    esp,DWORD PTR [rdx+0x1c]
    44e7:	00 00                	add    BYTE PTR [rax],al
    44e9:	29 3d 0a 07 2c 7f    	sub    DWORD PTR [rip+0x7f2c070a],edi        # 7f2c4bf9 <__TMC_END__+0x7f2c0be1>
    44ef:	00 00                	add    BYTE PTR [rax],al
    44f1:	89 74 00 00          	mov    DWORD PTR [rax+rax*1+0x0],esi
    44f5:	01 fe                	add    esi,edi
    44f7:	44 00 00             	add    BYTE PTR [rax],r8b
    44fa:	04 45                	add    al,0x45
    44fc:	00 00                	add    BYTE PTR [rax],al
    44fe:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    4501:	00 00                	add    BYTE PTR [rax],al
    4503:	00 03                	add    BYTE PTR [rbx],al
    4505:	e7 63                	out    0x63,eax
    4507:	00 00                	add    BYTE PTR [rax],al
    4509:	29 41 0a             	sub    DWORD PTR [rcx+0xa],eax
    450c:	07                   	(bad)
    450d:	ac                   	lods   al,BYTE PTR ds:[rsi]
    450e:	68 00 00 89 74       	push   0x74890000
    4513:	00 00                	add    BYTE PTR [rax],al
    4515:	01 1e                	add    DWORD PTR [rsi],ebx
    4517:	45 00 00             	add    BYTE PTR [r8],r8b
    451a:	24 45                	and    al,0x45
    451c:	00 00                	add    BYTE PTR [rax],al
    451e:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    4521:	00 00                	add    BYTE PTR [rax],al
    4523:	00 03                	add    BYTE PTR [rbx],al
    4525:	e7 63                	out    0x63,eax
    4527:	00 00                	add    BYTE PTR [rax],al
    4529:	29 45 0a             	sub    DWORD PTR [rbp+0xa],eax
    452c:	07                   	(bad)
    452d:	79 0f                	jns    453e <__TMC_END__+0x526>
    452f:	00 00                	add    BYTE PTR [rax],al
    4531:	01 44 00 00          	add    DWORD PTR [rax+rax*1+0x0],eax
    4535:	01 3e                	add    DWORD PTR [rsi],edi
    4537:	45 00 00             	add    BYTE PTR [r8],r8b
    453a:	49                   	rex.WB
    453b:	45 00 00             	add    BYTE PTR [r8],r8b
    453e:	02 7f 74             	add    bh,BYTE PTR [rdi+0x74]
    4541:	00 00                	add    BYTE PTR [rax],al
    4543:	01 f1                	add    ecx,esi
    4545:	00 00                	add    BYTE PTR [rax],al
    4547:	00 00                	add    BYTE PTR [rax],al
    4549:	03 d5                	add    edx,ebp
    454b:	45 00 00             	add    BYTE PTR [r8],r8b
    454e:	29 48 0a             	sub    DWORD PTR [rax+0xa],ecx
    4551:	07                   	(bad)
    4552:	67 17                	addr32 (bad)
    4554:	00 00                	add    BYTE PTR [rax],al
    4556:	93                   	xchg   ebx,eax
    4557:	74 00                	je     4559 <__TMC_END__+0x541>
    4559:	00 01                	add    BYTE PTR [rcx],al
    455b:	63 45 00             	movsxd eax,DWORD PTR [rbp+0x0]
    455e:	00 6e 45             	add    BYTE PTR [rsi+0x45],ch
    4561:	00 00                	add    BYTE PTR [rax],al
    4563:	02 98 74 00 00 01    	add    bl,BYTE PTR [rax+0x1000074]
    4569:	29 05 00 00 00 14    	sub    DWORD PTR [rip+0x14000000],eax        # 1400456f <__TMC_END__+0x14000557>
    456f:	83 33 00             	xor    DWORD PTR [rbx],0x0
    4572:	00 e5                	add    ch,ah
    4574:	00 00                	add    BYTE PTR [rax],al
    4576:	00 00                	add    BYTE PTR [rax],al
    4578:	0f 01 44 00 00       	sgdt   [rax+rax*1+0x0]
    457d:	00 09                	add    BYTE PTR [rcx],cl
    457f:	9f                   	lahf
    4580:	81 00 00 23 9e 03    	add    DWORD PTR [rax],0x39e2300
    4586:	03 dd                	add    ebx,ebp
    4588:	8d 00                	lea    eax,[rax]
    458a:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    458d:	00 00                	add    BYTE PTR [rax],al
    458f:	ad                   	lods   eax,DWORD PTR ds:[rsi]
    4590:	45 00 00             	add    BYTE PTR [r8],r8b
    4593:	01 03                	add    DWORD PTR [rbx],eax
    4595:	58                   	pop    rax
    4596:	00 00                	add    BYTE PTR [rax],al
    4598:	01 03                	add    DWORD PTR [rbx],eax
    459a:	58                   	pop    rax
    459b:	00 00                	add    BYTE PTR [rax],al
    459d:	01 30                	add    DWORD PTR [rax],esi
    459f:	5d                   	pop    rbp
    45a0:	00 00                	add    BYTE PTR [rax],al
    45a2:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    45a5:	00 00                	add    BYTE PTR [rax],al
    45a7:	01 f1                	add    ecx,esi
    45a9:	00 00                	add    BYTE PTR [rax],al
    45ab:	00 00                	add    BYTE PTR [rax],al
    45ad:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    45b3:	9a                   	(bad)
    45b4:	03 03                	add    eax,DWORD PTR [rbx]
    45b6:	fe                   	(bad)
    45b7:	7b 00                	jnp    45b9 <__TMC_END__+0x5a1>
    45b9:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    45bc:	00 00                	add    BYTE PTR [rax],al
    45be:	d7                   	xlat   BYTE PTR ds:[rbx]
    45bf:	45 00 00             	add    BYTE PTR [r8],r8b
    45c2:	01 03                	add    DWORD PTR [rbx],eax
    45c4:	58                   	pop    rax
    45c5:	00 00                	add    BYTE PTR [rax],al
    45c7:	01 03                	add    DWORD PTR [rbx],eax
    45c9:	58                   	pop    rax
    45ca:	00 00                	add    BYTE PTR [rax],al
    45cc:	01 30                	add    DWORD PTR [rax],esi
    45ce:	5d                   	pop    rbp
    45cf:	00 00                	add    BYTE PTR [rax],al
    45d1:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    45d4:	00 00                	add    BYTE PTR [rax],al
    45d6:	00 09                	add    BYTE PTR [rcx],cl
    45d8:	9f                   	lahf
    45d9:	81 00 00 23 93 03    	add    DWORD PTR [rax],0x3932300
    45df:	03 64 1a 00          	add    esp,DWORD PTR [rdx+rbx*1+0x0]
    45e3:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    45e6:	00 00                	add    BYTE PTR [rax],al
    45e8:	fc                   	cld
    45e9:	45 00 00             	add    BYTE PTR [r8],r8b
    45ec:	01 03                	add    DWORD PTR [rbx],eax
    45ee:	58                   	pop    rax
    45ef:	00 00                	add    BYTE PTR [rax],al
    45f1:	01 03                	add    DWORD PTR [rbx],eax
    45f3:	58                   	pop    rax
    45f4:	00 00                	add    BYTE PTR [rax],al
    45f6:	01 30                	add    DWORD PTR [rax],esi
    45f8:	5d                   	pop    rbp
    45f9:	00 00                	add    BYTE PTR [rax],al
    45fb:	00 09                	add    BYTE PTR [rcx],cl
    45fd:	9f                   	lahf
    45fe:	81 00 00 23 8c 03    	add    DWORD PTR [rax],0x38c2300
    4604:	13 82 49 00 00 57    	adc    eax,DWORD PTR [rdx+0x57000049]
    460a:	3c 00                	cmp    al,0x0
    460c:	00 2b                	add    BYTE PTR [rbx],ch
    460e:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    4611:	01 03                	add    DWORD PTR [rbx],eax
    4613:	58                   	pop    rax
    4614:	00 00                	add    BYTE PTR [rax],al
    4616:	01 03                	add    DWORD PTR [rbx],eax
    4618:	58                   	pop    rax
    4619:	00 00                	add    BYTE PTR [rax],al
    461b:	01 8b 69 00 00 01    	add    DWORD PTR [rbx+0x1000069],ecx
    4621:	7e 3c                	jle    465f <__TMC_END__+0x647>
    4623:	00 00                	add    BYTE PTR [rax],al
    4625:	01 f1                	add    ecx,esi
    4627:	00 00                	add    BYTE PTR [rax],al
    4629:	00 00                	add    BYTE PTR [rax],al
    462b:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4631:	8a 03                	mov    al,BYTE PTR [rbx]
    4633:	13 7b 73             	adc    edi,DWORD PTR [rbx+0x73]
    4636:	00 00                	add    BYTE PTR [rax],al
    4638:	57                   	push   rdi
    4639:	3c 00                	cmp    al,0x0
    463b:	00 55 46             	add    BYTE PTR [rbp+0x46],dl
    463e:	00 00                	add    BYTE PTR [rax],al
    4640:	01 03                	add    DWORD PTR [rbx],eax
    4642:	58                   	pop    rax
    4643:	00 00                	add    BYTE PTR [rax],al
    4645:	01 03                	add    DWORD PTR [rbx],eax
    4647:	58                   	pop    rax
    4648:	00 00                	add    BYTE PTR [rax],al
    464a:	01 8b 69 00 00 01    	add    DWORD PTR [rbx+0x1000069],ecx
    4650:	7e 3c                	jle    468e <__TMC_END__+0x676>
    4652:	00 00                	add    BYTE PTR [rax],al
    4654:	00 09                	add    BYTE PTR [rcx],cl
    4656:	9f                   	lahf
    4657:	81 00 00 23 88 03    	add    DWORD PTR [rax],0x3882300
    465d:	13 b7 23 00 00 57    	adc    esi,DWORD PTR [rdi+0x57000023]
    4663:	3c 00                	cmp    al,0x0
    4665:	00 7a 46             	add    BYTE PTR [rdx+0x46],bh
    4668:	00 00                	add    BYTE PTR [rax],al
    466a:	01 03                	add    DWORD PTR [rbx],eax
    466c:	58                   	pop    rax
    466d:	00 00                	add    BYTE PTR [rax],al
    466f:	01 03                	add    DWORD PTR [rbx],eax
    4671:	58                   	pop    rax
    4672:	00 00                	add    BYTE PTR [rax],al
    4674:	01 8b 69 00 00 00    	add    DWORD PTR [rbx+0x69],ecx
    467a:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4680:	4f 03 03             	rex.WRXB add r8,QWORD PTR [r11]
    4683:	86 3b                	xchg   BYTE PTR [rbx],bh
    4685:	00 00                	add    BYTE PTR [rax],al
    4687:	57                   	push   rdi
    4688:	3c 00                	cmp    al,0x0
    468a:	00 a9 46 00 00 01    	add    BYTE PTR [rcx+0x1000046],ch
    4690:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    4693:	00 01                	add    BYTE PTR [rcx],al
    4695:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    4698:	00 01                	add    BYTE PTR [rcx],al
    469a:	84 69 00             	test   BYTE PTR [rcx+0x0],ch
    469d:	00 01                	add    BYTE PTR [rcx],al
    469f:	7e 3c                	jle    46dd <__TMC_END__+0x6c5>
    46a1:	00 00                	add    BYTE PTR [rax],al
    46a3:	01 f1                	add    ecx,esi
    46a5:	00 00                	add    BYTE PTR [rax],al
    46a7:	00 00                	add    BYTE PTR [rax],al
    46a9:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    46af:	4b 03 03             	rex.WXB add rax,QWORD PTR [r11]
    46b2:	49 77 00             	rex.WB ja 46b5 <__TMC_END__+0x69d>
    46b5:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    46b8:	00 00                	add    BYTE PTR [rax],al
    46ba:	d3 46 00             	rol    DWORD PTR [rsi+0x0],cl
    46bd:	00 01                	add    BYTE PTR [rcx],al
    46bf:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    46c2:	00 01                	add    BYTE PTR [rcx],al
    46c4:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    46c7:	00 01                	add    BYTE PTR [rcx],al
    46c9:	84 69 00             	test   BYTE PTR [rcx+0x0],ch
    46cc:	00 01                	add    BYTE PTR [rcx],al
    46ce:	7e 3c                	jle    470c <__TMC_END__+0x6f4>
    46d0:	00 00                	add    BYTE PTR [rax],al
    46d2:	00 09                	add    BYTE PTR [rcx],cl
    46d4:	9f                   	lahf
    46d5:	81 00 00 23 48 03    	add    DWORD PTR [rax],0x3482300
    46db:	03 1a                	add    ebx,DWORD PTR [rdx]
    46dd:	5e                   	pop    rsi
    46de:	00 00                	add    BYTE PTR [rax],al
    46e0:	57                   	push   rdi
    46e1:	3c 00                	cmp    al,0x0
    46e3:	00 f8                	add    al,bh
    46e5:	46 00 00             	rex.RX add BYTE PTR [rax],r8b
    46e8:	01 03                	add    DWORD PTR [rbx],eax
    46ea:	58                   	pop    rax
    46eb:	00 00                	add    BYTE PTR [rax],al
    46ed:	01 03                	add    DWORD PTR [rbx],eax
    46ef:	58                   	pop    rax
    46f0:	00 00                	add    BYTE PTR [rax],al
    46f2:	01 84 69 00 00 00 09 	add    DWORD PTR [rcx+rbp*2+0x9000000],eax
    46f9:	9f                   	lahf
    46fa:	81 00 00 23 41 03    	add    DWORD PTR [rax],0x3412300
    4700:	03 c5                	add    eax,ebp
    4702:	80 00 00             	add    BYTE PTR [rax],0x0
    4705:	57                   	push   rdi
    4706:	3c 00                	cmp    al,0x0
    4708:	00 27                	add    BYTE PTR [rdi],ah
    470a:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    470d:	01 03                	add    DWORD PTR [rbx],eax
    470f:	58                   	pop    rax
    4710:	00 00                	add    BYTE PTR [rax],al
    4712:	01 03                	add    DWORD PTR [rbx],eax
    4714:	58                   	pop    rax
    4715:	00 00                	add    BYTE PTR [rax],al
    4717:	01 7d 69             	add    DWORD PTR [rbp+0x69],edi
    471a:	00 00                	add    BYTE PTR [rax],al
    471c:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    471f:	00 00                	add    BYTE PTR [rax],al
    4721:	01 f1                	add    ecx,esi
    4723:	00 00                	add    BYTE PTR [rax],al
    4725:	00 00                	add    BYTE PTR [rax],al
    4727:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    472d:	3d 03 03 a9 62       	cmp    eax,0x62a90303
    4732:	00 00                	add    BYTE PTR [rax],al
    4734:	57                   	push   rdi
    4735:	3c 00                	cmp    al,0x0
    4737:	00 51 47             	add    BYTE PTR [rcx+0x47],dl
    473a:	00 00                	add    BYTE PTR [rax],al
    473c:	01 03                	add    DWORD PTR [rbx],eax
    473e:	58                   	pop    rax
    473f:	00 00                	add    BYTE PTR [rax],al
    4741:	01 03                	add    DWORD PTR [rbx],eax
    4743:	58                   	pop    rax
    4744:	00 00                	add    BYTE PTR [rax],al
    4746:	01 7d 69             	add    DWORD PTR [rbp+0x69],edi
    4749:	00 00                	add    BYTE PTR [rax],al
    474b:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    474e:	00 00                	add    BYTE PTR [rax],al
    4750:	00 09                	add    BYTE PTR [rcx],cl
    4752:	9f                   	lahf
    4753:	81 00 00 23 3a 03    	add    DWORD PTR [rax],0x33a2300
    4759:	03 ad 69 00 00 57    	add    ebp,DWORD PTR [rbp+0x57000069]
    475f:	3c 00                	cmp    al,0x0
    4761:	00 76 47             	add    BYTE PTR [rsi+0x47],dh
    4764:	00 00                	add    BYTE PTR [rax],al
    4766:	01 03                	add    DWORD PTR [rbx],eax
    4768:	58                   	pop    rax
    4769:	00 00                	add    BYTE PTR [rax],al
    476b:	01 03                	add    DWORD PTR [rbx],eax
    476d:	58                   	pop    rax
    476e:	00 00                	add    BYTE PTR [rax],al
    4770:	01 7d 69             	add    DWORD PTR [rbp+0x69],edi
    4773:	00 00                	add    BYTE PTR [rax],al
    4775:	00 09                	add    BYTE PTR [rcx],cl
    4777:	9f                   	lahf
    4778:	81 00 00 23 33 03    	add    DWORD PTR [rax],0x3332300
    477e:	03 ca                	add    ecx,edx
    4780:	69 00 00 57 3c 00    	imul   eax,DWORD PTR [rax],0x3c5700
    4786:	00 a5 47 00 00 01    	add    BYTE PTR [rbp+0x1000047],ah
    478c:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    478f:	00 01                	add    BYTE PTR [rcx],al
    4791:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    4794:	00 01                	add    BYTE PTR [rcx],al
    4796:	76 69                	jbe    4801 <__TMC_END__+0x7e9>
    4798:	00 00                	add    BYTE PTR [rax],al
    479a:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    479d:	00 00                	add    BYTE PTR [rax],al
    479f:	01 f1                	add    ecx,esi
    47a1:	00 00                	add    BYTE PTR [rax],al
    47a3:	00 00                	add    BYTE PTR [rax],al
    47a5:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    47ab:	2f                   	(bad)
    47ac:	03 03                	add    eax,DWORD PTR [rbx]
    47ae:	38 46 00             	cmp    BYTE PTR [rsi+0x0],al
    47b1:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    47b4:	00 00                	add    BYTE PTR [rax],al
    47b6:	cf                   	iret
    47b7:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    47ba:	01 03                	add    DWORD PTR [rbx],eax
    47bc:	58                   	pop    rax
    47bd:	00 00                	add    BYTE PTR [rax],al
    47bf:	01 03                	add    DWORD PTR [rbx],eax
    47c1:	58                   	pop    rax
    47c2:	00 00                	add    BYTE PTR [rax],al
    47c4:	01 76 69             	add    DWORD PTR [rsi+0x69],esi
    47c7:	00 00                	add    BYTE PTR [rax],al
    47c9:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    47cc:	00 00                	add    BYTE PTR [rax],al
    47ce:	00 09                	add    BYTE PTR [rcx],cl
    47d0:	9f                   	lahf
    47d1:	81 00 00 23 29 03    	add    DWORD PTR [rax],0x3292300
    47d7:	03 17                	add    edx,DWORD PTR [rdi]
    47d9:	1a 00                	sbb    al,BYTE PTR [rax]
    47db:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    47de:	00 00                	add    BYTE PTR [rax],al
    47e0:	f4                   	hlt
    47e1:	47 00 00             	rex.RXB add BYTE PTR [r8],r8b
    47e4:	01 03                	add    DWORD PTR [rbx],eax
    47e6:	58                   	pop    rax
    47e7:	00 00                	add    BYTE PTR [rax],al
    47e9:	01 03                	add    DWORD PTR [rbx],eax
    47eb:	58                   	pop    rax
    47ec:	00 00                	add    BYTE PTR [rax],al
    47ee:	01 76 69             	add    DWORD PTR [rsi+0x69],esi
    47f1:	00 00                	add    BYTE PTR [rax],al
    47f3:	00 09                	add    BYTE PTR [rcx],cl
    47f5:	9f                   	lahf
    47f6:	81 00 00 23 1b 03    	add    DWORD PTR [rax],0x31b2300
    47fc:	13 99 26 00 00 57    	adc    ebx,DWORD PTR [rcx+0x57000026]
    4802:	3c 00                	cmp    al,0x0
    4804:	00 23                	add    BYTE PTR [rbx],ah
    4806:	48 00 00             	rex.W add BYTE PTR [rax],al
    4809:	01 03                	add    DWORD PTR [rbx],eax
    480b:	58                   	pop    rax
    480c:	00 00                	add    BYTE PTR [rax],al
    480e:	01 03                	add    DWORD PTR [rbx],eax
    4810:	58                   	pop    rax
    4811:	00 00                	add    BYTE PTR [rax],al
    4813:	01 53 65             	add    DWORD PTR [rbx+0x65],edx
    4816:	00 00                	add    BYTE PTR [rax],al
    4818:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    481b:	00 00                	add    BYTE PTR [rax],al
    481d:	01 f1                	add    ecx,esi
    481f:	00 00                	add    BYTE PTR [rax],al
    4821:	00 00                	add    BYTE PTR [rax],al
    4823:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4829:	19 03                	sbb    DWORD PTR [rbx],eax
    482b:	13 e5                	adc    esp,ebp
    482d:	07                   	(bad)
    482e:	00 00                	add    BYTE PTR [rax],al
    4830:	57                   	push   rdi
    4831:	3c 00                	cmp    al,0x0
    4833:	00 4d 48             	add    BYTE PTR [rbp+0x48],cl
    4836:	00 00                	add    BYTE PTR [rax],al
    4838:	01 03                	add    DWORD PTR [rbx],eax
    483a:	58                   	pop    rax
    483b:	00 00                	add    BYTE PTR [rax],al
    483d:	01 03                	add    DWORD PTR [rbx],eax
    483f:	58                   	pop    rax
    4840:	00 00                	add    BYTE PTR [rax],al
    4842:	01 53 65             	add    DWORD PTR [rbx+0x65],edx
    4845:	00 00                	add    BYTE PTR [rax],al
    4847:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    484a:	00 00                	add    BYTE PTR [rax],al
    484c:	00 09                	add    BYTE PTR [rcx],cl
    484e:	9f                   	lahf
    484f:	81 00 00 23 17 03    	add    DWORD PTR [rax],0x3172300
    4855:	13 51 8a             	adc    edx,DWORD PTR [rcx-0x76]
    4858:	00 00                	add    BYTE PTR [rax],al
    485a:	57                   	push   rdi
    485b:	3c 00                	cmp    al,0x0
    485d:	00 72 48             	add    BYTE PTR [rdx+0x48],dh
    4860:	00 00                	add    BYTE PTR [rax],al
    4862:	01 03                	add    DWORD PTR [rbx],eax
    4864:	58                   	pop    rax
    4865:	00 00                	add    BYTE PTR [rax],al
    4867:	01 03                	add    DWORD PTR [rbx],eax
    4869:	58                   	pop    rax
    486a:	00 00                	add    BYTE PTR [rax],al
    486c:	01 53 65             	add    DWORD PTR [rbx+0x65],edx
    486f:	00 00                	add    BYTE PTR [rax],al
    4871:	00 09                	add    BYTE PTR [rcx],cl
    4873:	9f                   	lahf
    4874:	81 00 00 23 13 03    	add    DWORD PTR [rax],0x3132300
    487a:	13 2e                	adc    ebp,DWORD PTR [rsi]
    487c:	00 00                	add    BYTE PTR [rax],al
    487e:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    4881:	00 00                	add    BYTE PTR [rax],al
    4883:	a1 48 00 00 01 03 58 	movabs eax,ds:0x580301000048
    488a:	00 00 
    488c:	01 03                	add    DWORD PTR [rbx],eax
    488e:	58                   	pop    rax
    488f:	00 00                	add    BYTE PTR [rax],al
    4891:	01 38                	add    DWORD PTR [rax],edi
    4893:	5a                   	pop    rdx
    4894:	00 00                	add    BYTE PTR [rax],al
    4896:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    4899:	00 00                	add    BYTE PTR [rax],al
    489b:	01 f1                	add    ecx,esi
    489d:	00 00                	add    BYTE PTR [rax],al
    489f:	00 00                	add    BYTE PTR [rax],al
    48a1:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    48a7:	11 03                	adc    DWORD PTR [rbx],eax
    48a9:	13 2a                	adc    ebp,DWORD PTR [rdx]
    48ab:	11 00                	adc    DWORD PTR [rax],eax
    48ad:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    48b0:	00 00                	add    BYTE PTR [rax],al
    48b2:	cb                   	retf
    48b3:	48 00 00             	rex.W add BYTE PTR [rax],al
    48b6:	01 03                	add    DWORD PTR [rbx],eax
    48b8:	58                   	pop    rax
    48b9:	00 00                	add    BYTE PTR [rax],al
    48bb:	01 03                	add    DWORD PTR [rbx],eax
    48bd:	58                   	pop    rax
    48be:	00 00                	add    BYTE PTR [rax],al
    48c0:	01 38                	add    DWORD PTR [rax],edi
    48c2:	5a                   	pop    rdx
    48c3:	00 00                	add    BYTE PTR [rax],al
    48c5:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    48c8:	00 00                	add    BYTE PTR [rax],al
    48ca:	00 09                	add    BYTE PTR [rcx],cl
    48cc:	9f                   	lahf
    48cd:	81 00 00 23 10 03    	add    DWORD PTR [rax],0x3102300
    48d3:	13 fe                	adc    edi,esi
    48d5:	0e                   	(bad)
    48d6:	00 00                	add    BYTE PTR [rax],al
    48d8:	57                   	push   rdi
    48d9:	3c 00                	cmp    al,0x0
    48db:	00 f0                	add    al,dh
    48dd:	48 00 00             	rex.W add BYTE PTR [rax],al
    48e0:	01 03                	add    DWORD PTR [rbx],eax
    48e2:	58                   	pop    rax
    48e3:	00 00                	add    BYTE PTR [rax],al
    48e5:	01 03                	add    DWORD PTR [rbx],eax
    48e7:	58                   	pop    rax
    48e8:	00 00                	add    BYTE PTR [rax],al
    48ea:	01 38                	add    DWORD PTR [rax],edi
    48ec:	5a                   	pop    rdx
    48ed:	00 00                	add    BYTE PTR [rax],al
    48ef:	00 09                	add    BYTE PTR [rcx],cl
    48f1:	9f                   	lahf
    48f2:	81 00 00 23 0c 03    	add    DWORD PTR [rax],0x30c2300
    48f8:	13 d4                	adc    edx,esp
    48fa:	8f 00                	pop    QWORD PTR [rax]
    48fc:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    48ff:	00 00                	add    BYTE PTR [rax],al
    4901:	1f                   	(bad)
    4902:	49 00 00             	rex.WB add BYTE PTR [r8],al
    4905:	01 03                	add    DWORD PTR [rbx],eax
    4907:	58                   	pop    rax
    4908:	00 00                	add    BYTE PTR [rax],al
    490a:	01 03                	add    DWORD PTR [rbx],eax
    490c:	58                   	pop    rax
    490d:	00 00                	add    BYTE PTR [rax],al
    490f:	01 60 5a             	add    DWORD PTR [rax+0x5a],esp
    4912:	00 00                	add    BYTE PTR [rax],al
    4914:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    4917:	00 00                	add    BYTE PTR [rax],al
    4919:	01 f1                	add    ecx,esi
    491b:	00 00                	add    BYTE PTR [rax],al
    491d:	00 00                	add    BYTE PTR [rax],al
    491f:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4925:	0a 03                	or     al,BYTE PTR [rbx]
    4927:	13 64 93 00          	adc    esp,DWORD PTR [rbx+rdx*4+0x0]
    492b:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    492e:	00 00                	add    BYTE PTR [rax],al
    4930:	49                   	rex.WB
    4931:	49 00 00             	rex.WB add BYTE PTR [r8],al
    4934:	01 03                	add    DWORD PTR [rbx],eax
    4936:	58                   	pop    rax
    4937:	00 00                	add    BYTE PTR [rax],al
    4939:	01 03                	add    DWORD PTR [rbx],eax
    493b:	58                   	pop    rax
    493c:	00 00                	add    BYTE PTR [rax],al
    493e:	01 60 5a             	add    DWORD PTR [rax+0x5a],esp
    4941:	00 00                	add    BYTE PTR [rax],al
    4943:	01 7e 3c             	add    DWORD PTR [rsi+0x3c],edi
    4946:	00 00                	add    BYTE PTR [rax],al
    4948:	00 09                	add    BYTE PTR [rcx],cl
    494a:	9f                   	lahf
    494b:	81 00 00 23 09 03    	add    DWORD PTR [rax],0x3092300
    4951:	13 64 8a 00          	adc    esp,DWORD PTR [rdx+rcx*4+0x0]
    4955:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    4958:	00 00                	add    BYTE PTR [rax],al
    495a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    495b:	49 00 00             	rex.WB add BYTE PTR [r8],al
    495e:	01 03                	add    DWORD PTR [rbx],eax
    4960:	58                   	pop    rax
    4961:	00 00                	add    BYTE PTR [rax],al
    4963:	01 03                	add    DWORD PTR [rbx],eax
    4965:	58                   	pop    rax
    4966:	00 00                	add    BYTE PTR [rax],al
    4968:	01 60 5a             	add    DWORD PTR [rax+0x5a],esp
    496b:	00 00                	add    BYTE PTR [rax],al
    496d:	00 72 9f             	add    BYTE PTR [rdx-0x61],dh
    4970:	81 00 00 23 87 01    	add    DWORD PTR [rax],0x1872300
    4976:	13 73 5e             	adc    esi,DWORD PTR [rbx+0x5e]
    4979:	00 00                	add    BYTE PTR [rax],al
    497b:	57                   	push   rdi
    497c:	3c 00                	cmp    al,0x0
    497e:	00 98 49 00 00 01    	add    BYTE PTR [rax+0x1000049],bl
    4984:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    4987:	00 01                	add    BYTE PTR [rcx],al
    4989:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    498c:	00 01                	add    BYTE PTR [rcx],al
    498e:	f1                   	int1
    498f:	65 00 00             	add    BYTE PTR gs:[rax],al
    4992:	01 f1                	add    ecx,esi
    4994:	00 00                	add    BYTE PTR [rax],al
    4996:	00 00                	add    BYTE PTR [rax],al
    4998:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    499e:	72 01                	jb     49a1 <__TMC_END__+0x989>
    49a0:	01 0a                	add    DWORD PTR [rdx],ecx
    49a2:	02 00                	add    al,BYTE PTR [rax]
    49a4:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    49a7:	00 00                	add    BYTE PTR [rax],al
    49a9:	c2 49 00             	ret    0x49
    49ac:	00 01                	add    BYTE PTR [rcx],al
    49ae:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    49b1:	00 01                	add    BYTE PTR [rcx],al
    49b3:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    49b6:	00 01                	add    BYTE PTR [rcx],al
    49b8:	ab                   	stos   DWORD PTR es:[rdi],eax
    49b9:	65 00 00             	add    BYTE PTR gs:[rax],al
    49bc:	01 f1                	add    ecx,esi
    49be:	00 00                	add    BYTE PTR [rax],al
    49c0:	00 00                	add    BYTE PTR [rax],al
    49c2:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    49c8:	71 01                	jno    49cb <__TMC_END__+0x9b3>
    49ca:	01 c7                	add    edi,eax
    49cc:	94                   	xchg   esp,eax
    49cd:	00 00                	add    BYTE PTR [rax],al
    49cf:	57                   	push   rdi
    49d0:	3c 00                	cmp    al,0x0
    49d2:	00 ec                	add    ah,ch
    49d4:	49 00 00             	rex.WB add BYTE PTR [r8],al
    49d7:	01 03                	add    DWORD PTR [rbx],eax
    49d9:	58                   	pop    rax
    49da:	00 00                	add    BYTE PTR [rax],al
    49dc:	01 03                	add    DWORD PTR [rbx],eax
    49de:	58                   	pop    rax
    49df:	00 00                	add    BYTE PTR [rax],al
    49e1:	01 7f 65             	add    DWORD PTR [rdi+0x65],edi
    49e4:	00 00                	add    BYTE PTR [rax],al
    49e6:	01 f1                	add    ecx,esi
    49e8:	00 00                	add    BYTE PTR [rax],al
    49ea:	00 00                	add    BYTE PTR [rax],al
    49ec:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    49f2:	70 01                	jo     49f5 <__TMC_END__+0x9dd>
    49f4:	01 40 78             	add    DWORD PTR [rax+0x78],eax
    49f7:	00 00                	add    BYTE PTR [rax],al
    49f9:	57                   	push   rdi
    49fa:	3c 00                	cmp    al,0x0
    49fc:	00 16                	add    BYTE PTR [rsi],dl
    49fe:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    4a01:	01 03                	add    DWORD PTR [rbx],eax
    4a03:	58                   	pop    rax
    4a04:	00 00                	add    BYTE PTR [rax],al
    4a06:	01 03                	add    DWORD PTR [rbx],eax
    4a08:	58                   	pop    rax
    4a09:	00 00                	add    BYTE PTR [rax],al
    4a0b:	01 3a                	add    DWORD PTR [rdx],edi
    4a0d:	00 00                	add    BYTE PTR [rax],al
    4a0f:	00 01                	add    BYTE PTR [rcx],al
    4a11:	f1                   	int1
    4a12:	00 00                	add    BYTE PTR [rax],al
    4a14:	00 00                	add    BYTE PTR [rax],al
    4a16:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4a1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4a1d:	01 01                	add    DWORD PTR [rcx],eax
    4a1f:	0f 76 00             	pcmpeqd mm0,QWORD PTR [rax]
    4a22:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    4a25:	00 00                	add    BYTE PTR [rax],al
    4a27:	40                   	rex
    4a28:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    4a2b:	01 03                	add    DWORD PTR [rbx],eax
    4a2d:	58                   	pop    rax
    4a2e:	00 00                	add    BYTE PTR [rax],al
    4a30:	01 03                	add    DWORD PTR [rbx],eax
    4a32:	58                   	pop    rax
    4a33:	00 00                	add    BYTE PTR [rax],al
    4a35:	01 ac 5a 00 00 01 f1 	add    DWORD PTR [rdx+rbx*2-0xeff0000],ebp
    4a3c:	00 00                	add    BYTE PTR [rax],al
    4a3e:	00 00                	add    BYTE PTR [rax],al
    4a40:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4a46:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4a47:	01 01                	add    DWORD PTR [rcx],eax
    4a49:	27                   	(bad)
    4a4a:	70 00                	jo     4a4c <__TMC_END__+0xa34>
    4a4c:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    4a4f:	00 00                	add    BYTE PTR [rax],al
    4a51:	6a 4a                	push   0x4a
    4a53:	00 00                	add    BYTE PTR [rax],al
    4a55:	01 03                	add    DWORD PTR [rbx],eax
    4a57:	58                   	pop    rax
    4a58:	00 00                	add    BYTE PTR [rax],al
    4a5a:	01 03                	add    DWORD PTR [rbx],eax
    4a5c:	58                   	pop    rax
    4a5d:	00 00                	add    BYTE PTR [rax],al
    4a5f:	01 76 00             	add    DWORD PTR [rsi+0x0],esi
    4a62:	00 00                	add    BYTE PTR [rax],al
    4a64:	01 f1                	add    ecx,esi
    4a66:	00 00                	add    BYTE PTR [rax],al
    4a68:	00 00                	add    BYTE PTR [rax],al
    4a6a:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4a70:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a71:	01 01                	add    DWORD PTR [rcx],eax
    4a73:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    4a74:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4a75:	00 00                	add    BYTE PTR [rax],al
    4a77:	57                   	push   rdi
    4a78:	3c 00                	cmp    al,0x0
    4a7a:	00 94 4a 00 00 01 03 	add    BYTE PTR [rdx+rcx*2+0x3010000],dl
    4a81:	58                   	pop    rax
    4a82:	00 00                	add    BYTE PTR [rax],al
    4a84:	01 03                	add    DWORD PTR [rbx],eax
    4a86:	58                   	pop    rax
    4a87:	00 00                	add    BYTE PTR [rax],al
    4a89:	01 f1                	add    ecx,esi
    4a8b:	00 00                	add    BYTE PTR [rax],al
    4a8d:	00 01                	add    BYTE PTR [rcx],al
    4a8f:	f1                   	int1
    4a90:	00 00                	add    BYTE PTR [rax],al
    4a92:	00 00                	add    BYTE PTR [rax],al
    4a94:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4a9a:	6c                   	ins    BYTE PTR es:[rdi],dx
    4a9b:	01 01                	add    DWORD PTR [rcx],eax
    4a9d:	c7                   	(bad)
    4a9e:	8a 00                	mov    al,BYTE PTR [rax]
    4aa0:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    4aa3:	00 00                	add    BYTE PTR [rax],al
    4aa5:	be 4a 00 00 01       	mov    esi,0x100004a
    4aaa:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    4aad:	00 01                	add    BYTE PTR [rcx],al
    4aaf:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    4ab2:	00 01                	add    BYTE PTR [rcx],al
    4ab4:	b4 02                	mov    ah,0x2
    4ab6:	00 00                	add    BYTE PTR [rax],al
    4ab8:	01 f1                	add    ecx,esi
    4aba:	00 00                	add    BYTE PTR [rax],al
    4abc:	00 00                	add    BYTE PTR [rax],al
    4abe:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4ac4:	6b 01 01             	imul   eax,DWORD PTR [rcx],0x1
    4ac7:	2d 88 00 00 57       	sub    eax,0x57000088
    4acc:	3c 00                	cmp    al,0x0
    4ace:	00 e8                	add    al,ch
    4ad0:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    4ad3:	01 03                	add    DWORD PTR [rbx],eax
    4ad5:	58                   	pop    rax
    4ad6:	00 00                	add    BYTE PTR [rax],al
    4ad8:	01 03                	add    DWORD PTR [rbx],eax
    4ada:	58                   	pop    rax
    4adb:	00 00                	add    BYTE PTR [rax],al
    4add:	01 0b                	add    DWORD PTR [rbx],ecx
    4adf:	66 00 00             	data16 add BYTE PTR [rax],al
    4ae2:	01 f1                	add    ecx,esi
    4ae4:	00 00                	add    BYTE PTR [rax],al
    4ae6:	00 00                	add    BYTE PTR [rax],al
    4ae8:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4aee:	6a 01                	push   0x1
    4af0:	01 1c 6b             	add    DWORD PTR [rbx+rbp*2],ebx
    4af3:	00 00                	add    BYTE PTR [rax],al
    4af5:	57                   	push   rdi
    4af6:	3c 00                	cmp    al,0x0
    4af8:	00 12                	add    BYTE PTR [rdx],dl
    4afa:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    4afd:	01 03                	add    DWORD PTR [rbx],eax
    4aff:	58                   	pop    rax
    4b00:	00 00                	add    BYTE PTR [rax],al
    4b02:	01 03                	add    DWORD PTR [rbx],eax
    4b04:	58                   	pop    rax
    4b05:	00 00                	add    BYTE PTR [rax],al
    4b07:	01 fd                	add    ebp,edi
    4b09:	65 00 00             	add    BYTE PTR gs:[rax],al
    4b0c:	01 f1                	add    ecx,esi
    4b0e:	00 00                	add    BYTE PTR [rax],al
    4b10:	00 00                	add    BYTE PTR [rax],al
    4b12:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4b18:	69 01 01 2a 5b 00    	imul   eax,DWORD PTR [rcx],0x5b2a01
    4b1e:	00 57 3c             	add    BYTE PTR [rdi+0x3c],dl
    4b21:	00 00                	add    BYTE PTR [rax],al
    4b23:	3c 4b                	cmp    al,0x4b
    4b25:	00 00                	add    BYTE PTR [rax],al
    4b27:	01 03                	add    DWORD PTR [rbx],eax
    4b29:	58                   	pop    rax
    4b2a:	00 00                	add    BYTE PTR [rax],al
    4b2c:	01 03                	add    DWORD PTR [rbx],eax
    4b2e:	58                   	pop    rax
    4b2f:	00 00                	add    BYTE PTR [rax],al
    4b31:	01 04 66             	add    DWORD PTR [rsi+riz*2],eax
    4b34:	00 00                	add    BYTE PTR [rax],al
    4b36:	01 f1                	add    ecx,esi
    4b38:	00 00                	add    BYTE PTR [rax],al
    4b3a:	00 00                	add    BYTE PTR [rax],al
    4b3c:	09 9f 81 00 00 23    	or     DWORD PTR [rdi+0x23000081],ebx
    4b42:	68 01 01 1e 61       	push   0x611e0101
    4b47:	00 00                	add    BYTE PTR [rax],al
    4b49:	57                   	push   rdi
    4b4a:	3c 00                	cmp    al,0x0
    4b4c:	00 66 4b             	add    BYTE PTR [rsi+0x4b],ah
    4b4f:	00 00                	add    BYTE PTR [rax],al
    4b51:	01 03                	add    DWORD PTR [rbx],eax
    4b53:	58                   	pop    rax
    4b54:	00 00                	add    BYTE PTR [rax],al
    4b56:	01 03                	add    DWORD PTR [rbx],eax
    4b58:	58                   	pop    rax
    4b59:	00 00                	add    BYTE PTR [rax],al
    4b5b:	01 e5                	add    ebp,esp
    4b5d:	00 00                	add    BYTE PTR [rax],al
    4b5f:	00 01                	add    BYTE PTR [rcx],al
    4b61:	f1                   	int1
    4b62:	00 00                	add    BYTE PTR [rax],al
    4b64:	00 00                	add    BYTE PTR [rax],al
    4b66:	30 3b                	xor    BYTE PTR [rbx],bh
    4b68:	84 00                	test   BYTE PTR [rax],al
    4b6a:	00 01                	add    BYTE PTR [rcx],al
    4b6c:	0f 82 01 b0 4b 00    	jb     4bfb73 <__TMC_END__+0x4bbb5b>
    4b72:	00 49 b7             	add    BYTE PTR [rcx-0x49],cl
    4b75:	55                   	push   rbp
    4b76:	00 00                	add    BYTE PTR [rax],al
    4b78:	01 0f                	add    DWORD PTR [rdi],ecx
    4b7a:	8a 01                	mov    al,BYTE PTR [rcx]
    4b7c:	09 03                	or     DWORD PTR [rbx],eax
    4b7e:	99                   	cdq
    4b7f:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    4b82:	19 04 94             	sbb    DWORD PTR [rsp+rdx*4],eax
    4b85:	00 00                	add    BYTE PTR [rax],al
    4b87:	0f 8b 01 0a 83 63    	jnp    6383558e <__TMC_END__+0x63831576>
    4b8d:	00 00                	add    BYTE PTR [rax],al
    4b8f:	14 00                	adc    al,0x0
    4b91:	6a 00                	push   0x0
    4b93:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    4b96:	00 00                	add    BYTE PTR [rax],al
    4b98:	00 19                	add    BYTE PTR [rcx],bl
    4b9a:	34 6c                	xor    al,0x6c
    4b9c:	00 00                	add    BYTE PTR [rax],al
    4b9e:	0f 91 01             	setno  BYTE PTR [rcx]
    4ba1:	0d 82 4b 00 00       	or     eax,0x4b82
    4ba6:	14 71                	adc    al,0x71
    4ba8:	73 00                	jae    4baa <__TMC_END__+0xb92>
    4baa:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    4bad:	00 00                	add    BYTE PTR [rax],al
    4baf:	00 1a                	add    BYTE PTR [rdx],bl
    4bb1:	1d 4b 00 00 01       	sbb    eax,0x100004b
    4bb6:	0f b4 0c ca          	lfs    ecx,FWORD PTR [rdx+rcx*8]
    4bba:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    4bbd:	05 66 4e 00 00       	add    eax,0x4e66
    4bc2:	0f b5 0d 5e 64 00 00 	lgs    ecx,FWORD PTR [rip+0x645e]        # b027 <__TMC_END__+0x700f>
    4bc9:	00 1a                	add    BYTE PTR [rdx],bl
    4bcb:	7d 3d                	jge    4c0a <__TMC_END__+0xbf2>
    4bcd:	00 00                	add    BYTE PTR [rax],al
    4bcf:	01 15 7f 22 05 4c    	add    DWORD PTR [rip+0x4c05227f],edx        # 4c056e54 <__TMC_END__+0x4c052e3c>
    4bd5:	00 00                	add    BYTE PTR [rax],al
    4bd7:	14 60                	adc    al,0x60
    4bd9:	0c 00                	or     al,0x0
    4bdb:	00 ca                	add    dl,cl
    4bdd:	0a 00                	or     al,BYTE PTR [rax]
    4bdf:	00 1d 5f 54 70 00    	add    BYTE PTR [rip+0x70545f],bl        # 70a044 <__TMC_END__+0x70602c>
    4be5:	e5 00                	in     eax,0x0
    4be7:	00 00                	add    BYTE PTR [rax],al
    4be9:	14 b3                	adc    al,0xb3
    4beb:	29 00                	sub    DWORD PTR [rax],eax
    4bed:	00 ac 5a 00 00 14 3f 	add    BYTE PTR [rdx+rbx*2+0x3f140000],ch
    4bf4:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4bf7:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    4bfa:	00 14 12             	add    BYTE PTR [rdx+rdx*1],dl
    4bfd:	36 00 00             	ss add BYTE PTR [rax],al
    4c00:	c9                   	leave
    4c01:	72 00                	jb     4c03 <__TMC_END__+0xbeb>
    4c03:	00 00                	add    BYTE PTR [rax],al
    4c05:	1e                   	(bad)
    4c06:	9f                   	lahf
    4c07:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    4c0a:	08 2a                	or     BYTE PTR [rdx],ch
    4c0c:	81 0b 80 4e 00 00    	or     DWORD PTR [rbx],0x4e80
    4c12:	44 ca 4b 00          	rex.R retf 0x4b
    4c16:	00 73 27             	add    BYTE PTR [rbx+0x27],dh
    4c19:	36 00 00             	ss add BYTE PTR [rax],al
    4c1c:	2a 94 11 04 63 00 00 	sub    dl,BYTE PTR [rcx+rdx*1+0x6304]
    4c23:	00 02                	add    BYTE PTR [rdx],al
    4c25:	16                   	(bad)
    4c26:	52                   	push   rdx
    4c27:	6a 00                	push   0x0
    4c29:	00 2a                	add    BYTE PTR [rdx],ch
    4c2b:	b3 07                	mov    bl,0x7
    4c2d:	3d 81 00 00 39       	cmp    eax,0x39000081
    4c32:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4c35:	3f                   	(bad)
    4c36:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4c39:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4c3c:	00 00                	add    BYTE PTR [rax],al
    4c3e:	00 74 52 6a          	add    BYTE PTR [rdx+rdx*2+0x6a],dh
    4c42:	00 00                	add    BYTE PTR [rax],al
    4c44:	2a bc 07 f1 24 00 00 	sub    bh,BYTE PTR [rdi+rax*1+0x24f1]
    4c4b:	01 54 4c 00          	add    DWORD PTR [rsp+rcx*2+0x0],edx
    4c4f:	00 5f 4c             	add    BYTE PTR [rdi+0x4c],bl
    4c52:	00 00                	add    BYTE PTR [rax],al
    4c54:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4c57:	00 00                	add    BYTE PTR [rax],al
    4c59:	01 5f 4c             	add    DWORD PTR [rdi+0x4c],ebx
    4c5c:	00 00                	add    BYTE PTR [rax],al
    4c5e:	00 11                	add    BYTE PTR [rcx],dl
    4c60:	99                   	cdq
    4c61:	91                   	xchg   ecx,eax
    4c62:	00 00                	add    BYTE PTR [rax],al
    4c64:	2a 99 1d 04 63 00    	sub    bl,BYTE PTR [rcx+0x63041d]
    4c6a:	00 01                	add    BYTE PTR [rcx],al
    4c6c:	16                   	(bad)
    4c6d:	52                   	push   rdx
    4c6e:	6a 00                	push   0x0
    4c70:	00 2a                	add    BYTE PTR [rdx],ch
    4c72:	c5 07 a1             	(bad)
    4c75:	38 00                	cmp    BYTE PTR [rax],al
    4c77:	00 80 4c 00 00 8b    	add    BYTE PTR [rax-0x74ffffb4],al
    4c7d:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4c80:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4c83:	00 00                	add    BYTE PTR [rax],al
    4c85:	01 52 74             	add    DWORD PTR [rdx+0x74],edx
    4c88:	00 00                	add    BYTE PTR [rax],al
    4c8a:	00 31                	add    BYTE PTR [rcx],dh
    4c8c:	00 1d 00 00 2a cb    	add    BYTE PTR [rip+0xffffffffcb2a0000],bl        # ffffffffcb2a4c92 <__TMC_END__+0xffffffffcb2a0c7a>
    4c92:	19 4d 29             	sbb    DWORD PTR [rbp+0x29],ecx
    4c95:	00 00                	add    BYTE PTR [rax],al
    4c97:	57                   	push   rdi
    4c98:	74 00                	je     4c9a <__TMC_END__+0xc82>
    4c9a:	00 a3 4c 00 00 ae    	add    BYTE PTR [rbx-0x51ffffb4],ah
    4ca0:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4ca3:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4ca6:	00 00                	add    BYTE PTR [rax],al
    4ca8:	01 52 74             	add    DWORD PTR [rdx+0x74],edx
    4cab:	00 00                	add    BYTE PTR [rax],al
    4cad:	00 15 90 51 00 00    	add    BYTE PTR [rip+0x5190],dl        # 9e43 <__TMC_END__+0x5e2b>
    4cb3:	2a f1                	sub    dh,cl
    4cb5:	07                   	(bad)
    4cb6:	eb 89                	jmp    4c41 <__TMC_END__+0xc29>
    4cb8:	00 00                	add    BYTE PTR [rax],al
    4cba:	5f                   	pop    rdi
    4cbb:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4cbe:	c6                   	(bad)
    4cbf:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4cc2:	cc                   	int3
    4cc3:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4cc6:	02 5c 74 00          	add    bl,BYTE PTR [rsp+rsi*2+0x0]
    4cca:	00 00                	add    BYTE PTR [rax],al
    4ccc:	11 42 6c             	adc    DWORD PTR [rdx+0x6c],eax
    4ccf:	00 00                	add    BYTE PTR [rax],al
    4cd1:	2a a8 0d 85 4e 00    	sub    ch,BYTE PTR [rax+0x4e850d]
    4cd7:	00 01                	add    BYTE PTR [rcx],al
    4cd9:	03 62 1c             	add    esp,DWORD PTR [rdx+0x1c]
    4cdc:	00 00                	add    BYTE PTR [rax],al
    4cde:	2a 01                	sub    al,BYTE PTR [rcx]
    4ce0:	01 07                	add    DWORD PTR [rdi],eax
    4ce2:	d3 4f 00             	ror    DWORD PTR [rdi+0x0],cl
    4ce5:	00 cc                	add    ah,cl
    4ce7:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4cea:	01 f3                	add    ebx,esi
    4cec:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4cef:	f9                   	stc
    4cf0:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4cf3:	02 5c 74 00          	add    bl,BYTE PTR [rsp+rsi*2+0x0]
    4cf7:	00 00                	add    BYTE PTR [rax],al
    4cf9:	11 34 6c             	adc    DWORD PTR [rsp+rbp*2],esi
    4cfc:	00 00                	add    BYTE PTR [rax],al
    4cfe:	2a 9a 30 99 4b 00    	sub    bl,BYTE PTR [rdx+0x4b9930]
    4d04:	00 01                	add    BYTE PTR [rcx],al
    4d06:	03 57 66             	add    edx,DWORD PTR [rdi+0x66]
    4d09:	00 00                	add    BYTE PTR [rax],al
    4d0b:	2a 0e                	sub    cl,BYTE PTR [rsi]
    4d0d:	01 07                	add    DWORD PTR [rdi],eax
    4d0f:	6b 6c 00 00 f9       	imul   ebp,DWORD PTR [rax+rax*1+0x0],0xfffffff9
    4d14:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4d17:	01 20                	add    DWORD PTR [rax],esp
    4d19:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4d1c:	26 4d 00 00          	es rex.WRB add BYTE PTR [r8],r8b
    4d20:	02 5c 74 00          	add    bl,BYTE PTR [rsp+rsi*2+0x0]
    4d24:	00 00                	add    BYTE PTR [rax],al
    4d26:	03 e7                	add    esp,edi
    4d28:	63 00                	movsxd eax,DWORD PTR [rax]
    4d2a:	00 2a                	add    BYTE PTR [rdx],ch
    4d2c:	21 01                	and    DWORD PTR [rcx],eax
    4d2e:	07                   	(bad)
    4d2f:	56                   	push   rsi
    4d30:	3a 00                	cmp    al,BYTE PTR [rax]
    4d32:	00 57 74             	add    BYTE PTR [rdi+0x74],dl
    4d35:	00 00                	add    BYTE PTR [rax],al
    4d37:	01 40 4d             	add    DWORD PTR [rax+0x4d],eax
    4d3a:	00 00                	add    BYTE PTR [rax],al
    4d3c:	46                   	rex.RX
    4d3d:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4d40:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4d43:	00 00                	add    BYTE PTR [rax],al
    4d45:	00 03                	add    BYTE PTR [rbx],al
    4d47:	e7 63                	out    0x63,eax
    4d49:	00 00                	add    BYTE PTR [rax],al
    4d4b:	2a 2d 01 07 7e 39    	sub    ch,BYTE PTR [rip+0x397e0701]        # 397e5452 <__TMC_END__+0x397e143a>
    4d51:	00 00                	add    BYTE PTR [rax],al
    4d53:	05 4c 00 00 01       	add    eax,0x100004c
    4d58:	60                   	(bad)
    4d59:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4d5c:	6b 4d 00 00          	imul   ecx,DWORD PTR [rbp+0x0],0x0
    4d60:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4d63:	00 00                	add    BYTE PTR [rax],al
    4d65:	01 f1                	add    ecx,esi
    4d67:	00 00                	add    BYTE PTR [rax],al
    4d69:	00 00                	add    BYTE PTR [rax],al
    4d6b:	03 e6                	add    esp,esi
    4d6d:	65 00 00             	add    BYTE PTR gs:[rax],al
    4d70:	2a 3a                	sub    bh,BYTE PTR [rdx]
    4d72:	01 07                	add    DWORD PTR [rdi],eax
    4d74:	54                   	push   rsp
    4d75:	70 00                	jo     4d77 <__TMC_END__+0xd5f>
    4d77:	00 57 74             	add    BYTE PTR [rdi+0x74],dl
    4d7a:	00 00                	add    BYTE PTR [rax],al
    4d7c:	01 85 4d 00 00 8b    	add    DWORD PTR [rbp-0x74ffffb3],eax
    4d82:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4d85:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4d88:	00 00                	add    BYTE PTR [rax],al
    4d8a:	00 03                	add    BYTE PTR [rbx],al
    4d8c:	e6 65                	out    0x65,al
    4d8e:	00 00                	add    BYTE PTR [rax],al
    4d90:	2a 46 01             	sub    al,BYTE PTR [rsi+0x1]
    4d93:	07                   	(bad)
    4d94:	bc 60 00 00 05       	mov    esp,0x5000060
    4d99:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4d9c:	01 a5 4d 00 00 b0    	add    DWORD PTR [rbp-0x4fffffb3],esp
    4da2:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4da5:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4da8:	00 00                	add    BYTE PTR [rax],al
    4daa:	01 f1                	add    ecx,esi
    4dac:	00 00                	add    BYTE PTR [rax],al
    4dae:	00 00                	add    BYTE PTR [rax],al
    4db0:	03 6c 1c 00          	add    ebp,DWORD PTR [rsp+rbx*1+0x0]
    4db4:	00 2a                	add    BYTE PTR [rdx],ch
    4db6:	54                   	push   rsp
    4db7:	01 07                	add    DWORD PTR [rdi],eax
    4db9:	1e                   	(bad)
    4dba:	02 00                	add    al,BYTE PTR [rax]
    4dbc:	00 05 4c 00 00 01    	add    BYTE PTR [rip+0x100004c],al        # 1004e0e <__TMC_END__+0x1000df6>
    4dc2:	ca 4d 00             	retf   0x4d
    4dc5:	00 d5                	add    ch,dl
    4dc7:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4dca:	02 5c 74 00          	add    bl,BYTE PTR [rsp+rsi*2+0x0]
    4dce:	00 01                	add    BYTE PTR [rcx],al
    4dd0:	d5 4d 00 00          	{rex2 0x4d} add BYTE PTR [r8],r24b
    4dd4:	00 11                	add    BYTE PTR [rcx],dl
    4dd6:	66 4e 00 00          	data16 rex.WRX add BYTE PTR [rax],r8b
    4dda:	2a a7 0d 91 4e 00    	sub    ah,BYTE PTR [rdi+0x4e910d]
    4de0:	00 01                	add    BYTE PTR [rcx],al
    4de2:	03 30                	add    esi,DWORD PTR [rax]
    4de4:	63 00                	movsxd eax,DWORD PTR [rax]
    4de6:	00 2a                	add    BYTE PTR [rdx],ch
    4de8:	5e                   	pop    rsi
    4de9:	01 07                	add    DWORD PTR [rdi],eax
    4deb:	8e 85 00 00 57 74    	mov    es,WORD PTR [rbp+0x74570000]
    4df1:	00 00                	add    BYTE PTR [rax],al
    4df3:	01 fc                	add    esp,edi
    4df5:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4df8:	07                   	(bad)
    4df9:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4dfc:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4dff:	00 00                	add    BYTE PTR [rax],al
    4e01:	01 d5                	add    ebp,edx
    4e03:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4e06:	00 03                	add    BYTE PTR [rbx],al
    4e08:	76 1c                	jbe    4e26 <__TMC_END__+0xe0e>
    4e0a:	00 00                	add    BYTE PTR [rax],al
    4e0c:	2a 6b 01             	sub    ch,BYTE PTR [rbx+0x1]
    4e0f:	07                   	(bad)
    4e10:	74 28                	je     4e3a <__TMC_END__+0xe22>
    4e12:	00 00                	add    BYTE PTR [rax],al
    4e14:	05 4c 00 00 01       	add    eax,0x100004c
    4e19:	21 4e 00             	and    DWORD PTR [rsi+0x0],ecx
    4e1c:	00 2c 4e             	add    BYTE PTR [rsi+rcx*2],ch
    4e1f:	00 00                	add    BYTE PTR [rax],al
    4e21:	02 5c 74 00          	add    bl,BYTE PTR [rsp+rsi*2+0x0]
    4e25:	00 01                	add    BYTE PTR [rcx],al
    4e27:	d5 4d 00 00          	{rex2 0x4d} add BYTE PTR [r8],r24b
    4e2b:	00 03                	add    BYTE PTR [rbx],al
    4e2d:	4c                   	rex.WR
    4e2e:	66 00 00             	data16 add BYTE PTR [rax],al
    4e31:	2a 75 01             	sub    dh,BYTE PTR [rbp+0x1]
    4e34:	07                   	(bad)
    4e35:	df 17                	fist   WORD PTR [rdi]
    4e37:	00 00                	add    BYTE PTR [rax],al
    4e39:	57                   	push   rdi
    4e3a:	74 00                	je     4e3c <__TMC_END__+0xe24>
    4e3c:	00 01                	add    BYTE PTR [rcx],al
    4e3e:	46                   	rex.RX
    4e3f:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4e42:	51                   	push   rcx
    4e43:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4e46:	02 4d 74             	add    cl,BYTE PTR [rbp+0x74]
    4e49:	00 00                	add    BYTE PTR [rax],al
    4e4b:	01 d5                	add    ebp,edx
    4e4d:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4e50:	00 03                	add    BYTE PTR [rbx],al
    4e52:	d1 42 00             	rol    DWORD PTR [rdx+0x0],1
    4e55:	00 2a                	add    BYTE PTR [rdx],ch
    4e57:	82                   	(bad)
    4e58:	01 07                	add    DWORD PTR [rdi],eax
    4e5a:	4f 75 00             	rex.WRXB jne 4e5d <__TMC_END__+0xe45>
    4e5d:	00 cc                	add    ah,cl
    4e5f:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    4e62:	01 6b 4e             	add    DWORD PTR [rbx+0x4e],ebp
    4e65:	00 00                	add    BYTE PTR [rax],al
    4e67:	76 4e                	jbe    4eb7 <__TMC_END__+0xe9f>
    4e69:	00 00                	add    BYTE PTR [rax],al
    4e6b:	02 5c 74 00          	add    bl,BYTE PTR [rsp+rsi*2+0x0]
    4e6f:	00 01                	add    BYTE PTR [rcx],al
    4e71:	d5 4d 00 00          	{rex2 0x4d} add BYTE PTR [r8],r24b
    4e75:	00 14 71             	add    BYTE PTR [rcx+rsi*2],dl
    4e78:	73 00                	jae    4e7a <__TMC_END__+0xe62>
    4e7a:	00 04 63             	add    BYTE PTR [rbx+riz*2],al
    4e7d:	00 00                	add    BYTE PTR [rax],al
    4e7f:	00 0f                	add    BYTE PTR [rdi],cl
    4e81:	05 4c 00 00 05       	add    eax,0x500004c
    4e86:	b8 3a 00 00 0f       	mov    eax,0xf00003a
    4e8b:	60                   	(bad)
    4e8c:	0b c9                	or     ecx,ecx
    4e8e:	72 00                	jb     4e90 <__TMC_END__+0xe78>
    4e90:	00 05 6a 90 00 00    	add    BYTE PTR [rip+0x906a],al        # df00 <__TMC_END__+0x9ee8>
    4e96:	0f e7 0b             	movntq QWORD PTR [rbx],mm1
    4e99:	6c                   	ins    BYTE PTR es:[rdi],dx
    4e9a:	08 00                	or     BYTE PTR [rax],al
    4e9c:	00 1e                	add    BYTE PTR [rsi],bl
    4e9e:	ee                   	out    dx,al
    4e9f:	75 00                	jne    4ea1 <__TMC_END__+0xe89>
    4ea1:	00 10                	add    BYTE PTR [rax],dl
    4ea3:	12 66 0b             	adc    ah,BYTE PTR [rsi+0xb]
    4ea6:	33 52 00             	xor    edx,DWORD PTR [rdx+0x0]
    4ea9:	00 75 77             	add    BYTE PTR [rbp+0x77],dh
    4eac:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    4eaf:	12 90 1f 16 87 00    	adc    dl,BYTE PTR [rax+0x87161f]
    4eb5:	00 36                	add    BYTE PTR [rsi],dh
    4eb7:	05 00 00 01 ff       	add    eax,0xff010000
    4ebc:	ff                   	(bad)
    4ebd:	ff                   	(bad)
    4ebe:	ff                   	(bad)
    4ebf:	ff                   	(bad)
    4ec0:	ff                   	(bad)
    4ec1:	ff                   	(bad)
    4ec2:	ff 01                	inc    DWORD PTR [rcx]
    4ec4:	16                   	(bad)
    4ec5:	c1 8f 00 00 12 95 07 	ror    DWORD PTR [rdi-0x6aee0000],0x7
    4ecc:	a2 74 00 00 d8 4e 00 	movabs ds:0xde00004ed8000074,al
    4ed3:	00 de 
    4ed5:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4ed8:	02 61 74             	add    ah,BYTE PTR [rcx+0x74]
    4edb:	00 00                	add    BYTE PTR [rax],al
    4edd:	00 3c c1             	add    BYTE PTR [rcx+rax*8],bh
    4ee0:	8f 00                	pop    QWORD PTR [rax]
    4ee2:	00 12                	add    BYTE PTR [rdx],dl
    4ee4:	e1 07                	loope  4eed <__TMC_END__+0xed5>
    4ee6:	62 09 00 00 f2       	(bad)
    4eeb:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4eee:	fd                   	std
    4eef:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    4ef2:	02 61 74             	add    ah,BYTE PTR [rcx+0x74]
    4ef5:	00 00                	add    BYTE PTR [rax],al
    4ef7:	01 66 74             	add    DWORD PTR [rsi+0x74],esp
    4efa:	00 00                	add    BYTE PTR [rax],al
    4efc:	00 3c 9e             	add    BYTE PTR [rsi+rbx*4],bh
    4eff:	68 00 00 12 f2       	push   0xfffffffff2120000
    4f04:	07                   	(bad)
    4f05:	c4                   	(bad)
    4f06:	79 00                	jns    4f08 <__TMC_END__+0xef0>
    4f08:	00 11                	add    BYTE PTR [rcx],dl
    4f0a:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4f0d:	1c 4f                	sbb    al,0x4f
    4f0f:	00 00                	add    BYTE PTR [rax],al
    4f11:	02 61 74             	add    ah,BYTE PTR [rcx+0x74]
    4f14:	00 00                	add    BYTE PTR [rax],al
    4f16:	02 f1                	add    dh,cl
    4f18:	00 00                	add    BYTE PTR [rax],al
    4f1a:	00 00                	add    BYTE PTR [rax],al
    4f1c:	31 00                	xor    DWORD PTR [rax],eax
    4f1e:	1d 00 00 12 f5       	sbb    eax,0xf5120000
    4f23:	07                   	(bad)
    4f24:	e3 18                	jrcxz  4f3e <__TMC_END__+0xf26>
    4f26:	00 00                	add    BYTE PTR [rax],al
    4f28:	6b 74 00 00 34       	imul   esi,DWORD PTR [rax+rax*1+0x0],0x34
    4f2d:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4f30:	3f                   	(bad)
    4f31:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4f34:	02 61 74             	add    ah,BYTE PTR [rcx+0x74]
    4f37:	00 00                	add    BYTE PTR [rax],al
    4f39:	01 66 74             	add    DWORD PTR [rsi+0x74],esp
    4f3c:	00 00                	add    BYTE PTR [rax],al
    4f3e:	00 11                	add    BYTE PTR [rcx],dl
    4f40:	1f                   	(bad)
    4f41:	2b 00                	sub    eax,DWORD PTR [rax]
    4f43:	00 12                	add    BYTE PTR [rdx],dl
    4f45:	82                   	(bad)
    4f46:	0d 29 05 00 00       	or     eax,0x529
    4f4b:	01 15 c8 89 00 00    	add    DWORD PTR [rip+0x89c8],edx        # d919 <__TMC_END__+0x9901>
    4f51:	12 fb                	adc    bh,bl
    4f53:	07                   	(bad)
    4f54:	03 63 00             	add    esp,DWORD PTR [rbx+0x0]
    4f57:	00 3f                	add    BYTE PTR [rdi],bh
    4f59:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4f5c:	64 4f 00 00          	rex.WRXB add BYTE PTR fs:[r8],r8b
    4f60:	6a 4f                	push   0x4f
    4f62:	00 00                	add    BYTE PTR [rax],al
    4f64:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    4f67:	00 00                	add    BYTE PTR [rax],al
    4f69:	00 03                	add    BYTE PTR [rbx],al
    4f6b:	ea                   	(bad)
    4f6c:	7f 00                	jg     4f6e <__TMC_END__+0xf56>
    4f6e:	00 12                	add    BYTE PTR [rdx],dl
    4f70:	00 01                	add    BYTE PTR [rcx],al
    4f72:	07                   	(bad)
    4f73:	70 2c                	jo     4fa1 <__TMC_END__+0xf89>
    4f75:	00 00                	add    BYTE PTR [rax],al
    4f77:	3f                   	(bad)
    4f78:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4f7b:	01 84 4f 00 00 8a 4f 	add    DWORD PTR [rdi+rcx*2+0x4f8a0000],eax
    4f82:	00 00                	add    BYTE PTR [rax],al
    4f84:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    4f87:	00 00                	add    BYTE PTR [rax],al
    4f89:	00 03                	add    BYTE PTR [rbx],al
    4f8b:	c9                   	leave
    4f8c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4f8d:	00 00                	add    BYTE PTR [rax],al
    4f8f:	12 05 01 07 1a 31    	adc    al,BYTE PTR [rip+0x311a0701]        # 311a5696 <__TMC_END__+0x311a167e>
    4f95:	00 00                	add    BYTE PTR [rax],al
    4f97:	f1                   	int1
    4f98:	65 00 00             	add    BYTE PTR gs:[rax],al
    4f9b:	01 a4 4f 00 00 aa 4f 	add    DWORD PTR [rdi+rcx*2+0x4faa0000],esp
    4fa2:	00 00                	add    BYTE PTR [rax],al
    4fa4:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    4fa7:	00 00                	add    BYTE PTR [rax],al
    4fa9:	00 11                	add    BYTE PTR [rcx],dl
    4fab:	42 6c                	rex.X ins BYTE PTR es:[rdi],dx
    4fad:	00 00                	add    BYTE PTR [rax],al
    4faf:	12 86 0d 75 74 00    	adc    al,BYTE PTR [rsi+0x74750d]
    4fb5:	00 01                	add    BYTE PTR [rcx],al
    4fb7:	11 84 36 00 00 12 80 	adc    DWORD PTR [rsi+rsi*1-0x7fee0000],eax
    4fbe:	0d e5 00 00 00       	or     eax,0xe5
    4fc3:	01 03                	add    DWORD PTR [rbx],eax
    4fc5:	14 35                	adc    al,0x35
    4fc7:	00 00                	add    BYTE PTR [rax],al
    4fc9:	12 0c 01             	adc    cl,BYTE PTR [rcx+rax*1]
    4fcc:	07                   	(bad)
    4fcd:	51                   	push   rcx
    4fce:	1e                   	(bad)
    4fcf:	00 00                	add    BYTE PTR [rax],al
    4fd1:	aa                   	stos   BYTE PTR es:[rdi],al
    4fd2:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4fd5:	01 de                	add    esi,ebx
    4fd7:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4fda:	e4 4f                	in     al,0x4f
    4fdc:	00 00                	add    BYTE PTR [rax],al
    4fde:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    4fe1:	00 00                	add    BYTE PTR [rax],al
    4fe3:	00 03                	add    BYTE PTR [rbx],al
    4fe5:	0f 65 00             	pcmpgtw mm0,QWORD PTR [rax]
    4fe8:	00 12                	add    BYTE PTR [rdx],dl
    4fea:	14 01                	adc    al,0x1
    4fec:	07                   	(bad)
    4fed:	1d 28 00 00 aa       	sbb    eax,0xaa000028
    4ff2:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4ff5:	01 fe                	add    esi,edi
    4ff7:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    4ffa:	04 50                	add    al,0x50
    4ffc:	00 00                	add    BYTE PTR [rax],al
    4ffe:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    5001:	00 00                	add    BYTE PTR [rax],al
    5003:	00 03                	add    BYTE PTR [rbx],al
    5005:	d1 42 00             	rol    DWORD PTR [rdx+0x0],1
    5008:	00 12                	add    BYTE PTR [rdx],dl
    500a:	1c 01                	sbb    al,0x1
    500c:	07                   	(bad)
    500d:	6c                   	ins    BYTE PTR es:[rdi],dx
    500e:	0d 00 00 aa 4f       	or     eax,0x4faa0000
    5013:	00 00                	add    BYTE PTR [rax],al
    5015:	01 1e                	add    DWORD PTR [rsi],ebx
    5017:	50                   	push   rax
    5018:	00 00                	add    BYTE PTR [rax],al
    501a:	29 50 00             	sub    DWORD PTR [rax+0x0],edx
    501d:	00 02                	add    BYTE PTR [rdx],al
    501f:	70 74                	jo     5095 <__TMC_END__+0x107d>
    5021:	00 00                	add    BYTE PTR [rax],al
    5023:	01 3f                	add    DWORD PTR [rdi],edi
    5025:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    5028:	00 11                	add    BYTE PTR [rcx],dl
    502a:	34 6c                	xor    al,0x6c
    502c:	00 00                	add    BYTE PTR [rax],al
    502e:	12 84 0d 03 58 00 00 	adc    al,BYTE PTR [rbp+rcx*1+0x5803]
    5035:	01 03                	add    DWORD PTR [rbx],eax
    5037:	da 56 00             	ficom  DWORD PTR [rsi+0x0]
    503a:	00 12                	add    BYTE PTR [rdx],dl
    503c:	30 01                	xor    BYTE PTR [rcx],al
    503e:	07                   	(bad)
    503f:	b9 87 00 00 29       	mov    ecx,0x29000087
    5044:	50                   	push   rax
    5045:	00 00                	add    BYTE PTR [rax],al
    5047:	01 50 50             	add    DWORD PTR [rax+0x50],edx
    504a:	00 00                	add    BYTE PTR [rax],al
    504c:	56                   	push   rsi
    504d:	50                   	push   rax
    504e:	00 00                	add    BYTE PTR [rax],al
    5050:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    5053:	00 00                	add    BYTE PTR [rax],al
    5055:	00 11                	add    BYTE PTR [rcx],dl
    5057:	5a                   	pop    rdx
    5058:	6a 00                	push   0x0
    505a:	00 12                	add    BYTE PTR [rdx],dl
    505c:	88 0d 04 63 00 00    	mov    BYTE PTR [rip+0x6304],cl        # b366 <__TMC_END__+0x734e>
    5062:	01 03                	add    DWORD PTR [rbx],eax
    5064:	e6 3e                	out    0x3e,al
    5066:	00 00                	add    BYTE PTR [rax],al
    5068:	12 37                	adc    dh,BYTE PTR [rdi]
    506a:	01 07                	add    DWORD PTR [rdi],eax
    506c:	01 2d 00 00 56 50    	add    DWORD PTR [rip+0x50560000],ebp        # 50565072 <__TMC_END__+0x5056105a>
    5072:	00 00                	add    BYTE PTR [rax],al
    5074:	01 7d 50             	add    DWORD PTR [rbp+0x50],edi
    5077:	00 00                	add    BYTE PTR [rax],al
    5079:	83 50 00 00          	adc    DWORD PTR [rax+0x0],0x0
    507d:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    5080:	00 00                	add    BYTE PTR [rax],al
    5082:	00 24 65 6e 64 00 12 	add    BYTE PTR [riz*2+0x1200646e],ah
    5089:	3c 01                	cmp    al,0x1
    508b:	ce                   	(bad)
    508c:	68 00 00 56 50       	push   0x50560000
    5091:	00 00                	add    BYTE PTR [rax],al
    5093:	9b                   	fwait
    5094:	50                   	push   rax
    5095:	00 00                	add    BYTE PTR [rax],al
    5097:	a1 50 00 00 02 70 74 	movabs eax,ds:0x747002000050
    509e:	00 00 
    50a0:	00 11                	add    BYTE PTR [rcx],dl
    50a2:	52                   	push   rdx
    50a3:	6a 00                	push   0x0
    50a5:	00 12                	add    BYTE PTR [rdx],dl
    50a7:	89 0d 05 4c 00 00    	mov    DWORD PTR [rip+0x4c05],ecx        # 9cb2 <__TMC_END__+0x5c9a>
    50ad:	01 03                	add    DWORD PTR [rbx],eax
    50af:	72 0f                	jb     50c0 <__TMC_END__+0x10a8>
    50b1:	00 00                	add    BYTE PTR [rax],al
    50b3:	12 41 01             	adc    al,BYTE PTR [rcx+0x1]
    50b6:	07                   	(bad)
    50b7:	92                   	xchg   edx,eax
    50b8:	5c                   	pop    rsp
    50b9:	00 00                	add    BYTE PTR [rax],al
    50bb:	a1 50 00 00 01 c8 50 	movabs eax,ds:0x50c801000050
    50c2:	00 00 
    50c4:	ce                   	(bad)
    50c5:	50                   	push   rax
    50c6:	00 00                	add    BYTE PTR [rax],al
    50c8:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    50cb:	00 00                	add    BYTE PTR [rax],al
    50cd:	00 03                	add    BYTE PTR [rbx],al
    50cf:	25 40 00 00 12       	and    eax,0x12000040
    50d4:	46 01 07             	rex.RX add DWORD PTR [rdi],r8d
    50d7:	e7 4e                	out    0x4e,eax
    50d9:	00 00                	add    BYTE PTR [rax],al
    50db:	a1 50 00 00 01 e8 50 	movabs eax,ds:0x50e801000050
    50e2:	00 00 
    50e4:	ee                   	out    dx,al
    50e5:	50                   	push   rax
    50e6:	00 00                	add    BYTE PTR [rax],al
    50e8:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    50eb:	00 00                	add    BYTE PTR [rax],al
    50ed:	00 11                	add    BYTE PTR [rcx],dl
    50ef:	05 35 00 00 12       	add    eax,0x12000035
    50f4:	8b 0d 38 52 00 00    	mov    ecx,DWORD PTR [rip+0x5238]        # a332 <__TMC_END__+0x631a>
    50fa:	01 03                	add    DWORD PTR [rbx],eax
    50fc:	e5 3e                	in     eax,0x3e
    50fe:	00 00                	add    BYTE PTR [rax],al
    5100:	12 4c 01 07          	adc    cl,BYTE PTR [rcx+rax*1+0x7]
    5104:	da 3c 00             	fidivr DWORD PTR [rax+rax*1]
    5107:	00 ee                	add    dh,ch
    5109:	50                   	push   rax
    510a:	00 00                	add    BYTE PTR [rax],al
    510c:	01 15 51 00 00 1b    	add    DWORD PTR [rip+0x1b000051],edx        # 1b005163 <__TMC_END__+0x1b00114b>
    5112:	51                   	push   rcx
    5113:	00 00                	add    BYTE PTR [rax],al
    5115:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    5118:	00 00                	add    BYTE PTR [rax],al
    511a:	00 03                	add    BYTE PTR [rbx],al
    511c:	8d 57 00             	lea    edx,[rdi+0x0]
    511f:	00 12                	add    BYTE PTR [rdx],dl
    5121:	51                   	push   rcx
    5122:	01 07                	add    DWORD PTR [rdi],eax
    5124:	63 82 00 00 ee 50    	movsxd eax,DWORD PTR [rdx+0x50ee0000]
    512a:	00 00                	add    BYTE PTR [rax],al
    512c:	01 35 51 00 00 3b    	add    DWORD PTR [rip+0x3b000051],esi        # 3b005183 <__TMC_END__+0x3b00116b>
    5132:	51                   	push   rcx
    5133:	00 00                	add    BYTE PTR [rax],al
    5135:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    5138:	00 00                	add    BYTE PTR [rax],al
    513a:	00 11                	add    BYTE PTR [rcx],dl
    513c:	4c 6a 00             	rex.WR push 0x0
    513f:	00 12                	add    BYTE PTR [rdx],dl
    5141:	8c 0d 56 52 00 00    	mov    WORD PTR [rip+0x5256],cs        # a39d <__TMC_END__+0x6385>
    5147:	01 03                	add    DWORD PTR [rbx],eax
    5149:	71 0f                	jno    515a <__TMC_END__+0x1142>
    514b:	00 00                	add    BYTE PTR [rax],al
    514d:	12 56 01             	adc    dl,BYTE PTR [rsi+0x1]
    5150:	07                   	(bad)
    5151:	70 20                	jo     5173 <__TMC_END__+0x115b>
    5153:	00 00                	add    BYTE PTR [rax],al
    5155:	3b 51 00             	cmp    edx,DWORD PTR [rcx+0x0]
    5158:	00 01                	add    BYTE PTR [rcx],al
    515a:	62 51 00 00 68       	(bad)
    515f:	51                   	push   rcx
    5160:	00 00                	add    BYTE PTR [rax],al
    5162:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    5165:	00 00                	add    BYTE PTR [rax],al
    5167:	00 03                	add    BYTE PTR [rbx],al
    5169:	24 40                	and    al,0x40
    516b:	00 00                	add    BYTE PTR [rax],al
    516d:	12 5b 01             	adc    bl,BYTE PTR [rbx+0x1]
    5170:	07                   	(bad)
    5171:	c6                   	(bad)
    5172:	0e                   	(bad)
    5173:	00 00                	add    BYTE PTR [rax],al
    5175:	3b 51 00             	cmp    edx,DWORD PTR [rcx+0x0]
    5178:	00 01                	add    BYTE PTR [rcx],al
    517a:	82                   	(bad)
    517b:	51                   	push   rcx
    517c:	00 00                	add    BYTE PTR [rax],al
    517e:	88 51 00             	mov    BYTE PTR [rcx+0x0],dl
    5181:	00 02                	add    BYTE PTR [rdx],al
    5183:	70 74                	jo     51f9 <__TMC_END__+0x11e1>
    5185:	00 00                	add    BYTE PTR [rax],al
    5187:	00 03                	add    BYTE PTR [rbx],al
    5189:	2d 3a 00 00 12       	sub    eax,0x1200003a
    518e:	70 01                	jo     5191 <__TMC_END__+0x1179>
    5190:	07                   	(bad)
    5191:	ee                   	out    dx,al
    5192:	39 00                	cmp    DWORD PTR [rax],eax
    5194:	00 9d 4e 00 00 01    	add    BYTE PTR [rbp+0x100004e],bl
    519a:	a2 51 00 00 ad 51 00 	movabs ds:0x2000051ad000051,al
    51a1:	00 02 
    51a3:	70 74                	jo     5219 <__TMC_END__+0x1201>
    51a5:	00 00                	add    BYTE PTR [rax],al
    51a7:	01 3f                	add    DWORD PTR [rdi],edi
    51a9:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    51ac:	00 03                	add    BYTE PTR [rbx],al
    51ae:	15 5e 00 00 12       	adc    eax,0x1200005e
    51b3:	85 01                	test   DWORD PTR [rcx],eax
    51b5:	07                   	(bad)
    51b6:	4a                   	rex.WX
    51b7:	44 00 00             	add    BYTE PTR [rax],r8b
    51ba:	9d                   	popf
    51bb:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    51be:	01 c7                	add    edi,eax
    51c0:	51                   	push   rcx
    51c1:	00 00                	add    BYTE PTR [rax],al
    51c3:	d2 51 00             	rcl    BYTE PTR [rcx+0x0],cl
    51c6:	00 02                	add    BYTE PTR [rdx],al
    51c8:	70 74                	jo     523e <__TMC_END__+0x1226>
    51ca:	00 00                	add    BYTE PTR [rax],al
    51cc:	01 3f                	add    DWORD PTR [rdi],edi
    51ce:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    51d1:	00 03                	add    BYTE PTR [rbx],al
    51d3:	84 68 00             	test   BYTE PTR [rax+0x0],ch
    51d6:	00 12                	add    BYTE PTR [rdx],dl
    51d8:	ae                   	scas   al,BYTE PTR es:[rdi]
    51d9:	01 07                	add    DWORD PTR [rdi],eax
    51db:	4c 8e 00             	rex.WR mov es,WORD PTR [rax]
    51de:	00 9d 4e 00 00 01    	add    BYTE PTR [rbp+0x100004e],bl
    51e4:	ec                   	in     al,dx
    51e5:	51                   	push   rcx
    51e6:	00 00                	add    BYTE PTR [rax],al
    51e8:	fc                   	cld
    51e9:	51                   	push   rcx
    51ea:	00 00                	add    BYTE PTR [rax],al
    51ec:	02 70 74             	add    dh,BYTE PTR [rax+0x74]
    51ef:	00 00                	add    BYTE PTR [rax],al
    51f1:	01 3f                	add    DWORD PTR [rdi],edi
    51f3:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    51f6:	01 3f                	add    DWORD PTR [rdi],edi
    51f8:	4f 00 00             	rex.WRXB add BYTE PTR [r8],r8b
    51fb:	00 1c 7f             	add    BYTE PTR [rdi+rdi*2],bl
    51fe:	5d                   	pop    rbp
    51ff:	00 00                	add    BYTE PTR [rax],al
    5201:	12 bd 01 0f 29 50    	adc    bh,BYTE PTR [rbp+0x50290f01]
    5207:	00 00                	add    BYTE PTR [rax],al
    5209:	00 1c 74             	add    BYTE PTR [rsp+rsi*2],bl
    520c:	4d 00 00             	rex.WRB add BYTE PTR [r8],r8b
    520f:	12 be 01 40 f5 07    	adc    bh,BYTE PTR [rsi+0x7f54001]
    5215:	00 00                	add    BYTE PTR [rax],al
    5217:	08 14 e0             	or     BYTE PTR [rax+riz*8],dl
    521a:	65 00 00             	add    BYTE PTR gs:[rax],al
    521d:	e5 00                	in     eax,0x0
    521f:	00 00                	add    BYTE PTR [rax],al
    5221:	41                   	rex.B
    5222:	f2 63 00             	repnz movsxd eax,DWORD PTR [rax]
    5225:	00 3a                	add    BYTE PTR [rdx],bh
    5227:	00 00                	add    BYTE PTR [rax],al
    5229:	00 ff                	add    bh,bh
    522b:	ff                   	(bad)
    522c:	ff                   	(bad)
    522d:	ff                   	(bad)
    522e:	ff                   	(bad)
    522f:	ff                   	(bad)
    5230:	ff                   	(bad)
    5231:	ff 00                	inc    DWORD PTR [rax]
    5233:	0f 9d 4e 00          	setge  BYTE PTR [rsi+0x0]
    5237:	00 19                	add    BYTE PTR [rcx],bl
    5239:	05 35 00 00 2a       	add    eax,0x2a000035
    523e:	32 0a                	xor    cl,BYTE PTR [rdx]
    5240:	0b 45 52             	or     eax,DWORD PTR [rbp+0x52]
    5243:	00 00                	add    BYTE PTR [rax],al
    5245:	05 b6 35 00 00       	add    eax,0x35b6
    524a:	0c 9c                	or     al,0x9c
    524c:	0b 48 05             	or     ecx,DWORD PTR [rax+0x5]
    524f:	00 00                	add    BYTE PTR [rax],al
    5251:	29 7c 41 00          	sub    DWORD PTR [rcx+rax*2+0x0],edi
    5255:	00 19                	add    BYTE PTR [rcx],bl
    5257:	05 35 00 00 2a       	add    eax,0x2a000035
    525c:	32 0a                	xor    cl,BYTE PTR [rdx]
    525e:	0b 63 52             	or     esp,DWORD PTR [rbx+0x52]
    5261:	00 00                	add    BYTE PTR [rax],al
    5263:	05 b6 35 00 00       	add    eax,0x35b6
    5268:	0c 9c                	or     al,0x9c
    526a:	0b 54 05 00          	or     edx,DWORD PTR [rbp+rax*1+0x0]
    526e:	00 29                	add    BYTE PTR [rcx],ch
    5270:	e8 81 00 00 2b       	call   2b0052f6 <__TMC_END__+0x2b0012de>
    5275:	be 75 00 00 01       	mov    esi,0x1000075
    527a:	28 04 01             	sub    BYTE PTR [rcx+rax*1],al
    527d:	2e 95                	cs xchg ebp,eax
    527f:	52                   	push   rdx
    5280:	00 00                	add    BYTE PTR [rax],al
    5282:	1d 5f 55 31 00       	sbb    eax,0x31555f
    5287:	b4 02                	mov    ah,0x2
    5289:	00 00                	add    BYTE PTR [rax],al
    528b:	1d 5f 55 32 00       	sbb    eax,0x32555f
    5290:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5293:	00 00                	add    BYTE PTR [rax],al
    5295:	30 d8                	xor    al,bl
    5297:	40 00 00             	rex add BYTE PTR [rax],al
    529a:	10 28                	adc    BYTE PTR [rax],ch
    529c:	1c 01                	sbb    al,0x1
    529e:	3a 54 00 00          	cmp    dl,BYTE PTR [rax+rax*1+0x0]
    52a2:	23 74 52 00          	and    esi,DWORD PTR [rdx+rdx*2+0x0]
    52a6:	00 1c 2d 3a 00 00 28 	add    BYTE PTR [rbp*1+0x2800003a],bl
    52ad:	22 01                	and    al,BYTE PTR [rcx]
    52af:	0b b4 02 00 00 00 1c 	or     esi,DWORD PTR [rdx+rax*1+0x1c000000]
    52b6:	2c 1d                	sub    al,0x1d
    52b8:	00 00                	add    BYTE PTR [rax],al
    52ba:	28 23                	sub    BYTE PTR [rbx],ah
    52bc:	01 0b                	add    DWORD PTR [rbx],ecx
    52be:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    52c1:	00 08                	add    BYTE PTR [rax],cl
    52c3:	39 81 3b 00 00 26    	cmp    DWORD PTR [rcx+0x2600003b],eax
    52c9:	01 91 67 00 00 d6    	add    DWORD PTR [rcx-0x29ffff99],edx
    52cf:	52                   	push   rdx
    52d0:	00 00                	add    BYTE PTR [rax],al
    52d2:	e1 52                	loope  5326 <__TMC_END__+0x130e>
    52d4:	00 00                	add    BYTE PTR [rax],al
    52d6:	02 ac 74 00 00 01 b1 	add    ch,BYTE PTR [rsp+rsi*2-0x4eff0000]
    52dd:	74 00                	je     52df <__TMC_END__+0x12c7>
    52df:	00 00                	add    BYTE PTR [rax],al
    52e1:	39 81 3b 00 00 27    	cmp    DWORD PTR [rcx+0x2700003b],eax
    52e7:	01 ca                	add    edx,ecx
    52e9:	7a 00                	jp     52eb <__TMC_END__+0x12d3>
    52eb:	00 f4                	add    ah,dh
    52ed:	52                   	push   rdx
    52ee:	00 00                	add    BYTE PTR [rax],al
    52f0:	ff 52 00             	call   QWORD PTR [rdx+0x0]
    52f3:	00 02                	add    BYTE PTR [rdx],al
    52f5:	ac                   	lods   al,BYTE PTR ds:[rsi]
    52f6:	74 00                	je     52f8 <__TMC_END__+0x12e0>
    52f8:	00 01                	add    BYTE PTR [rcx],al
    52fa:	b6 74                	mov    dh,0x74
    52fc:	00 00                	add    BYTE PTR [rax],al
    52fe:	00 17                	add    BYTE PTR [rdi],dl
    5300:	f7 28                	imul   DWORD PTR [rax]
    5302:	00 00                	add    BYTE PTR [rax],al
    5304:	28 2f                	sub    BYTE PTR [rdi],ch
    5306:	01 86 5d 00 00 13    	add    DWORD PTR [rsi+0x1300005d],eax
    530c:	53                   	push   rbx
    530d:	00 00                	add    BYTE PTR [rax],al
    530f:	1e                   	(bad)
    5310:	53                   	push   rbx
    5311:	00 00                	add    BYTE PTR [rax],al
    5313:	02 ac 74 00 00 01 bb 	add    ch,BYTE PTR [rsp+rsi*2-0x44ff0000]
    531a:	74 00                	je     531c <__TMC_END__+0x1304>
    531c:	00 00                	add    BYTE PTR [rax],al
    531e:	17                   	(bad)
    531f:	f7 28                	imul   DWORD PTR [rax]
    5321:	00 00                	add    BYTE PTR [rax],al
    5323:	28 40 01             	sub    BYTE PTR [rax+0x1],al
    5326:	43 5a                	rex.XB pop r10
    5328:	00 00                	add    BYTE PTR [rax],al
    532a:	32 53 00             	xor    dl,BYTE PTR [rbx+0x0]
    532d:	00 3d 53 00 00 02    	add    BYTE PTR [rip+0x2000053],bh        # 2005386 <__TMC_END__+0x200136e>
    5333:	c0 74 00 00 01       	shl    BYTE PTR [rax+rax*1+0x0],0x1
    5338:	b1 74                	mov    cl,0x74
    533a:	00 00                	add    BYTE PTR [rax],al
    533c:	00 17                	add    BYTE PTR [rdi],dl
    533e:	81 3b 00 00 28 5a    	cmp    DWORD PTR [rbx],0x5a280000
    5344:	01 1e                	add    DWORD PTR [rsi],ebx
    5346:	04 00                	add    al,0x0
    5348:	00 51 53             	add    BYTE PTR [rcx+0x53],dl
    534b:	00 00                	add    BYTE PTR [rax],al
    534d:	57                   	push   rdi
    534e:	53                   	push   rbx
    534f:	00 00                	add    BYTE PTR [rax],al
    5351:	02 ac 74 00 00 00 17 	add    ch,BYTE PTR [rsp+rsi*2+0x17000000]
    5358:	81 3b 00 00 28 ac    	cmp    DWORD PTR [rbx],0xac280000
    535e:	01 94 40 00 00 6b 53 	add    DWORD PTR [rax+rax*2+0x536b0000],edx
    5365:	00 00                	add    BYTE PTR [rax],al
    5367:	7b 53                	jnp    53bc <__TMC_END__+0x13a4>
    5369:	00 00                	add    BYTE PTR [rax],al
    536b:	02 ac 74 00 00 01 39 	add    ch,BYTE PTR [rsp+rsi*2+0x39010000]
    5372:	74 00                	je     5374 <__TMC_END__+0x135c>
    5374:	00 01                	add    BYTE PTR [rcx],al
    5376:	9d                   	popf
    5377:	74 00                	je     5379 <__TMC_END__+0x1361>
    5379:	00 00                	add    BYTE PTR [rax],al
    537b:	48 00 1d 00 00 5c 59 	rex.W add BYTE PTR [rip+0x595c0000],bl        # 595c5382 <__TMC_END__+0x595c136a>
    5382:	00 00                	add    BYTE PTR [rax],al
    5384:	bb 74 00 00 90       	mov    ebx,0x90000074
    5389:	53                   	push   rbx
    538a:	00 00                	add    BYTE PTR [rax],al
    538c:	9b                   	fwait
    538d:	53                   	push   rbx
    538e:	00 00                	add    BYTE PTR [rax],al
    5390:	02 ac 74 00 00 01 b1 	add    ch,BYTE PTR [rsp+rsi*2-0x4eff0000]
    5397:	74 00                	je     5399 <__TMC_END__+0x1381>
    5399:	00 00                	add    BYTE PTR [rax],al
    539b:	18 00                	sbb    BYTE PTR [rax],al
    539d:	1d 00 00 28 4f       	sbb    eax,0x4f280000
    53a2:	02 df                	add    bl,bh
    53a4:	0f 00 00             	sldt   WORD PTR [rax]
    53a7:	bb 74 00 00 b3       	mov    ebx,0xb3000074
    53ac:	53                   	push   rbx
    53ad:	00 00                	add    BYTE PTR [rax],al
    53af:	be 53 00 00 02       	mov    esi,0x2000053
    53b4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    53b5:	74 00                	je     53b7 <__TMC_END__+0x139f>
    53b7:	00 01                	add    BYTE PTR [rcx],al
    53b9:	b1 74                	mov    cl,0x74
    53bb:	00 00                	add    BYTE PTR [rax],al
    53bd:	00 18                	add    BYTE PTR [rax],bl
    53bf:	00 1d 00 00 28 5a    	add    BYTE PTR [rip+0x5a280000],bl        # 5a2853c5 <__TMC_END__+0x5a2813ad>
    53c5:	02 a3 59 00 00 bb    	add    ah,BYTE PTR [rbx-0x44ffffa7]
    53cb:	74 00                	je     53cd <__TMC_END__+0x13b5>
    53cd:	00 d6                	add    dh,dl
    53cf:	53                   	push   rbx
    53d0:	00 00                	add    BYTE PTR [rax],al
    53d2:	e1 53                	loope  5427 <__TMC_END__+0x140f>
    53d4:	00 00                	add    BYTE PTR [rax],al
    53d6:	02 ac 74 00 00 01 b6 	add    ch,BYTE PTR [rsp+rsi*2-0x49ff0000]
    53dd:	74 00                	je     53df <__TMC_END__+0x13c7>
    53df:	00 00                	add    BYTE PTR [rax],al
    53e1:	18 00                	sbb    BYTE PTR [rax],al
    53e3:	1d 00 00 28 7e       	sbb    eax,0x7e280000
    53e8:	02 db                	add    bl,bl
    53ea:	31 00                	xor    DWORD PTR [rax],eax
    53ec:	00 b1 74 00 00 f9    	add    BYTE PTR [rcx-0x6ffff8c],dh
    53f2:	53                   	push   rbx
    53f3:	00 00                	add    BYTE PTR [rax],al
    53f5:	04 54                	add    al,0x54
    53f7:	00 00                	add    BYTE PTR [rax],al
    53f9:	02 c0                	add    al,al
    53fb:	74 00                	je     53fd <__TMC_END__+0x13e5>
    53fd:	00 01                	add    BYTE PTR [rcx],al
    53ff:	b1 74                	mov    cl,0x74
    5401:	00 00                	add    BYTE PTR [rax],al
    5403:	00 18                	add    BYTE PTR [rax],bl
    5405:	00 1d 00 00 28 88    	add    BYTE PTR [rip+0xffffffff88280000],bl        # ffffffff8828540b <__TMC_END__+0xffffffff882813f3>
    540b:	02 a9 84 00 00 b1    	add    ch,BYTE PTR [rcx-0x4effff7c]
    5411:	74 00                	je     5413 <__TMC_END__+0x13fb>
    5413:	00 1c 54             	add    BYTE PTR [rsp+rdx*2],bl
    5416:	00 00                	add    BYTE PTR [rax],al
    5418:	27                   	(bad)
    5419:	54                   	push   rsp
    541a:	00 00                	add    BYTE PTR [rax],al
    541c:	02 c0                	add    al,al
    541e:	74 00                	je     5420 <__TMC_END__+0x1408>
    5420:	00 01                	add    BYTE PTR [rcx],al
    5422:	b6 74                	mov    dh,0x74
    5424:	00 00                	add    BYTE PTR [rax],al
    5426:	00 1d 5f 54 31 00    	add    BYTE PTR [rip+0x31545f],bl        # 31a88b <__TMC_END__+0x316873>
    542c:	b4 02                	mov    ah,0x2
    542e:	00 00                	add    BYTE PTR [rax],al
    5430:	1d 5f 54 32 00       	sbb    eax,0x32545f
    5435:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5438:	00 00                	add    BYTE PTR [rax],al
    543a:	0f 95 52 00          	setne  BYTE PTR [rdx+0x0]
    543e:	00 25 a7 91 00 00    	add    BYTE PTR [rip+0x91a7],ah        # e5eb <__TMC_END__+0xa5d3>
    5444:	0c 1f                	or     al,0x1f
    5446:	05 14 f8 65 00       	add    eax,0x65f814
    544b:	00 01                	add    BYTE PTR [rcx],al
    544d:	25 a7 91 00 00       	and    eax,0x91a7
    5452:	0c 1f                	or     al,0x1f
    5454:	05 14 f8 65 00       	add    eax,0x65f814
    5459:	00 01                	add    BYTE PTR [rcx],al
    545b:	25 7d 12 00 00       	and    eax,0x127d
    5460:	29 2b                	sub    DWORD PTR [rbx],ebp
    5462:	01 1b                	add    DWORD PTR [rbx],ebx
    5464:	f8                   	clc
    5465:	65 00 00             	add    BYTE PTR gs:[rax],al
    5468:	01 25 7d 12 00 00    	add    DWORD PTR [rip+0x127d],esp        # 66eb <__TMC_END__+0x26d3>
    546e:	29 2b                	sub    DWORD PTR [rbx],ebp
    5470:	01 1b                	add    DWORD PTR [rbx],ebx
    5472:	f8                   	clc
    5473:	65 00 00             	add    BYTE PTR gs:[rax],al
    5476:	01 25 a7 91 00 00    	add    DWORD PTR [rip+0x91a7],esp        # e623 <__TMC_END__+0xa60b>
    547c:	0c 1f                	or     al,0x1f
    547e:	05 14 f8 65 00       	add    eax,0x65f814
    5483:	00 01                	add    BYTE PTR [rcx],al
    5485:	25 7d 12 00 00       	and    eax,0x127d
    548a:	29 29                	sub    DWORD PTR [rcx],ebp
    548c:	01 1b                	add    DWORD PTR [rbx],ebx
    548e:	f8                   	clc
    548f:	65 00 00             	add    BYTE PTR gs:[rax],al
    5492:	00 25 7d 12 00 00    	add    BYTE PTR [rip+0x127d],ah        # 6715 <__TMC_END__+0x26fd>
    5498:	29 29                	sub    DWORD PTR [rcx],ebp
    549a:	01 1b                	add    DWORD PTR [rbx],ebx
    549c:	f8                   	clc
    549d:	65 00 00             	add    BYTE PTR gs:[rax],al
    54a0:	00 05 a1 1a 00 00    	add    BYTE PTR [rip+0x1aa1],al        # 6f47 <__TMC_END__+0x2f2f>
    54a6:	2b aa 21 ad 54 00    	sub    ebp,DWORD PTR [rdx+0x54ad21]
    54ac:	00 76 c7             	add    BYTE PTR [rsi-0x39],dh
    54af:	88 00                	mov    BYTE PTR [rax],al
    54b1:	00 14 83             	add    BYTE PTR [rbx+rax*4],dl
    54b4:	33 00                	xor    eax,DWORD PTR [rax]
    54b6:	00 e5                	add    ch,ah
    54b8:	00 00                	add    BYTE PTR [rax],al
    54ba:	00 38                	add    BYTE PTR [rax],bh
    54bc:	70 74                	jo     5532 <__TMC_END__+0x151a>
    54be:	00 00                	add    BYTE PTR [rax],al
    54c0:	dd 0a                	fisttp QWORD PTR [rdx]
    54c2:	00 00                	add    BYTE PTR [rax],al
    54c4:	00 00                	add    BYTE PTR [rax],al
    54c6:	0a 83 7a 00 00 2c    	or     al,BYTE PTR [rbx+0x2c00007a]
    54cc:	35 01 0f 7f 00       	xor    eax,0x7f0f01
    54d1:	00 00                	add    BYTE PTR [rax],al
    54d3:	dd 54 00 00          	fst    QWORD PTR [rax+rax*1+0x0]
    54d7:	01 f1                	add    ecx,esi
    54d9:	00 00                	add    BYTE PTR [rax],al
    54db:	00 00                	add    BYTE PTR [rax],al
    54dd:	0a c1                	or     al,cl
    54df:	7f 00                	jg     54e1 <__TMC_END__+0x14c9>
    54e1:	00 2c a7             	add    BYTE PTR [rdi+riz*4],ch
    54e4:	03 0f                	add    ecx,DWORD PTR [rdi]
    54e6:	7f 00                	jg     54e8 <__TMC_END__+0x14d0>
    54e8:	00 00                	add    BYTE PTR [rax],al
    54ea:	f4                   	hlt
    54eb:	54                   	push   rsp
    54ec:	00 00                	add    BYTE PTR [rax],al
    54ee:	01 f4                	add    esp,esi
    54f0:	54                   	push   rsp
    54f1:	00 00                	add    BYTE PTR [rax],al
    54f3:	00 08                	add    BYTE PTR [rax],cl
    54f5:	15 01 00 00 0a       	adc    eax,0xa000001
    54fa:	0a 80 00 00 2c c4    	or     al,BYTE PTR [rax-0x3bd40000]
    5500:	03 11                	add    edx,DWORD PTR [rcx]
    5502:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5505:	00 1a                	add    BYTE PTR [rdx],bl
    5507:	55                   	push   rbp
    5508:	00 00                	add    BYTE PTR [rax],al
    550a:	01 1a                	add    DWORD PTR [rdx],ebx
    550c:	55                   	push   rbp
    550d:	00 00                	add    BYTE PTR [rax],al
    550f:	01 f1                	add    ecx,esi
    5511:	00 00                	add    BYTE PTR [rax],al
    5513:	00 01                	add    BYTE PTR [rcx],al
    5515:	f4                   	hlt
    5516:	54                   	push   rsp
    5517:	00 00                	add    BYTE PTR [rax],al
    5519:	00 08                	add    BYTE PTR [rax],cl
    551b:	1f                   	(bad)
    551c:	55                   	push   rbp
    551d:	00 00                	add    BYTE PTR [rax],al
    551f:	13 04 05 e9 50 00 00 	adc    eax,DWORD PTR [rax*1+0x50e9]
    5526:	0f 1f 55 00          	nop    DWORD PTR [rbp+0x0]
    552a:	00 0a                	add    BYTE PTR [rdx],cl
    552c:	be 3b 00 00 2c       	mov    esi,0x2c00003b
    5531:	b5 03                	mov    ch,0x3
    5533:	0f 7f 00             	movq   QWORD PTR [rax],mm0
    5536:	00 00                	add    BYTE PTR [rax],al
    5538:	47 55                	rex.RXB push r13
    553a:	00 00                	add    BYTE PTR [rax],al
    553c:	01 1f                	add    DWORD PTR [rdi],ebx
    553e:	55                   	push   rbp
    553f:	00 00                	add    BYTE PTR [rax],al
    5541:	01 f4                	add    esp,esi
    5543:	54                   	push   rsp
    5544:	00 00                	add    BYTE PTR [rax],al
    5546:	00 0a                	add    BYTE PTR [rdx],cl
    5548:	91                   	xchg   ecx,eax
    5549:	3c 00                	cmp    al,0x0
    554b:	00 2c cb             	add    BYTE PTR [rbx+rcx*8],ch
    554e:	03 0c f1             	add    ecx,DWORD PTR [rcx+rsi*8]
    5551:	00 00                	add    BYTE PTR [rax],al
    5553:	00 63 55             	add    BYTE PTR [rbx+0x55],ah
    5556:	00 00                	add    BYTE PTR [rax],al
    5558:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    555b:	00 00                	add    BYTE PTR [rax],al
    555d:	01 f4                	add    esp,esi
    555f:	54                   	push   rsp
    5560:	00 00                	add    BYTE PTR [rax],al
    5562:	00 08                	add    BYTE PTR [rax],cl
    5564:	26 55                	es push rbp
    5566:	00 00                	add    BYTE PTR [rax],al
    5568:	0f 63 55 00          	packsswb mm2,QWORD PTR [rbp+0x0]
    556c:	00 0a                	add    BYTE PTR [rdx],cl
    556e:	c8 02 00 00          	enter  0x2,0x0
    5572:	2c d5                	sub    al,0xd5
    5574:	02 0c f1             	add    cl,BYTE PTR [rcx+rsi*8]
    5577:	00 00                	add    BYTE PTR [rax],al
    5579:	00 89 55 00 00 01    	add    BYTE PTR [rcx+0x1000055],cl
    557f:	f4                   	hlt
    5580:	54                   	push   rsp
    5581:	00 00                	add    BYTE PTR [rax],al
    5583:	01 f1                	add    ecx,esi
    5585:	00 00                	add    BYTE PTR [rax],al
    5587:	00 00                	add    BYTE PTR [rax],al
    5589:	0a 35 3b 00 00 2c    	or     dh,BYTE PTR [rip+0x2c00003b]        # 2c0055ca <__TMC_END__+0x2c0015b2>
    558f:	dc 02                	fadd   QWORD PTR [rdx]
    5591:	0c f1                	or     al,0xf1
    5593:	00 00                	add    BYTE PTR [rax],al
    5595:	00 a6 55 00 00 01    	add    BYTE PTR [rsi+0x1000055],ah
    559b:	f4                   	hlt
    559c:	54                   	push   rsp
    559d:	00 00                	add    BYTE PTR [rax],al
    559f:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    55a2:	00 00                	add    BYTE PTR [rax],al
    55a4:	26 00 09             	es add BYTE PTR [rcx],cl
    55a7:	d7                   	xlat   BYTE PTR ds:[rbx]
    55a8:	12 00                	adc    al,BYTE PTR [rax]
    55aa:	00 2c 1b             	add    BYTE PTR [rbx+rbx*1],ch
    55ad:	03 0c ce             	add    ecx,DWORD PTR [rsi+rcx*8]
    55b0:	12 00                	adc    al,BYTE PTR [rax]
    55b2:	00 f1                	add    cl,dh
    55b4:	00 00                	add    BYTE PTR [rax],al
    55b6:	00 c7                	add    bh,al
    55b8:	55                   	push   rbp
    55b9:	00 00                	add    BYTE PTR [rax],al
    55bb:	01 f4                	add    esp,esi
    55bd:	54                   	push   rsp
    55be:	00 00                	add    BYTE PTR [rax],al
    55c0:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    55c3:	00 00                	add    BYTE PTR [rax],al
    55c5:	26 00 0a             	es add BYTE PTR [rdx],cl
    55c8:	c2 7f 00             	ret    0x7f
    55cb:	00 2c a8             	add    BYTE PTR [rax+rbp*4],ch
    55ce:	03 0f                	add    ecx,DWORD PTR [rdi]
    55d0:	7f 00                	jg     55d2 <__TMC_END__+0x15ba>
    55d2:	00 00                	add    BYTE PTR [rax],al
    55d4:	de 55 00             	ficom  WORD PTR [rbp+0x0]
    55d7:	00 01                	add    BYTE PTR [rcx],al
    55d9:	f4                   	hlt
    55da:	54                   	push   rsp
    55db:	00 00                	add    BYTE PTR [rax],al
    55dd:	00 3a                	add    BYTE PTR [rdx],bh
    55df:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    55e0:	6a 00                	push   0x0
    55e2:	00 2c ae             	add    BYTE PTR [rsi+rbp*4],ch
    55e5:	03 0f                	add    ecx,DWORD PTR [rdi]
    55e7:	7f 00                	jg     55e9 <__TMC_END__+0x15d1>
    55e9:	00 00                	add    BYTE PTR [rax],al
    55eb:	0a 06                	or     al,BYTE PTR [rsi]
    55ed:	2a 00                	sub    al,BYTE PTR [rax]
    55ef:	00 2c 4c             	add    BYTE PTR [rsp+rcx*2],ch
    55f2:	01 0f                	add    DWORD PTR [rdi],ecx
    55f4:	2e 00 00             	cs add BYTE PTR [rax],al
    55f7:	00 0c 56             	add    BYTE PTR [rsi+rdx*2],cl
    55fa:	00 00                	add    BYTE PTR [rax],al
    55fc:	01 c0                	add    eax,eax
    55fe:	02 00                	add    al,BYTE PTR [rax]
    5600:	00 01                	add    BYTE PTR [rcx],al
    5602:	2e 00 00             	cs add BYTE PTR [rax],al
    5605:	00 01                	add    BYTE PTR [rcx],al
    5607:	0c 56                	or     al,0x56
    5609:	00 00                	add    BYTE PTR [rax],al
    560b:	00 08                	add    BYTE PTR [rax],cl
    560d:	04 01                	add    al,0x1
    560f:	00 00                	add    BYTE PTR [rax],al
    5611:	0a f9                	or     bh,cl
    5613:	7a 00                	jp     5615 <__TMC_END__+0x15fd>
    5615:	00 2c 41             	add    BYTE PTR [rcx+rax*2],ch
    5618:	01 0f                	add    DWORD PTR [rdi],ecx
    561a:	2e 00 00             	cs add BYTE PTR [rax],al
    561d:	00 37                	add    BYTE PTR [rdi],dh
    561f:	56                   	push   rsi
    5620:	00 00                	add    BYTE PTR [rax],al
    5622:	01 1a                	add    DWORD PTR [rdx],ebx
    5624:	55                   	push   rbp
    5625:	00 00                	add    BYTE PTR [rax],al
    5627:	01 c0                	add    eax,eax
    5629:	02 00                	add    al,BYTE PTR [rax]
    562b:	00 01                	add    BYTE PTR [rcx],al
    562d:	2e 00 00             	cs add BYTE PTR [rax],al
    5630:	00 01                	add    BYTE PTR [rcx],al
    5632:	0c 56                	or     al,0x56
    5634:	00 00                	add    BYTE PTR [rax],al
    5636:	00 0a                	add    BYTE PTR [rdx],cl
    5638:	0f 4b 00             	cmovnp eax,DWORD PTR [rax]
    563b:	00 2c 3d 01 0c f1 00 	add    BYTE PTR [rdi*1+0xf10c01],ch
    5642:	00 00                	add    BYTE PTR [rax],al
    5644:	4e 56                	rex.WRX push rsi
    5646:	00 00                	add    BYTE PTR [rax],al
    5648:	01 4e 56             	add    DWORD PTR [rsi+0x56],ecx
    564b:	00 00                	add    BYTE PTR [rax],al
    564d:	00 08                	add    BYTE PTR [rax],cl
    564f:	10 01                	adc    BYTE PTR [rcx],al
    5651:	00 00                	add    BYTE PTR [rax],al
    5653:	0a 0a                	or     cl,BYTE PTR [rdx]
    5655:	4a 00 00             	rex.WX add BYTE PTR [rax],al
    5658:	2c 6a                	sub    al,0x6a
    565a:	01 0f                	add    DWORD PTR [rdi],ecx
    565c:	2e 00 00             	cs add BYTE PTR [rax],al
    565f:	00 79 56             	add    BYTE PTR [rcx+0x56],bh
    5662:	00 00                	add    BYTE PTR [rax],al
    5664:	01 1a                	add    DWORD PTR [rdx],ebx
    5666:	55                   	push   rbp
    5667:	00 00                	add    BYTE PTR [rax],al
    5669:	01 79 56             	add    DWORD PTR [rcx+0x56],edi
    566c:	00 00                	add    BYTE PTR [rax],al
    566e:	01 2e                	add    DWORD PTR [rsi],ebp
    5670:	00 00                	add    BYTE PTR [rax],al
    5672:	00 01                	add    BYTE PTR [rcx],al
    5674:	0c 56                	or     al,0x56
    5676:	00 00                	add    BYTE PTR [rax],al
    5678:	00 08                	add    BYTE PTR [rax],cl
    567a:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    567d:	00 0a                	add    BYTE PTR [rdx],cl
    567f:	bf 3b 00 00 2c       	mov    edi,0x2c00003b
    5684:	b6 03                	mov    dh,0x3
    5686:	0f 7f 00             	movq   QWORD PTR [rax],mm0
    5689:	00 00                	add    BYTE PTR [rax],al
    568b:	9a                   	(bad)
    568c:	56                   	push   rsi
    568d:	00 00                	add    BYTE PTR [rax],al
    568f:	01 1f                	add    DWORD PTR [rdi],ebx
    5691:	55                   	push   rbp
    5692:	00 00                	add    BYTE PTR [rax],al
    5694:	01 f4                	add    esp,esi
    5696:	54                   	push   rsp
    5697:	00 00                	add    BYTE PTR [rax],al
    5699:	00 0a                	add    BYTE PTR [rdx],cl
    569b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    569c:	1d 00 00 2c bc       	sbb    eax,0xbc2c0000
    56a1:	03 0f                	add    ecx,DWORD PTR [rdi]
    56a3:	7f 00                	jg     56a5 <__TMC_END__+0x168d>
    56a5:	00 00                	add    BYTE PTR [rax],al
    56a7:	b1 56                	mov    cl,0x56
    56a9:	00 00                	add    BYTE PTR [rax],al
    56ab:	01 1f                	add    DWORD PTR [rdi],ebx
    56ad:	55                   	push   rbp
    56ae:	00 00                	add    BYTE PTR [rax],al
    56b0:	00 0a                	add    BYTE PTR [rdx],cl
    56b2:	f2 50                	repnz push rax
    56b4:	00 00                	add    BYTE PTR [rax],al
    56b6:	2c e6                	sub    al,0xe6
    56b8:	02 0c f1             	add    cl,BYTE PTR [rcx+rsi*8]
    56bb:	00 00                	add    BYTE PTR [rax],al
    56bd:	00 d3                	add    bl,dl
    56bf:	56                   	push   rsi
    56c0:	00 00                	add    BYTE PTR [rax],al
    56c2:	01 1a                	add    DWORD PTR [rdx],ebx
    56c4:	55                   	push   rbp
    56c5:	00 00                	add    BYTE PTR [rax],al
    56c7:	01 2e                	add    DWORD PTR [rsi],ebp
    56c9:	00 00                	add    BYTE PTR [rax],al
    56cb:	00 01                	add    BYTE PTR [rcx],al
    56cd:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    56d0:	00 26                	add    BYTE PTR [rsi],ah
    56d2:	00 09                	add    BYTE PTR [rcx],cl
    56d4:	61                   	(bad)
    56d5:	33 00                	xor    eax,DWORD PTR [rax]
    56d7:	00 2c 22             	add    BYTE PTR [rdx+riz*1],ch
    56da:	03 0c 58             	add    ecx,DWORD PTR [rax+rbx*2]
    56dd:	33 00                	xor    eax,DWORD PTR [rax]
    56df:	00 f1                	add    cl,dh
    56e1:	00 00                	add    BYTE PTR [rax],al
    56e3:	00 f4                	add    ah,dh
    56e5:	56                   	push   rsi
    56e6:	00 00                	add    BYTE PTR [rax],al
    56e8:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    56eb:	00 00                	add    BYTE PTR [rax],al
    56ed:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    56f0:	00 00                	add    BYTE PTR [rax],al
    56f2:	26 00 0a             	es add BYTE PTR [rdx],cl
    56f5:	0b 89 00 00 2c d3    	or     ecx,DWORD PTR [rcx-0x2cd40000]
    56fb:	03 0f                	add    ecx,DWORD PTR [rdi]
    56fd:	7f 00                	jg     56ff <__TMC_END__+0x16e7>
    56ff:	00 00                	add    BYTE PTR [rax],al
    5701:	10 57 00             	adc    BYTE PTR [rdi+0x0],dl
    5704:	00 01                	add    BYTE PTR [rcx],al
    5706:	7f 00                	jg     5708 <__TMC_END__+0x16f0>
    5708:	00 00                	add    BYTE PTR [rax],al
    570a:	01 f4                	add    esp,esi
    570c:	54                   	push   rsp
    570d:	00 00                	add    BYTE PTR [rax],al
    570f:	00 0a                	add    BYTE PTR [rdx],cl
    5711:	34 3b                	xor    al,0x3b
    5713:	00 00                	add    BYTE PTR [rax],al
    5715:	2c ee                	sub    al,0xee
    5717:	02 0c f1             	add    cl,BYTE PTR [rcx+rsi*8]
    571a:	00 00                	add    BYTE PTR [rax],al
    571c:	00 31                	add    BYTE PTR [rcx],dh
    571e:	57                   	push   rdi
    571f:	00 00                	add    BYTE PTR [rax],al
    5721:	01 f4                	add    esp,esi
    5723:	54                   	push   rsp
    5724:	00 00                	add    BYTE PTR [rax],al
    5726:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5729:	00 00                	add    BYTE PTR [rax],al
    572b:	01 31                	add    DWORD PTR [rcx],esi
    572d:	57                   	push   rdi
    572e:	00 00                	add    BYTE PTR [rax],al
    5730:	00 08                	add    BYTE PTR [rax],cl
    5732:	41 00 00             	add    BYTE PTR [r8],al
    5735:	00 09                	add    BYTE PTR [rcx],cl
    5737:	61                   	(bad)
    5738:	07                   	(bad)
    5739:	00 00                	add    BYTE PTR [rax],al
    573b:	2c 6b                	sub    al,0x6b
    573d:	03 0c 58             	add    ecx,DWORD PTR [rax+rbx*2]
    5740:	07                   	(bad)
    5741:	00 00                	add    BYTE PTR [rax],al
    5743:	f1                   	int1
    5744:	00 00                	add    BYTE PTR [rax],al
    5746:	00 5b 57             	add    BYTE PTR [rbx+0x57],bl
    5749:	00 00                	add    BYTE PTR [rax],al
    574b:	01 f4                	add    esp,esi
    574d:	54                   	push   rsp
    574e:	00 00                	add    BYTE PTR [rax],al
    5750:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5753:	00 00                	add    BYTE PTR [rax],al
    5755:	01 31                	add    DWORD PTR [rcx],esi
    5757:	57                   	push   rdi
    5758:	00 00                	add    BYTE PTR [rax],al
    575a:	00 0a                	add    BYTE PTR [rdx],cl
    575c:	f1                   	int1
    575d:	50                   	push   rax
    575e:	00 00                	add    BYTE PTR [rax],al
    5760:	2c fb                	sub    al,0xfb
    5762:	02 0c f1             	add    cl,BYTE PTR [rcx+rsi*8]
    5765:	00 00                	add    BYTE PTR [rax],al
    5767:	00 81 57 00 00 01    	add    BYTE PTR [rcx+0x1000057],al
    576d:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5770:	00 01                	add    BYTE PTR [rcx],al
    5772:	2e 00 00             	cs add BYTE PTR [rax],al
    5775:	00 01                	add    BYTE PTR [rcx],al
    5777:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    577a:	00 01                	add    BYTE PTR [rcx],al
    577c:	31 57 00             	xor    DWORD PTR [rdi+0x0],edx
    577f:	00 00                	add    BYTE PTR [rax],al
    5781:	09 a9 25 00 00 2c    	or     DWORD PTR [rcx+0x2c000025],ebp
    5787:	72 03                	jb     578c <__TMC_END__+0x1774>
    5789:	0c a0                	or     al,0xa0
    578b:	25 00 00 f1 00       	and    eax,0xf10000
    5790:	00 00                	add    BYTE PTR [rax],al
    5792:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
    5793:	57                   	push   rdi
    5794:	00 00                	add    BYTE PTR [rax],al
    5796:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5799:	00 00                	add    BYTE PTR [rax],al
    579b:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    579e:	00 00                	add    BYTE PTR [rax],al
    57a0:	01 31                	add    DWORD PTR [rcx],esi
    57a2:	57                   	push   rdi
    57a3:	00 00                	add    BYTE PTR [rax],al
    57a5:	00 0a                	add    BYTE PTR [rdx],cl
    57a7:	d5 59 00 00          	{rex2 0x59} add BYTE PTR [r24],r16b
    57ab:	2c f6                	sub    al,0xf6
    57ad:	02 0c f1             	add    cl,BYTE PTR [rcx+rsi*8]
    57b0:	00 00                	add    BYTE PTR [rax],al
    57b2:	00 c2                	add    dl,al
    57b4:	57                   	push   rdi
    57b5:	00 00                	add    BYTE PTR [rax],al
    57b7:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    57ba:	00 00                	add    BYTE PTR [rax],al
    57bc:	01 31                	add    DWORD PTR [rcx],esi
    57be:	57                   	push   rdi
    57bf:	00 00                	add    BYTE PTR [rax],al
    57c1:	00 09                	add    BYTE PTR [rcx],cl
    57c3:	91                   	xchg   ecx,eax
    57c4:	91                   	xchg   ecx,eax
    57c5:	00 00                	add    BYTE PTR [rax],al
    57c7:	2c 6f                	sub    al,0x6f
    57c9:	03 0c 88             	add    ecx,DWORD PTR [rax+rcx*4]
    57cc:	91                   	xchg   ecx,eax
    57cd:	00 00                	add    BYTE PTR [rax],al
    57cf:	f1                   	int1
    57d0:	00 00                	add    BYTE PTR [rax],al
    57d2:	00 e2                	add    dl,ah
    57d4:	57                   	push   rdi
    57d5:	00 00                	add    BYTE PTR [rax],al
    57d7:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    57da:	00 00                	add    BYTE PTR [rax],al
    57dc:	01 31                	add    DWORD PTR [rcx],esi
    57de:	57                   	push   rdi
    57df:	00 00                	add    BYTE PTR [rax],al
    57e1:	00 0a                	add    BYTE PTR [rdx],cl
    57e3:	ee                   	out    dx,al
    57e4:	73 00                	jae    57e6 <__TMC_END__+0x17ce>
    57e6:	00 2c 46             	add    BYTE PTR [rsi+rax*2],ch
    57e9:	01 0f                	add    DWORD PTR [rdi],ecx
    57eb:	2e 00 00             	cs add BYTE PTR [rax],al
    57ee:	00 03                	add    BYTE PTR [rbx],al
    57f0:	58                   	pop    rax
    57f1:	00 00                	add    BYTE PTR [rax],al
    57f3:	01 03                	add    DWORD PTR [rbx],eax
    57f5:	58                   	pop    rax
    57f6:	00 00                	add    BYTE PTR [rax],al
    57f8:	01 1f                	add    DWORD PTR [rdi],ebx
    57fa:	55                   	push   rbp
    57fb:	00 00                	add    BYTE PTR [rax],al
    57fd:	01 0c 56             	add    DWORD PTR [rsi+rdx*2],ecx
    5800:	00 00                	add    BYTE PTR [rax],al
    5802:	00 08                	add    BYTE PTR [rax],cl
    5804:	e5 00                	in     eax,0x0
    5806:	00 00                	add    BYTE PTR [rax],al
    5808:	0f 03 58 00          	lsl    ebx,WORD PTR [rax+0x0]
    580c:	00 10                	add    BYTE PTR [rax],dl
    580e:	b3 51                	mov    bl,0x51
    5810:	00 00                	add    BYTE PTR [rax],al
    5812:	2c 79                	sub    al,0x79
    5814:	11 1a                	adc    DWORD PTR [rdx],ebx
    5816:	55                   	push   rbp
    5817:	00 00                	add    BYTE PTR [rax],al
    5819:	28 58 00             	sub    BYTE PTR [rax+0x0],bl
    581c:	00 01                	add    BYTE PTR [rcx],al
    581e:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5821:	00 01                	add    BYTE PTR [rcx],al
    5823:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5826:	00 00                	add    BYTE PTR [rax],al
    5828:	10 33                	adc    BYTE PTR [rbx],dh
    582a:	49 00 00             	rex.WB add BYTE PTR [r8],al
    582d:	2c 82                	sub    al,0x82
    582f:	0c f1                	or     al,0xf1
    5831:	00 00                	add    BYTE PTR [rax],al
    5833:	00 43 58             	add    BYTE PTR [rbx+0x58],al
    5836:	00 00                	add    BYTE PTR [rax],al
    5838:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    583b:	00 00                	add    BYTE PTR [rax],al
    583d:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5840:	00 00                	add    BYTE PTR [rax],al
    5842:	00 10                	add    BYTE PTR [rax],dl
    5844:	88 83 00 00 2c 9b    	mov    BYTE PTR [rbx-0x64d40000],al
    584a:	0c f1                	or     al,0xf1
    584c:	00 00                	add    BYTE PTR [rax],al
    584e:	00 5e 58             	add    BYTE PTR [rsi+0x58],bl
    5851:	00 00                	add    BYTE PTR [rax],al
    5853:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5856:	00 00                	add    BYTE PTR [rax],al
    5858:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    585b:	00 00                	add    BYTE PTR [rax],al
    585d:	00 10                	add    BYTE PTR [rax],dl
    585f:	d4                   	(bad)
    5860:	50                   	push   rax
    5861:	00 00                	add    BYTE PTR [rax],al
    5863:	2c 62                	sub    al,0x62
    5865:	11 1a                	adc    DWORD PTR [rdx],ebx
    5867:	55                   	push   rbp
    5868:	00 00                	add    BYTE PTR [rax],al
    586a:	79 58                	jns    58c4 <__TMC_END__+0x18ac>
    586c:	00 00                	add    BYTE PTR [rax],al
    586e:	01 1a                	add    DWORD PTR [rdx],ebx
    5870:	55                   	push   rbp
    5871:	00 00                	add    BYTE PTR [rax],al
    5873:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5876:	00 00                	add    BYTE PTR [rax],al
    5878:	00 10                	add    BYTE PTR [rax],dl
    587a:	c6                   	(bad)
    587b:	54                   	push   rsp
    587c:	00 00                	add    BYTE PTR [rax],al
    587e:	2c d4                	sub    al,0xd4
    5880:	0f 2e 00             	ucomiss xmm0,DWORD PTR [rax]
    5883:	00 00                	add    BYTE PTR [rax],al
    5885:	94                   	xchg   esp,eax
    5886:	58                   	pop    rax
    5887:	00 00                	add    BYTE PTR [rax],al
    5889:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    588c:	00 00                	add    BYTE PTR [rax],al
    588e:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5891:	00 00                	add    BYTE PTR [rax],al
    5893:	00 0a                	add    BYTE PTR [rdx],cl
    5895:	fc                   	cld
    5896:	28 00                	sub    BYTE PTR [rax],al
    5898:	00 2c 13             	add    BYTE PTR [rbx+rdx*1],ch
    589b:	04 0f                	add    al,0xf
    589d:	2e 00 00             	cs add BYTE PTR [rax],al
    58a0:	00 ba 58 00 00 01    	add    BYTE PTR [rdx+0x1000058],bh
    58a6:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    58a9:	00 01                	add    BYTE PTR [rcx],al
    58ab:	2e 00 00             	cs add BYTE PTR [rax],al
    58ae:	00 01                	add    BYTE PTR [rcx],al
    58b0:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    58b3:	00 01                	add    BYTE PTR [rcx],al
    58b5:	ba 58 00 00 00       	mov    edx,0x58
    58ba:	08 5b 59             	or     BYTE PTR [rbx+0x59],bl
    58bd:	00 00                	add    BYTE PTR [rax],al
    58bf:	77 74                	ja     5935 <__TMC_END__+0x191d>
    58c1:	6d                   	ins    DWORD PTR es:[rdi],dx
    58c2:	00 38                	add    BYTE PTR [rax],bh
    58c4:	2d 07 08 5b 59       	sub    eax,0x595b0807
    58c9:	00 00                	add    BYTE PTR [rax],al
    58cb:	07                   	(bad)
    58cc:	ba 02 00 00 2d       	mov    edx,0x2d000002
    58d1:	09 07                	or     DWORD PTR [rdi],eax
    58d3:	f1                   	int1
    58d4:	00 00                	add    BYTE PTR [rax],al
    58d6:	00 00                	add    BYTE PTR [rax],al
    58d8:	07                   	(bad)
    58d9:	3d 4a 00 00 2d       	cmp    eax,0x2d00004a
    58de:	0a 07                	or     al,BYTE PTR [rdi]
    58e0:	f1                   	int1
    58e1:	00 00                	add    BYTE PTR [rax],al
    58e3:	00 04 07             	add    BYTE PTR [rdi+rax*1],al
    58e6:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    58e7:	68 00 00 2d 0b       	push   0xb2d0000
    58ec:	07                   	(bad)
    58ed:	f1                   	int1
    58ee:	00 00                	add    BYTE PTR [rax],al
    58f0:	00 08                	add    BYTE PTR [rax],cl
    58f2:	07                   	(bad)
    58f3:	dc 6b 00             	fsubr  QWORD PTR [rbx+0x0]
    58f6:	00 2d 0c 07 f1 00    	add    BYTE PTR [rip+0xf1070c],ch        # f16008 <__TMC_END__+0xf11ff0>
    58fc:	00 00                	add    BYTE PTR [rax],al
    58fe:	0c 07                	or     al,0x7
    5900:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5901:	58                   	pop    rax
    5902:	00 00                	add    BYTE PTR [rax],al
    5904:	2d 0d 07 f1 00       	sub    eax,0xf1070d
    5909:	00 00                	add    BYTE PTR [rax],al
    590b:	10 07                	adc    BYTE PTR [rdi],al
    590d:	ea                   	(bad)
    590e:	5a                   	pop    rdx
    590f:	00 00                	add    BYTE PTR [rax],al
    5911:	2d 0e 07 f1 00       	sub    eax,0xf1070e
    5916:	00 00                	add    BYTE PTR [rax],al
    5918:	14 07                	adc    al,0x7
    591a:	c2 50 00             	ret    0x50
    591d:	00 2d 0f 07 f1 00    	add    BYTE PTR [rip+0xf1070f],ch        # f16032 <__TMC_END__+0xf1201a>
    5923:	00 00                	add    BYTE PTR [rax],al
    5925:	18 07                	sbb    BYTE PTR [rdi],al
    5927:	07                   	(bad)
    5928:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    592b:	2d 10 07 f1 00       	sub    eax,0xf10710
    5930:	00 00                	add    BYTE PTR [rax],al
    5932:	1c 07                	sbb    al,0x7
    5934:	6a 0c                	push   0xc
    5936:	00 00                	add    BYTE PTR [rax],al
    5938:	2d 11 07 f1 00       	sub    eax,0xf10711
    593d:	00 00                	add    BYTE PTR [rax],al
    593f:	20 07                	and    BYTE PTR [rdi],al
    5941:	b8 7d 00 00 2d       	mov    eax,0x2d00007d
    5946:	14 0c                	adc    al,0xc
    5948:	ac                   	lods   al,BYTE PTR ds:[rsi]
    5949:	5a                   	pop    rdx
    594a:	00 00                	add    BYTE PTR [rax],al
    594c:	28 07                	sub    BYTE PTR [rdi],al
    594e:	d7                   	xlat   BYTE PTR ds:[rbx]
    594f:	28 00                	sub    BYTE PTR [rax],al
    5951:	00 2d 15 0f c0 02    	add    BYTE PTR [rip+0x2c00f15],ch        # 2c0686c <__TMC_END__+0x2c02854>
    5957:	00 00                	add    BYTE PTR [rax],al
    5959:	30 00                	xor    BYTE PTR [rax],al
    595b:	0f bf 58 00          	movsx  ebx,WORD PTR [rax+0x0]
    595f:	00 10                	add    BYTE PTR [rax],dl
    5961:	38 24 00             	cmp    BYTE PTR [rax+rax*1],ah
    5964:	00 2c f7             	add    BYTE PTR [rdi+rsi*8],ch
    5967:	0f 2e 00             	ucomiss xmm0,DWORD PTR [rax]
    596a:	00 00                	add    BYTE PTR [rax],al
    596c:	76 59                	jbe    59c7 <__TMC_END__+0x19af>
    596e:	00 00                	add    BYTE PTR [rax],al
    5970:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5973:	00 00                	add    BYTE PTR [rax],al
    5975:	00 10                	add    BYTE PTR [rax],dl
    5977:	aa                   	stos   BYTE PTR es:[rdi],al
    5978:	7d 00                	jge    597a <__TMC_END__+0x1962>
    597a:	00 2c 7d 11 1a 55 00 	add    BYTE PTR [rdi*2+0x551a11],ch
    5981:	00 96 59 00 00 01    	add    BYTE PTR [rsi+0x1000059],dl
    5987:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    598a:	00 01                	add    BYTE PTR [rcx],al
    598c:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    598f:	00 01                	add    BYTE PTR [rcx],al
    5991:	2e 00 00             	cs add BYTE PTR [rax],al
    5994:	00 00                	add    BYTE PTR [rax],al
    5996:	10 dd                	adc    ch,bl
    5998:	07                   	(bad)
    5999:	00 00                	add    BYTE PTR [rax],al
    599b:	2c 85                	sub    al,0x85
    599d:	0c f1                	or     al,0xf1
    599f:	00 00                	add    BYTE PTR [rax],al
    59a1:	00 b6 59 00 00 01    	add    BYTE PTR [rsi+0x1000059],dh
    59a7:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    59aa:	00 01                	add    BYTE PTR [rcx],al
    59ac:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    59af:	00 01                	add    BYTE PTR [rcx],al
    59b1:	2e 00 00             	cs add BYTE PTR [rax],al
    59b4:	00 00                	add    BYTE PTR [rax],al
    59b6:	10 11                	adc    BYTE PTR [rcx],dl
    59b8:	0f 00 00             	sldt   WORD PTR [rax]
    59bb:	2c 67                	sub    al,0x67
    59bd:	11 1a                	adc    DWORD PTR [rdx],ebx
    59bf:	55                   	push   rbp
    59c0:	00 00                	add    BYTE PTR [rax],al
    59c2:	d6                   	(bad)
    59c3:	59                   	pop    rcx
    59c4:	00 00                	add    BYTE PTR [rax],al
    59c6:	01 1a                	add    DWORD PTR [rdx],ebx
    59c8:	55                   	push   rbp
    59c9:	00 00                	add    BYTE PTR [rax],al
    59cb:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    59ce:	00 00                	add    BYTE PTR [rax],al
    59d0:	01 2e                	add    DWORD PTR [rsi],ebp
    59d2:	00 00                	add    BYTE PTR [rax],al
    59d4:	00 00                	add    BYTE PTR [rax],al
    59d6:	0a 57 54             	or     dl,BYTE PTR [rdi+0x54]
    59d9:	00 00                	add    BYTE PTR [rax],al
    59db:	2c 70                	sub    al,0x70
    59dd:	01 0f                	add    DWORD PTR [rdi],ecx
    59df:	2e 00 00             	cs add BYTE PTR [rax],al
    59e2:	00 fc                	add    ah,bh
    59e4:	59                   	pop    rcx
    59e5:	00 00                	add    BYTE PTR [rax],al
    59e7:	01 03                	add    DWORD PTR [rbx],eax
    59e9:	58                   	pop    rax
    59ea:	00 00                	add    BYTE PTR [rax],al
    59ec:	01 fc                	add    esp,edi
    59ee:	59                   	pop    rcx
    59ef:	00 00                	add    BYTE PTR [rax],al
    59f1:	01 2e                	add    DWORD PTR [rsi],ebp
    59f3:	00 00                	add    BYTE PTR [rax],al
    59f5:	00 01                	add    BYTE PTR [rcx],al
    59f7:	0c 56                	or     al,0x56
    59f9:	00 00                	add    BYTE PTR [rax],al
    59fb:	00 08                	add    BYTE PTR [rax],cl
    59fd:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5a00:	00 10                	add    BYTE PTR [rax],dl
    5a02:	19 0f                	sbb    DWORD PTR [rdi],ecx
    5a04:	00 00                	add    BYTE PTR [rax],al
    5a06:	2c d8                	sub    al,0xd8
    5a08:	0f 2e 00             	ucomiss xmm0,DWORD PTR [rax]
    5a0b:	00 00                	add    BYTE PTR [rax],al
    5a0d:	1c 5a                	sbb    al,0x5a
    5a0f:	00 00                	add    BYTE PTR [rax],al
    5a11:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5a14:	00 00                	add    BYTE PTR [rax],al
    5a16:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5a19:	00 00                	add    BYTE PTR [rax],al
    5a1b:	00 0a                	add    BYTE PTR [rdx],cl
    5a1d:	f6 19                	neg    BYTE PTR [rcx]
    5a1f:	00 00                	add    BYTE PTR [rax],al
    5a21:	2c 92                	sub    al,0x92
    5a23:	01 0f                	add    DWORD PTR [rdi],ecx
    5a25:	38 5a 00             	cmp    BYTE PTR [rdx+0x0],bl
    5a28:	00 38                	add    BYTE PTR [rax],bh
    5a2a:	5a                   	pop    rdx
    5a2b:	00 00                	add    BYTE PTR [rax],al
    5a2d:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5a30:	00 00                	add    BYTE PTR [rax],al
    5a32:	01 3f                	add    DWORD PTR [rdi],edi
    5a34:	5a                   	pop    rdx
    5a35:	00 00                	add    BYTE PTR [rax],al
    5a37:	00 13                	add    BYTE PTR [rbx],dl
    5a39:	08 04 b5 60 00 00 08 	or     BYTE PTR [rsi*4+0x8000060],al
    5a40:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5a43:	00 0a                	add    BYTE PTR [rdx],cl
    5a45:	09 1a                	or     DWORD PTR [rdx],ebx
    5a47:	00 00                	add    BYTE PTR [rax],al
    5a49:	2c 97                	sub    al,0x97
    5a4b:	01 0e                	add    DWORD PTR [rsi],ecx
    5a4d:	60                   	(bad)
    5a4e:	5a                   	pop    rdx
    5a4f:	00 00                	add    BYTE PTR [rax],al
    5a51:	60                   	(bad)
    5a52:	5a                   	pop    rdx
    5a53:	00 00                	add    BYTE PTR [rax],al
    5a55:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5a58:	00 00                	add    BYTE PTR [rax],al
    5a5a:	01 3f                	add    DWORD PTR [rdi],edi
    5a5c:	5a                   	pop    rdx
    5a5d:	00 00                	add    BYTE PTR [rax],al
    5a5f:	00 13                	add    BYTE PTR [rbx],dl
    5a61:	04 04                	add    al,0x4
    5a63:	54                   	push   rsp
    5a64:	24 00                	and    al,0x0
    5a66:	00 10                	add    BYTE PTR [rax],dl
    5a68:	10 1a                	adc    BYTE PTR [rdx],bl
    5a6a:	00 00                	add    BYTE PTR [rax],al
    5a6c:	2c f2                	sub    al,0xf2
    5a6e:	11 1a                	adc    DWORD PTR [rdx],ebx
    5a70:	55                   	push   rbp
    5a71:	00 00                	add    BYTE PTR [rax],al
    5a73:	87 5a 00             	xchg   DWORD PTR [rdx+0x0],ebx
    5a76:	00 01                	add    BYTE PTR [rcx],al
    5a78:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5a7b:	00 01                	add    BYTE PTR [rcx],al
    5a7d:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5a80:	00 01                	add    BYTE PTR [rcx],al
    5a82:	3f                   	(bad)
    5a83:	5a                   	pop    rdx
    5a84:	00 00                	add    BYTE PTR [rax],al
    5a86:	00 09                	add    BYTE PTR [rcx],cl
    5a88:	d2 64 00 00          	shl    BYTE PTR [rax+rax*1+0x0],cl
    5a8c:	2c f4                	sub    al,0xf4
    5a8e:	01 11                	add    DWORD PTR [rcx],edx
    5a90:	c9                   	leave
    5a91:	64 00 00             	add    BYTE PTR fs:[rax],al
    5a94:	ac                   	lods   al,BYTE PTR ds:[rsi]
    5a95:	5a                   	pop    rdx
    5a96:	00 00                	add    BYTE PTR [rax],al
    5a98:	ac                   	lods   al,BYTE PTR ds:[rsi]
    5a99:	5a                   	pop    rdx
    5a9a:	00 00                	add    BYTE PTR [rax],al
    5a9c:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5a9f:	00 00                	add    BYTE PTR [rax],al
    5aa1:	01 3f                	add    DWORD PTR [rdi],edi
    5aa3:	5a                   	pop    rdx
    5aa4:	00 00                	add    BYTE PTR [rax],al
    5aa6:	01 f1                	add    ecx,esi
    5aa8:	00 00                	add    BYTE PTR [rax],al
    5aaa:	00 00                	add    BYTE PTR [rax],al
    5aac:	13 08                	adc    ecx,DWORD PTR [rax]
    5aae:	05 9d 24 00 00       	add    eax,0x249d
    5ab3:	09 52 4c             	or     DWORD PTR [rdx+0x4c],edx
    5ab6:	00 00                	add    BYTE PTR [rax],al
    5ab8:	2c f7                	sub    al,0xf7
    5aba:	01 1a                	add    DWORD PTR [rdx],ebx
    5abc:	49                   	rex.WB
    5abd:	4c 00 00             	rex.WR add BYTE PTR [rax],r8b
    5ac0:	3a 00                	cmp    al,BYTE PTR [rax]
    5ac2:	00 00                	add    BYTE PTR [rax],al
    5ac4:	d8 5a 00             	fcomp  DWORD PTR [rdx+0x0]
    5ac7:	00 01                	add    BYTE PTR [rcx],al
    5ac9:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5acc:	00 01                	add    BYTE PTR [rcx],al
    5ace:	3f                   	(bad)
    5acf:	5a                   	pop    rdx
    5ad0:	00 00                	add    BYTE PTR [rax],al
    5ad2:	01 f1                	add    ecx,esi
    5ad4:	00 00                	add    BYTE PTR [rax],al
    5ad6:	00 00                	add    BYTE PTR [rax],al
    5ad8:	10 a3 12 00 00 2c    	adc    BYTE PTR [rbx+0x2c000012],ah
    5ade:	9f                   	lahf
    5adf:	0f 2e 00             	ucomiss xmm0,DWORD PTR [rax]
    5ae2:	00 00                	add    BYTE PTR [rax],al
    5ae4:	f8                   	clc
    5ae5:	5a                   	pop    rdx
    5ae6:	00 00                	add    BYTE PTR [rax],al
    5ae8:	01 1a                	add    DWORD PTR [rdx],ebx
    5aea:	55                   	push   rbp
    5aeb:	00 00                	add    BYTE PTR [rax],al
    5aed:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5af0:	00 00                	add    BYTE PTR [rax],al
    5af2:	01 2e                	add    DWORD PTR [rsi],ebp
    5af4:	00 00                	add    BYTE PTR [rax],al
    5af6:	00 00                	add    BYTE PTR [rax],al
    5af8:	0a 01                	or     al,BYTE PTR [rcx]
    5afa:	38 00                	cmp    BYTE PTR [rax],al
    5afc:	00 2c 39             	add    BYTE PTR [rcx+rdi*1],ch
    5aff:	01 0c f1             	add    DWORD PTR [rcx+rsi*8],ecx
    5b02:	00 00                	add    BYTE PTR [rax],al
    5b04:	00 0f                	add    BYTE PTR [rdi],cl
    5b06:	5b                   	pop    rbx
    5b07:	00 00                	add    BYTE PTR [rax],al
    5b09:	01 7f 00             	add    DWORD PTR [rdi+0x0],edi
    5b0c:	00 00                	add    BYTE PTR [rax],al
    5b0e:	00 0a                	add    BYTE PTR [rdx],cl
    5b10:	e6 73                	out    0x73,al
    5b12:	00 00                	add    BYTE PTR [rax],al
    5b14:	2c 1b                	sub    al,0x1b
    5b16:	01 0c f1             	add    DWORD PTR [rcx+rsi*8],ecx
    5b19:	00 00                	add    BYTE PTR [rax],al
    5b1b:	00 30                	add    BYTE PTR [rax],dh
    5b1d:	5b                   	pop    rbx
    5b1e:	00 00                	add    BYTE PTR [rax],al
    5b20:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5b23:	00 00                	add    BYTE PTR [rax],al
    5b25:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5b28:	00 00                	add    BYTE PTR [rax],al
    5b2a:	01 2e                	add    DWORD PTR [rsi],ebp
    5b2c:	00 00                	add    BYTE PTR [rax],al
    5b2e:	00 00                	add    BYTE PTR [rax],al
    5b30:	0a 90 7c 00 00 2c    	or     dl,BYTE PTR [rax+0x2c00007c]
    5b36:	1f                   	(bad)
    5b37:	01 11                	add    DWORD PTR [rcx],edx
    5b39:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5b3c:	00 51 5b             	add    BYTE PTR [rcx+0x5b],dl
    5b3f:	00 00                	add    BYTE PTR [rax],al
    5b41:	01 1a                	add    DWORD PTR [rdx],ebx
    5b43:	55                   	push   rbp
    5b44:	00 00                	add    BYTE PTR [rax],al
    5b46:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5b49:	00 00                	add    BYTE PTR [rax],al
    5b4b:	01 2e                	add    DWORD PTR [rsi],ebp
    5b4d:	00 00                	add    BYTE PTR [rax],al
    5b4f:	00 00                	add    BYTE PTR [rax],al
    5b51:	0a b5 3b 00 00 2c    	or     dh,BYTE PTR [rbp+0x2c00003b]
    5b57:	24 01                	and    al,0x1
    5b59:	11 1a                	adc    DWORD PTR [rdx],ebx
    5b5b:	55                   	push   rbp
    5b5c:	00 00                	add    BYTE PTR [rax],al
    5b5e:	72 5b                	jb     5bbb <__TMC_END__+0x1ba3>
    5b60:	00 00                	add    BYTE PTR [rax],al
    5b62:	01 1a                	add    DWORD PTR [rdx],ebx
    5b64:	55                   	push   rbp
    5b65:	00 00                	add    BYTE PTR [rax],al
    5b67:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5b6a:	00 00                	add    BYTE PTR [rax],al
    5b6c:	01 2e                	add    DWORD PTR [rsi],ebp
    5b6e:	00 00                	add    BYTE PTR [rax],al
    5b70:	00 00                	add    BYTE PTR [rax],al
    5b72:	0a 96 1c 00 00 2c    	or     dl,BYTE PTR [rsi+0x2c00001c]
    5b78:	28 01                	sub    BYTE PTR [rcx],al
    5b7a:	11 1a                	adc    DWORD PTR [rdx],ebx
    5b7c:	55                   	push   rbp
    5b7d:	00 00                	add    BYTE PTR [rax],al
    5b7f:	93                   	xchg   ebx,eax
    5b80:	5b                   	pop    rbx
    5b81:	00 00                	add    BYTE PTR [rax],al
    5b83:	01 1a                	add    DWORD PTR [rdx],ebx
    5b85:	55                   	push   rbp
    5b86:	00 00                	add    BYTE PTR [rax],al
    5b88:	01 1f                	add    DWORD PTR [rdi],ebx
    5b8a:	55                   	push   rbp
    5b8b:	00 00                	add    BYTE PTR [rax],al
    5b8d:	01 2e                	add    DWORD PTR [rsi],ebp
    5b8f:	00 00                	add    BYTE PTR [rax],al
    5b91:	00 00                	add    BYTE PTR [rax],al
    5b93:	0a 36                	or     dh,BYTE PTR [rsi]
    5b95:	3b 00                	cmp    eax,DWORD PTR [rax]
    5b97:	00 2c e3             	add    BYTE PTR [rbx+riz*8],ch
    5b9a:	02 0c f1             	add    cl,BYTE PTR [rcx+rsi*8]
    5b9d:	00 00                	add    BYTE PTR [rax],al
    5b9f:	00 ab 5b 00 00 01    	add    BYTE PTR [rbx+0x100005b],ch
    5ba5:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5ba8:	00 26                	add    BYTE PTR [rsi],ah
    5baa:	00 09                	add    BYTE PTR [rcx],cl
    5bac:	3f                   	(bad)
    5bad:	50                   	push   rax
    5bae:	00 00                	add    BYTE PTR [rax],al
    5bb0:	2c 1f                	sub    al,0x1f
    5bb2:	03 0c 36             	add    ecx,DWORD PTR [rsi+rsi*1]
    5bb5:	50                   	push   rax
    5bb6:	00 00                	add    BYTE PTR [rax],al
    5bb8:	f1                   	int1
    5bb9:	00 00                	add    BYTE PTR [rax],al
    5bbb:	00 c7                	add    bh,al
    5bbd:	5b                   	pop    rbx
    5bbe:	00 00                	add    BYTE PTR [rax],al
    5bc0:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5bc3:	00 00                	add    BYTE PTR [rax],al
    5bc5:	26 00 1b             	es add BYTE PTR [rbx],bl
    5bc8:	80 3e 00             	cmp    BYTE PTR [rsi],0x0
    5bcb:	00 2c ba             	add    BYTE PTR [rdx+rdi*4],ch
    5bce:	1d 80 3e 00 00       	sbb    eax,0x3e80
    5bd3:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5bd6:	00 e6                	add    dh,ah
    5bd8:	5b                   	pop    rbx
    5bd9:	00 00                	add    BYTE PTR [rax],al
    5bdb:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5bde:	00 00                	add    BYTE PTR [rax],al
    5be0:	01 1f                	add    DWORD PTR [rdi],ebx
    5be2:	55                   	push   rbp
    5be3:	00 00                	add    BYTE PTR [rax],al
    5be5:	00 1b                	add    BYTE PTR [rbx],bl
    5be7:	80 3e 00             	cmp    BYTE PTR [rsi],0x0
    5bea:	00 2c b8             	add    BYTE PTR [rax+rdi*4],ch
    5bed:	17                   	(bad)
    5bee:	80 3e 00             	cmp    BYTE PTR [rsi],0x0
    5bf1:	00 1a                	add    BYTE PTR [rdx],bl
    5bf3:	55                   	push   rbp
    5bf4:	00 00                	add    BYTE PTR [rax],al
    5bf6:	05 5c 00 00 01       	add    eax,0x100005c
    5bfb:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5bfe:	00 01                	add    BYTE PTR [rcx],al
    5c00:	1f                   	(bad)
    5c01:	55                   	push   rbp
    5c02:	00 00                	add    BYTE PTR [rax],al
    5c04:	00 1b                	add    BYTE PTR [rbx],bl
    5c06:	20 00                	and    BYTE PTR [rax],al
    5c08:	00 00                	add    BYTE PTR [rax],al
    5c0a:	2c de                	sub    al,0xde
    5c0c:	1d 20 00 00 00       	sbb    eax,0x20
    5c11:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5c14:	00 24 5c             	add    BYTE PTR [rsp+rbx*2],ah
    5c17:	00 00                	add    BYTE PTR [rax],al
    5c19:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5c1c:	00 00                	add    BYTE PTR [rax],al
    5c1e:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5c21:	00 00                	add    BYTE PTR [rax],al
    5c23:	00 1b                	add    BYTE PTR [rbx],bl
    5c25:	20 00                	and    BYTE PTR [rax],al
    5c27:	00 00                	add    BYTE PTR [rax],al
    5c29:	2c dc                	sub    al,0xdc
    5c2b:	17                   	(bad)
    5c2c:	20 00                	and    BYTE PTR [rax],al
    5c2e:	00 00                	add    BYTE PTR [rax],al
    5c30:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5c33:	00 43 5c             	add    BYTE PTR [rbx+0x5c],al
    5c36:	00 00                	add    BYTE PTR [rax],al
    5c38:	01 1a                	add    DWORD PTR [rdx],ebx
    5c3a:	55                   	push   rbp
    5c3b:	00 00                	add    BYTE PTR [rax],al
    5c3d:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5c40:	00 00                	add    BYTE PTR [rax],al
    5c42:	00 1b                	add    BYTE PTR [rbx],bl
    5c44:	f8                   	clc
    5c45:	84 00                	test   BYTE PTR [rax],al
    5c47:	00 2c c4             	add    BYTE PTR [rsp+rax*8],ch
    5c4a:	1d f8 84 00 00       	sbb    eax,0x84f8
    5c4f:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5c52:	00 62 5c             	add    BYTE PTR [rdx+0x5c],ah
    5c55:	00 00                	add    BYTE PTR [rax],al
    5c57:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5c5a:	00 00                	add    BYTE PTR [rax],al
    5c5c:	01 1f                	add    DWORD PTR [rdi],ebx
    5c5e:	55                   	push   rbp
    5c5f:	00 00                	add    BYTE PTR [rax],al
    5c61:	00 1b                	add    BYTE PTR [rbx],bl
    5c63:	f8                   	clc
    5c64:	84 00                	test   BYTE PTR [rax],al
    5c66:	00 2c c2             	add    BYTE PTR [rdx+rax*8],ch
    5c69:	17                   	(bad)
    5c6a:	f8                   	clc
    5c6b:	84 00                	test   BYTE PTR [rax],al
    5c6d:	00 1a                	add    BYTE PTR [rdx],bl
    5c6f:	55                   	push   rbp
    5c70:	00 00                	add    BYTE PTR [rax],al
    5c72:	81 5c 00 00 01 1a 55 	sbb    DWORD PTR [rax+rax*1+0x0],0x551a01
    5c79:	00 
    5c7a:	00 01                	add    BYTE PTR [rcx],al
    5c7c:	1f                   	(bad)
    5c7d:	55                   	push   rbp
    5c7e:	00 00                	add    BYTE PTR [rax],al
    5c80:	00 1b                	add    BYTE PTR [rbx],bl
    5c82:	75 18                	jne    5c9c <__TMC_END__+0x1c84>
    5c84:	00 00                	add    BYTE PTR [rax],al
    5c86:	2c e9                	sub    al,0xe9
    5c88:	1d 75 18 00 00       	sbb    eax,0x1875
    5c8d:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5c90:	00 a0 5c 00 00 01    	add    BYTE PTR [rax+0x100005c],ah
    5c96:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5c99:	00 01                	add    BYTE PTR [rcx],al
    5c9b:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5c9e:	00 00                	add    BYTE PTR [rax],al
    5ca0:	1b 75 18             	sbb    esi,DWORD PTR [rbp+0x18]
    5ca3:	00 00                	add    BYTE PTR [rax],al
    5ca5:	2c e7                	sub    al,0xe7
    5ca7:	17                   	(bad)
    5ca8:	75 18                	jne    5cc2 <__TMC_END__+0x1caa>
    5caa:	00 00                	add    BYTE PTR [rax],al
    5cac:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5caf:	00 bf 5c 00 00 01    	add    BYTE PTR [rdi+0x100005c],bh
    5cb5:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5cb8:	00 01                	add    BYTE PTR [rcx],al
    5cba:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5cbd:	00 00                	add    BYTE PTR [rax],al
    5cbf:	09 be 54 00 00 2c    	or     DWORD PTR [rsi+0x2c000054],edi
    5cc5:	12 01                	adc    al,BYTE PTR [rcx]
    5cc7:	1d be 54 00 00       	sbb    eax,0x54be
    5ccc:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    5ccf:	00 e4                	add    ah,ah
    5cd1:	5c                   	pop    rsp
    5cd2:	00 00                	add    BYTE PTR [rax],al
    5cd4:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    5cd7:	00 00                	add    BYTE PTR [rax],al
    5cd9:	01 1f                	add    DWORD PTR [rdi],ebx
    5cdb:	55                   	push   rbp
    5cdc:	00 00                	add    BYTE PTR [rax],al
    5cde:	01 2e                	add    DWORD PTR [rsi],ebp
    5ce0:	00 00                	add    BYTE PTR [rax],al
    5ce2:	00 00                	add    BYTE PTR [rax],al
    5ce4:	09 be 54 00 00 2c    	or     DWORD PTR [rsi+0x2c000054],edi
    5cea:	10 01                	adc    BYTE PTR [rcx],al
    5cec:	17                   	(bad)
    5ced:	be 54 00 00 1a       	mov    esi,0x1a000054
    5cf2:	55                   	push   rbp
    5cf3:	00 00                	add    BYTE PTR [rax],al
    5cf5:	09 5d 00             	or     DWORD PTR [rbp+0x0],ebx
    5cf8:	00 01                	add    BYTE PTR [rcx],al
    5cfa:	1a 55 00             	sbb    dl,BYTE PTR [rbp+0x0]
    5cfd:	00 01                	add    BYTE PTR [rcx],al
    5cff:	1f                   	(bad)
    5d00:	55                   	push   rbp
    5d01:	00 00                	add    BYTE PTR [rax],al
    5d03:	01 2e                	add    DWORD PTR [rsi],ebp
    5d05:	00 00                	add    BYTE PTR [rax],al
    5d07:	00 00                	add    BYTE PTR [rax],al
    5d09:	78 18                	js     5d23 <__TMC_END__+0x1d0b>
    5d0b:	06                   	(bad)
    5d0c:	00 00                	add    BYTE PTR [rax],al
    5d0e:	0b 59 01             	or     ebx,DWORD PTR [rcx+0x1]
    5d11:	0b 37                	or     esi,DWORD PTR [rdi]
    5d13:	65 00 00             	add    BYTE PTR gs:[rax],al
    5d16:	04 0a                	add    al,0xa
    5d18:	fb                   	sti
    5d19:	0b 37                	or     esi,DWORD PTR [rdi]
    5d1b:	65 00 00             	add    BYTE PTR gs:[rax],al
    5d1e:	0c 0a                	or     al,0xa
    5d20:	04 01                	add    al,0x1
    5d22:	0b 5a 65             	or     ebx,DWORD PTR [rdx+0x65]
    5d25:	00 00                	add    BYTE PTR [rax],al
    5d27:	0c 0a                	or     al,0xa
    5d29:	05 01 0b 86 65       	add    eax,0x65860b01
    5d2e:	00 00                	add    BYTE PTR [rax],al
    5d30:	19 71 0b             	sbb    DWORD PTR [rcx+0xb],esi
    5d33:	00 00                	add    BYTE PTR [rax],al
    5d35:	0b 3b                	or     edi,DWORD PTR [rbx]
    5d37:	03 1f                	add    ebx,DWORD PTR [rdi]
    5d39:	92                   	xchg   edx,eax
    5d3a:	69 00 00 22 00 05    	imul   eax,DWORD PTR [rax],0x5002200
    5d40:	00 00                	add    BYTE PTR [rax],al
    5d42:	2e 25 0b 04 1d cc    	cs and eax,0xcc1d040b
    5d48:	0b 63 6a             	or     esp,DWORD PTR [rbx+0x6a]
    5d4b:	00 00                	add    BYTE PTR [rax],al
    5d4d:	04 1d                	add    al,0x1d
    5d4f:	dc 0b                	fmul   QWORD PTR [rbx]
    5d51:	34 6d                	xor    al,0x6d
    5d53:	00 00                	add    BYTE PTR [rax],al
    5d55:	04 1d                	add    al,0x1d
    5d57:	e7 0b                	out    0xb,eax
    5d59:	50                   	push   rax
    5d5a:	6d                   	ins    DWORD PTR es:[rdi],dx
    5d5b:	00 00                	add    BYTE PTR [rax],al
    5d5d:	04 1d                	add    al,0x1d
    5d5f:	e8 0b 66 6d 00       	call   6dc36f <__TMC_END__+0x6d8357>
    5d64:	00 04 1d e9 0b 8a 6d 	add    BYTE PTR [rbx*1+0x6d8a0be9],al
    5d6b:	00 00                	add    BYTE PTR [rax],al
    5d6d:	04 1d                	add    al,0x1d
    5d6f:	eb 0b                	jmp    5d7c <__TMC_END__+0x1d64>
    5d71:	ae                   	scas   al,BYTE PTR es:[rdi]
    5d72:	6d                   	ins    DWORD PTR es:[rdi],dx
    5d73:	00 00                	add    BYTE PTR [rax],al
    5d75:	04 1d                	add    al,0x1d
    5d77:	ec                   	in     al,dx
    5d78:	0b c9                	or     ecx,ecx
    5d7a:	6d                   	ins    DWORD PTR es:[rdi],dx
    5d7b:	00 00                	add    BYTE PTR [rax],al
    5d7d:	79 64                	jns    5de3 <__TMC_END__+0x1dcb>
    5d7f:	69 76 00 1d d9 03 77 	imul   esi,DWORD PTR [rsi+0x0],0x7703d91d
    5d86:	8a 00                	mov    al,BYTE PTR [rax]
    5d88:	00 63 6a             	add    BYTE PTR [rbx+0x6a],ah
    5d8b:	00 00                	add    BYTE PTR [rax],al
    5d8d:	9c                   	pushf
    5d8e:	5d                   	pop    rbp
    5d8f:	00 00                	add    BYTE PTR [rax],al
    5d91:	01 7f 65             	add    DWORD PTR [rdi+0x65],edi
    5d94:	00 00                	add    BYTE PTR [rax],al
    5d96:	01 7f 65             	add    DWORD PTR [rdi+0x65],edi
    5d99:	00 00                	add    BYTE PTR [rax],al
    5d9b:	00 1a                	add    BYTE PTR [rdx],bl
    5d9d:	75 25                	jne    5dc4 <__TMC_END__+0x1dac>
    5d9f:	00 00                	add    BYTE PTR [rax],al
    5da1:	01 2f                	add    DWORD PTR [rdi],ebp
    5da3:	2d 0a a0 5e 00       	sub    eax,0x5ea00a
    5da8:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
    5dab:	2d 0a a0 1b 00       	sub    eax,0x1ba00a
    5db0:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
    5db3:	2d 0a 61 1b 00       	sub    eax,0x1b610a
    5db8:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
    5dbb:	2d 0a d2 1b 00       	sub    eax,0x1bd20a
    5dc0:	00 04 2f             	add    BYTE PTR [rdi+rbp*1],al
    5dc3:	2d 0a f2 1b 00       	sub    eax,0x1bf20a
    5dc8:	00 23                	add    BYTE PTR [rbx],ah
    5dca:	47 1b 00             	rex.RXB sbb r8d,DWORD PTR [r8]
    5dcd:	00 1b                	add    BYTE PTR [rbx],bl
    5dcf:	50                   	push   rax
    5dd0:	16                   	(bad)
    5dd1:	00 00                	add    BYTE PTR [rax],al
    5dd3:	2f                   	(bad)
    5dd4:	61                   	(bad)
    5dd5:	1d a4 32 00 00       	sbb    eax,0x32a4
    5dda:	d7                   	xlat   BYTE PTR ds:[rbx]
    5ddb:	0d 00 00 e8 5d       	or     eax,0x5de80000
    5de0:	00 00                	add    BYTE PTR [rax],al
    5de2:	01 6c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebp
    5de6:	00 00                	add    BYTE PTR [rax],al
    5de8:	7a 78                	jp     5e62 <__TMC_END__+0x1e4a>
    5dea:	62                   	(bad)
    5deb:	00 00                	add    BYTE PTR [rax],al
    5ded:	2f                   	(bad)
    5dee:	65 26 92             	gs es xchg edx,eax
    5df1:	57                   	push   rdi
    5df2:	00 00                	add    BYTE PTR [rax],al
    5df4:	03 5e 00             	add    ebx,DWORD PTR [rsi+0x0]
    5df7:	00 01                	add    BYTE PTR [rcx],al
    5df9:	71 69                	jno    5e64 <__TMC_END__+0x1e4c>
    5dfb:	00 00                	add    BYTE PTR [rax],al
    5dfd:	01 71 69             	add    DWORD PTR [rcx+0x69],esi
    5e00:	00 00                	add    BYTE PTR [rax],al
    5e02:	00 33                	add    BYTE PTR [rbx],dh
    5e04:	dd 48 00             	fisttp QWORD PTR [rax+0x0]
    5e07:	00 69 82             	add    BYTE PTR [rcx-0x7e],ch
    5e0a:	94                   	xchg   esp,eax
    5e0b:	00 00                	add    BYTE PTR [rax],al
    5e0d:	f1                   	int1
    5e0e:	65 00 00             	add    BYTE PTR gs:[rax],al
    5e11:	33 5e 89             	xor    ebx,DWORD PTR [rsi-0x77]
    5e14:	00 00                	add    BYTE PTR [rax],al
    5e16:	6d                   	ins    DWORD PTR es:[rdi],dx
    5e17:	48 92                	xchg   rdx,rax
    5e19:	00 00                	add    BYTE PTR [rax],al
    5e1b:	f1                   	int1
    5e1c:	65 00 00             	add    BYTE PTR gs:[rax],al
    5e1f:	33 b5 7a 00 00 71    	xor    esi,DWORD PTR [rbp+0x7100007a]
    5e25:	da 61 00             	fisub  DWORD PTR [rcx+0x0]
    5e28:	00 f1                	add    cl,dh
    5e2a:	65 00 00             	add    BYTE PTR gs:[rax],al
    5e2d:	33 4f 26             	xor    ecx,DWORD PTR [rdi+0x26]
    5e30:	00 00                	add    BYTE PTR [rax],al
    5e32:	75 b9                	jne    5ded <__TMC_END__+0x1dd5>
    5e34:	0d 00 00 f1 65       	or     eax,0x65f10000
    5e39:	00 00                	add    BYTE PTR [rax],al
    5e3b:	33 fb                	xor    edi,ebx
    5e3d:	88 00                	mov    BYTE PTR [rax],al
    5e3f:	00 79 dc             	add    BYTE PTR [rcx-0x24],bh
    5e42:	03 00                	add    eax,DWORD PTR [rax]
    5e44:	00 f1                	add    cl,dh
    5e46:	65 00 00             	add    BYTE PTR gs:[rax],al
    5e49:	05 aa 14 00 00       	add    eax,0x14aa
    5e4e:	2f                   	(bad)
    5e4f:	35 35 28 1c 00       	xor    eax,0x1c2835
    5e54:	00 0f                	add    BYTE PTR [rdi],cl
    5e56:	49 5e                	rex.WB pop r14
    5e58:	00 00                	add    BYTE PTR [rax],al
    5e5a:	05 34 6c 00 00       	add    eax,0x6c34
    5e5f:	2f                   	(bad)
    5e60:	36 35 54 1b 00 00    	ss xor eax,0x1b54
    5e66:	05 c1 0b 00 00       	add    eax,0xbc1
    5e6b:	2f                   	(bad)
    5e6c:	37                   	(bad)
    5e6d:	35 35 1c 00 00       	xor    eax,0x1c35
    5e72:	05 1f 2b 00 00       	add    eax,0x2b1f
    5e77:	2f                   	(bad)
    5e78:	38 35 93 1b 00 00    	cmp    BYTE PTR [rip+0x1b93],dh        # 7a11 <__TMC_END__+0x39f9>
    5e7e:	05 42 6c 00 00       	add    eax,0x6c42
    5e83:	2f                   	(bad)
    5e84:	3b 35 03 71 00 00    	cmp    esi,DWORD PTR [rip+0x7103]        # cf8d <__TMC_END__+0x8f75>
    5e8a:	05 3c 6c 00 00       	add    eax,0x6c3c
    5e8f:	2f                   	(bad)
    5e90:	3c 35                	cmp    al,0x35
    5e92:	08 71 00             	or     BYTE PTR [rcx+0x0],dh
    5e95:	00 14 9f             	add    BYTE PTR [rdi+rbx*4],dl
    5e98:	63 00                	movsxd eax,DWORD PTR [rax]
    5e9a:	00 d7                	add    bh,dl
    5e9c:	0d 00 00 00 2b       	or     eax,0x2b000000
    5ea1:	07                   	(bad)
    5ea2:	3c 00                	cmp    al,0x0
    5ea4:	00 08                	add    BYTE PTR [rax],cl
    5ea6:	2a 0e                	sub    cl,BYTE PTR [rsi]
    5ea8:	04 0b                	add    al,0xb
    5eaa:	cd 60                	int    0x60
    5eac:	00 00                	add    BYTE PTR [rax],al
    5eae:	3d 24 36 00 00       	cmp    eax,0x3624
    5eb3:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    5eb6:	00 12                	add    BYTE PTR [rdx],dl
    5eb8:	17                   	(bad)
    5eb9:	83 00 00             	add    DWORD PTR [rax],0x0
    5ebc:	2a 27                	sub    ah,BYTE PTR [rdi]
    5ebe:	04 1a                	add    al,0x1a
    5ec0:	c2 2a 00             	ret    0x2a
    5ec3:	00 01                	add    BYTE PTR [rcx],al
    5ec5:	cd 5e                	int    0x5e
    5ec7:	00 00                	add    BYTE PTR [rax],al
    5ec9:	d3 5e 00             	rcr    DWORD PTR [rsi+0x0],cl
    5ecc:	00 02                	add    BYTE PTR [rdx],al
    5ece:	ce                   	(bad)
    5ecf:	72 00                	jb     5ed1 <__TMC_END__+0x1eb9>
    5ed1:	00 00                	add    BYTE PTR [rax],al
    5ed3:	2a 17                	sub    dl,BYTE PTR [rdi]
    5ed5:	83 00 00             	add    DWORD PTR [rax],0x0
    5ed8:	2a 2b                	sub    ch,BYTE PTR [rbx]
    5eda:	04 59                	add    al,0x59
    5edc:	8c 00                	mov    WORD PTR [rax],es
    5ede:	00 01                	add    BYTE PTR [rcx],al
    5ee0:	e8 5e 00 00 f3       	call   fffffffff3005f43 <__TMC_END__+0xfffffffff3001f2b>
    5ee5:	5e                   	pop    rsi
    5ee6:	00 00                	add    BYTE PTR [rax],al
    5ee8:	02 ce                	add    cl,dh
    5eea:	72 00                	jb     5eec <__TMC_END__+0x1ed4>
    5eec:	00 01                	add    BYTE PTR [rcx],al
    5eee:	d3 72 00             	shl    DWORD PTR [rdx+0x0],cl
    5ef1:	00 00                	add    BYTE PTR [rax],al
    5ef3:	20 42 6c             	and    BYTE PTR [rdx+0x6c],al
    5ef6:	00 00                	add    BYTE PTR [rax],al
    5ef8:	20 04 32             	and    BYTE PTR [rdx+rsi*1],al
    5efb:	37                   	(bad)
    5efc:	3d 00 00 03 62       	cmp    eax,0x62030000
    5f01:	1c 00                	sbb    al,0x0
    5f03:	00 2a                	add    BYTE PTR [rdx],ch
    5f05:	42 04 07             	rex.X add al,0x7
    5f08:	50                   	push   rax
    5f09:	19 00                	sbb    DWORD PTR [rax],eax
    5f0b:	00 f3                	add    bl,dh
    5f0d:	5e                   	pop    rsi
    5f0e:	00 00                	add    BYTE PTR [rax],al
    5f10:	01 19                	add    DWORD PTR [rcx],ebx
    5f12:	5f                   	pop    rdi
    5f13:	00 00                	add    BYTE PTR [rax],al
    5f15:	1f                   	(bad)
    5f16:	5f                   	pop    rdi
    5f17:	00 00                	add    BYTE PTR [rax],al
    5f19:	02 d8                	add    bl,al
    5f1b:	72 00                	jb     5f1d <__TMC_END__+0x1f05>
    5f1d:	00 00                	add    BYTE PTR [rax],al
    5f1f:	20 34 6c             	and    BYTE PTR [rsp+rbp*2],dh
    5f22:	00 00                	add    BYTE PTR [rax],al
    5f24:	21 04 32             	and    DWORD PTR [rdx+rsi*1],eax
    5f27:	2b 3d 00 00 03 57    	sub    edi,DWORD PTR [rip+0x57030000]        # 57035f2d <__TMC_END__+0x57031f15>
    5f2d:	66 00 00             	data16 add BYTE PTR [rax],al
    5f30:	2a 47 04             	sub    al,BYTE PTR [rdi+0x4]
    5f33:	07                   	(bad)
    5f34:	09 3d 00 00 1f 5f    	or     DWORD PTR [rip+0x5f1f0000],edi        # 5f1f5f3a <__TMC_END__+0x5f1f1f22>
    5f3a:	00 00                	add    BYTE PTR [rax],al
    5f3c:	01 45 5f             	add    DWORD PTR [rbp+0x5f],eax
    5f3f:	00 00                	add    BYTE PTR [rax],al
    5f41:	4b 5f                	rex.WXB pop r15
    5f43:	00 00                	add    BYTE PTR [rax],al
    5f45:	02 d8                	add    bl,al
    5f47:	72 00                	jb     5f49 <__TMC_END__+0x1f31>
    5f49:	00 00                	add    BYTE PTR [rax],al
    5f4b:	03 e7                	add    esp,edi
    5f4d:	63 00                	movsxd eax,DWORD PTR [rax]
    5f4f:	00 2a                	add    BYTE PTR [rdx],ch
    5f51:	4c 04 07             	rex.WR add al,0x7
    5f54:	05 5d 00 00 dd       	add    eax,0xdd00005d
    5f59:	72 00                	jb     5f5b <__TMC_END__+0x1f43>
    5f5b:	00 01                	add    BYTE PTR [rcx],al
    5f5d:	65 5f                	gs pop rdi
    5f5f:	00 00                	add    BYTE PTR [rax],al
    5f61:	6b 5f 00 00          	imul   ebx,DWORD PTR [rdi+0x0],0x0
    5f65:	02 ce                	add    cl,dh
    5f67:	72 00                	jb     5f69 <__TMC_END__+0x1f51>
    5f69:	00 00                	add    BYTE PTR [rax],al
    5f6b:	03 e7                	add    esp,edi
    5f6d:	63 00                	movsxd eax,DWORD PTR [rax]
    5f6f:	00 2a                	add    BYTE PTR [rdx],ch
    5f71:	54                   	push   rsp
    5f72:	04 07                	add    al,0x7
    5f74:	f2 74 00             	bnd je 5f77 <__TMC_END__+0x1f5f>
    5f77:	00 a0 5e 00 00 01    	add    BYTE PTR [rax+0x100005e],ah
    5f7d:	85 5f 00             	test   DWORD PTR [rdi+0x0],ebx
    5f80:	00 90 5f 00 00 02    	add    BYTE PTR [rax+0x200005f],dl
    5f86:	ce                   	(bad)
    5f87:	72 00                	jb     5f89 <__TMC_END__+0x1f71>
    5f89:	00 01                	add    BYTE PTR [rcx],al
    5f8b:	f1                   	int1
    5f8c:	00 00                	add    BYTE PTR [rax],al
    5f8e:	00 00                	add    BYTE PTR [rax],al
    5f90:	03 e6                	add    esp,esi
    5f92:	65 00 00             	add    BYTE PTR gs:[rax],al
    5f95:	2a 5a 04             	sub    bl,BYTE PTR [rdx+0x4]
    5f98:	07                   	(bad)
    5f99:	05 09 00 00 dd       	add    eax,0xdd000009
    5f9e:	72 00                	jb     5fa0 <__TMC_END__+0x1f88>
    5fa0:	00 01                	add    BYTE PTR [rcx],al
    5fa2:	aa                   	stos   BYTE PTR es:[rdi],al
    5fa3:	5f                   	pop    rdi
    5fa4:	00 00                	add    BYTE PTR [rax],al
    5fa6:	b0 5f                	mov    al,0x5f
    5fa8:	00 00                	add    BYTE PTR [rax],al
    5faa:	02 ce                	add    cl,dh
    5fac:	72 00                	jb     5fae <__TMC_END__+0x1f96>
    5fae:	00 00                	add    BYTE PTR [rax],al
    5fb0:	03 e6                	add    esp,esi
    5fb2:	65 00 00             	add    BYTE PTR gs:[rax],al
    5fb5:	2a 62 04             	sub    ah,BYTE PTR [rdx+0x4]
    5fb8:	07                   	(bad)
    5fb9:	b1 05                	mov    cl,0x5
    5fbb:	00 00                	add    BYTE PTR [rax],al
    5fbd:	a0 5e 00 00 01 ca 5f 	movabs al,ds:0x5fca0100005e
    5fc4:	00 00 
    5fc6:	d5 5f 00 00          	{rex2 0x5f} add BYTE PTR [r24],r24b
    5fca:	02 ce                	add    cl,dh
    5fcc:	72 00                	jb     5fce <__TMC_END__+0x1fb6>
    5fce:	00 01                	add    BYTE PTR [rcx],al
    5fd0:	f1                   	int1
    5fd1:	00 00                	add    BYTE PTR [rax],al
    5fd3:	00 00                	add    BYTE PTR [rax],al
    5fd5:	03 d1                	add    edx,ecx
    5fd7:	42 00 00             	rex.X add BYTE PTR [rax],al
    5fda:	2a 68 04             	sub    ch,BYTE PTR [rax+0x4]
    5fdd:	07                   	(bad)
    5fde:	87 3e                	xchg   DWORD PTR [rsi],edi
    5fe0:	00 00                	add    BYTE PTR [rax],al
    5fe2:	f3 5e                	repz pop rsi
    5fe4:	00 00                	add    BYTE PTR [rax],al
    5fe6:	01 ef                	add    edi,ebp
    5fe8:	5f                   	pop    rdi
    5fe9:	00 00                	add    BYTE PTR [rax],al
    5feb:	fa                   	cli
    5fec:	5f                   	pop    rdi
    5fed:	00 00                	add    BYTE PTR [rax],al
    5fef:	02 d8                	add    bl,al
    5ff1:	72 00                	jb     5ff3 <__TMC_END__+0x1fdb>
    5ff3:	00 01                	add    BYTE PTR [rcx],al
    5ff5:	fa                   	cli
    5ff6:	5f                   	pop    rdi
    5ff7:	00 00                	add    BYTE PTR [rax],al
    5ff9:	00 20                	add    BYTE PTR [rax],ah
    5ffb:	66 4e 00 00          	data16 rex.WRX add BYTE PTR [rax],r8b
    5fff:	1f                   	(bad)
    6000:	04 38                	add    al,0x38
    6002:	1f                   	(bad)
    6003:	3d 00 00 03 30       	cmp    eax,0x30030000
    6008:	63 00                	movsxd eax,DWORD PTR [rax]
    600a:	00 2a                	add    BYTE PTR [rdx],ch
    600c:	6d                   	ins    DWORD PTR es:[rdi],dx
    600d:	04 07                	add    al,0x7
    600f:	bf 2d 00 00 dd       	mov    edi,0xdd00002d
    6014:	72 00                	jb     6016 <__TMC_END__+0x1ffe>
    6016:	00 01                	add    BYTE PTR [rcx],al
    6018:	20 60 00             	and    BYTE PTR [rax+0x0],ah
    601b:	00 2b                	add    BYTE PTR [rbx],ch
    601d:	60                   	(bad)
    601e:	00 00                	add    BYTE PTR [rax],al
    6020:	02 ce                	add    cl,dh
    6022:	72 00                	jb     6024 <__TMC_END__+0x200c>
    6024:	00 01                	add    BYTE PTR [rcx],al
    6026:	fa                   	cli
    6027:	5f                   	pop    rdi
    6028:	00 00                	add    BYTE PTR [rax],al
    602a:	00 03                	add    BYTE PTR [rbx],al
    602c:	6c                   	ins    BYTE PTR es:[rdi],dx
    602d:	1c 00                	sbb    al,0x0
    602f:	00 2a                	add    BYTE PTR [rdx],ch
    6031:	72 04                	jb     6037 <__TMC_END__+0x201f>
    6033:	07                   	(bad)
    6034:	25 5f 00 00 a0       	and    eax,0xa000005f
    6039:	5e                   	pop    rsi
    603a:	00 00                	add    BYTE PTR [rax],al
    603c:	01 45 60             	add    DWORD PTR [rbp+0x60],eax
    603f:	00 00                	add    BYTE PTR [rax],al
    6041:	50                   	push   rax
    6042:	60                   	(bad)
    6043:	00 00                	add    BYTE PTR [rax],al
    6045:	02 d8                	add    bl,al
    6047:	72 00                	jb     6049 <__TMC_END__+0x2031>
    6049:	00 01                	add    BYTE PTR [rcx],al
    604b:	fa                   	cli
    604c:	5f                   	pop    rdi
    604d:	00 00                	add    BYTE PTR [rax],al
    604f:	00 03                	add    BYTE PTR [rbx],al
    6051:	4c                   	rex.WR
    6052:	66 00 00             	data16 add BYTE PTR [rax],al
    6055:	2a 77 04             	sub    dh,BYTE PTR [rdi+0x4]
    6058:	07                   	(bad)
    6059:	90                   	nop
    605a:	53                   	push   rbx
    605b:	00 00                	add    BYTE PTR [rax],al
    605d:	dd 72 00             	fnsave [rdx+0x0]
    6060:	00 01                	add    BYTE PTR [rcx],al
    6062:	6a 60                	push   0x60
    6064:	00 00                	add    BYTE PTR [rax],al
    6066:	75 60                	jne    60c8 <__TMC_END__+0x20b0>
    6068:	00 00                	add    BYTE PTR [rax],al
    606a:	02 ce                	add    cl,dh
    606c:	72 00                	jb     606e <__TMC_END__+0x2056>
    606e:	00 01                	add    BYTE PTR [rcx],al
    6070:	fa                   	cli
    6071:	5f                   	pop    rdi
    6072:	00 00                	add    BYTE PTR [rax],al
    6074:	00 03                	add    BYTE PTR [rbx],al
    6076:	76 1c                	jbe    6094 <__TMC_END__+0x207c>
    6078:	00 00                	add    BYTE PTR [rax],al
    607a:	2a 7c 04 07          	sub    bh,BYTE PTR [rsp+rax*1+0x7]
    607e:	f0 85 00             	lock test DWORD PTR [rax],eax
    6081:	00 a0 5e 00 00 01    	add    BYTE PTR [rax+0x100005e],ah
    6087:	8f                   	(bad)
    6088:	60                   	(bad)
    6089:	00 00                	add    BYTE PTR [rax],al
    608b:	9a                   	(bad)
    608c:	60                   	(bad)
    608d:	00 00                	add    BYTE PTR [rax],al
    608f:	02 d8                	add    bl,al
    6091:	72 00                	jb     6093 <__TMC_END__+0x207b>
    6093:	00 01                	add    BYTE PTR [rcx],al
    6095:	fa                   	cli
    6096:	5f                   	pop    rdi
    6097:	00 00                	add    BYTE PTR [rax],al
    6099:	00 03                	add    BYTE PTR [rbx],al
    609b:	90                   	nop
    609c:	51                   	push   rcx
    609d:	00 00                	add    BYTE PTR [rax],al
    609f:	2a 81 04 07 33 40    	sub    al,BYTE PTR [rcx+0x40330704]
    60a5:	00 00                	add    BYTE PTR [rax],al
    60a7:	d3 72 00             	shl    DWORD PTR [rdx+0x0],cl
    60aa:	00 01                	add    BYTE PTR [rcx],al
    60ac:	b4 60                	mov    ah,0x60
    60ae:	00 00                	add    BYTE PTR [rax],al
    60b0:	ba 60 00 00 02       	mov    edx,0x2000060
    60b5:	d8 72 00             	fdiv   DWORD PTR [rdx+0x0]
    60b8:	00 00                	add    BYTE PTR [rax],al
    60ba:	14 71                	adc    al,0x71
    60bc:	73 00                	jae    60be <__TMC_END__+0x20a6>
    60be:	00 03                	add    BYTE PTR [rbx],al
    60c0:	58                   	pop    rax
    60c1:	00 00                	add    BYTE PTR [rax],al
    60c3:	14 4c                	adc    al,0x4c
    60c5:	3e 00 00             	ds add BYTE PTR [rax],al
    60c8:	50                   	push   rax
    60c9:	1c 00                	sbb    al,0x0
    60cb:	00 00                	add    BYTE PTR [rax],al
    60cd:	0f a0                	push   fs
    60cf:	5e                   	pop    rsi
    60d0:	00 00                	add    BYTE PTR [rax],al
    60d2:	2b 77 46             	sub    esi,DWORD PTR [rdi+0x46]
    60d5:	00 00                	add    BYTE PTR [rax],al
    60d7:	08 2a                	or     BYTE PTR [rdx],ch
    60d9:	0e                   	(bad)
    60da:	04 0b                	add    al,0xb
    60dc:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    60df:	00 3d 24 36 00 00    	add    BYTE PTR [rip+0x3624],bh        # 9709 <__TMC_END__+0x56f1>
    60e5:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    60e8:	00 12                	add    BYTE PTR [rdx],dl
    60ea:	17                   	(bad)
    60eb:	83 00 00             	add    DWORD PTR [rax],0x0
    60ee:	2a 27                	sub    ah,BYTE PTR [rdi]
    60f0:	04 1a                	add    al,0x1a
    60f2:	aa                   	stos   BYTE PTR es:[rdi],al
    60f3:	1e                   	(bad)
    60f4:	00 00                	add    BYTE PTR [rax],al
    60f6:	01 ff                	add    edi,edi
    60f8:	60                   	(bad)
    60f9:	00 00                	add    BYTE PTR [rax],al
    60fb:	05 61 00 00 02       	add    eax,0x2000061
    6100:	e2 72                	loop   6174 <__TMC_END__+0x215c>
    6102:	00 00                	add    BYTE PTR [rax],al
    6104:	00 2a                	add    BYTE PTR [rdx],ch
    6106:	17                   	(bad)
    6107:	83 00 00             	add    DWORD PTR [rax],0x0
    610a:	2a 2b                	sub    ch,BYTE PTR [rbx]
    610c:	04 dd                	add    al,0xdd
    610e:	44 00 00             	add    BYTE PTR [rax],r8b
    6111:	01 1a                	add    DWORD PTR [rdx],ebx
    6113:	61                   	(bad)
    6114:	00 00                	add    BYTE PTR [rax],al
    6116:	25 61 00 00 02       	and    eax,0x2000061
    611b:	e2 72                	loop   618f <__TMC_END__+0x2177>
    611d:	00 00                	add    BYTE PTR [rax],al
    611f:	01 e7                	add    edi,esp
    6121:	72 00                	jb     6123 <__TMC_END__+0x210b>
    6123:	00 00                	add    BYTE PTR [rax],al
    6125:	20 42 6c             	and    BYTE PTR [rdx+0x6c],al
    6128:	00 00                	add    BYTE PTR [rax],al
    612a:	20 04 32             	and    BYTE PTR [rdx+rsi*1],al
    612d:	0a 3a                	or     bh,BYTE PTR [rdx]
    612f:	00 00                	add    BYTE PTR [rax],al
    6131:	03 62 1c             	add    esp,DWORD PTR [rdx+0x1c]
    6134:	00 00                	add    BYTE PTR [rax],al
    6136:	2a 42 04             	sub    al,BYTE PTR [rdx+0x4]
    6139:	07                   	(bad)
    613a:	07                   	(bad)
    613b:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    613e:	25 61 00 00 01       	and    eax,0x1000061
    6143:	4b 61                	rex.WXB (bad)
    6145:	00 00                	add    BYTE PTR [rax],al
    6147:	51                   	push   rcx
    6148:	61                   	(bad)
    6149:	00 00                	add    BYTE PTR [rax],al
    614b:	02 ec                	add    ch,ah
    614d:	72 00                	jb     614f <__TMC_END__+0x2137>
    614f:	00 00                	add    BYTE PTR [rax],al
    6151:	20 34 6c             	and    BYTE PTR [rsp+rbp*2],dh
    6154:	00 00                	add    BYTE PTR [rax],al
    6156:	21 04 32             	and    DWORD PTR [rdx+rsi*1],eax
    6159:	fe                   	(bad)
    615a:	39 00                	cmp    DWORD PTR [rax],eax
    615c:	00 03                	add    BYTE PTR [rbx],al
    615e:	57                   	push   rdi
    615f:	66 00 00             	data16 add BYTE PTR [rax],al
    6162:	2a 47 04             	sub    al,BYTE PTR [rdi+0x4]
    6165:	07                   	(bad)
    6166:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6167:	72 00                	jb     6169 <__TMC_END__+0x2151>
    6169:	00 51 61             	add    BYTE PTR [rcx+0x61],dl
    616c:	00 00                	add    BYTE PTR [rax],al
    616e:	01 77 61             	add    DWORD PTR [rdi+0x61],esi
    6171:	00 00                	add    BYTE PTR [rax],al
    6173:	7d 61                	jge    61d6 <__TMC_END__+0x21be>
    6175:	00 00                	add    BYTE PTR [rax],al
    6177:	02 ec                	add    ch,ah
    6179:	72 00                	jb     617b <__TMC_END__+0x2163>
    617b:	00 00                	add    BYTE PTR [rax],al
    617d:	03 e7                	add    esp,edi
    617f:	63 00                	movsxd eax,DWORD PTR [rax]
    6181:	00 2a                	add    BYTE PTR [rdx],ch
    6183:	4c 04 07             	rex.WR add al,0x7
    6186:	ae                   	scas   al,BYTE PTR es:[rdi]
    6187:	6a 00                	push   0x0
    6189:	00 f1                	add    cl,dh
    618b:	72 00                	jb     618d <__TMC_END__+0x2175>
    618d:	00 01                	add    BYTE PTR [rcx],al
    618f:	97                   	xchg   edi,eax
    6190:	61                   	(bad)
    6191:	00 00                	add    BYTE PTR [rax],al
    6193:	9d                   	popf
    6194:	61                   	(bad)
    6195:	00 00                	add    BYTE PTR [rax],al
    6197:	02 e2                	add    ah,dl
    6199:	72 00                	jb     619b <__TMC_END__+0x2183>
    619b:	00 00                	add    BYTE PTR [rax],al
    619d:	03 e7                	add    esp,edi
    619f:	63 00                	movsxd eax,DWORD PTR [rax]
    61a1:	00 2a                	add    BYTE PTR [rdx],ch
    61a3:	54                   	push   rsp
    61a4:	04 07                	add    al,0x7
    61a6:	22 06                	and    al,BYTE PTR [rsi]
    61a8:	00 00                	add    BYTE PTR [rax],al
    61aa:	d2 60 00             	shl    BYTE PTR [rax+0x0],cl
    61ad:	00 01                	add    BYTE PTR [rcx],al
    61af:	b7 61                	mov    bh,0x61
    61b1:	00 00                	add    BYTE PTR [rax],al
    61b3:	c2 61 00             	ret    0x61
    61b6:	00 02                	add    BYTE PTR [rdx],al
    61b8:	e2 72                	loop   622c <__TMC_END__+0x2214>
    61ba:	00 00                	add    BYTE PTR [rax],al
    61bc:	01 f1                	add    ecx,esi
    61be:	00 00                	add    BYTE PTR [rax],al
    61c0:	00 00                	add    BYTE PTR [rax],al
    61c2:	03 e6                	add    esp,esi
    61c4:	65 00 00             	add    BYTE PTR gs:[rax],al
    61c7:	2a 5a 04             	sub    bl,BYTE PTR [rdx+0x4]
    61ca:	07                   	(bad)
    61cb:	24 94                	and    al,0x94
    61cd:	00 00                	add    BYTE PTR [rax],al
    61cf:	f1                   	int1
    61d0:	72 00                	jb     61d2 <__TMC_END__+0x21ba>
    61d2:	00 01                	add    BYTE PTR [rcx],al
    61d4:	dc 61 00             	fsub   QWORD PTR [rcx+0x0]
    61d7:	00 e2                	add    dl,ah
    61d9:	61                   	(bad)
    61da:	00 00                	add    BYTE PTR [rax],al
    61dc:	02 e2                	add    ah,dl
    61de:	72 00                	jb     61e0 <__TMC_END__+0x21c8>
    61e0:	00 00                	add    BYTE PTR [rax],al
    61e2:	03 e6                	add    esp,esi
    61e4:	65 00 00             	add    BYTE PTR gs:[rax],al
    61e7:	2a 62 04             	sub    ah,BYTE PTR [rdx+0x4]
    61ea:	07                   	(bad)
    61eb:	b3 76                	mov    bl,0x76
    61ed:	00 00                	add    BYTE PTR [rax],al
    61ef:	d2 60 00             	shl    BYTE PTR [rax+0x0],cl
    61f2:	00 01                	add    BYTE PTR [rcx],al
    61f4:	fc                   	cld
    61f5:	61                   	(bad)
    61f6:	00 00                	add    BYTE PTR [rax],al
    61f8:	07                   	(bad)
    61f9:	62                   	(bad)
    61fa:	00 00                	add    BYTE PTR [rax],al
    61fc:	02 e2                	add    ah,dl
    61fe:	72 00                	jb     6200 <__TMC_END__+0x21e8>
    6200:	00 01                	add    BYTE PTR [rcx],al
    6202:	f1                   	int1
    6203:	00 00                	add    BYTE PTR [rax],al
    6205:	00 00                	add    BYTE PTR [rax],al
    6207:	03 d1                	add    edx,ecx
    6209:	42 00 00             	rex.X add BYTE PTR [rax],al
    620c:	2a 68 04             	sub    ch,BYTE PTR [rax+0x4]
    620f:	07                   	(bad)
    6210:	f6 73 00             	div    BYTE PTR [rbx+0x0]
    6213:	00 25 61 00 00 01    	add    BYTE PTR [rip+0x1000061],ah        # 100627a <__TMC_END__+0x1002262>
    6219:	21 62 00             	and    DWORD PTR [rdx+0x0],esp
    621c:	00 2c 62             	add    BYTE PTR [rdx+riz*2],ch
    621f:	00 00                	add    BYTE PTR [rax],al
    6221:	02 ec                	add    ch,ah
    6223:	72 00                	jb     6225 <__TMC_END__+0x220d>
    6225:	00 01                	add    BYTE PTR [rcx],al
    6227:	2c 62                	sub    al,0x62
    6229:	00 00                	add    BYTE PTR [rax],al
    622b:	00 20                	add    BYTE PTR [rax],ah
    622d:	66 4e 00 00          	data16 rex.WRX add BYTE PTR [rax],r8b
    6231:	1f                   	(bad)
    6232:	04 38                	add    al,0x38
    6234:	f2 39 00             	repnz cmp DWORD PTR [rax],eax
    6237:	00 03                	add    BYTE PTR [rbx],al
    6239:	30 63 00             	xor    BYTE PTR [rbx+0x0],ah
    623c:	00 2a                	add    BYTE PTR [rdx],ch
    623e:	6d                   	ins    DWORD PTR es:[rdi],dx
    623f:	04 07                	add    al,0x7
    6241:	cf                   	iret
    6242:	23 00                	and    eax,DWORD PTR [rax]
    6244:	00 f1                	add    cl,dh
    6246:	72 00                	jb     6248 <__TMC_END__+0x2230>
    6248:	00 01                	add    BYTE PTR [rcx],al
    624a:	52                   	push   rdx
    624b:	62                   	(bad)
    624c:	00 00                	add    BYTE PTR [rax],al
    624e:	5d                   	pop    rbp
    624f:	62                   	(bad)
    6250:	00 00                	add    BYTE PTR [rax],al
    6252:	02 e2                	add    ah,dl
    6254:	72 00                	jb     6256 <__TMC_END__+0x223e>
    6256:	00 01                	add    BYTE PTR [rcx],al
    6258:	2c 62                	sub    al,0x62
    625a:	00 00                	add    BYTE PTR [rax],al
    625c:	00 03                	add    BYTE PTR [rbx],al
    625e:	6c                   	ins    BYTE PTR es:[rdi],dx
    625f:	1c 00                	sbb    al,0x0
    6261:	00 2a                	add    BYTE PTR [rdx],ch
    6263:	72 04                	jb     6269 <__TMC_END__+0x2251>
    6265:	07                   	(bad)
    6266:	d5 00 00 00          	{rex2 0x0} add BYTE PTR [rax],al
    626a:	d2 60 00             	shl    BYTE PTR [rax+0x0],cl
    626d:	00 01                	add    BYTE PTR [rcx],al
    626f:	77 62                	ja     62d3 <__TMC_END__+0x22bb>
    6271:	00 00                	add    BYTE PTR [rax],al
    6273:	82                   	(bad)
    6274:	62                   	(bad)
    6275:	00 00                	add    BYTE PTR [rax],al
    6277:	02 ec                	add    ch,ah
    6279:	72 00                	jb     627b <__TMC_END__+0x2263>
    627b:	00 01                	add    BYTE PTR [rcx],al
    627d:	2c 62                	sub    al,0x62
    627f:	00 00                	add    BYTE PTR [rax],al
    6281:	00 03                	add    BYTE PTR [rbx],al
    6283:	4c                   	rex.WR
    6284:	66 00 00             	data16 add BYTE PTR [rax],al
    6287:	2a 77 04             	sub    dh,BYTE PTR [rdi+0x4]
    628a:	07                   	(bad)
    628b:	94                   	xchg   esp,eax
    628c:	78 00                	js     628e <__TMC_END__+0x2276>
    628e:	00 f1                	add    cl,dh
    6290:	72 00                	jb     6292 <__TMC_END__+0x227a>
    6292:	00 01                	add    BYTE PTR [rcx],al
    6294:	9c                   	pushf
    6295:	62                   	(bad)
    6296:	00 00                	add    BYTE PTR [rax],al
    6298:	a7                   	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
    6299:	62                   	(bad)
    629a:	00 00                	add    BYTE PTR [rax],al
    629c:	02 e2                	add    ah,dl
    629e:	72 00                	jb     62a0 <__TMC_END__+0x2288>
    62a0:	00 01                	add    BYTE PTR [rcx],al
    62a2:	2c 62                	sub    al,0x62
    62a4:	00 00                	add    BYTE PTR [rax],al
    62a6:	00 03                	add    BYTE PTR [rbx],al
    62a8:	76 1c                	jbe    62c6 <__TMC_END__+0x22ae>
    62aa:	00 00                	add    BYTE PTR [rax],al
    62ac:	2a 7c 04 07          	sub    bh,BYTE PTR [rsp+rax*1+0x7]
    62b0:	bd 26 00 00 d2       	mov    ebp,0xd2000026
    62b5:	60                   	(bad)
    62b6:	00 00                	add    BYTE PTR [rax],al
    62b8:	01 c1                	add    ecx,eax
    62ba:	62                   	(bad)
    62bb:	00 00                	add    BYTE PTR [rax],al
    62bd:	cc                   	int3
    62be:	62                   	(bad)
    62bf:	00 00                	add    BYTE PTR [rax],al
    62c1:	02 ec                	add    ch,ah
    62c3:	72 00                	jb     62c5 <__TMC_END__+0x22ad>
    62c5:	00 01                	add    BYTE PTR [rcx],al
    62c7:	2c 62                	sub    al,0x62
    62c9:	00 00                	add    BYTE PTR [rax],al
    62cb:	00 03                	add    BYTE PTR [rbx],al
    62cd:	90                   	nop
    62ce:	51                   	push   rcx
    62cf:	00 00                	add    BYTE PTR [rax],al
    62d1:	2a 81 04 07 10 6d    	sub    al,BYTE PTR [rcx+0x6d100704]
    62d7:	00 00                	add    BYTE PTR [rax],al
    62d9:	e7 72                	out    0x72,eax
    62db:	00 00                	add    BYTE PTR [rax],al
    62dd:	01 e6                	add    esi,esp
    62df:	62                   	(bad)
    62e0:	00 00                	add    BYTE PTR [rax],al
    62e2:	ec                   	in     al,dx
    62e3:	62                   	(bad)
    62e4:	00 00                	add    BYTE PTR [rax],al
    62e6:	02 ec                	add    ch,ah
    62e8:	72 00                	jb     62ea <__TMC_END__+0x22d2>
    62ea:	00 00                	add    BYTE PTR [rax],al
    62ec:	14 71                	adc    al,0x71
    62ee:	73 00                	jae    62f0 <__TMC_END__+0x22d8>
    62f0:	00 c0                	add    al,al
    62f2:	02 00                	add    al,BYTE PTR [rax]
    62f4:	00 14 4c             	add    BYTE PTR [rsp+rcx*2],dl
    62f7:	3e 00 00             	ds add BYTE PTR [rax],al
    62fa:	50                   	push   rax
    62fb:	1c 00                	sbb    al,0x0
    62fd:	00 00                	add    BYTE PTR [rax],al
    62ff:	0f d2 60 00          	psrld  mm4,QWORD PTR [rax+0x0]
    6303:	00 2b                	add    BYTE PTR [rbx],ch
    6305:	2b 3f                	sub    edi,DWORD PTR [rdi]
    6307:	00 00                	add    BYTE PTR [rax],al
    6309:	08 2a                	or     BYTE PTR [rdx],ch
    630b:	0e                   	(bad)
    630c:	04 0b                	add    al,0xb
    630e:	31 65 00             	xor    DWORD PTR [rbp+0x0],esp
    6311:	00 3d 24 36 00 00    	add    BYTE PTR [rip+0x3624],bh        # 993b <__TMC_END__+0x5923>
    6317:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    631a:	00 12                	add    BYTE PTR [rdx],dl
    631c:	17                   	(bad)
    631d:	83 00 00             	add    DWORD PTR [rax],0x0
    6320:	2a 27                	sub    ah,BYTE PTR [rdi]
    6322:	04 1a                	add    al,0x1a
    6324:	74 54                	je     637a <__TMC_END__+0x2362>
    6326:	00 00                	add    BYTE PTR [rax],al
    6328:	01 31                	add    DWORD PTR [rcx],esi
    632a:	63 00                	movsxd eax,DWORD PTR [rax]
    632c:	00 37                	add    BYTE PTR [rdi],dh
    632e:	63 00                	movsxd eax,DWORD PTR [rax]
    6330:	00 02                	add    BYTE PTR [rdx],al
    6332:	3e 74 00             	ds je  6335 <__TMC_END__+0x231d>
    6335:	00 00                	add    BYTE PTR [rax],al
    6337:	2a 17                	sub    dl,BYTE PTR [rdi]
    6339:	83 00 00             	add    DWORD PTR [rax],0x0
    633c:	2a 2b                	sub    ch,BYTE PTR [rbx]
    633e:	04 39                	add    al,0x39
    6340:	7d 00                	jge    6342 <__TMC_END__+0x232a>
    6342:	00 01                	add    BYTE PTR [rcx],al
    6344:	4c 63 00             	movsxd r8,DWORD PTR [rax]
    6347:	00 57 63             	add    BYTE PTR [rdi+0x63],dl
    634a:	00 00                	add    BYTE PTR [rax],al
    634c:	02 3e                	add    bh,BYTE PTR [rsi]
    634e:	74 00                	je     6350 <__TMC_END__+0x2338>
    6350:	00 01                	add    BYTE PTR [rcx],al
    6352:	d3 72 00             	shl    DWORD PTR [rdx+0x0],cl
    6355:	00 00                	add    BYTE PTR [rax],al
    6357:	20 42 6c             	and    BYTE PTR [rdx+0x6c],al
    635a:	00 00                	add    BYTE PTR [rax],al
    635c:	20 04 32             	and    BYTE PTR [rdx+rsi*1],al
    635f:	37                   	(bad)
    6360:	3d 00 00 03 62       	cmp    eax,0x62030000
    6365:	1c 00                	sbb    al,0x0
    6367:	00 2a                	add    BYTE PTR [rdx],ch
    6369:	42 04 07             	rex.X add al,0x7
    636c:	0d 43 00 00 57       	or     eax,0x57000043
    6371:	63 00                	movsxd eax,DWORD PTR [rax]
    6373:	00 01                	add    BYTE PTR [rcx],al
    6375:	7d 63                	jge    63da <__TMC_END__+0x23c2>
    6377:	00 00                	add    BYTE PTR [rax],al
    6379:	83 63 00 00          	and    DWORD PTR [rbx+0x0],0x0
    637d:	02 43 74             	add    al,BYTE PTR [rbx+0x74]
    6380:	00 00                	add    BYTE PTR [rax],al
    6382:	00 20                	add    BYTE PTR [rax],ah
    6384:	34 6c                	xor    al,0x6c
    6386:	00 00                	add    BYTE PTR [rax],al
    6388:	21 04 32             	and    DWORD PTR [rdx+rsi*1],eax
    638b:	2b 3d 00 00 03 57    	sub    edi,DWORD PTR [rip+0x57030000]        # 57036391 <__TMC_END__+0x57032379>
    6391:	66 00 00             	data16 add BYTE PTR [rax],al
    6394:	2a 47 04             	sub    al,BYTE PTR [rdi+0x4]
    6397:	07                   	(bad)
    6398:	07                   	(bad)
    6399:	67 00 00             	add    BYTE PTR [eax],al
    639c:	83 63 00 00          	and    DWORD PTR [rbx+0x0],0x0
    63a0:	01 a9 63 00 00 af    	add    DWORD PTR [rcx-0x50ffff9d],ebp
    63a6:	63 00                	movsxd eax,DWORD PTR [rax]
    63a8:	00 02                	add    BYTE PTR [rdx],al
    63aa:	43 74 00             	rex.XB je 63ad <__TMC_END__+0x2395>
    63ad:	00 00                	add    BYTE PTR [rax],al
    63af:	03 e7                	add    esp,edi
    63b1:	63 00                	movsxd eax,DWORD PTR [rax]
    63b3:	00 2a                	add    BYTE PTR [rdx],ch
    63b5:	4c 04 07             	rex.WR add al,0x7
    63b8:	22 0d 00 00 48 74    	and    cl,BYTE PTR [rip+0x74480000]        # 744863be <__TMC_END__+0x744823a6>
    63be:	00 00                	add    BYTE PTR [rax],al
    63c0:	01 c9                	add    ecx,ecx
    63c2:	63 00                	movsxd eax,DWORD PTR [rax]
    63c4:	00 cf                	add    bh,cl
    63c6:	63 00                	movsxd eax,DWORD PTR [rax]
    63c8:	00 02                	add    BYTE PTR [rdx],al
    63ca:	3e 74 00             	ds je  63cd <__TMC_END__+0x23b5>
    63cd:	00 00                	add    BYTE PTR [rax],al
    63cf:	03 e7                	add    esp,edi
    63d1:	63 00                	movsxd eax,DWORD PTR [rax]
    63d3:	00 2a                	add    BYTE PTR [rdx],ch
    63d5:	54                   	push   rsp
    63d6:	04 07                	add    al,0x7
    63d8:	7d 0c                	jge    63e6 <__TMC_END__+0x23ce>
    63da:	00 00                	add    BYTE PTR [rax],al
    63dc:	04 63                	add    al,0x63
    63de:	00 00                	add    BYTE PTR [rax],al
    63e0:	01 e9                	add    ecx,ebp
    63e2:	63 00                	movsxd eax,DWORD PTR [rax]
    63e4:	00 f4                	add    ah,dh
    63e6:	63 00                	movsxd eax,DWORD PTR [rax]
    63e8:	00 02                	add    BYTE PTR [rdx],al
    63ea:	3e 74 00             	ds je  63ed <__TMC_END__+0x23d5>
    63ed:	00 01                	add    BYTE PTR [rcx],al
    63ef:	f1                   	int1
    63f0:	00 00                	add    BYTE PTR [rax],al
    63f2:	00 00                	add    BYTE PTR [rax],al
    63f4:	03 e6                	add    esp,esi
    63f6:	65 00 00             	add    BYTE PTR gs:[rax],al
    63f9:	2a 5a 04             	sub    bl,BYTE PTR [rdx+0x4]
    63fc:	07                   	(bad)
    63fd:	01 34 00             	add    DWORD PTR [rax+rax*1],esi
    6400:	00 48 74             	add    BYTE PTR [rax+0x74],cl
    6403:	00 00                	add    BYTE PTR [rax],al
    6405:	01 0e                	add    DWORD PTR [rsi],ecx
    6407:	64 00 00             	add    BYTE PTR fs:[rax],al
    640a:	14 64                	adc    al,0x64
    640c:	00 00                	add    BYTE PTR [rax],al
    640e:	02 3e                	add    bh,BYTE PTR [rsi]
    6410:	74 00                	je     6412 <__TMC_END__+0x23fa>
    6412:	00 00                	add    BYTE PTR [rax],al
    6414:	03 e6                	add    esp,esi
    6416:	65 00 00             	add    BYTE PTR gs:[rax],al
    6419:	2a 62 04             	sub    ah,BYTE PTR [rdx+0x4]
    641c:	07                   	(bad)
    641d:	8f 09 00 00          	(bad)
    6421:	04 63                	add    al,0x63
    6423:	00 00                	add    BYTE PTR [rax],al
    6425:	01 2e                	add    DWORD PTR [rsi],ebp
    6427:	64 00 00             	add    BYTE PTR fs:[rax],al
    642a:	39 64 00 00          	cmp    DWORD PTR [rax+rax*1+0x0],esp
    642e:	02 3e                	add    bh,BYTE PTR [rsi]
    6430:	74 00                	je     6432 <__TMC_END__+0x241a>
    6432:	00 01                	add    BYTE PTR [rcx],al
    6434:	f1                   	int1
    6435:	00 00                	add    BYTE PTR [rax],al
    6437:	00 00                	add    BYTE PTR [rax],al
    6439:	03 d1                	add    edx,ecx
    643b:	42 00 00             	rex.X add BYTE PTR [rax],al
    643e:	2a 68 04             	sub    ch,BYTE PTR [rax+0x4]
    6441:	07                   	(bad)
    6442:	b3 67                	mov    bl,0x67
    6444:	00 00                	add    BYTE PTR [rax],al
    6446:	57                   	push   rdi
    6447:	63 00                	movsxd eax,DWORD PTR [rax]
    6449:	00 01                	add    BYTE PTR [rcx],al
    644b:	53                   	push   rbx
    644c:	64 00 00             	add    BYTE PTR fs:[rax],al
    644f:	5e                   	pop    rsi
    6450:	64 00 00             	add    BYTE PTR fs:[rax],al
    6453:	02 43 74             	add    al,BYTE PTR [rbx+0x74]
    6456:	00 00                	add    BYTE PTR [rax],al
    6458:	01 5e 64             	add    DWORD PTR [rsi+0x64],ebx
    645b:	00 00                	add    BYTE PTR [rax],al
    645d:	00 20                	add    BYTE PTR [rax],ah
    645f:	66 4e 00 00          	data16 rex.WRX add BYTE PTR [rax],r8b
    6463:	1f                   	(bad)
    6464:	04 38                	add    al,0x38
    6466:	1f                   	(bad)
    6467:	3d 00 00 03 30       	cmp    eax,0x30030000
    646c:	63 00                	movsxd eax,DWORD PTR [rax]
    646e:	00 2a                	add    BYTE PTR [rdx],ch
    6470:	6d                   	ins    DWORD PTR es:[rdi],dx
    6471:	04 07                	add    al,0x7
    6473:	82                   	(bad)
    6474:	58                   	pop    rax
    6475:	00 00                	add    BYTE PTR [rax],al
    6477:	48 74 00             	rex.W je 647a <__TMC_END__+0x2462>
    647a:	00 01                	add    BYTE PTR [rcx],al
    647c:	84 64 00 00          	test   BYTE PTR [rax+rax*1+0x0],ah
    6480:	8f                   	(bad)
    6481:	64 00 00             	add    BYTE PTR fs:[rax],al
    6484:	02 3e                	add    bh,BYTE PTR [rsi]
    6486:	74 00                	je     6488 <__TMC_END__+0x2470>
    6488:	00 01                	add    BYTE PTR [rcx],al
    648a:	5e                   	pop    rsi
    648b:	64 00 00             	add    BYTE PTR fs:[rax],al
    648e:	00 03                	add    BYTE PTR [rbx],al
    6490:	6c                   	ins    BYTE PTR es:[rdi],dx
    6491:	1c 00                	sbb    al,0x0
    6493:	00 2a                	add    BYTE PTR [rdx],ch
    6495:	72 04                	jb     649b <__TMC_END__+0x2483>
    6497:	07                   	(bad)
    6498:	13 89 00 00 04 63    	adc    ecx,DWORD PTR [rcx+0x63040000]
    649e:	00 00                	add    BYTE PTR [rax],al
    64a0:	01 a9 64 00 00 b4    	add    DWORD PTR [rcx-0x4bffff9c],ebp
    64a6:	64 00 00             	add    BYTE PTR fs:[rax],al
    64a9:	02 43 74             	add    al,BYTE PTR [rbx+0x74]
    64ac:	00 00                	add    BYTE PTR [rax],al
    64ae:	01 5e 64             	add    DWORD PTR [rsi+0x64],ebx
    64b1:	00 00                	add    BYTE PTR [rax],al
    64b3:	00 03                	add    BYTE PTR [rbx],al
    64b5:	4c                   	rex.WR
    64b6:	66 00 00             	data16 add BYTE PTR [rax],al
    64b9:	2a 77 04             	sub    dh,BYTE PTR [rdi+0x4]
    64bc:	07                   	(bad)
    64bd:	4e 7f 00             	rex.WRX jg 64c0 <__TMC_END__+0x24a8>
    64c0:	00 48 74             	add    BYTE PTR [rax+0x74],cl
    64c3:	00 00                	add    BYTE PTR [rax],al
    64c5:	01 ce                	add    esi,ecx
    64c7:	64 00 00             	add    BYTE PTR fs:[rax],al
    64ca:	d9 64 00 00          	fldenv [rax+rax*1+0x0]
    64ce:	02 3e                	add    bh,BYTE PTR [rsi]
    64d0:	74 00                	je     64d2 <__TMC_END__+0x24ba>
    64d2:	00 01                	add    BYTE PTR [rcx],al
    64d4:	5e                   	pop    rsi
    64d5:	64 00 00             	add    BYTE PTR fs:[rax],al
    64d8:	00 03                	add    BYTE PTR [rbx],al
    64da:	76 1c                	jbe    64f8 <__TMC_END__+0x24e0>
    64dc:	00 00                	add    BYTE PTR [rax],al
    64de:	2a 7c 04 07          	sub    bh,BYTE PTR [rsp+rax*1+0x7]
    64e2:	f7 02 00 00 04 63    	test   DWORD PTR [rdx],0x63040000
    64e8:	00 00                	add    BYTE PTR [rax],al
    64ea:	01 f3                	add    ebx,esi
    64ec:	64 00 00             	add    BYTE PTR fs:[rax],al
    64ef:	fe                   	(bad)
    64f0:	64 00 00             	add    BYTE PTR fs:[rax],al
    64f3:	02 43 74             	add    al,BYTE PTR [rbx+0x74]
    64f6:	00 00                	add    BYTE PTR [rax],al
    64f8:	01 5e 64             	add    DWORD PTR [rsi+0x64],ebx
    64fb:	00 00                	add    BYTE PTR [rax],al
    64fd:	00 03                	add    BYTE PTR [rbx],al
    64ff:	90                   	nop
    6500:	51                   	push   rcx
    6501:	00 00                	add    BYTE PTR [rax],al
    6503:	2a 81 04 07 16 93    	sub    al,BYTE PTR [rcx-0x6ce9f8fc]
    6509:	00 00                	add    BYTE PTR [rax],al
    650b:	d3 72 00             	shl    DWORD PTR [rdx+0x0],cl
    650e:	00 01                	add    BYTE PTR [rcx],al
    6510:	18 65 00             	sbb    BYTE PTR [rbp+0x0],ah
    6513:	00 1e                	add    BYTE PTR [rsi],bl
    6515:	65 00 00             	add    BYTE PTR gs:[rax],al
    6518:	02 43 74             	add    al,BYTE PTR [rbx+0x74]
    651b:	00 00                	add    BYTE PTR [rax],al
    651d:	00 14 71             	add    BYTE PTR [rcx+rsi*2],dl
    6520:	73 00                	jae    6522 <__TMC_END__+0x250a>
    6522:	00 03                	add    BYTE PTR [rbx],al
    6524:	58                   	pop    rax
    6525:	00 00                	add    BYTE PTR [rax],al
    6527:	14 4c                	adc    al,0x4c
    6529:	3e 00 00             	ds add BYTE PTR [rax],al
    652c:	9d                   	popf
    652d:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    6530:	00 0f                	add    BYTE PTR [rdi],cl
    6532:	04 63                	add    al,0x63
    6534:	00 00                	add    BYTE PTR [rax],al
    6536:	00 0a                	add    BYTE PTR [rdx],cl
    6538:	14 65                	adc    al,0x65
    653a:	00 00                	add    BYTE PTR [rax],al
    653c:	2c 99                	sub    al,0x99
    653e:	01 14 53             	add    DWORD PTR [rbx+rdx*2],edx
    6541:	65 00 00             	add    BYTE PTR gs:[rax],al
    6544:	53                   	push   rbx
    6545:	65 00 00             	add    BYTE PTR gs:[rax],al
    6548:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    654b:	00 00                	add    BYTE PTR [rax],al
    654d:	01 3f                	add    DWORD PTR [rdi],edi
    654f:	5a                   	pop    rdx
    6550:	00 00                	add    BYTE PTR [rax],al
    6552:	00 13                	add    BYTE PTR [rbx],dl
    6554:	10 04 b0             	adc    BYTE PTR [rax+rsi*4],al
    6557:	60                   	(bad)
    6558:	00 00                	add    BYTE PTR [rax],al
    655a:	09 61 39             	or     DWORD PTR [rcx+0x39],esp
    655d:	00 00                	add    BYTE PTR [rax],al
    655f:	2c fc                	sub    al,0xfc
    6561:	01 16                	add    DWORD PTR [rsi],edx
    6563:	58                   	pop    rax
    6564:	39 00                	cmp    DWORD PTR [rax],eax
    6566:	00 7f 65             	add    BYTE PTR [rdi+0x65],bh
    6569:	00 00                	add    BYTE PTR [rax],al
    656b:	7f 65                	jg     65d2 <__TMC_END__+0x25ba>
    656d:	00 00                	add    BYTE PTR [rax],al
    656f:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    6572:	00 00                	add    BYTE PTR [rax],al
    6574:	01 3f                	add    DWORD PTR [rdi],edi
    6576:	5a                   	pop    rdx
    6577:	00 00                	add    BYTE PTR [rax],al
    6579:	01 f1                	add    ecx,esi
    657b:	00 00                	add    BYTE PTR [rax],al
    657d:	00 00                	add    BYTE PTR [rax],al
    657f:	13 08                	adc    ecx,DWORD PTR [rax]
    6581:	05 98 24 00 00       	add    eax,0x2498
    6586:	09 a8 08 00 00 2c    	or     DWORD PTR [rax+0x2c000008],ebp
    658c:	01 02                	add    DWORD PTR [rdx],eax
    658e:	1f                   	(bad)
    658f:	9f                   	lahf
    6590:	08 00                	or     BYTE PTR [rax],al
    6592:	00 ab 65 00 00 ab    	add    BYTE PTR [rbx-0x54ffff9b],ch
    6598:	65 00 00             	add    BYTE PTR gs:[rax],al
    659b:	01 63 55             	add    DWORD PTR [rbx+0x55],esp
    659e:	00 00                	add    BYTE PTR [rax],al
    65a0:	01 3f                	add    DWORD PTR [rdi],edi
    65a2:	5a                   	pop    rdx
    65a3:	00 00                	add    BYTE PTR [rax],al
    65a5:	01 f1                	add    ecx,esi
    65a7:	00 00                	add    BYTE PTR [rax],al
    65a9:	00 00                	add    BYTE PTR [rax],al
    65ab:	13 08                	adc    ecx,DWORD PTR [rax]
    65ad:	07                   	(bad)
    65ae:	e2 7a                	loop   662a <__TMC_END__+0x2612>
    65b0:	00 00                	add    BYTE PTR [rax],al
    65b2:	7b 20                	jnp    65d4 <__TMC_END__+0x25bc>
    65b4:	10 03                	adc    BYTE PTR [rbx],al
    65b6:	a9 01 10 6f 12       	test   eax,0x126f1001
    65bb:	00 00                	add    BYTE PTR [rax],al
    65bd:	de 65 00             	fisub  WORD PTR [rbp+0x0]
    65c0:	00 4b b7             	add    BYTE PTR [rbx-0x49],cl
    65c3:	0e                   	(bad)
    65c4:	00 00                	add    BYTE PTR [rax],al
    65c6:	aa                   	stos   BYTE PTR es:[rdi],al
    65c7:	01 0d 7f 65 00 00    	add    DWORD PTR [rip+0x657f],ecx        # cb4c <__TMC_END__+0x8b34>
    65cd:	08 00                	or     BYTE PTR [rax],al
    65cf:	4b a3 0e 00 00 ab 01 	rex.WXB movabs ds:0x65530f01ab00000e,rax
    65d6:	0f 53 65 
    65d9:	00 00                	add    BYTE PTR [rax],al
    65db:	10 10                	adc    BYTE PTR [rax],dl
    65dd:	00 7c 71 12          	add    BYTE PTR [rcx+rsi*2+0x12],bh
    65e1:	00 00                	add    BYTE PTR [rax],al
    65e3:	03 b4 01 03 b2 65 00 	add    esi,DWORD PTR [rcx+rax*1+0x65b203]
    65ea:	00 10                	add    BYTE PTR [rax],dl
    65ec:	4c 12 40 00          	rex.WR adc r8b,BYTE PTR [rax+0x0]
    65f0:	00 13                	add    BYTE PTR [rbx],dl
    65f2:	01 02                	add    DWORD PTR [rdx],eax
    65f4:	fb                   	sti
    65f5:	0d 00 00 0f f1       	or     eax,0xf10f0000
    65fa:	65 00 00             	add    BYTE PTR gs:[rax],al
    65fd:	13 01                	adc    eax,DWORD PTR [rcx]
    65ff:	08 1c 22             	or     BYTE PTR [rdx+riz*1],bl
    6602:	00 00                	add    BYTE PTR [rax],al
    6604:	13 01                	adc    eax,DWORD PTR [rcx]
    6606:	06                   	(bad)
    6607:	1e                   	(bad)
    6608:	22 00                	and    al,BYTE PTR [rax]
    660a:	00 13                	add    BYTE PTR [rbx],dl
    660c:	02 05 95 90 00 00    	add    al,BYTE PTR [rip+0x9095]        # f6a7 <__TMC_END__+0xb68f>
    6612:	13 01                	adc    eax,DWORD PTR [rcx]
    6614:	10 b7 65 00 00 13    	adc    BYTE PTR [rdi+0x13000065],dh
    661a:	02 10                	add    dl,BYTE PTR [rax]
    661c:	41 8c 00             	mov    WORD PTR [r8],es
    661f:	00 13                	add    BYTE PTR [rbx],dl
    6621:	04 10                	add    al,0x10
    6623:	fe 4a 00             	dec    BYTE PTR [rdx+0x0]
    6626:	00 08                	add    BYTE PTR [rax],cl
    6628:	7f 05                	jg     662f <__TMC_END__+0x2617>
    662a:	00 00                	add    BYTE PTR [rax],al
    662c:	08 40 07             	or     BYTE PTR [rax+0x7],al
    662f:	00 00                	add    BYTE PTR [rax],al
    6631:	0e                   	(bad)
    6632:	40 07                	rex (bad)
    6634:	00 00                	add    BYTE PTR [rax],al
    6636:	34 7f                	xor    al,0x7f
    6638:	05 00 00 0e 7f       	add    eax,0x7f0e0000
    663d:	05 00 00 08 95       	add    eax,0x95080000
    6642:	07                   	(bad)
    6643:	00 00                	add    BYTE PTR [rax],al
    6645:	13 10                	adc    edx,DWORD PTR [rax]
    6647:	05 96 4a 00 00       	add    eax,0x4a96
    664c:	0e                   	(bad)
    664d:	05 0b 00 00 0e       	add    eax,0xe00000b
    6652:	12 0b                	adc    cl,BYTE PTR [rbx]
    6654:	00 00                	add    BYTE PTR [rax],al
    6656:	08 12                	or     BYTE PTR [rdx],dl
    6658:	0b 00                	or     eax,DWORD PTR [rax]
    665a:	00 08                	add    BYTE PTR [rax],cl
    665c:	05 0b 00 00 0e       	add    eax,0xe00000b
    6661:	4d 0c 00             	rex.WRB or al,0x0
    6664:	00 1a                	add    BYTE PTR [rdx],bl
    6666:	28 00                	sub    BYTE PTR [rax],al
    6668:	00 00                	add    BYTE PTR [rax],al
    666a:	60                   	(bad)
    666b:	30 33                	xor    BYTE PTR [rbx],dh
    666d:	08 ab 67 00 00 07    	or     BYTE PTR [rbx+0x7000067],ch
    6673:	92                   	xchg   edx,eax
    6674:	5e                   	pop    rsi
    6675:	00 00                	add    BYTE PTR [rax],al
    6677:	30 37                	xor    BYTE PTR [rdi],dh
    6679:	09 03                	or     DWORD PTR [rbx],eax
    667b:	58                   	pop    rax
    667c:	00 00                	add    BYTE PTR [rax],al
    667e:	00 07                	add    BYTE PTR [rdi],al
    6680:	0b 38                	or     edi,DWORD PTR [rax]
    6682:	00 00                	add    BYTE PTR [rax],al
    6684:	30 38                	xor    BYTE PTR [rax],bh
    6686:	09 03                	or     DWORD PTR [rbx],eax
    6688:	58                   	pop    rax
    6689:	00 00                	add    BYTE PTR [rax],al
    668b:	08 07                	or     BYTE PTR [rdi],al
    668d:	2a 4a 00             	sub    cl,BYTE PTR [rdx+0x0]
    6690:	00 30                	add    BYTE PTR [rax],dh
    6692:	3e 09 03             	ds or  DWORD PTR [rbx],eax
    6695:	58                   	pop    rax
    6696:	00 00                	add    BYTE PTR [rax],al
    6698:	10 07                	adc    BYTE PTR [rdi],al
    669a:	a1 2e 00 00 30 44 09 	movabs eax,ds:0x580309443000002e
    66a1:	03 58 
    66a3:	00 00                	add    BYTE PTR [rax],al
    66a5:	18 07                	sbb    BYTE PTR [rdi],al
    66a7:	00 1e                	add    BYTE PTR [rsi],bl
    66a9:	00 00                	add    BYTE PTR [rax],al
    66ab:	30 45 09             	xor    BYTE PTR [rbp+0x9],al
    66ae:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    66b1:	00 20                	add    BYTE PTR [rax],ah
    66b3:	07                   	(bad)
    66b4:	8e 5e 00             	mov    ds,WORD PTR [rsi+0x0]
    66b7:	00 30                	add    BYTE PTR [rax],dh
    66b9:	46 09 03             	rex.RX or DWORD PTR [rbx],r8d
    66bc:	58                   	pop    rax
    66bd:	00 00                	add    BYTE PTR [rax],al
    66bf:	28 07                	sub    BYTE PTR [rdi],al
    66c1:	07                   	(bad)
    66c2:	38 00                	cmp    BYTE PTR [rax],al
    66c4:	00 30                	add    BYTE PTR [rax],dh
    66c6:	47 09 03             	rex.RXB or DWORD PTR [r11],r8d
    66c9:	58                   	pop    rax
    66ca:	00 00                	add    BYTE PTR [rax],al
    66cc:	30 07                	xor    BYTE PTR [rdi],al
    66ce:	26 4a 00 00          	es rex.WX add BYTE PTR [rax],al
    66d2:	30 48 09             	xor    BYTE PTR [rax+0x9],cl
    66d5:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    66d8:	00 38                	add    BYTE PTR [rax],bh
    66da:	07                   	(bad)
    66db:	22 78 00             	and    bh,BYTE PTR [rax+0x0]
    66de:	00 30                	add    BYTE PTR [rax],dh
    66e0:	49 09 03             	or     QWORD PTR [r11],rax
    66e3:	58                   	pop    rax
    66e4:	00 00                	add    BYTE PTR [rax],al
    66e6:	40 07                	rex (bad)
    66e8:	f3 2c 00             	repz sub al,0x0
    66eb:	00 30                	add    BYTE PTR [rax],dh
    66ed:	4a 09 03             	rex.WX or QWORD PTR [rbx],rax
    66f0:	58                   	pop    rax
    66f1:	00 00                	add    BYTE PTR [rax],al
    66f3:	48 07                	rex.W (bad)
    66f5:	82                   	(bad)
    66f6:	18 00                	sbb    BYTE PTR [rax],al
    66f8:	00 30                	add    BYTE PTR [rax],dh
    66fa:	4b 08 e5             	rex.WXB or r13b,spl
    66fd:	00 00                	add    BYTE PTR [rax],al
    66ff:	00 50 07             	add    BYTE PTR [rax+0x7],dl
    6702:	86 18                	xchg   BYTE PTR [rax],bl
    6704:	00 00                	add    BYTE PTR [rax],al
    6706:	30 4c 08 e5          	xor    BYTE PTR [rax+rcx*1-0x1b],cl
    670a:	00 00                	add    BYTE PTR [rax],al
    670c:	00 51 07             	add    BYTE PTR [rcx+0x7],dl
    670f:	c1 90 00 00 30 4e 08 	rcl    DWORD PTR [rax+0x4e300000],0x8
    6716:	e5 00                	in     eax,0x0
    6718:	00 00                	add    BYTE PTR [rax],al
    671a:	52                   	push   rdx
    671b:	07                   	(bad)
    671c:	dd 02                	fld    QWORD PTR [rdx]
    671e:	00 00                	add    BYTE PTR [rax],al
    6720:	30 50 08             	xor    BYTE PTR [rax+0x8],dl
    6723:	e5 00                	in     eax,0x0
    6725:	00 00                	add    BYTE PTR [rax],al
    6727:	53                   	push   rbx
    6728:	07                   	(bad)
    6729:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    672a:	20 00                	and    BYTE PTR [rax],al
    672c:	00 30                	add    BYTE PTR [rax],dh
    672e:	52                   	push   rdx
    672f:	08 e5                	or     ch,ah
    6731:	00 00                	add    BYTE PTR [rax],al
    6733:	00 54 07 10          	add    BYTE PTR [rdi+rax*1+0x10],dl
    6737:	7f 00                	jg     6739 <__TMC_END__+0x2721>
    6739:	00 30                	add    BYTE PTR [rax],dh
    673b:	54                   	push   rsp
    673c:	08 e5                	or     ch,ah
    673e:	00 00                	add    BYTE PTR [rax],al
    6740:	00 55 07             	add    BYTE PTR [rbp+0x7],dl
    6743:	a2 7a 00 00 30 5b 08 	movabs ds:0xe5085b3000007a,al
    674a:	e5 00 
    674c:	00 00                	add    BYTE PTR [rax],al
    674e:	56                   	push   rsi
    674f:	07                   	(bad)
    6750:	10 6b 00             	adc    BYTE PTR [rbx+0x0],ch
    6753:	00 30                	add    BYTE PTR [rax],dh
    6755:	5c                   	pop    rsp
    6756:	08 e5                	or     ch,ah
    6758:	00 00                	add    BYTE PTR [rax],al
    675a:	00 57 07             	add    BYTE PTR [rdi+0x7],dl
    675d:	bd 90 00 00 30       	mov    ebp,0x30000090
    6762:	5f                   	pop    rdi
    6763:	08 e5                	or     ch,ah
    6765:	00 00                	add    BYTE PTR [rax],al
    6767:	00 58 07             	add    BYTE PTR [rax+0x7],bl
    676a:	d9 02                	fld    DWORD PTR [rdx]
    676c:	00 00                	add    BYTE PTR [rax],al
    676e:	30 61 08             	xor    BYTE PTR [rcx+0x8],ah
    6771:	e5 00                	in     eax,0x0
    6773:	00 00                	add    BYTE PTR [rax],al
    6775:	59                   	pop    rcx
    6776:	07                   	(bad)
    6777:	a0 20 00 00 30 63 08 	movabs al,ds:0xe5086330000020
    677e:	e5 00 
    6780:	00 00                	add    BYTE PTR [rax],al
    6782:	5a                   	pop    rdx
    6783:	07                   	(bad)
    6784:	0c 7f                	or     al,0x7f
    6786:	00 00                	add    BYTE PTR [rax],al
    6788:	30 65 08             	xor    BYTE PTR [rbp+0x8],ah
    678b:	e5 00                	in     eax,0x0
    678d:	00 00                	add    BYTE PTR [rax],al
    678f:	5b                   	pop    rbx
    6790:	07                   	(bad)
    6791:	9e                   	sahf
    6792:	7a 00                	jp     6794 <__TMC_END__+0x277c>
    6794:	00 30                	add    BYTE PTR [rax],dh
    6796:	6c                   	ins    BYTE PTR es:[rdi],dx
    6797:	08 e5                	or     ch,ah
    6799:	00 00                	add    BYTE PTR [rax],al
    679b:	00 5c 07 0c          	add    BYTE PTR [rdi+rax*1+0xc],bl
    679f:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    67a2:	30 6d 08             	xor    BYTE PTR [rbp+0x8],ch
    67a5:	e5 00                	in     eax,0x0
    67a7:	00 00                	add    BYTE PTR [rax],al
    67a9:	5d                   	pop    rbp
    67aa:	00 10                	add    BYTE PTR [rax],dl
    67ac:	87 11                	xchg   DWORD PTR [rcx],edx
    67ae:	00 00                	add    BYTE PTR [rax],al
    67b0:	30 7a 0e             	xor    BYTE PTR [rdx+0xe],bh
    67b3:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    67b6:	00 c6                	add    dh,al
    67b8:	67 00 00             	add    BYTE PTR [eax],al
    67bb:	01 f1                	add    ecx,esi
    67bd:	00 00                	add    BYTE PTR [rax],al
    67bf:	00 01                	add    BYTE PTR [rcx],al
    67c1:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    67c4:	00 00                	add    BYTE PTR [rax],al
    67c6:	3e 25 21 00 00 30    	ds and eax,0x30000021
    67cc:	7d 16                	jge    67e4 <__TMC_END__+0x27cc>
    67ce:	d2 67 00             	shl    BYTE PTR [rdi+0x0],cl
    67d1:	00 08                	add    BYTE PTR [rax],cl
    67d3:	65 66 00 00          	data16 add BYTE PTR gs:[rax],al
    67d7:	05 ba 8c 00 00       	add    eax,0x8cba
    67dc:	31 25 15 04 66 00    	xor    DWORD PTR [rip+0x660415],esp        # 666bf7 <__TMC_END__+0x662bdf>
    67e2:	00 05 d2 03 00 00    	add    BYTE PTR [rip+0x3d2],al        # 6bba <__TMC_END__+0x2ba2>
    67e8:	31 26                	xor    DWORD PTR [rsi],esp
    67ea:	17                   	(bad)
    67eb:	fd                   	std
    67ec:	65 00 00             	add    BYTE PTR gs:[rax],al
    67ef:	05 8c 1c 00 00       	add    eax,0x1c8c
    67f4:	31 27                	xor    DWORD PTR [rdi],esp
    67f6:	1a 0b                	sbb    cl,BYTE PTR [rbx]
    67f8:	66 00 00             	data16 add BYTE PTR [rax],al
    67fb:	05 ec 02 00 00       	add    eax,0x2ec
    6800:	31 28                	xor    DWORD PTR [rax],ebp
    6802:	1c b4                	sbb    al,0xb4
    6804:	02 00                	add    al,BYTE PTR [rax]
    6806:	00 05 a3 73 00 00    	add    BYTE PTR [rip+0x73a3],al        # dbaf <__TMC_END__+0x9b97>
    680c:	31 29                	xor    DWORD PTR [rcx],ebp
    680e:	14 f1                	adc    al,0xf1
    6810:	00 00                	add    BYTE PTR [rax],al
    6812:	00 0f                	add    BYTE PTR [rdi],cl
    6814:	07                   	(bad)
    6815:	68 00 00 05 c5       	push   0xffffffffc5050000
    681a:	73 00                	jae    681c <__TMC_END__+0x2804>
    681c:	00 31                	add    BYTE PTR [rcx],dh
    681e:	2a 16                	sub    dl,BYTE PTR [rsi]
    6820:	76 00                	jbe    6822 <__TMC_END__+0x280a>
    6822:	00 00                	add    BYTE PTR [rax],al
    6824:	05 57 3e 00 00       	add    eax,0x3e57
    6829:	31 2c 19             	xor    DWORD PTR [rcx+rbx*1],ebp
    682c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    682d:	5a                   	pop    rdx
    682e:	00 00                	add    BYTE PTR [rax],al
    6830:	05 75 3e 00 00       	add    eax,0x3e75
    6835:	31 2d 1b 3a 00 00    	xor    DWORD PTR [rip+0x3a1b],ebp        # a256 <__TMC_END__+0x623e>
    683b:	00 05 80 2d 00 00    	add    BYTE PTR [rip+0x2d80],al        # 95c1 <__TMC_END__+0x55a9>
    6841:	31 34 12             	xor    DWORD PTR [rdx+rdx*1],esi
    6844:	d7                   	xlat   BYTE PTR ds:[rbx]
    6845:	67 00 00             	add    BYTE PTR [eax],al
    6848:	05 1a 5b 00 00       	add    eax,0x5b1a
    684d:	31 35 13 e3 67 00    	xor    DWORD PTR [rip+0x67e313],esi        # 684b66 <__TMC_END__+0x680b4e>
    6853:	00 05 d6 73 00 00    	add    BYTE PTR [rip+0x73d6],al        # dc2f <__TMC_END__+0x9c17>
    6859:	31 36                	xor    DWORD PTR [rsi],esi
    685b:	13 ef                	adc    ebp,edi
    685d:	67 00 00             	add    BYTE PTR [eax],al
    6860:	05 45 3a 00 00       	add    eax,0x3a45
    6865:	31 37                	xor    DWORD PTR [rdi],esi
    6867:	14 fb                	adc    al,0xfb
    6869:	67 00 00             	add    BYTE PTR [eax],al
    686c:	05 2f 36 00 00       	add    eax,0x362f
    6871:	31 38                	xor    DWORD PTR [rax],edi
    6873:	13 07                	adc    eax,DWORD PTR [rdi]
    6875:	68 00 00 05 ab       	push   0xffffffffab050000
    687a:	12 00                	adc    al,BYTE PTR [rax]
    687c:	00 31                	add    BYTE PTR [rcx],dh
    687e:	39 14 18             	cmp    DWORD PTR [rax+rbx*1],edx
    6881:	68 00 00 05 34       	push   0x34050000
    6886:	01 00                	add    DWORD PTR [rax],eax
    6888:	00 31                	add    BYTE PTR [rcx],dh
    688a:	3a 13                	cmp    dl,BYTE PTR [rbx]
    688c:	24 68                	and    al,0x68
    688e:	00 00                	add    BYTE PTR [rax],al
    6890:	05 99 71 00 00       	add    eax,0x7199
    6895:	31 3b                	xor    DWORD PTR [rbx],edi
    6897:	14 30                	adc    al,0x30
    6899:	68 00 00 05 ae       	push   0xffffffffae050000
    689e:	66 00 00             	data16 add BYTE PTR [rax],al
    68a1:	31 48 12             	xor    DWORD PTR [rax+0x12],ecx
    68a4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    68a5:	5a                   	pop    rdx
    68a6:	00 00                	add    BYTE PTR [rax],al
    68a8:	05 fd 19 00 00       	add    eax,0x19fd
    68ad:	31 49 1b             	xor    DWORD PTR [rcx+0x1b],ecx
    68b0:	3a 00                	cmp    al,BYTE PTR [rax]
    68b2:	00 00                	add    BYTE PTR [rax],al
    68b4:	05 27 0b 00 00       	add    eax,0xb27
    68b9:	31 98 19 ac 5a 00    	xor    DWORD PTR [rax+0x5aac19],ebx
    68bf:	00 05 ca 50 00 00    	add    BYTE PTR [rip+0x50ca],al        # b98f <__TMC_END__+0x7977>
    68c5:	31 99 1b ac 5a 00    	xor    DWORD PTR [rcx+0x5aac1b],ebx
    68cb:	00 05 11 5f 00 00    	add    BYTE PTR [rip+0x5f11],al        # c7e2 <__TMC_END__+0x87ca>
    68d1:	31 9a 19 f1 00 00    	xor    DWORD PTR [rdx+0xf119],ebx
    68d7:	00 05 ea 1b 00 00    	add    BYTE PTR [rip+0x1bea],al        # 84c7 <__TMC_END__+0x44af>
    68dd:	31 9c 1b ac 5a 00 00 	xor    DWORD PTR [rbx+rbx*1+0x5aac],ebx
    68e4:	05 01 4a 00 00       	add    eax,0x4a01
    68e9:	31 a0 1a ac 5a 00    	xor    DWORD PTR [rax+0x5aac1a],esp
    68ef:	00 05 00 80 00 00    	add    BYTE PTR [rip+0x8000],al        # e8f5 <__TMC_END__+0xa8dd>
    68f5:	31 c2                	xor    edx,eax
    68f7:	1b ac 5a 00 00 05 bc 	sbb    ebp,DWORD PTR [rdx+rbx*2-0x43fb0000]
    68fe:	12 00                	adc    al,BYTE PTR [rax]
    6900:	00 31                	add    BYTE PTR [rcx],dh
    6902:	c5 21 ac             	(bad)
    6905:	5a                   	pop    rdx
    6906:	00 00                	add    BYTE PTR [rax],al
    6908:	05 03 4a 00 00       	add    eax,0x4a03
    690d:	32 0a                	xor    cl,BYTE PTR [rdx]
    690f:	12 e4                	adc    ah,ah
    6911:	68 00 00 0f 08       	push   0x80f0000
    6916:	69 00 00 1a 71 42    	imul   eax,DWORD PTR [rax],0x42711a00
    691c:	00 00                	add    BYTE PTR [rax],al
    691e:	10 33                	adc    BYTE PTR [rbx],dh
    6920:	0b 08                	or     ecx,DWORD PTR [rax]
    6922:	41 69 00 00 07 ae 7a 	imul   eax,DWORD PTR [r8],0x7aae0700
    6929:	00 00                	add    BYTE PTR [rax],al
    692b:	33 10                	xor    edx,DWORD PTR [rax]
    692d:	0c e4                	or     al,0xe4
    692f:	68 00 00 00 07       	push   0x7000000
    6934:	72 87                	jb     68bd <__TMC_END__+0x28a5>
    6936:	00 00                	add    BYTE PTR [rax],al
    6938:	33 15 15 fc 68 00    	xor    edx,DWORD PTR [rip+0x68fc15]        # 696553 <__TMC_END__+0x69253b>
    693e:	00 08                	add    BYTE PTR [rax],cl
    6940:	00 05 ec 1b 00 00    	add    BYTE PTR [rip+0x1bec],al        # 8532 <__TMC_END__+0x451a>
    6946:	34 07                	xor    al,0x7
    6948:	13 d8                	adc    ebx,eax
    694a:	68 00 00 08 e8       	push   0xffffffffe8080000
    694f:	0c 00                	or     al,0x0
    6951:	00 0e                	add    BYTE PTR [rsi],cl
    6953:	d2 0d 00 00 0e e8    	ror    BYTE PTR [rip+0xffffffffe80e0000],cl        # ffffffffe80e6959 <__TMC_END__+0xffffffffe80e2941>
    6959:	0c 00                	or     al,0x0
    695b:	00 08                	add    BYTE PTR [rax],cl
    695d:	61                   	(bad)
    695e:	69 00 00 7d 08 d2    	imul   eax,DWORD PTR [rax],0xd2087d00
    6964:	0d 00 00 08 d7       	or     eax,0xd7080000
    6969:	0d 00 00 0e a9       	or     eax,0xa90e0000
    696e:	0e                   	(bad)
    696f:	00 00                	add    BYTE PTR [rax],al
    6971:	0e                   	(bad)
    6972:	d7                   	xlat   BYTE PTR ds:[rbx]
    6973:	0d 00 00 13 02       	or     eax,0x2130000
    6978:	04 ed                	add    al,0xed
    697a:	30 00                	xor    BYTE PTR [rax],al
    697c:	00 13                	add    BYTE PTR [rbx],dl
    697e:	04 04                	add    al,0x4
    6980:	09 36                	or     DWORD PTR [rsi],esi
    6982:	00 00                	add    BYTE PTR [rax],al
    6984:	13 08                	adc    ecx,DWORD PTR [rax]
    6986:	04 83                	add    al,0x83
    6988:	3c 00                	cmp    al,0x0
    698a:	00 13                	add    BYTE PTR [rbx],dl
    698c:	10 04 73             	adc    BYTE PTR [rbx+rsi*2],al
    698f:	0c 00                	or     al,0x0
    6991:	00 13                	add    BYTE PTR [rbx],dl
    6993:	02 04 87             	add    al,BYTE PTR [rdi+rax*4]
    6996:	5e                   	pop    rsi
    6997:	00 00                	add    BYTE PTR [rax],al
    6999:	28 80 1c 00 00 35    	sub    BYTE PTR [rax+0x3500001c],al
    699f:	27                   	(bad)
    69a0:	0b ae 69 00 00 7e    	or     ebp,DWORD PTR [rsi+0x7e000069]
    69a6:	1a 3a                	sbb    bh,BYTE PTR [rdx]
    69a8:	18 ae 0e 00 00 00    	sbb    BYTE PTR [rsi+0xe],ch
    69ae:	13 10                	adc    edx,DWORD PTR [rax]
    69b0:	07                   	(bad)
    69b1:	33 3a                	xor    edi,DWORD PTR [rdx]
    69b3:	00 00                	add    BYTE PTR [rax],al
    69b5:	08 be 0e 00 00 0e    	or     BYTE PTR [rsi+0xe00000e],bh
    69bb:	64 19 00             	sbb    DWORD PTR fs:[rax],eax
    69be:	00 0e                	add    BYTE PTR [rsi],cl
    69c0:	be 0e 00 00 08       	mov    esi,0x800000e
    69c5:	b1 0f                	mov    cl,0xf
    69c7:	00 00                	add    BYTE PTR [rax],al
    69c9:	08 64 19 00          	or     BYTE PTR [rcx+rbx*1+0x0],ah
    69cd:	00 0e                	add    BYTE PTR [rsi],cl
    69cf:	b1 0f                	mov    cl,0xf
    69d1:	00 00                	add    BYTE PTR [rax],al
    69d3:	36 08 36             	ss or  BYTE PTR [rsi],dh
    69d6:	3c 03                	cmp    al,0x3
    69d8:	54                   	push   rsp
    69d9:	78 00                	js     69db <__TMC_END__+0x29c3>
    69db:	00 fb                	add    bl,bh
    69dd:	69 00 00 07 4b 34    	imul   eax,DWORD PTR [rax],0x344b0700
    69e3:	00 00                	add    BYTE PTR [rax],al
    69e5:	36 3d 09 f1 00 00    	ss cmp eax,0xf109
    69eb:	00 00                	add    BYTE PTR [rax],al
    69ed:	32 72 65             	xor    dh,BYTE PTR [rdx+0x65]
    69f0:	6d                   	ins    DWORD PTR es:[rdi],dx
    69f1:	00 36                	add    BYTE PTR [rsi],dh
    69f3:	3e 09 f1             	ds or  ecx,esi
    69f6:	00 00                	add    BYTE PTR [rax],al
    69f8:	00 04 00             	add    BYTE PTR [rax+rax*1],al
    69fb:	05 55 78 00 00       	add    eax,0x7855
    6a00:	36 3f                	ss (bad)
    6a02:	05 d3 69 00 00       	add    eax,0x69d3
    6a07:	36 10 36             	ss adc BYTE PTR [rsi],dh
    6a0a:	44 03 5f 46          	add    r11d,DWORD PTR [rdi+0x46]
    6a0e:	00 00                	add    BYTE PTR [rax],al
    6a10:	2f                   	(bad)
    6a11:	6a 00                	push   0x0
    6a13:	00 07                	add    BYTE PTR [rdi],al
    6a15:	4b 34 00             	rex.WXB xor al,0x0
    6a18:	00 36                	add    BYTE PTR [rsi],dh
    6a1a:	45 0e                	rex.RB (bad)
    6a1c:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6a1d:	5a                   	pop    rdx
    6a1e:	00 00                	add    BYTE PTR [rax],al
    6a20:	00 32                	add    BYTE PTR [rdx],dh
    6a22:	72 65                	jb     6a89 <__TMC_END__+0x2a71>
    6a24:	6d                   	ins    DWORD PTR es:[rdi],dx
    6a25:	00 36                	add    BYTE PTR [rsi],dh
    6a27:	46 0e                	rex.RX (bad)
    6a29:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6a2a:	5a                   	pop    rdx
    6a2b:	00 00                	add    BYTE PTR [rax],al
    6a2d:	08 00                	or     BYTE PTR [rax],al
    6a2f:	05 60 46 00 00       	add    eax,0x4660
    6a34:	36 47 05 07 6a 00 00 	ss rex.RXB add eax,0x6a07
    6a3b:	36 10 36             	ss adc BYTE PTR [rsi],dh
    6a3e:	4e 03 15 04 00 00 63 	rex.WRX add r10,QWORD PTR [rip+0x63000004]        # 63006a49 <__TMC_END__+0x63002a31>
    6a45:	6a 00                	push   0x0
    6a47:	00 07                	add    BYTE PTR [rdi],al
    6a49:	4b 34 00             	rex.WXB xor al,0x0
    6a4c:	00 36                	add    BYTE PTR [rsi],dh
    6a4e:	4f 13 7f 65          	rex.WRXB adc r15,QWORD PTR [r15+0x65]
    6a52:	00 00                	add    BYTE PTR [rax],al
    6a54:	00 32                	add    BYTE PTR [rdx],dh
    6a56:	72 65                	jb     6abd <__TMC_END__+0x2aa5>
    6a58:	6d                   	ins    DWORD PTR es:[rdi],dx
    6a59:	00 36                	add    BYTE PTR [rsi],dh
    6a5b:	50                   	push   rax
    6a5c:	13 7f 65             	adc    edi,DWORD PTR [rdi+0x65]
    6a5f:	00 00                	add    BYTE PTR [rax],al
    6a61:	08 00                	or     BYTE PTR [rax],al
    6a63:	05 16 04 00 00       	add    eax,0x416
    6a68:	36 51                	ss push rcx
    6a6a:	05 3b 6a 00 00       	add    eax,0x6a3b
    6a6f:	05 02 80 00 00       	add    eax,0x8002
    6a74:	37                   	(bad)
    6a75:	6c                   	ins    BYTE PTR es:[rdi],dx
    6a76:	13 f0                	adc    esi,eax
    6a78:	68 00 00 05 bc       	push   0xffffffffbc050000
    6a7d:	8c 00                	mov    WORD PTR [rax],es
    6a7f:	00 38                	add    BYTE PTR [rax],bh
    6a81:	18 12                	sbb    BYTE PTR [rdx],dl
    6a83:	d7                   	xlat   BYTE PTR ds:[rbx]
    6a84:	67 00 00             	add    BYTE PTR [eax],al
    6a87:	05 8e 1c 00 00       	add    eax,0x1c8e
    6a8c:	38 19                	cmp    BYTE PTR [rcx],bl
    6a8e:	13 ef                	adc    ebp,edi
    6a90:	67 00 00             	add    BYTE PTR [eax],al
    6a93:	05 a5 73 00 00       	add    eax,0x73a5
    6a98:	38 1a                	cmp    BYTE PTR [rdx],bl
    6a9a:	13 07                	adc    eax,DWORD PTR [rdi]
    6a9c:	68 00 00 05 59       	push   0x59050000
    6aa1:	3e 00 00             	ds add BYTE PTR [rax],al
    6aa4:	38 1b                	cmp    BYTE PTR [rbx],bl
    6aa6:	13 24 68             	adc    esp,DWORD PTR [rax+rbp*2]
    6aa9:	00 00                	add    BYTE PTR [rax],al
    6aab:	19 89 7b 00 00 36    	sbb    DWORD PTR [rcx+0x3600007b],ecx
    6ab1:	b4 03                	mov    ah,0x3
    6ab3:	0f b8                	(bad)
    6ab5:	6a 00                	push   0x0
    6ab7:	00 08                	add    BYTE PTR [rax],cl
    6ab9:	bd 6a 00 00 4d       	mov    ebp,0x4d00006a
    6abe:	f1                   	int1
    6abf:	00 00                	add    BYTE PTR [rax],al
    6ac1:	00 d1                	add    cl,dl
    6ac3:	6a 00                	push   0x0
    6ac5:	00 01                	add    BYTE PTR [rcx],al
    6ac7:	5c                   	pop    rsp
    6ac8:	69 00 00 01 5c 69    	imul   eax,DWORD PTR [rax],0x695c0100
    6ace:	00 00                	add    BYTE PTR [rax],al
    6ad0:	00 0a                	add    BYTE PTR [rdx],cl
    6ad2:	47 2c 00             	rex.RXB sub al,0x0
    6ad5:	00 36                	add    BYTE PTR [rsi],dh
    6ad7:	de 02                	fiadd  WORD PTR [rdx]
    6ad9:	0c f1                	or     al,0xf1
    6adb:	00 00                	add    BYTE PTR [rax],al
    6add:	00 e8                	add    al,ch
    6adf:	6a 00                	push   0x0
    6ae1:	00 01                	add    BYTE PTR [rcx],al
    6ae3:	e8 6a 00 00 00       	call   6b52 <__TMC_END__+0x2b3a>
    6ae8:	08 ed                	or     ch,ch
    6aea:	6a 00                	push   0x0
    6aec:	00 7f 09             	add    BYTE PTR [rdi+0x9],bh
    6aef:	b6 79                	mov    dh,0x79
    6af1:	00 00                	add    BYTE PTR [rax],al
    6af3:	36 e3 02             	ss jrcxz 6af8 <__TMC_END__+0x2ae0>
    6af6:	12 b6 79 00 00 f1    	adc    dh,BYTE PTR [rsi-0xeffff87]
    6afc:	00 00                	add    BYTE PTR [rax],al
    6afe:	00 09                	add    BYTE PTR [rcx],cl
    6b00:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    6b03:	01 e8                	add    eax,ebp
    6b05:	6a 00                	push   0x0
    6b07:	00 00                	add    BYTE PTR [rax],al
    6b09:	10 00                	adc    BYTE PTR [rax],al
    6b0b:	5d                   	pop    rbp
    6b0c:	00 00                	add    BYTE PTR [rax],al
    6b0e:	36 66 0f 38 5a       	ss data16 (bad)
    6b13:	00 00                	add    BYTE PTR [rax],al
    6b15:	1f                   	(bad)
    6b16:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    6b19:	01 c0                	add    eax,eax
    6b1b:	02 00                	add    al,BYTE PTR [rax]
    6b1d:	00 00                	add    BYTE PTR [rax],al
    6b1f:	10 b2 0e 00 00 36    	adc    BYTE PTR [rdx+0x3600000e],dh
    6b25:	69 0c f1 00 00 00 35 	imul   ecx,DWORD PTR [rcx+rsi*8],0x35000000
    6b2c:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    6b2f:	01 c0                	add    eax,eax
    6b31:	02 00                	add    al,BYTE PTR [rax]
    6b33:	00 00                	add    BYTE PTR [rax],al
    6b35:	10 f4                	adc    ah,dh
    6b37:	0e                   	(bad)
    6b38:	00 00                	add    BYTE PTR [rax],al
    6b3a:	36 6c                	ss ins BYTE PTR es:[rdi],dx
    6b3c:	11 ac 5a 00 00 4b 6b 	adc    DWORD PTR [rdx+rbx*2+0x6b4b0000],ebp
    6b43:	00 00                	add    BYTE PTR [rax],al
    6b45:	01 c0                	add    eax,eax
    6b47:	02 00                	add    al,BYTE PTR [rax]
    6b49:	00 00                	add    BYTE PTR [rax],al
    6b4b:	0a 06                	or     al,BYTE PTR [rsi]
    6b4d:	6a 00                	push   0x0
    6b4f:	00 36                	add    BYTE PTR [rsi],dh
    6b51:	c0 03 0e             	rol    BYTE PTR [rbx],0xe
    6b54:	7d 00                	jge    6b56 <__TMC_END__+0x2b3e>
    6b56:	00 00                	add    BYTE PTR [rax],al
    6b58:	76 6b                	jbe    6bc5 <__TMC_END__+0x2bad>
    6b5a:	00 00                	add    BYTE PTR [rax],al
    6b5c:	01 5c 69 00          	add    DWORD PTR [rcx+rbp*2+0x0],ebx
    6b60:	00 01                	add    BYTE PTR [rcx],al
    6b62:	5c                   	pop    rsp
    6b63:	69 00 00 01 2e 00    	imul   eax,DWORD PTR [rax],0x2e0100
    6b69:	00 00                	add    BYTE PTR [rax],al
    6b6b:	01 2e                	add    DWORD PTR [rsi],ebp
    6b6d:	00 00                	add    BYTE PTR [rax],al
    6b6f:	00 01                	add    BYTE PTR [rcx],al
    6b71:	ab                   	stos   DWORD PTR es:[rdi],eax
    6b72:	6a 00                	push   0x0
    6b74:	00 00                	add    BYTE PTR [rax],al
    6b76:	80 01 64             	add    BYTE PTR [rcx],0x64
    6b79:	69 76 00 36 e0 03 0e 	imul   esi,DWORD PTR [rsi+0x0],0xe03e036
    6b80:	fb                   	sti
    6b81:	69 00 00 93 6b 00    	imul   eax,DWORD PTR [rax],0x6b9300
    6b87:	00 01                	add    BYTE PTR [rcx],al
    6b89:	f1                   	int1
    6b8a:	00 00                	add    BYTE PTR [rax],al
    6b8c:	00 01                	add    BYTE PTR [rcx],al
    6b8e:	f1                   	int1
    6b8f:	00 00                	add    BYTE PTR [rax],al
    6b91:	00 00                	add    BYTE PTR [rax],al
    6b93:	0a d5                	or     dl,ch
    6b95:	7f 00                	jg     6b97 <__TMC_END__+0x2b7f>
    6b97:	00 36                	add    BYTE PTR [rsi],dh
    6b99:	05 03 0e 03 58       	add    eax,0x58030e03
    6b9e:	00 00                	add    BYTE PTR [rax],al
    6ba0:	aa                   	stos   BYTE PTR es:[rdi],al
    6ba1:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    6ba4:	01 c0                	add    eax,eax
    6ba6:	02 00                	add    al,BYTE PTR [rax]
    6ba8:	00 00                	add    BYTE PTR [rax],al
    6baa:	0a e5                	or     ah,ch
    6bac:	1b 00                	sbb    eax,DWORD PTR [rax]
    6bae:	00 36                	add    BYTE PTR [rsi],dh
    6bb0:	e2 03                	loop   6bb5 <__TMC_END__+0x2b9d>
    6bb2:	0f 2f 6a 00          	comiss xmm5,DWORD PTR [rdx+0x0]
    6bb6:	00 c6                	add    dh,al
    6bb8:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    6bbb:	01 ac 5a 00 00 01 ac 	add    DWORD PTR [rdx+rbx*2-0x53ff0000],ebp
    6bc2:	5a                   	pop    rdx
    6bc3:	00 00                	add    BYTE PTR [rax],al
    6bc5:	00 0a                	add    BYTE PTR [rdx],cl
    6bc7:	dd 3a                	fnstsw WORD PTR [rdx]
    6bc9:	00 00                	add    BYTE PTR [rax],al
    6bcb:	36 26 04 0c          	ss es add al,0xc
    6bcf:	f1                   	int1
    6bd0:	00 00                	add    BYTE PTR [rax],al
    6bd2:	00 e2                	add    dl,ah
    6bd4:	6b 00 00             	imul   eax,DWORD PTR [rax],0x0
    6bd7:	01 c0                	add    eax,eax
    6bd9:	02 00                	add    al,BYTE PTR [rax]
    6bdb:	00 01                	add    BYTE PTR [rcx],al
    6bdd:	2e 00 00             	cs add BYTE PTR [rax],al
    6be0:	00 00                	add    BYTE PTR [rax],al
    6be2:	0a 32                	or     dh,BYTE PTR [rdx]
    6be4:	84 00                	test   BYTE PTR [rax],al
    6be6:	00 36                	add    BYTE PTR [rsi],dh
    6be8:	31 04 0f             	xor    DWORD PTR [rdi+rcx*1],eax
    6beb:	2e 00 00             	cs add BYTE PTR [rax],al
    6bee:	00 03                	add    BYTE PTR [rbx],al
    6bf0:	6c                   	ins    BYTE PTR es:[rdi],dx
    6bf1:	00 00                	add    BYTE PTR [rax],al
    6bf3:	01 1a                	add    DWORD PTR [rdx],ebx
    6bf5:	55                   	push   rbp
    6bf6:	00 00                	add    BYTE PTR [rax],al
    6bf8:	01 c0                	add    eax,eax
    6bfa:	02 00                	add    al,BYTE PTR [rax]
    6bfc:	00 01                	add    BYTE PTR [rcx],al
    6bfe:	2e 00 00             	cs add BYTE PTR [rax],al
    6c01:	00 00                	add    BYTE PTR [rax],al
    6c03:	0a 82 7a 00 00 36    	or     al,BYTE PTR [rdx+0x3600007a]
    6c09:	29 04 0c             	sub    DWORD PTR [rsp+rcx*1],eax
    6c0c:	f1                   	int1
    6c0d:	00 00                	add    BYTE PTR [rax],al
    6c0f:	00 24 6c             	add    BYTE PTR [rsp+rbp*2],ah
    6c12:	00 00                	add    BYTE PTR [rax],al
    6c14:	01 1a                	add    DWORD PTR [rdx],ebx
    6c16:	55                   	push   rbp
    6c17:	00 00                	add    BYTE PTR [rax],al
    6c19:	01 c0                	add    eax,eax
    6c1b:	02 00                	add    al,BYTE PTR [rax]
    6c1d:	00 01                	add    BYTE PTR [rcx],al
    6c1f:	2e 00 00             	cs add BYTE PTR [rax],al
    6c22:	00 00                	add    BYTE PTR [rax],al
    6c24:	2c d0                	sub    al,0xd0
    6c26:	73 00                	jae    6c28 <__TMC_END__+0x2c10>
    6c28:	00 36                	add    BYTE PTR [rsi],dh
    6c2a:	ca 03 45             	retf   0x4503
    6c2d:	6c                   	ins    BYTE PTR es:[rdi],dx
    6c2e:	00 00                	add    BYTE PTR [rax],al
    6c30:	01 7d 00             	add    DWORD PTR [rbp+0x0],edi
    6c33:	00 00                	add    BYTE PTR [rax],al
    6c35:	01 2e                	add    DWORD PTR [rsi],ebp
    6c37:	00 00                	add    BYTE PTR [rax],al
    6c39:	00 01                	add    BYTE PTR [rcx],al
    6c3b:	2e 00 00             	cs add BYTE PTR [rax],al
    6c3e:	00 01                	add    BYTE PTR [rcx],al
    6c40:	ab                   	stos   DWORD PTR es:[rdi],eax
    6c41:	6a 00                	push   0x0
    6c43:	00 00                	add    BYTE PTR [rax],al
    6c45:	81 01 b9 79 00 00    	add    DWORD PTR [rcx],0x79b9
    6c4b:	36 fa                	ss cli
    6c4d:	02 0d 59 6c 00 00    	add    cl,BYTE PTR [rip+0x6c59]        # d8ac <__TMC_END__+0x9894>
    6c53:	01 f1                	add    ecx,esi
    6c55:	00 00                	add    BYTE PTR [rax],al
    6c57:	00 00                	add    BYTE PTR [rax],al
    6c59:	3a 2e                	cmp    ch,BYTE PTR [rsi]
    6c5b:	49 00 00             	rex.WB add BYTE PTR [r8],al
    6c5e:	36 3d 02 0c f1 00    	ss cmp eax,0xf10c02
    6c64:	00 00                	add    BYTE PTR [rax],al
    6c66:	2c 2d                	sub    al,0x2d
    6c68:	49 00 00             	rex.WB add BYTE PTR [r8],al
    6c6b:	36 3f                	ss (bad)
    6c6d:	02 78 6c             	add    bh,BYTE PTR [rax+0x6c]
    6c70:	00 00                	add    BYTE PTR [rax],al
    6c72:	01 76 00             	add    DWORD PTR [rsi+0x0],esi
    6c75:	00 00                	add    BYTE PTR [rax],al
    6c77:	00 10                	add    BYTE PTR [rax],dl
    6c79:	ee                   	out    dx,al
    6c7a:	5f                   	pop    rdi
    6c7b:	00 00                	add    BYTE PTR [rax],al
    6c7d:	36 76 0f             	ss jbe 6c8f <__TMC_END__+0x2c77>
    6c80:	38 5a 00             	cmp    BYTE PTR [rdx+0x0],bl
    6c83:	00 93 6c 00 00 01    	add    BYTE PTR [rbx+0x100006c],dl
    6c89:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    6c8c:	00 01                	add    BYTE PTR [rcx],al
    6c8e:	93                   	xchg   ebx,eax
    6c8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    6c90:	00 00                	add    BYTE PTR [rax],al
    6c92:	00 08                	add    BYTE PTR [rax],cl
    6c94:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    6c97:	00 1b                	add    BYTE PTR [rbx],bl
    6c99:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
    6c9c:	00 36                	add    BYTE PTR [rsi],dh
    6c9e:	d7                   	xlat   BYTE PTR ds:[rbx]
    6c9f:	11 3e                	adc    DWORD PTR [rsi],edi
    6ca1:	13 00                	adc    eax,DWORD PTR [rax]
    6ca3:	00 ac 5a 00 00 bc 6c 	add    BYTE PTR [rdx+rbx*2+0x6cbc0000],ch
    6caa:	00 00                	add    BYTE PTR [rax],al
    6cac:	01 c0                	add    eax,eax
    6cae:	02 00                	add    al,BYTE PTR [rax]
    6cb0:	00 01                	add    BYTE PTR [rcx],al
    6cb2:	93                   	xchg   ebx,eax
    6cb3:	6c                   	ins    BYTE PTR es:[rdi],dx
    6cb4:	00 00                	add    BYTE PTR [rax],al
    6cb6:	01 f1                	add    ecx,esi
    6cb8:	00 00                	add    BYTE PTR [rax],al
    6cba:	00 00                	add    BYTE PTR [rax],al
    6cbc:	1b eb                	sbb    ebp,ebx
    6cbe:	2c 00                	sub    al,0x0
    6cc0:	00 36                	add    BYTE PTR [rsi],dh
    6cc2:	db 1a                	fistp  DWORD PTR [rdx]
    6cc4:	e2 2c                	loop   6cf2 <__TMC_END__+0x2cda>
    6cc6:	00 00                	add    BYTE PTR [rax],al
    6cc8:	3a 00                	cmp    al,BYTE PTR [rax]
    6cca:	00 00                	add    BYTE PTR [rax],al
    6ccc:	e0 6c                	loopne 6d3a <__TMC_END__+0x2d22>
    6cce:	00 00                	add    BYTE PTR [rax],al
    6cd0:	01 c0                	add    eax,eax
    6cd2:	02 00                	add    al,BYTE PTR [rax]
    6cd4:	00 01                	add    BYTE PTR [rcx],al
    6cd6:	93                   	xchg   ebx,eax
    6cd7:	6c                   	ins    BYTE PTR es:[rdi],dx
    6cd8:	00 00                	add    BYTE PTR [rax],al
    6cda:	01 f1                	add    ecx,esi
    6cdc:	00 00                	add    BYTE PTR [rax],al
    6cde:	00 00                	add    BYTE PTR [rax],al
    6ce0:	0a 8f 2a 00 00 36    	or     cl,BYTE PTR [rdi+0x3600002a]
    6ce6:	9b                   	fwait
    6ce7:	03 0c f1             	add    ecx,DWORD PTR [rcx+rsi*8]
    6cea:	00 00                	add    BYTE PTR [rax],al
    6cec:	00 f7                	add    bh,dh
    6cee:	6c                   	ins    BYTE PTR es:[rdi],dx
    6cef:	00 00                	add    BYTE PTR [rax],al
    6cf1:	01 c0                	add    eax,eax
    6cf3:	02 00                	add    al,BYTE PTR [rax]
    6cf5:	00 00                	add    BYTE PTR [rax],al
    6cf7:	0a d4                	or     dl,ah
    6cf9:	44 00 00             	add    BYTE PTR [rax],r8b
    6cfc:	36 35 04 0f 2e 00    	ss xor eax,0x2e0f04
    6d02:	00 00                	add    BYTE PTR [rax],al
    6d04:	18 6d 00             	sbb    BYTE PTR [rbp+0x0],ch
    6d07:	00 01                	add    BYTE PTR [rcx],al
    6d09:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    6d0c:	00 01                	add    BYTE PTR [rcx],al
    6d0e:	63 55 00             	movsxd edx,DWORD PTR [rbp+0x0]
    6d11:	00 01                	add    BYTE PTR [rcx],al
    6d13:	2e 00 00             	cs add BYTE PTR [rax],al
    6d16:	00 00                	add    BYTE PTR [rax],al
    6d18:	0a b5 14 00 00 36    	or     dh,BYTE PTR [rbp+0x36000014]
    6d1e:	2d 04 0c f1 00       	sub    eax,0xf10c04
    6d23:	00 00                	add    BYTE PTR [rax],al
    6d25:	34 6d                	xor    al,0x6d
    6d27:	00 00                	add    BYTE PTR [rax],al
    6d29:	01 03                	add    DWORD PTR [rbx],eax
    6d2b:	58                   	pop    rax
    6d2c:	00 00                	add    BYTE PTR [rax],al
    6d2e:	01 1f                	add    DWORD PTR [rdi],ebx
    6d30:	55                   	push   rbp
    6d31:	00 00                	add    BYTE PTR [rax],al
    6d33:	00 0a                	add    BYTE PTR [rdx],cl
    6d35:	e4 1b                	in     al,0x1b
    6d37:	00 00                	add    BYTE PTR [rax],al
    6d39:	36 e6 03             	ss out 0x3,al
    6d3c:	1e                   	(bad)
    6d3d:	63 6a 00             	movsxd ebp,DWORD PTR [rdx+0x0]
    6d40:	00 50 6d             	add    BYTE PTR [rax+0x6d],dl
    6d43:	00 00                	add    BYTE PTR [rax],al
    6d45:	01 7f 65             	add    DWORD PTR [rdi+0x65],edi
    6d48:	00 00                	add    BYTE PTR [rax],al
    6d4a:	01 7f 65             	add    DWORD PTR [rdi+0x65],edi
    6d4d:	00 00                	add    BYTE PTR [rax],al
    6d4f:	00 10                	add    BYTE PTR [rax],dl
    6d51:	38 69 00             	cmp    BYTE PTR [rcx+0x0],ch
    6d54:	00 36                	add    BYTE PTR [rsi],dh
    6d56:	71 24                	jno    6d7c <__TMC_END__+0x2d64>
    6d58:	7f 65                	jg     6dbf <__TMC_END__+0x2da7>
    6d5a:	00 00                	add    BYTE PTR [rax],al
    6d5c:	66 6d                	ins    WORD PTR es:[rdi],dx
    6d5e:	00 00                	add    BYTE PTR [rax],al
    6d60:	01 c0                	add    eax,eax
    6d62:	02 00                	add    al,BYTE PTR [rax]
    6d64:	00 00                	add    BYTE PTR [rax],al
    6d66:	1b 6b 16             	sbb    ebp,DWORD PTR [rbx+0x16]
    6d69:	00 00                	add    BYTE PTR [rax],al
    6d6b:	36 ee                	ss out dx,al
    6d6d:	16                   	(bad)
    6d6e:	62 16 00 00 7f       	(bad)
    6d73:	65 00 00             	add    BYTE PTR gs:[rax],al
    6d76:	8a 6d 00             	mov    ch,BYTE PTR [rbp+0x0]
    6d79:	00 01                	add    BYTE PTR [rcx],al
    6d7b:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    6d7e:	00 01                	add    BYTE PTR [rcx],al
    6d80:	93                   	xchg   ebx,eax
    6d81:	6c                   	ins    BYTE PTR es:[rdi],dx
    6d82:	00 00                	add    BYTE PTR [rax],al
    6d84:	01 f1                	add    ecx,esi
    6d86:	00 00                	add    BYTE PTR [rax],al
    6d88:	00 00                	add    BYTE PTR [rax],al
    6d8a:	1b d5                	sbb    edx,ebp
    6d8c:	58                   	pop    rax
    6d8d:	00 00                	add    BYTE PTR [rax],al
    6d8f:	36 f3 1f             	ss repz (bad)
    6d92:	cc                   	int3
    6d93:	58                   	pop    rax
    6d94:	00 00                	add    BYTE PTR [rax],al
    6d96:	ab                   	stos   DWORD PTR es:[rdi],eax
    6d97:	65 00 00             	add    BYTE PTR gs:[rax],al
    6d9a:	ae                   	scas   al,BYTE PTR es:[rdi]
    6d9b:	6d                   	ins    DWORD PTR es:[rdi],dx
    6d9c:	00 00                	add    BYTE PTR [rax],al
    6d9e:	01 c0                	add    eax,eax
    6da0:	02 00                	add    al,BYTE PTR [rax]
    6da2:	00 01                	add    BYTE PTR [rcx],al
    6da4:	93                   	xchg   ebx,eax
    6da5:	6c                   	ins    BYTE PTR es:[rdi],dx
    6da6:	00 00                	add    BYTE PTR [rax],al
    6da8:	01 f1                	add    ecx,esi
    6daa:	00 00                	add    BYTE PTR [rax],al
    6dac:	00 00                	add    BYTE PTR [rax],al
    6dae:	10 f5                	adc    ch,dh
    6db0:	5f                   	pop    rdi
    6db1:	00 00                	add    BYTE PTR [rax],al
    6db3:	36 7c 0e             	ss jl  6dc4 <__TMC_END__+0x2dac>
    6db6:	60                   	(bad)
    6db7:	5a                   	pop    rdx
    6db8:	00 00                	add    BYTE PTR [rax],al
    6dba:	c9                   	leave
    6dbb:	6d                   	ins    DWORD PTR es:[rdi],dx
    6dbc:	00 00                	add    BYTE PTR [rax],al
    6dbe:	01 c0                	add    eax,eax
    6dc0:	02 00                	add    al,BYTE PTR [rax]
    6dc2:	00 01                	add    BYTE PTR [rcx],al
    6dc4:	93                   	xchg   ebx,eax
    6dc5:	6c                   	ins    BYTE PTR es:[rdi],dx
    6dc6:	00 00                	add    BYTE PTR [rax],al
    6dc8:	00 10                	add    BYTE PTR [rax],dl
    6dca:	c1 2b 00             	shr    DWORD PTR [rbx],0x0
    6dcd:	00 36                	add    BYTE PTR [rsi],dh
    6dcf:	7f 14                	jg     6de5 <__TMC_END__+0x2dcd>
    6dd1:	53                   	push   rbx
    6dd2:	65 00 00             	add    BYTE PTR gs:[rax],al
    6dd5:	e4 6d                	in     al,0x6d
    6dd7:	00 00                	add    BYTE PTR [rax],al
    6dd9:	01 c0                	add    eax,eax
    6ddb:	02 00                	add    al,BYTE PTR [rax]
    6ddd:	00 01                	add    BYTE PTR [rcx],al
    6ddf:	93                   	xchg   ebx,eax
    6de0:	6c                   	ins    BYTE PTR es:[rdi],dx
    6de1:	00 00                	add    BYTE PTR [rax],al
    6de3:	00 1a                	add    BYTE PTR [rdx],bl
    6de5:	61                   	(bad)
    6de6:	54                   	push   rsp
    6de7:	00 00                	add    BYTE PTR [rax],al
    6de9:	10 39                	adc    BYTE PTR [rcx],bh
    6deb:	0a 10                	or     dl,BYTE PTR [rax]
    6ded:	0c 6e                	or     al,0x6e
    6def:	00 00                	add    BYTE PTR [rax],al
    6df1:	07                   	(bad)
    6df2:	9b                   	fwait
    6df3:	0f 00 00             	sldt   WORD PTR [rax]
    6df6:	39 0c 0b             	cmp    DWORD PTR [rbx+rcx*1],ecx
    6df9:	b4 68                	mov    ah,0x68
    6dfb:	00 00                	add    BYTE PTR [rax],al
    6dfd:	00 07                	add    BYTE PTR [rdi],al
    6dff:	20 8b 00 00 39 0d    	and    BYTE PTR [rbx+0xd390000],cl
    6e05:	0f f8 00             	psubb  mm0,QWORD PTR [rax]
    6e08:	00 00                	add    BYTE PTR [rax],al
    6e0a:	08 00                	or     BYTE PTR [rax],al
    6e0c:	05 0c 46 00 00       	add    eax,0x460c
    6e11:	39 0e                	cmp    DWORD PTR [rsi],ecx
    6e13:	03 e4                	add    esp,esp
    6e15:	6d                   	ins    DWORD PTR es:[rdi],dx
    6e16:	00 00                	add    BYTE PTR [rax],al
    6e18:	82                   	(bad)
    6e19:	01 2d 24 00 00 08    	add    DWORD PTR [rip+0x8000024],ebp        # 8006e43 <__TMC_END__+0x8002e2b>
    6e1f:	2b 0e                	sub    ecx,DWORD PTR [rsi]
    6e21:	3f                   	(bad)
    6e22:	9a                   	(bad)
    6e23:	5a                   	pop    rdx
    6e24:	00 00                	add    BYTE PTR [rax],al
    6e26:	08 21                	or     BYTE PTR [rcx],ah
    6e28:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e29:	00 00                	add    BYTE PTR [rax],al
    6e2b:	08 21                	or     BYTE PTR [rcx],ah
    6e2d:	01 00                	add    DWORD PTR [rax],eax
    6e2f:	00 2d e5 00 00 00    	add    BYTE PTR [rip+0xe5],ch        # 6f1a <__TMC_END__+0x2f02>
    6e35:	40 6e                	rex outs dx,BYTE PTR ds:[rsi]
    6e37:	00 00                	add    BYTE PTR [rax],al
    6e39:	2e 3a 00             	cs cmp al,BYTE PTR [rax]
    6e3c:	00 00                	add    BYTE PTR [rax],al
    6e3e:	00 00                	add    BYTE PTR [rax],al
    6e40:	08 18                	or     BYTE PTR [rax],bl
    6e42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e43:	00 00                	add    BYTE PTR [rax],al
    6e45:	3f                   	(bad)
    6e46:	19 5f 00             	sbb    DWORD PTR [rdi+0x0],ebx
    6e49:	00 08                	add    BYTE PTR [rax],cl
    6e4b:	45 6e                	rex.RB outs dx,BYTE PTR ds:[rsi]
    6e4d:	00 00                	add    BYTE PTR [rax],al
    6e4f:	3f                   	(bad)
    6e50:	65 68 00 00 08 4f    	gs push 0x4f080000
    6e56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e57:	00 00                	add    BYTE PTR [rax],al
    6e59:	08 2b                	or     BYTE PTR [rbx],ch
    6e5b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e5c:	00 00                	add    BYTE PTR [rax],al
    6e5e:	2d e5 00 00 00       	sub    eax,0xe5
    6e63:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e64:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e65:	00 00                	add    BYTE PTR [rax],al
    6e67:	2e 3a 00             	cs cmp al,BYTE PTR [rax]
    6e6a:	00 00                	add    BYTE PTR [rax],al
    6e6c:	13 00                	adc    eax,DWORD PTR [rax]
    6e6e:	05 64 54 00 00       	add    eax,0x5464
    6e73:	3a 55 12             	cmp    dl,BYTE PTR [rbp+0x12]
    6e76:	0c 6e                	or     al,0x6e
    6e78:	00 00                	add    BYTE PTR [rax],al
    6e7a:	0f 6e 6e 00          	movd   mm5,DWORD PTR [rsi+0x0]
    6e7e:	00 08                	add    BYTE PTR [rax],cl
    6e80:	a8 02                	test   al,0x2
    6e82:	00 00                	add    BYTE PTR [rax],al
    6e84:	2c 3f                	sub    al,0x3f
    6e86:	24 00                	and    al,0x0
    6e88:	00 3a                	add    BYTE PTR [rdx],bh
    6e8a:	52                   	push   rdx
    6e8b:	03 96 6e 00 00 01    	add    edx,DWORD PTR [rsi+0x100006e]
    6e91:	7f 6e                	jg     6f01 <__TMC_END__+0x2ee9>
    6e93:	00 00                	add    BYTE PTR [rax],al
    6e95:	00 10                	add    BYTE PTR [rax],dl
    6e97:	d1 40 00             	rol    DWORD PTR [rax+0x0],1
    6e9a:	00 3a                	add    BYTE PTR [rdx],bh
    6e9c:	b8 0c f1 00 00       	mov    eax,0xf10c
    6ea1:	00 ac 6e 00 00 01 7f 	add    BYTE PTR [rsi+rbp*2+0x7f010000],ch
    6ea8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6ea9:	00 00                	add    BYTE PTR [rax],al
    6eab:	00 0a                	add    BYTE PTR [rdx],cl
    6ead:	b1 08                	mov    cl,0x8
    6eaf:	00 00                	add    BYTE PTR [rax],al
    6eb1:	3a 54 03 0c          	cmp    dl,BYTE PTR [rbx+rax*1+0xc]
    6eb5:	f1                   	int1
    6eb6:	00 00                	add    BYTE PTR [rax],al
    6eb8:	00 c3                	add    bl,al
    6eba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6ebb:	00 00                	add    BYTE PTR [rax],al
    6ebd:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    6ec0:	00 00                	add    BYTE PTR [rax],al
    6ec2:	00 0a                	add    BYTE PTR [rdx],cl
    6ec4:	98                   	cwde
    6ec5:	63 00                	movsxd eax,DWORD PTR [rax]
    6ec7:	00 3a                	add    BYTE PTR [rdx],bh
    6ec9:	56                   	push   rsi
    6eca:	03 0c f1             	add    ecx,DWORD PTR [rcx+rsi*8]
    6ecd:	00 00                	add    BYTE PTR [rax],al
    6ecf:	00 da                	add    dl,bl
    6ed1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6ed2:	00 00                	add    BYTE PTR [rax],al
    6ed4:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    6ed7:	00 00                	add    BYTE PTR [rax],al
    6ed9:	00 10                	add    BYTE PTR [rax],dl
    6edb:	ae                   	scas   al,BYTE PTR es:[rdi]
    6edc:	3b 00                	cmp    eax,DWORD PTR [rax]
    6ede:	00 3a                	add    BYTE PTR [rdx],bh
    6ee0:	ec                   	in     al,dx
    6ee1:	0c f1                	or     al,0xf1
    6ee3:	00 00                	add    BYTE PTR [rax],al
    6ee5:	00 f0                	add    al,dh
    6ee7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6ee8:	00 00                	add    BYTE PTR [rax],al
    6eea:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    6eed:	00 00                	add    BYTE PTR [rax],al
    6eef:	00 0a                	add    BYTE PTR [rdx],cl
    6ef1:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    6ef2:	7d 00                	jge    6ef4 <__TMC_END__+0x2edc>
    6ef4:	00 3a                	add    BYTE PTR [rdx],bh
    6ef6:	3f                   	(bad)
    6ef7:	02 0c f1             	add    cl,BYTE PTR [rcx+rsi*8]
    6efa:	00 00                	add    BYTE PTR [rax],al
    6efc:	00 07                	add    BYTE PTR [rdi],al
    6efe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6eff:	00 00                	add    BYTE PTR [rax],al
    6f01:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    6f04:	00 00                	add    BYTE PTR [rax],al
    6f06:	00 0a                	add    BYTE PTR [rdx],cl
    6f08:	75 59                	jne    6f63 <__TMC_END__+0x2f4b>
    6f0a:	00 00                	add    BYTE PTR [rax],al
    6f0c:	3a 33                	cmp    dh,BYTE PTR [rbx]
    6f0e:	03 0c f1             	add    ecx,DWORD PTR [rcx+rsi*8]
    6f11:	00 00                	add    BYTE PTR [rax],al
    6f13:	00 23                	add    BYTE PTR [rbx],ah
    6f15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6f16:	00 00                	add    BYTE PTR [rax],al
    6f18:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    6f1b:	00 00                	add    BYTE PTR [rax],al
    6f1d:	01 23                	add    DWORD PTR [rbx],esp
    6f1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6f20:	00 00                	add    BYTE PTR [rax],al
    6f22:	00 08                	add    BYTE PTR [rax],cl
    6f24:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6f25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6f26:	00 00                	add    BYTE PTR [rax],al
    6f28:	0a 17                	or     dl,BYTE PTR [rdi]
    6f2a:	4b 00 00             	rex.WXB add BYTE PTR [r8],al
    6f2d:	3a 8e 02 0e 03 58    	cmp    cl,BYTE PTR [rsi+0x58030e02]
    6f33:	00 00                	add    BYTE PTR [rax],al
    6f35:	49 6f                	rex.WB outs dx,DWORD PTR ds:[rsi]
    6f37:	00 00                	add    BYTE PTR [rax],al
    6f39:	01 03                	add    DWORD PTR [rbx],eax
    6f3b:	58                   	pop    rax
    6f3c:	00 00                	add    BYTE PTR [rax],al
    6f3e:	01 f1                	add    ecx,esi
    6f40:	00 00                	add    BYTE PTR [rax],al
    6f42:	00 01                	add    BYTE PTR [rcx],al
    6f44:	7f 6e                	jg     6fb4 <__TMC_END__+0x2f9c>
    6f46:	00 00                	add    BYTE PTR [rax],al
    6f48:	00 0a                	add    BYTE PTR [rdx],cl
    6f4a:	b2 7d                	mov    dl,0x7d
    6f4c:	00 00                	add    BYTE PTR [rax],al
    6f4e:	3a 08                	cmp    cl,BYTE PTR [rax]
    6f50:	01 0e                	add    DWORD PTR [rsi],ecx
    6f52:	7f 6e                	jg     6fc2 <__TMC_END__+0x2faa>
    6f54:	00 00                	add    BYTE PTR [rax],al
    6f56:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
    6f58:	00 00                	add    BYTE PTR [rax],al
    6f5a:	01 c0                	add    eax,eax
    6f5c:	02 00                	add    al,BYTE PTR [rax]
    6f5e:	00 01                	add    BYTE PTR [rcx],al
    6f60:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    6f63:	00 00                	add    BYTE PTR [rax],al
    6f65:	0a 7c 18 00          	or     bh,BYTE PTR [rax+rbx*1+0x0]
    6f69:	00 3a                	add    BYTE PTR [rdx],bh
    6f6b:	d8 02                	fadd   DWORD PTR [rdx]
    6f6d:	0f 2e 00             	ucomiss xmm0,DWORD PTR [rax]
    6f70:	00 00                	add    BYTE PTR [rax],al
    6f72:	8b 6f 00             	mov    ebp,DWORD PTR [rdi+0x0]
    6f75:	00 01                	add    BYTE PTR [rcx],al
    6f77:	7d 00                	jge    6f79 <__TMC_END__+0x2f61>
    6f79:	00 00                	add    BYTE PTR [rax],al
    6f7b:	01 2e                	add    DWORD PTR [rsi],ebp
    6f7d:	00 00                	add    BYTE PTR [rax],al
    6f7f:	00 01                	add    BYTE PTR [rcx],al
    6f81:	2e 00 00             	cs add BYTE PTR [rax],al
    6f84:	00 01                	add    BYTE PTR [rcx],al
    6f86:	7f 6e                	jg     6ff6 <__TMC_END__+0x2fde>
    6f88:	00 00                	add    BYTE PTR [rax],al
    6f8a:	00 0a                	add    BYTE PTR [rdx],cl
    6f8c:	99                   	cdq
    6f8d:	1a 00                	sbb    al,BYTE PTR [rax]
    6f8f:	00 3a                	add    BYTE PTR [rdx],bh
    6f91:	0f 01 0e             	sidt   [rsi]
    6f94:	7f 6e                	jg     7004 <__TMC_END__+0x2fec>
    6f96:	00 00                	add    BYTE PTR [rax],al
    6f98:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6f99:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6f9a:	00 00                	add    BYTE PTR [rax],al
    6f9c:	01 c0                	add    eax,eax
    6f9e:	02 00                	add    al,BYTE PTR [rax]
    6fa0:	00 01                	add    BYTE PTR [rcx],al
    6fa2:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    6fa5:	00 01                	add    BYTE PTR [rcx],al
    6fa7:	7f 6e                	jg     7017 <__TMC_END__+0x2fff>
    6fa9:	00 00                	add    BYTE PTR [rax],al
    6fab:	00 0a                	add    BYTE PTR [rdx],cl
    6fad:	c4                   	(bad)
    6fae:	69 00 00 3a 01 03    	imul   eax,DWORD PTR [rax],0x3013a00
    6fb4:	0c f1                	or     al,0xf1
    6fb6:	00 00                	add    BYTE PTR [rax],al
    6fb8:	00 cd                	add    ch,cl
    6fba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6fbb:	00 00                	add    BYTE PTR [rax],al
    6fbd:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    6fc0:	00 00                	add    BYTE PTR [rax],al
    6fc2:	01 ac 5a 00 00 01 f1 	add    DWORD PTR [rdx+rbx*2-0xeff0000],ebp
    6fc9:	00 00                	add    BYTE PTR [rax],al
    6fcb:	00 00                	add    BYTE PTR [rax],al
    6fcd:	0a 53 6e             	or     dl,BYTE PTR [rbx+0x6e]
    6fd0:	00 00                	add    BYTE PTR [rax],al
    6fd2:	3a 39                	cmp    bh,BYTE PTR [rcx]
    6fd4:	03 0c f1             	add    ecx,DWORD PTR [rcx+rsi*8]
    6fd7:	00 00                	add    BYTE PTR [rax],al
    6fd9:	00 e9                	add    cl,ch
    6fdb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6fdc:	00 00                	add    BYTE PTR [rax],al
    6fde:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    6fe1:	00 00                	add    BYTE PTR [rax],al
    6fe3:	01 e9                	add    ecx,ebp
    6fe5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6fe6:	00 00                	add    BYTE PTR [rax],al
    6fe8:	00 08                	add    BYTE PTR [rax],cl
    6fea:	7a 6e                	jp     705a <__TMC_END__+0x3042>
    6fec:	00 00                	add    BYTE PTR [rax],al
    6fee:	0a 9b 2e 00 00 3a    	or     bl,BYTE PTR [rbx+0x3a00002e]
    6ff4:	07                   	(bad)
    6ff5:	03 11                	add    edx,DWORD PTR [rcx]
    6ff7:	ac                   	lods   al,BYTE PTR ds:[rsi]
    6ff8:	5a                   	pop    rdx
    6ff9:	00 00                	add    BYTE PTR [rax],al
    6ffb:	05 70 00 00 01       	add    eax,0x1000070
    7000:	7f 6e                	jg     7070 <__TMC_END__+0x3058>
    7002:	00 00                	add    BYTE PTR [rax],al
    7004:	00 0a                	add    BYTE PTR [rdx],cl
    7006:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
    7007:	7d 00                	jge    7009 <__TMC_END__+0x2ff1>
    7009:	00 3a                	add    BYTE PTR [rdx],bh
    700b:	40 02 0c f1          	rex add cl,BYTE PTR [rcx+rsi*8]
    700f:	00 00                	add    BYTE PTR [rax],al
    7011:	00 1c 70             	add    BYTE PTR [rax+rsi*2],bl
    7014:	00 00                	add    BYTE PTR [rax],al
    7016:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    7019:	00 00                	add    BYTE PTR [rax],al
    701b:	00 3a                	add    BYTE PTR [rdx],bh
    701d:	6a 87                	push   0xffffffffffffff87
    701f:	00 00                	add    BYTE PTR [rax],al
    7021:	3a 46 02             	cmp    al,BYTE PTR [rsi+0x2]
    7024:	0c f1                	or     al,0xf1
    7026:	00 00                	add    BYTE PTR [rax],al
    7028:	00 2c 1d 36 00 00 3a 	add    BYTE PTR [rbx*1+0x3a000036],ch
    702f:	64 03 3b             	add    edi,DWORD PTR fs:[rbx]
    7032:	70 00                	jo     7034 <__TMC_END__+0x301c>
    7034:	00 01                	add    BYTE PTR [rcx],al
    7036:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    7039:	00 00                	add    BYTE PTR [rax],al
    703b:	10 ae 19 00 00 3a    	adc    BYTE PTR [rsi+0x3a000019],ch
    7041:	9e                   	sahf
    7042:	0c f1                	or     al,0xf1
    7044:	00 00                	add    BYTE PTR [rax],al
    7046:	00 51 70             	add    BYTE PTR [rcx+0x70],dl
    7049:	00 00                	add    BYTE PTR [rax],al
    704b:	01 c0                	add    eax,eax
    704d:	02 00                	add    al,BYTE PTR [rax]
    704f:	00 00                	add    BYTE PTR [rax],al
    7051:	10 be 16 00 00 3a    	adc    BYTE PTR [rsi+0x3a000016],bh
    7057:	a0 0c f1 00 00 00 6c 	movabs al,ds:0x706c000000f10c
    705e:	70 00 
    7060:	00 01                	add    BYTE PTR [rcx],al
    7062:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    7065:	00 01                	add    BYTE PTR [rcx],al
    7067:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    706a:	00 00                	add    BYTE PTR [rax],al
    706c:	2c 1e                	sub    al,0x1e
    706e:	91                   	xchg   ecx,eax
    706f:	00 00                	add    BYTE PTR [rax],al
    7071:	3a 0c 03             	cmp    cl,BYTE PTR [rbx+rax*1]
    7074:	7e 70                	jle    70e6 <__TMC_END__+0x30ce>
    7076:	00 00                	add    BYTE PTR [rax],al
    7078:	01 7f 6e             	add    DWORD PTR [rdi+0x6e],edi
    707b:	00 00                	add    BYTE PTR [rax],al
    707d:	00 2c 46             	add    BYTE PTR [rsi+rax*2],ch
    7080:	29 00                	sub    DWORD PTR [rax],eax
    7082:	00 3a                	add    BYTE PTR [rdx],bh
    7084:	4e 01 95 70 00 00 01 	rex.WRX add QWORD PTR [rbp+0x1000070],r10
    708b:	7f 6e                	jg     70fb <__TMC_END__+0x30e3>
    708d:	00 00                	add    BYTE PTR [rax],al
    708f:	01 03                	add    DWORD PTR [rbx],eax
    7091:	58                   	pop    rax
    7092:	00 00                	add    BYTE PTR [rax],al
    7094:	00 0a                	add    BYTE PTR [rdx],cl
    7096:	30 78 00             	xor    BYTE PTR [rax+0x0],bh
    7099:	00 3a                	add    BYTE PTR [rdx],bh
    709b:	53                   	push   rbx
    709c:	01 0c f1             	add    DWORD PTR [rcx+rsi*8],ecx
    709f:	00 00                	add    BYTE PTR [rax],al
    70a1:	00 bb 70 00 00 01    	add    BYTE PTR [rbx+0x1000070],bh
    70a7:	7f 6e                	jg     7117 <__TMC_END__+0x30ff>
    70a9:	00 00                	add    BYTE PTR [rax],al
    70ab:	01 03                	add    DWORD PTR [rbx],eax
    70ad:	58                   	pop    rax
    70ae:	00 00                	add    BYTE PTR [rax],al
    70b0:	01 f1                	add    ecx,esi
    70b2:	00 00                	add    BYTE PTR [rax],al
    70b4:	00 01                	add    BYTE PTR [rcx],al
    70b6:	2e 00 00             	cs add BYTE PTR [rax],al
    70b9:	00 00                	add    BYTE PTR [rax],al
    70bb:	3e 50                	ds push rax
    70bd:	33 00                	xor    eax,DWORD PTR [rax]
    70bf:	00 3a                	add    BYTE PTR [rdx],bh
    70c1:	c2 0e 7f             	ret    0x7f0e
    70c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    70c5:	00 00                	add    BYTE PTR [rax],al
    70c7:	10 4a 63             	adc    BYTE PTR [rdx+0x63],cl
    70ca:	00 00                	add    BYTE PTR [rax],al
    70cc:	3a d3                	cmp    dl,bl
    70ce:	0e                   	(bad)
    70cf:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    70d2:	00 dd                	add    ch,bl
    70d4:	70 00                	jo     70d6 <__TMC_END__+0x30be>
    70d6:	00 01                	add    BYTE PTR [rcx],al
    70d8:	03 58 00             	add    ebx,DWORD PTR [rax+0x0]
    70db:	00 00                	add    BYTE PTR [rax],al
    70dd:	0a ae 48 00 00 3a    	or     ch,BYTE PTR [rsi+0x3a000048]
    70e3:	d1 02                	rol    DWORD PTR [rdx],1
    70e5:	0c f1                	or     al,0xf1
    70e7:	00 00                	add    BYTE PTR [rax],al
    70e9:	00 f9                	add    cl,bh
    70eb:	70 00                	jo     70ed <__TMC_END__+0x30d5>
    70ed:	00 01                	add    BYTE PTR [rcx],al
    70ef:	f1                   	int1
    70f0:	00 00                	add    BYTE PTR [rax],al
    70f2:	00 01                	add    BYTE PTR [rcx],al
    70f4:	7f 6e                	jg     7164 <__TMC_END__+0x314c>
    70f6:	00 00                	add    BYTE PTR [rax],al
    70f8:	00 0e                	add    BYTE PTR [rsi],cl
    70fa:	81 1b 00 00 0e 8e    	sbb    DWORD PTR [rbx],0x8e0e0000
    7100:	1b 00                	sbb    eax,DWORD PTR [rax]
    7102:	00 0e                	add    BYTE PTR [rsi],cl
    7104:	49 5e                	rex.WB pop r14
    7106:	00 00                	add    BYTE PTR [rax],al
    7108:	0e                   	(bad)
    7109:	55                   	push   rbp
    710a:	5e                   	pop    rsi
    710b:	00 00                	add    BYTE PTR [rax],al
    710d:	08 5d 1c             	or     BYTE PTR [rbp+0x1c],bl
    7110:	00 00                	add    BYTE PTR [rax],al
    7112:	34 d7                	xor    al,0xd7
    7114:	0d 00 00 2d e5       	or     eax,0xe52d0000
    7119:	00 00                	add    BYTE PTR [rax],al
    711b:	00 27                	add    BYTE PTR [rdi],ah
    711d:	71 00                	jno    711f <__TMC_END__+0x3107>
    711f:	00 2e                	add    BYTE PTR [rsi],ch
    7121:	3a 00                	cmp    al,BYTE PTR [rax]
    7123:	00 00                	add    BYTE PTR [rax],al
    7125:	0f 00 0e             	str    WORD PTR [rsi]
    7128:	35 1d 00 00 08       	xor    eax,0x800001d
    712d:	50                   	push   rax
    712e:	1c 00                	sbb    al,0x0
    7130:	00 08                	add    BYTE PTR [rax],cl
    7132:	e2 38                	loop   716c <__TMC_END__+0x3154>
    7134:	00 00                	add    BYTE PTR [rax],al
    7136:	0e                   	(bad)
    7137:	09 1d 00 00 0e 6b    	or     DWORD PTR [rip+0x6b0e0000],ebx        # 6b0e713d <__TMC_END__+0x6b0e3125>
    713d:	1f                   	(bad)
    713e:	00 00                	add    BYTE PTR [rax],al
    7140:	0e                   	(bad)
    7141:	78 1f                	js     7162 <__TMC_END__+0x314a>
    7143:	00 00                	add    BYTE PTR [rax],al
    7145:	0e                   	(bad)
    7146:	e2 38                	loop   7180 <__TMC_END__+0x3168>
    7148:	00 00                	add    BYTE PTR [rax],al
    714a:	34 50                	xor    al,0x50
    714c:	1c 00                	sbb    al,0x0
    714e:	00 0e                	add    BYTE PTR [rsi],cl
    7150:	50                   	push   rax
    7151:	1c 00                	sbb    al,0x0
    7153:	00 08                	add    BYTE PTR [rax],cl
    7155:	e8 38 00 00 08       	call   8007192 <__TMC_END__+0x800317a>
    715a:	d6                   	(bad)
    715b:	39 00                	cmp    DWORD PTR [rax],eax
    715d:	00 0e                	add    BYTE PTR [rsi],cl
    715f:	ec                   	in     al,dx
    7160:	00 00                	add    BYTE PTR [rax],al
    7162:	00 08                	add    BYTE PTR [rax],cl
    7164:	8b 1d 00 00 05 3a    	mov    ebx,DWORD PTR [rip+0x3a050000]        # 3a05716a <__TMC_END__+0x3a053152>
    716a:	64 00 00             	add    BYTE PTR fs:[rax],al
    716d:	3b 26                	cmp    esp,DWORD PTR [rsi]
    716f:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    7171:	00 00                	add    BYTE PTR [rax],al
    7173:	00 05 90 83 00 00    	add    BYTE PTR [rip+0x8390],al        # f509 <__TMC_END__+0xb4f1>
    7179:	3c 30                	cmp    al,0x30
    717b:	1a 80 71 00 00 08    	sbb    al,BYTE PTR [rax+0x8000071]
    7181:	13 68 00             	adc    ebp,DWORD PTR [rax+0x0]
    7184:	00 10                	add    BYTE PTR [rax],dl
    7186:	61                   	(bad)
    7187:	90                   	nop
    7188:	00 00                	add    BYTE PTR [rax],al
    718a:	3b 9f 0c f1 00 00    	cmp    ebx,DWORD PTR [rdi+0xf10c]
    7190:	00 a0 71 00 00 01    	add    BYTE PTR [rax+0x1000071],ah
    7196:	7f 00                	jg     7198 <__TMC_END__+0x3180>
    7198:	00 00                	add    BYTE PTR [rax],al
    719a:	01 68 71             	add    DWORD PTR [rax+0x71],ebp
    719d:	00 00                	add    BYTE PTR [rax],al
    719f:	00 10                	add    BYTE PTR [rax],dl
    71a1:	48 0c 00             	rex.W or al,0x0
    71a4:	00 3c 37             	add    BYTE PTR [rdi+rsi*1],bh
    71a7:	0f 7f 00             	movq   QWORD PTR [rax],mm0
    71aa:	00 00                	add    BYTE PTR [rax],al
    71ac:	bb 71 00 00 01       	mov    ebx,0x1000071
    71b1:	7f 00                	jg     71b3 <__TMC_END__+0x319b>
    71b3:	00 00                	add    BYTE PTR [rax],al
    71b5:	01 74 71 00          	add    DWORD PTR [rcx+rsi*2+0x0],esi
    71b9:	00 00                	add    BYTE PTR [rax],al
    71bb:	10 4a 0c             	adc    BYTE PTR [rdx+0xc],cl
    71be:	00 00                	add    BYTE PTR [rax],al
    71c0:	3c 34                	cmp    al,0x34
    71c2:	12 74 71 00          	adc    dh,BYTE PTR [rcx+rsi*2+0x0]
    71c6:	00 d1                	add    cl,dl
    71c8:	71 00                	jno    71ca <__TMC_END__+0x31b2>
    71ca:	00 01                	add    BYTE PTR [rcx],al
    71cc:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    71cf:	00 00                	add    BYTE PTR [rax],al
    71d1:	10 63 90             	adc    BYTE PTR [rbx-0x70],ah
    71d4:	00 00                	add    BYTE PTR [rax],al
    71d6:	3b 9b 11 68 71 00    	cmp    ebx,DWORD PTR [rbx+0x716811]
    71dc:	00 e7                	add    bh,ah
    71de:	71 00                	jno    71e0 <__TMC_END__+0x31c8>
    71e0:	00 01                	add    BYTE PTR [rcx],al
    71e2:	c0 02 00             	rol    BYTE PTR [rdx],0x0
    71e5:	00 00                	add    BYTE PTR [rax],al
    71e7:	13 10                	adc    edx,DWORD PTR [rax]
    71e9:	04 f5                	add    al,0xf5
    71eb:	7f 00                	jg     71ed <__TMC_END__+0x31d5>
    71ed:	00 3e                	add    BYTE PTR [rsi],bh
    71ef:	60                   	(bad)
    71f0:	32 00                	xor    al,BYTE PTR [rax]
    71f2:	00 3d 48 10 41 69    	add    BYTE PTR [rip+0x69411048],bh        # 69418240 <__TMC_END__+0x69414228>
    71f8:	00 00                	add    BYTE PTR [rax],al
    71fa:	10 a5 66 00 00 3d    	adc    BYTE PTR [rbp+0x3d000066],ah
    7200:	4f 0f 38 5a          	rex.WRXB (bad)
    7204:	00 00                	add    BYTE PTR [rax],al
    7206:	15 72 00 00 01       	adc    eax,0x1000072
    720b:	08 69 00             	or     BYTE PTR [rcx+0x0],ch
    720e:	00 01                	add    BYTE PTR [rcx],al
    7210:	08 69 00             	or     BYTE PTR [rcx+0x0],ch
    7213:	00 00                	add    BYTE PTR [rax],al
    7215:	10 d0                	adc    al,dl
    7217:	86 00                	xchg   BYTE PTR [rax],al
    7219:	00 3d 52 0f 08 69    	add    BYTE PTR [rip+0x69080f52],bh        # 69088171 <__TMC_END__+0x69084159>
    721f:	00 00                	add    BYTE PTR [rax],al
    7221:	2b 72 00             	sub    esi,DWORD PTR [rdx+0x0]
    7224:	00 01                	add    BYTE PTR [rcx],al
    7226:	2b 72 00             	sub    esi,DWORD PTR [rdx+0x0]
    7229:	00 00                	add    BYTE PTR [rax],al
    722b:	08 bf 58 00 00 10    	or     BYTE PTR [rdi+0x10000058],bh
    7231:	0c 33                	or     al,0x33
    7233:	00 00                	add    BYTE PTR [rax],al
    7235:	3d 4c 0f 08 69       	cmp    eax,0x69080f4c
    723a:	00 00                	add    BYTE PTR [rax],al
    723c:	46 72 00             	rex.RX jb 723f <__TMC_END__+0x3227>
    723f:	00 01                	add    BYTE PTR [rcx],al
    7241:	46 72 00             	rex.RX jb 7244 <__TMC_END__+0x322c>
    7244:	00 00                	add    BYTE PTR [rax],al
    7246:	08 08                	or     BYTE PTR [rax],cl
    7248:	69 00 00 10 09 33    	imul   eax,DWORD PTR [rax],0x33091000
    724e:	00 00                	add    BYTE PTR [rax],al
    7250:	3d b3 0e 03 58       	cmp    eax,0x58030eb3
    7255:	00 00                	add    BYTE PTR [rax],al
    7257:	61                   	(bad)
    7258:	72 00                	jb     725a <__TMC_END__+0x3242>
    725a:	00 01                	add    BYTE PTR [rcx],al
    725c:	ba 58 00 00 00       	mov    edx,0x58
    7261:	10 0b                	adc    BYTE PTR [rbx],cl
    7263:	33 00                	xor    eax,DWORD PTR [rax]
    7265:	00 3d b7 0e 03 58    	add    BYTE PTR [rip+0x58030eb7],bh        # 58038122 <__TMC_END__+0x5803410a>
    726b:	00 00                	add    BYTE PTR [rax],al
    726d:	77 72                	ja     72e1 <__TMC_END__+0x32c9>
    726f:	00 00                	add    BYTE PTR [rax],al
    7271:	01 77 72             	add    DWORD PTR [rdi+0x72],esi
    7274:	00 00                	add    BYTE PTR [rax],al
    7276:	00 08                	add    BYTE PTR [rax],cl
    7278:	14 69                	adc    al,0x69
    727a:	00 00                	add    BYTE PTR [rax],al
    727c:	10 fa                	adc    dl,bh
    727e:	33 00                	xor    eax,DWORD PTR [rax]
    7280:	00 3d 84 13 2b 72    	add    BYTE PTR [rip+0x722b1384],bh        # 722b860a <__TMC_END__+0x722b45f2>
    7286:	00 00                	add    BYTE PTR [rax],al
    7288:	92                   	xchg   edx,eax
    7289:	72 00                	jb     728b <__TMC_END__+0x3273>
    728b:	00 01                	add    BYTE PTR [rcx],al
    728d:	77 72                	ja     7301 <__TMC_END__+0x32e9>
    728f:	00 00                	add    BYTE PTR [rax],al
    7291:	00 10                	add    BYTE PTR [rax],dl
    7293:	d5 17 00 00          	{rex2 0x17} add BYTE PTR [r24],r8b
    7297:	3d 88 13 2b 72       	cmp    eax,0x722b1388
    729c:	00 00                	add    BYTE PTR [rax],al
    729e:	a8 72                	test   al,0x72
    72a0:	00 00                	add    BYTE PTR [rax],al
    72a2:	01 77 72             	add    DWORD PTR [rdi+0x72],esi
    72a5:	00 00                	add    BYTE PTR [rax],al
    72a7:	00 0a                	add    BYTE PTR [rdx],cl
    72a9:	03 6d 00             	add    ebp,DWORD PTR [rbp+0x0]
    72ac:	00 3d 7f 01 0c f1    	add    BYTE PTR [rip+0xfffffffff10c017f],bh        # fffffffff10c7431 <__TMC_END__+0xfffffffff10c3419>
    72b2:	00 00                	add    BYTE PTR [rax],al
    72b4:	00 c4                	add    ah,al
    72b6:	72 00                	jb     72b8 <__TMC_END__+0x32a0>
    72b8:	00 01                	add    BYTE PTR [rcx],al
    72ba:	c4                   	(bad)
    72bb:	72 00                	jb     72bd <__TMC_END__+0x32a5>
    72bd:	00 01                	add    BYTE PTR [rcx],al
    72bf:	f1                   	int1
    72c0:	00 00                	add    BYTE PTR [rax],al
    72c2:	00 00                	add    BYTE PTR [rax],al
    72c4:	08 19                	or     BYTE PTR [rcx],bl
    72c6:	69 00 00 0e e5 00    	imul   eax,DWORD PTR [rax],0xe50e00
    72cc:	00 00                	add    BYTE PTR [rax],al
    72ce:	08 a0 5e 00 00 0e    	or     BYTE PTR [rax+0xe00005e],ah
    72d4:	08 58 00             	or     BYTE PTR [rax+0x0],bl
    72d7:	00 08                	add    BYTE PTR [rax],cl
    72d9:	cd 60                	int    0x60
    72db:	00 00                	add    BYTE PTR [rax],al
    72dd:	0e                   	(bad)
    72de:	a0 5e 00 00 08 d2 60 	movabs al,ds:0x60d20800005e
    72e5:	00 00 
    72e7:	0e                   	(bad)
    72e8:	c5 02 00             	(bad)
    72eb:	00 08                	add    BYTE PTR [rax],cl
    72ed:	ff 62 00             	jmp    QWORD PTR [rdx+0x0]
    72f0:	00 0e                	add    BYTE PTR [rsi],cl
    72f2:	d2 60 00             	shl    BYTE PTR [rax+0x0],cl
    72f5:	00 08                	add    BYTE PTR [rax],cl
    72f7:	f5                   	cmc
    72f8:	07                   	(bad)
    72f9:	00 00                	add    BYTE PTR [rax],al
    72fb:	08 5e 08             	or     BYTE PTR [rsi+0x8],bl
    72fe:	00 00                	add    BYTE PTR [rax],al
    7300:	05 d4 03 00 00       	add    eax,0x3d4
    7305:	3e 18 13             	ds sbb BYTE PTR [rbx],dl
    7308:	e3 67                	jrcxz  7371 <__TMC_END__+0x3359>
    730a:	00 00                	add    BYTE PTR [rax],al
    730c:	05 ee 02 00 00       	add    eax,0x2ee
    7311:	3e 19 14 fb          	ds sbb DWORD PTR [rbx+rdi*8],edx
    7315:	67 00 00             	add    BYTE PTR [eax],al
    7318:	05 c7 73 00 00       	add    eax,0x73c7
    731d:	3e 1a 14 18          	ds sbb dl,BYTE PTR [rax+rbx*1]
    7321:	68 00 00 05 77       	push   0x77050000
    7326:	3e 00 00             	ds add BYTE PTR [rax],al
    7329:	3e 1b 14 30          	ds sbb edx,DWORD PTR [rax+rsi*1]
    732d:	68 00 00 05 82       	push   0xffffffff82050000
    7332:	2d 00 00 3f 19       	sub    eax,0x193f0000
    7337:	18 3c 68             	sbb    BYTE PTR [rax+rbp*2],bh
    733a:	00 00                	add    BYTE PTR [rax],al
    733c:	05 d8 73 00 00       	add    eax,0x73d8
    7341:	3f                   	(bad)
    7342:	1a 19                	sbb    bl,BYTE PTR [rcx]
    7344:	54                   	push   rsp
    7345:	68 00 00 05 31       	push   0x31050000
    734a:	36 00 00             	ss add BYTE PTR [rax],al
    734d:	3f                   	(bad)
    734e:	1b 19                	sbb    ebx,DWORD PTR [rcx]
    7350:	6c                   	ins    BYTE PTR es:[rdi],dx
    7351:	68 00 00 05 36       	push   0x36050000
    7356:	01 00                	add    DWORD PTR [rax],eax
    7358:	00 3f                	add    BYTE PTR [rdi],bh
    735a:	1c 19                	sbb    al,0x19
    735c:	84 68 00             	test   BYTE PTR [rax+0x0],ch
    735f:	00 05 1c 5b 00 00    	add    BYTE PTR [rip+0x5b1c],al        # ce81 <__TMC_END__+0x8e69>
    7365:	3f                   	(bad)
    7366:	1f                   	(bad)
    7367:	19 48 68             	sbb    DWORD PTR [rax+0x68],ecx
    736a:	00 00                	add    BYTE PTR [rax],al
    736c:	05 47 3a 00 00       	add    eax,0x3a47
    7371:	3f                   	(bad)
    7372:	20 1a                	and    BYTE PTR [rdx],bl
    7374:	60                   	(bad)
    7375:	68 00 00 05 ad       	push   0xffffffffad050000
    737a:	12 00                	adc    al,BYTE PTR [rax]
    737c:	00 3f                	add    BYTE PTR [rdi],bh
    737e:	21 1a                	and    DWORD PTR [rdx],ebx
    7380:	78 68                	js     73ea <__TMC_END__+0x33d2>
    7382:	00 00                	add    BYTE PTR [rax],al
    7384:	05 9b 71 00 00       	add    eax,0x719b
    7389:	3f                   	(bad)
    738a:	22 1a                	and    bl,BYTE PTR [rdx]
    738c:	90                   	nop
    738d:	68 00 00 05 f9       	push   0xfffffffff9050000
    7392:	8f 00                	pop    QWORD PTR [rax]
    7394:	00 40 2f             	add    BYTE PTR [rax+0x2f],al
    7397:	16                   	(bad)
    7398:	04 66                	add    al,0x66
    739a:	00 00                	add    BYTE PTR [rax],al
    739c:	05 20 49 00 00       	add    eax,0x4920
    73a1:	40 31 13             	rex xor DWORD PTR [rbx],edx
    73a4:	ac                   	lods   al,BYTE PTR ds:[rsi]
    73a5:	5a                   	pop    rdx
    73a6:	00 00                	add    BYTE PTR [rax],al
    73a8:	05 53 0c 00 00       	add    eax,0xc53
    73ad:	40 32 13             	rex xor dl,BYTE PTR [rbx]
    73b0:	ac                   	lods   al,BYTE PTR ds:[rsi]
    73b1:	5a                   	pop    rdx
    73b2:	00 00                	add    BYTE PTR [rax],al
    73b4:	05 f3 69 00 00       	add    eax,0x69f3
    73b9:	40 33 13             	rex xor edx,DWORD PTR [rbx]
    73bc:	ac                   	lods   al,BYTE PTR ds:[rsi]
    73bd:	5a                   	pop    rdx
    73be:	00 00                	add    BYTE PTR [rax],al
    73c0:	05 f8 8f 00 00       	add    eax,0x8ff8
    73c5:	40 3c 18             	rex cmp al,0x18
    73c8:	fd                   	std
    73c9:	65 00 00             	add    BYTE PTR gs:[rax],al
    73cc:	05 1f 49 00 00       	add    eax,0x491f
    73d1:	40                   	rex
    73d2:	3e 1b 3a             	ds sbb edi,DWORD PTR [rdx]
    73d5:	00 00                	add    BYTE PTR [rax],al
    73d7:	00 05 52 0c 00 00    	add    BYTE PTR [rip+0xc52],al        # 802f <__TMC_END__+0x4017>
    73dd:	40 3f                	rex (bad)
    73df:	1b 3a                	sbb    edi,DWORD PTR [rdx]
    73e1:	00 00                	add    BYTE PTR [rax],al
    73e3:	00 05 f2 69 00 00    	add    BYTE PTR [rip+0x69f2],al        # dddb <__TMC_END__+0x9dc3>
    73e9:	40                   	rex
    73ea:	40 1b 3a             	rex sbb edi,DWORD PTR [rdx]
    73ed:	00 00                	add    BYTE PTR [rax],al
    73ef:	00 05 df 58 00 00    	add    BYTE PTR [rip+0x58df],al        # ccd4 <__TMC_END__+0x8cbc>
    73f5:	40                   	rex
    73f6:	4c 13 ac 5a 00 00 05 	adc    r13,QWORD PTR [rdx+rbx*2-0x21fb0000]
    73fd:	de 
    73fe:	58                   	pop    rax
    73ff:	00 00                	add    BYTE PTR [rax],al
    7401:	40                   	rex
    7402:	4f 1b 3a             	rex.WRXB sbb r15,QWORD PTR [r10]
    7405:	00 00                	add    BYTE PTR [rax],al
    7407:	00 05 b0 66 00 00    	add    BYTE PTR [rip+0x66b0],al        # dabd <__TMC_END__+0x9aa5>
    740d:	40 5a                	rex pop rdx
    740f:	15 9c 68 00 00       	adc    eax,0x689c
    7414:	05 ff 19 00 00       	add    eax,0x19ff
    7419:	40 5b                	rex pop rbx
    741b:	16                   	(bad)
    741c:	a8 68                	test   al,0x68
    741e:	00 00                	add    BYTE PTR [rax],al
    7420:	08 64 3e 00          	or     BYTE PTR [rsi+rdi*1+0x0],ah
    7424:	00 0e                	add    BYTE PTR [rsi],cl
    7426:	09 40 00             	or     DWORD PTR [rax+0x0],eax
    7429:	00 34 64             	add    BYTE PTR [rsp+riz*2],dh
    742c:	3e 00 00             	ds add BYTE PTR [rax],al
    742f:	0e                   	(bad)
    7430:	64 3e 00 00          	fs add BYTE PTR fs:[rax],al
    7434:	08 09                	or     BYTE PTR [rcx],cl
    7436:	40 00 00             	rex add BYTE PTR [rax],al
    7439:	0e                   	(bad)
    743a:	bb 02 00 00 08       	mov    ebx,0x8000002
    743f:	04 63                	add    al,0x63
    7441:	00 00                	add    BYTE PTR [rax],al
    7443:	08 31                	or     BYTE PTR [rcx],dh
    7445:	65 00 00             	add    BYTE PTR gs:[rax],al
    7448:	0e                   	(bad)
    7449:	04 63                	add    al,0x63
    744b:	00 00                	add    BYTE PTR [rax],al
    744d:	08 05 4c 00 00 0e    	or     BYTE PTR [rip+0xe00004c],al        # e00749f <__TMC_END__+0xe003487>
    7453:	80 4e 00 00          	or     BYTE PTR [rsi+0x0],0x0
    7457:	0e                   	(bad)
    7458:	05 4c 00 00 08       	add    eax,0x800004c
    745d:	80 4e 00 00          	or     BYTE PTR [rsi+0x0],0x0
    7461:	08 9d 4e 00 00 0e    	or     BYTE PTR [rbp+0xe00004e],bl
    7467:	33 52 00             	xor    edx,DWORD PTR [rdx+0x0]
    746a:	00 0e                	add    BYTE PTR [rsi],cl
    746c:	9d                   	popf
    746d:	4e 00 00             	rex.WRX add BYTE PTR [rax],r8b
    7470:	08 33                	or     BYTE PTR [rbx],dh
    7472:	52                   	push   rdx
    7473:	00 00                	add    BYTE PTR [rax],al
    7475:	0e                   	(bad)
    7476:	b7 4f                	mov    bh,0x4f
    7478:	00 00                	add    BYTE PTR [rax],al
    747a:	08 5e 41             	or     BYTE PTR [rsi+0x41],bl
    747d:	00 00                	add    BYTE PTR [rax],al
    747f:	08 01                	or     BYTE PTR [rcx],al
    7481:	44 00 00             	add    BYTE PTR [rax],r8b
    7484:	0e                   	(bad)
    7485:	78 45                	js     74cc <__TMC_END__+0x34b4>
    7487:	00 00                	add    BYTE PTR [rax],al
    7489:	0e                   	(bad)
    748a:	01 44 00 00          	add    DWORD PTR [rax+rax*1+0x0],eax
    748e:	0e                   	(bad)
    748f:	5e                   	pop    rsi
    7490:	41 00 00             	add    BYTE PTR [r8],al
    7493:	4c 87 93 00 00 08 78 	xchg   QWORD PTR [rbx+0x78080000],r10
    749a:	45 00 00             	add    BYTE PTR [r8],r8b
    749d:	0e                   	(bad)
    749e:	68 55 00 00 08       	push   0x8000055
    74a3:	eb 41                	jmp    74e6 <__TMC_END__+0x34ce>
    74a5:	00 00                	add    BYTE PTR [rax],al
    74a7:	08 70 41             	or     BYTE PTR [rax+0x41],dh
    74aa:	00 00                	add    BYTE PTR [rax],al
    74ac:	08 95 52 00 00 0e    	or     BYTE PTR [rbp+0xe000052],dl
    74b2:	3a 54 00 00          	cmp    dl,BYTE PTR [rax+rax*1+0x0]
    74b6:	34 95                	xor    al,0x95
    74b8:	52                   	push   rdx
    74b9:	00 00                	add    BYTE PTR [rax],al
    74bb:	0e                   	(bad)
    74bc:	95                   	xchg   ebp,eax
    74bd:	52                   	push   rdx
    74be:	00 00                	add    BYTE PTR [rax],al
    74c0:	08 3a                	or     BYTE PTR [rdx],bh
    74c2:	54                   	push   rsp
    74c3:	00 00                	add    BYTE PTR [rax],al
    74c5:	4d f1                	rex.WRB int1
    74c7:	00 00                	add    BYTE PTR [rax],al
    74c9:	00 d0                	add    al,dl
    74cb:	74 00                	je     74cd <__TMC_END__+0x34b5>
    74cd:	00 26                	add    BYTE PTR [rsi],ah
    74cf:	00 08                	add    BYTE PTR [rax],cl
    74d1:	d5 74 00 00          	{rex2 0x74} add BYTE PTR [r16],r24b
    74d5:	83 01 08             	add    DWORD PTR [rcx],0x8
    74d8:	20 6f 00             	and    BYTE PTR [rdi+0x0],ch
    74db:	00 c5                	add    ch,al
    74dd:	74 00                	je     74df <__TMC_END__+0x34c7>
    74df:	00 08                	add    BYTE PTR [rax],cl
    74e1:	fc                   	cld
    74e2:	43 00 00             	rex.XB add BYTE PTR [r8],al
    74e5:	0e                   	(bad)
    74e6:	fc                   	cld
    74e7:	43 00 00             	rex.XB add BYTE PTR [r8],al
    74ea:	0b 78 08             	or     edi,DWORD PTR [rax+0x8]
    74ed:	00 00                	add    BYTE PTR [rax],al
    74ef:	0b 84 08 00 00 0b 90 	or     eax,DWORD PTR [rax+rcx*1-0x6ff50000]
    74f6:	08 00                	or     BYTE PTR [rax],al
    74f8:	00 0b                	add    BYTE PTR [rbx],cl
    74fa:	3f                   	(bad)
    74fb:	54                   	push   rsp
    74fc:	00 00                	add    BYTE PTR [rax],al
    74fe:	0b 4d 54             	or     ecx,DWORD PTR [rbp+0x54]
    7501:	00 00                	add    BYTE PTR [rax],al
    7503:	0b 9c 08 00 00 0b a8 	or     ebx,DWORD PTR [rax+rcx*1-0x57f50000]
    750a:	08 00                	or     BYTE PTR [rax],al
    750c:	00 0b                	add    BYTE PTR [rbx],cl
    750e:	b4 08                	mov    ah,0x8
    7510:	00 00                	add    BYTE PTR [rax],al
    7512:	0b c0                	or     eax,eax
    7514:	08 00                	or     BYTE PTR [rax],al
    7516:	00 0b                	add    BYTE PTR [rbx],cl
    7518:	cc                   	int3
    7519:	08 00                	or     BYTE PTR [rax],al
    751b:	00 0b                	add    BYTE PTR [rbx],cl
    751d:	d8 08                	fmul   DWORD PTR [rax]
    751f:	00 00                	add    BYTE PTR [rax],al
    7521:	0b e4                	or     esp,esp
    7523:	08 00                	or     BYTE PTR [rax],al
    7525:	00 0b                	add    BYTE PTR [rbx],cl
    7527:	f0 08 00             	lock or BYTE PTR [rax],al
    752a:	00 0b                	add    BYTE PTR [rbx],cl
    752c:	fc                   	cld
    752d:	08 00                	or     BYTE PTR [rax],al
    752f:	00 0b                	add    BYTE PTR [rbx],cl
    7531:	08 09                	or     BYTE PTR [rcx],cl
    7533:	00 00                	add    BYTE PTR [rax],al
    7535:	0b 14 09             	or     edx,DWORD PTR [rcx+rcx*1]
    7538:	00 00                	add    BYTE PTR [rax],al
    753a:	0b 20                	or     esp,DWORD PTR [rax]
    753c:	09 00                	or     DWORD PTR [rax],eax
    753e:	00 0b                	add    BYTE PTR [rbx],cl
    7540:	2c 09                	sub    al,0x9
    7542:	00 00                	add    BYTE PTR [rax],al
    7544:	0b 38                	or     edi,DWORD PTR [rax]
    7546:	09 00                	or     DWORD PTR [rax],eax
    7548:	00 0b                	add    BYTE PTR [rbx],cl
    754a:	44 09 00             	or     DWORD PTR [rax],r8d
    754d:	00 0b                	add    BYTE PTR [rbx],cl
    754f:	50                   	push   rax
    7550:	09 00                	or     DWORD PTR [rax],eax
    7552:	00 0b                	add    BYTE PTR [rbx],cl
    7554:	5c                   	pop    rsp
    7555:	09 00                	or     DWORD PTR [rax],eax
    7557:	00 0b                	add    BYTE PTR [rbx],cl
    7559:	68 09 00 00 0b       	push   0xb000009
    755e:	5b                   	pop    rbx
    755f:	54                   	push   rsp
    7560:	00 00                	add    BYTE PTR [rax],al
    7562:	0b 69 54             	or     ebp,DWORD PTR [rcx+0x54]
    7565:	00 00                	add    BYTE PTR [rax],al
    7567:	0b 74 09 00          	or     esi,DWORD PTR [rcx+rcx*1+0x0]
    756b:	00 0b                	add    BYTE PTR [rbx],cl
    756d:	80 09 00             	or     BYTE PTR [rcx],0x0
    7570:	00 0b                	add    BYTE PTR [rbx],cl
    7572:	77 54                	ja     75c8 <__TMC_END__+0x35b0>
    7574:	00 00                	add    BYTE PTR [rax],al
    7576:	0b 8c 09 00 00 0b 98 	or     ecx,DWORD PTR [rcx+rcx*1-0x67f50000]
    757d:	09 00                	or     DWORD PTR [rax],eax
    757f:	00 0b                	add    BYTE PTR [rbx],cl
    7581:	a4                   	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
    7582:	09 00                	or     DWORD PTR [rax],eax
    7584:	00 0b                	add    BYTE PTR [rbx],cl
    7586:	b0 09                	mov    al,0x9
    7588:	00 00                	add    BYTE PTR [rax],al
    758a:	0b 85 54 00 00 0b    	or     eax,DWORD PTR [rbp+0xb000054]
    7590:	bc 09 00 00 0b       	mov    esp,0xb000009
    7595:	c8 09 00 00          	enter  0x9,0x0
    7599:	0b 93 54 00 00 0b    	or     edx,DWORD PTR [rbx+0xb000054]
    759f:	d4                   	(bad)
    75a0:	09 00                	or     DWORD PTR [rax],eax
    75a2:	00 0b                	add    BYTE PTR [rbx],cl
    75a4:	e0 09                	loopne 75af <__TMC_END__+0x3597>
    75a6:	00 00                	add    BYTE PTR [rax],al
    75a8:	0b ec                	or     ebp,esp
    75aa:	09 00                	or     DWORD PTR [rax],eax
    75ac:	00 0b                	add    BYTE PTR [rbx],cl
    75ae:	f8                   	clc
    75af:	09 00                	or     DWORD PTR [rax],eax
    75b1:	00 0b                	add    BYTE PTR [rbx],cl
    75b3:	04 0a                	add    al,0xa
    75b5:	00 00                	add    BYTE PTR [rax],al
    75b7:	0b 10                	or     edx,DWORD PTR [rax]
    75b9:	0a 00                	or     al,BYTE PTR [rax]
    75bb:	00 0b                	add    BYTE PTR [rbx],cl
    75bd:	1c 0a                	sbb    al,0xa
    75bf:	00 00                	add    BYTE PTR [rax],al
    75c1:	0b 28                	or     ebp,DWORD PTR [rax]
    75c3:	0a 00                	or     al,BYTE PTR [rax]
    75c5:	00 0b                	add    BYTE PTR [rbx],cl
    75c7:	34 0a                	xor    al,0xa
    75c9:	00 00                	add    BYTE PTR [rax],al
    75cb:	0b 40 0a             	or     eax,DWORD PTR [rax+0xa]
    75ce:	00 00                	add    BYTE PTR [rax],al
    75d0:	0b 4c 0a 00          	or     ecx,DWORD PTR [rdx+rcx*1+0x0]
    75d4:	00 0b                	add    BYTE PTR [rbx],cl
    75d6:	58                   	pop    rax
    75d7:	0a 00                	or     al,BYTE PTR [rax]
    75d9:	00 0b                	add    BYTE PTR [rbx],cl
    75db:	64 0a 00             	or     al,BYTE PTR fs:[rax]
    75de:	00 0b                	add    BYTE PTR [rbx],cl
    75e0:	70 0a                	jo     75ec <__TMC_END__+0x35d4>
    75e2:	00 00                	add    BYTE PTR [rax],al
    75e4:	0b 7c 0a 00          	or     edi,DWORD PTR [rdx+rcx*1+0x0]
    75e8:	00 3a                	add    BYTE PTR [rdx],bh
    75ea:	d7                   	xlat   BYTE PTR ds:[rbx]
    75eb:	0b 00                	or     eax,DWORD PTR [rax]
    75ed:	00 41 0a             	add    BYTE PTR [rcx+0xa],al
    75f0:	03 10                	add    edx,DWORD PTR [rax]
    75f2:	cc                   	int3
    75f3:	68 00 00 84 01       	push   0x1840000
    75f8:	b4 7f                	mov    ah,0x7f
    75fa:	00 00                	add    BYTE PTR [rax],al
    75fc:	01 21                	add    DWORD PTR [rcx],esp
    75fe:	05 f1 00 00 00       	add    eax,0xf1
    7603:	61                   	(bad)
    7604:	11 00                	adc    DWORD PTR [rax],eax
    7606:	00 00                	add    BYTE PTR [rax],al
    7608:	00 00                	add    BYTE PTR [rax],al
    760a:	00 79 00             	add    BYTE PTR [rcx+0x0],bh
    760d:	00 00                	add    BYTE PTR [rax],al
    760f:	00 00                	add    BYTE PTR [rax],al
    7611:	00 00                	add    BYTE PTR [rax],al
    7613:	01 9c 46 76 00 00 4e 	add    DWORD PTR [rsi+rax*2+0x4e000076],ebx
    761a:	7c 3b                	jl     7657 <__TMC_END__+0x363f>
    761c:	00 00                	add    BYTE PTR [rax],al
    761e:	22 0a                	and    cl,BYTE PTR [rdx]
    7620:	46 76 00             	rex.RX jbe 7623 <__TMC_END__+0x360b>
    7623:	00 02                	add    BYTE PTR [rdx],al
    7625:	91                   	xchg   ecx,eax
    7626:	40                   	rex
    7627:	4e f4                	rex.WRX hlt
    7629:	37                   	(bad)
    762a:	00 00                	add    BYTE PTR [rax],al
    762c:	23 09                	and    ecx,DWORD PTR [rcx]
    762e:	f1                   	int1
    762f:	00 00                	add    BYTE PTR [rax],al
    7631:	00 03                	add    BYTE PTR [rbx],al
    7633:	91                   	xchg   ecx,eax
    7634:	ac                   	lods   al,BYTE PTR ds:[rsi]
    7635:	7b 40                	jnp    7677 <__TMC_END__+0x365f>
    7637:	69 66 73 00 2b 12 a1 	imul   esp,DWORD PTR [rsi+0x73],0xa1122b00
    763e:	54                   	push   rsp
    763f:	00 00                	add    BYTE PTR [rax],al
    7641:	03 91 b0 7b 00 2d    	add    edx,DWORD PTR [rcx+0x2d007bb0]
    7647:	e5 00                	in     eax,0x0
    7649:	00 00                	add    BYTE PTR [rax],al
    764b:	56                   	push   rsi
    764c:	76 00                	jbe    764e <__TMC_END__+0x3636>
    764e:	00 2e                	add    BYTE PTR [rsi],ch
    7650:	3a 00                	cmp    al,BYTE PTR [rax]
    7652:	00 00                	add    BYTE PTR [rax],al
    7654:	1c 00                	sbb    al,0x0
    7656:	85 01                	test   DWORD PTR [rcx],eax
    7658:	1d 21 00 00 01       	sbb    eax,0x1000021
    765d:	13 09                	adc    ecx,DWORD PTR [rcx]
    765f:	b2 75                	mov    dl,0x75
    7661:	00 00                	add    BYTE PTR [rax],al
    7663:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7664:	6a 00                	push   0x0
    7666:	00 44 11 00          	add    BYTE PTR [rcx+rdx*1+0x0],al
    766a:	00 00                	add    BYTE PTR [rax],al
    766c:	00 00                	add    BYTE PTR [rax],al
    766e:	00 1d 00 00 00 00    	add    BYTE PTR [rip+0x0],bl        # 7674 <__TMC_END__+0x365c>
    7674:	00 00                	add    BYTE PTR [rax],al
    7676:	00 01                	add    BYTE PTR [rcx],al
    7678:	9c                   	pushf
    7679:	9a                   	(bad)
    767a:	76 00                	jbe    767c <__TMC_END__+0x3664>
    767c:	00 4f fc             	add    BYTE PTR [rdi-0x4],cl
    767f:	37                   	(bad)
    7680:	00 00                	add    BYTE PTR [rax],al
    7682:	13 15 f1 00 00 00    	adc    edx,DWORD PTR [rip+0xf1]        # 7779 <__TMC_END__+0x3761>
    7688:	02 91 5c 40 72 65    	add    dl,BYTE PTR [rcx+0x6572405c]
    768e:	74 00                	je     7690 <__TMC_END__+0x3678>
    7690:	15 0d 6f 6a 00       	adc    eax,0x6a6f0d
    7695:	00 02                	add    BYTE PTR [rdx],al
    7697:	91                   	xchg   ecx,eax
    7698:	68 00 86 01 df       	push   0xffffffffdf018600
    769d:	81 00 00 01 06 09    	add    DWORD PTR [rax],0x9060100
    76a3:	dc 30                	fdiv   QWORD PTR [rax]
    76a5:	00 00                	add    BYTE PTR [rax],al
    76a7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    76a8:	6a 00                	push   0x0
    76aa:	00 19                	add    BYTE PTR [rcx],bl
    76ac:	11 00                	adc    DWORD PTR [rax],eax
    76ae:	00 00                	add    BYTE PTR [rax],al
    76b0:	00 00                	add    BYTE PTR [rax],al
    76b2:	00 2b                	add    BYTE PTR [rbx],ch
    76b4:	00 00                	add    BYTE PTR [rax],al
    76b6:	00 00                	add    BYTE PTR [rax],al
    76b8:	00 00                	add    BYTE PTR [rax],al
    76ba:	00 01                	add    BYTE PTR [rcx],al
    76bc:	9c                   	pushf
    76bd:	50                   	push   rax
    76be:	66 64 00 16          	data16 add BYTE PTR fs:[rsi],dl
    76c2:	f1                   	int1
    76c3:	00 00                	add    BYTE PTR [rax],al
    76c5:	00 02                	add    BYTE PTR [rdx],al
    76c7:	91                   	xchg   ecx,eax
    76c8:	5c                   	pop    rsp
    76c9:	50                   	push   rax
    76ca:	62 75 66 00 26       	(bad)
    76cf:	5c                   	pop    rsp
    76d0:	69 00 00 02 91 50    	imul   eax,DWORD PTR [rax],0x50910200
    76d6:	4f c8 89 00 00       	rex.WRXB enter 0x89,0x0
    76db:	06                   	(bad)
    76dc:	32 2e                	xor    ch,BYTE PTR [rsi]
    76de:	00 00                	add    BYTE PTR [rax],al
    76e0:	00 02                	add    BYTE PTR [rdx],al
    76e2:	91                   	xchg   ecx,eax
    76e3:	48                   	rex.W
    76e4:	40 72 65             	rex jb 774c <__TMC_END__+0x3734>
    76e7:	74 00                	je     76e9 <__TMC_END__+0x36d1>
    76e9:	08 0d 6f 6a 00 00    	or     BYTE PTR [rip+0x6a6f],cl        # e15e <__TMC_END__+0xa146>
    76ef:	02                   	.byte 0x2
    76f0:	91                   	xchg   ecx,eax
    76f1:	68                   	.byte 0x68
	...

Disassembly of section .debug_abbrev:

0000000000000000 <.debug_abbrev>:
   0:	01 05 00 49 13 00    	add    DWORD PTR [rip+0x134900],eax        # 134906 <__TMC_END__+0x1308ee>
   6:	00 02                	add    BYTE PTR [rdx],al
   8:	05 00 49 13 34       	add    eax,0x34134900
   d:	19 00                	sbb    DWORD PTR [rax],eax
   f:	00 03                	add    BYTE PTR [rbx],al
  11:	2e 01 3f             	cs add DWORD PTR [rdi],edi
  14:	19 03                	sbb    DWORD PTR [rbx],eax
  16:	0e                   	(bad)
  17:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  19:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0b58 <__TMC_END__+0xe6dcb40>
  1f:	49 13 32             	adc    rsi,QWORD PTR [r10]
  22:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
  25:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
  28:	13 00                	adc    eax,DWORD PTR [rax]
  2a:	00 04 08             	add    BYTE PTR [rax+rcx*1],al
  2d:	00 3a                	add    BYTE PTR [rdx],bh
  2f:	0b 3b                	or     edi,DWORD PTR [rbx]
  31:	0b 39                	or     edi,DWORD PTR [rcx]
  33:	0b 18                	or     ebx,DWORD PTR [rax]
  35:	13 00                	adc    eax,DWORD PTR [rax]
  37:	00 05 16 00 03 0e    	add    BYTE PTR [rip+0xe030016],al        # e030053 <__TMC_END__+0xe02c03b>
  3d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  3f:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  41:	39 0b                	cmp    DWORD PTR [rbx],ecx
  43:	49 13 00             	adc    rax,QWORD PTR [r8]
  46:	00 06                	add    BYTE PTR [rsi],al
  48:	28 00                	sub    BYTE PTR [rax],al
  4a:	03 0e                	add    ecx,DWORD PTR [rsi]
  4c:	1c 0b                	sbb    al,0xb
  4e:	00 00                	add    BYTE PTR [rax],al
  50:	07                   	(bad)
  51:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
  56:	0b 3b                	or     edi,DWORD PTR [rbx]
  58:	0b 39                	or     edi,DWORD PTR [rcx]
  5a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
  5d:	38 0b                	cmp    BYTE PTR [rbx],cl
  5f:	00 00                	add    BYTE PTR [rax],al
  61:	08 0f                	or     BYTE PTR [rdi],cl
  63:	00 0b                	add    BYTE PTR [rbx],cl
  65:	21 08                	and    DWORD PTR [rax],ecx
  67:	49 13 00             	adc    rax,QWORD PTR [r8]
  6a:	00 09                	add    BYTE PTR [rcx],cl
  6c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
  6f:	19 03                	sbb    DWORD PTR [rbx],eax
  71:	0e                   	(bad)
  72:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  74:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0bb3 <__TMC_END__+0xe6dcb9b>
  7a:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
  7e:	01 13                	add    DWORD PTR [rbx],edx
  80:	00 00                	add    BYTE PTR [rax],al
  82:	0a 2e                	or     ch,BYTE PTR [rsi]
  84:	01 3f                	add    DWORD PTR [rdi],edi
  86:	19 03                	sbb    DWORD PTR [rbx],eax
  88:	0e                   	(bad)
  89:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  8b:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490bca <__TMC_END__+0x1348cbb2>
  91:	3c 19                	cmp    al,0x19
  93:	01 13                	add    DWORD PTR [rbx],edx
  95:	00 00                	add    BYTE PTR [rax],al
  97:	0b 34 00             	or     esi,DWORD PTR [rax+rax*1]
  9a:	47 13 00             	rex.RXB adc r8d,DWORD PTR [r8]
  9d:	00 0c 08             	add    BYTE PTR [rax+rcx*1],cl
  a0:	00 3a                	add    BYTE PTR [rdx],bh
  a2:	0b 3b                	or     edi,DWORD PTR [rbx]
  a4:	05 39 0b 18 13       	add    eax,0x13180b39
  a9:	00 00                	add    BYTE PTR [rax],al
  ab:	0d 34 00 03 0e       	or     eax,0xe030034
  b0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  b2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  b4:	39 0b                	cmp    DWORD PTR [rbx],ecx
  b6:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
  ba:	1c 21                	sbb    al,0x21
  bc:	01 6c 19 00          	add    DWORD PTR [rcx+rbx*1+0x0],ebp
  c0:	00 0e                	add    BYTE PTR [rsi],cl
  c2:	10 00                	adc    BYTE PTR [rax],al
  c4:	0b 21                	or     esp,DWORD PTR [rcx]
  c6:	08 49 13             	or     BYTE PTR [rcx+0x13],cl
  c9:	00 00                	add    BYTE PTR [rax],al
  cb:	0f 26                	(bad)
  cd:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
  d0:	00 00                	add    BYTE PTR [rax],al
  d2:	10 2e                	adc    BYTE PTR [rsi],ch
  d4:	01 3f                	add    DWORD PTR [rdi],edi
  d6:	19 03                	sbb    DWORD PTR [rbx],eax
  d8:	0e                   	(bad)
  d9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  db:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  dd:	39 0b                	cmp    DWORD PTR [rbx],ecx
  df:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
  e3:	01 13                	add    DWORD PTR [rbx],edx
  e5:	00 00                	add    BYTE PTR [rax],al
  e7:	11 16                	adc    DWORD PTR [rsi],edx
  e9:	00 03                	add    BYTE PTR [rbx],al
  eb:	0e                   	(bad)
  ec:	3a 0b                	cmp    cl,BYTE PTR [rbx]
  ee:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
  f0:	39 0b                	cmp    DWORD PTR [rbx],ecx
  f2:	49 13 32             	adc    rsi,QWORD PTR [r10]
  f5:	0b 00                	or     eax,DWORD PTR [rax]
  f7:	00 12                	add    BYTE PTR [rdx],dl
  f9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
  fc:	19 03                	sbb    DWORD PTR [rbx],eax
  fe:	0e                   	(bad)
  ff:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 101:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e0c40 <__TMC_END__+0xe6dcc28>
 107:	32 0b                	xor    cl,BYTE PTR [rbx]
 109:	3c 19                	cmp    al,0x19
 10b:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 10e:	13 00                	adc    eax,DWORD PTR [rax]
 110:	00 13                	add    BYTE PTR [rbx],dl
 112:	24 00                	and    al,0x0
 114:	0b 0b                	or     ecx,DWORD PTR [rbx]
 116:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
 119:	0e                   	(bad)
 11a:	00 00                	add    BYTE PTR [rax],al
 11c:	14 2f                	adc    al,0x2f
 11e:	00 03                	add    BYTE PTR [rbx],al
 120:	0e                   	(bad)
 121:	49 13 00             	adc    rax,QWORD PTR [r8]
 124:	00 15 2e 01 3f 19    	add    BYTE PTR [rip+0x193f012e],dl        # 193f0258 <__TMC_END__+0x193ec240>
 12a:	03 0e                	add    ecx,DWORD PTR [rsi]
 12c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 12e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 130:	39 0b                	cmp    DWORD PTR [rbx],ecx
 132:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 133:	0e                   	(bad)
 134:	49 13 32             	adc    rsi,QWORD PTR [r10]
 137:	21 01                	and    DWORD PTR [rcx],eax
 139:	3c 19                	cmp    al,0x19
 13b:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 13e:	13 00                	adc    eax,DWORD PTR [rax]
 140:	00 16                	add    BYTE PTR [rsi],dl
 142:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 145:	19 03                	sbb    DWORD PTR [rbx],eax
 147:	0e                   	(bad)
 148:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 14a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 14c:	39 0b                	cmp    DWORD PTR [rbx],ecx
 14e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 14f:	0e                   	(bad)
 150:	32 21                	xor    ah,BYTE PTR [rcx]
 152:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
 155:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 158:	13 00                	adc    eax,DWORD PTR [rax]
 15a:	00 17                	add    BYTE PTR [rdi],dl
 15c:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 15f:	19 03                	sbb    DWORD PTR [rbx],eax
 161:	0e                   	(bad)
 162:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 164:	3b 05 39 21 07 6e    	cmp    eax,DWORD PTR [rip+0x6e072139]        # 6e0722a3 <__TMC_END__+0x6e06e28b>
 16a:	0e                   	(bad)
 16b:	3c 19                	cmp    al,0x19
 16d:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 170:	13 00                	adc    eax,DWORD PTR [rax]
 172:	00 18                	add    BYTE PTR [rax],bl
 174:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 177:	19 03                	sbb    DWORD PTR [rbx],eax
 179:	0e                   	(bad)
 17a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 17c:	3b 05 39 21 07 6e    	cmp    eax,DWORD PTR [rip+0x6e072139]        # 6e0722bb <__TMC_END__+0x6e06e2a3>
 182:	0e                   	(bad)
 183:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 187:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 18a:	13 00                	adc    eax,DWORD PTR [rax]
 18c:	00 19                	add    BYTE PTR [rcx],bl
 18e:	16                   	(bad)
 18f:	00 03                	add    BYTE PTR [rbx],al
 191:	0e                   	(bad)
 192:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 194:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490cd3 <__TMC_END__+0x1348ccbb>
 19a:	00 00                	add    BYTE PTR [rax],al
 19c:	1a 13                	sbb    dl,BYTE PTR [rbx]
 19e:	01 03                	add    DWORD PTR [rbx],eax
 1a0:	0e                   	(bad)
 1a1:	0b 0b                	or     ecx,DWORD PTR [rbx]
 1a3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1a5:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 1a7:	39 0b                	cmp    DWORD PTR [rbx],ecx
 1a9:	01 13                	add    DWORD PTR [rbx],edx
 1ab:	00 00                	add    BYTE PTR [rax],al
 1ad:	1b 2e                	sbb    ebp,DWORD PTR [rsi]
 1af:	01 3f                	add    DWORD PTR [rdi],edi
 1b1:	19 03                	sbb    DWORD PTR [rbx],eax
 1b3:	0e                   	(bad)
 1b4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1b6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 1b8:	39 0b                	cmp    DWORD PTR [rbx],ecx
 1ba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 1bb:	0e                   	(bad)
 1bc:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 1c0:	01 13                	add    DWORD PTR [rbx],edx
 1c2:	00 00                	add    BYTE PTR [rax],al
 1c4:	1c 0d                	sbb    al,0xd
 1c6:	00 03                	add    BYTE PTR [rbx],al
 1c8:	0e                   	(bad)
 1c9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1cb:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490d0a <__TMC_END__+0x1348ccf2>
 1d1:	38 0b                	cmp    BYTE PTR [rbx],cl
 1d3:	00 00                	add    BYTE PTR [rax],al
 1d5:	1d 2f 00 03 08       	sbb    eax,0x803002f
 1da:	49 13 00             	adc    rax,QWORD PTR [r8]
 1dd:	00 1e                	add    BYTE PTR [rsi],bl
 1df:	02 01                	add    al,BYTE PTR [rcx]
 1e1:	03 0e                	add    ecx,DWORD PTR [rsi]
 1e3:	0b 0b                	or     ecx,DWORD PTR [rbx]
 1e5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1e7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 1e9:	39 0b                	cmp    DWORD PTR [rbx],ecx
 1eb:	01 13                	add    DWORD PTR [rbx],edx
 1ed:	00 00                	add    BYTE PTR [rax],al
 1ef:	1f                   	(bad)
 1f0:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 1f3:	19 03                	sbb    DWORD PTR [rbx],eax
 1f5:	0e                   	(bad)
 1f6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 1f8:	3b 05 39 21 07 6e    	cmp    eax,DWORD PTR [rip+0x6e072139]        # 6e072337 <__TMC_END__+0x6e06e31f>
 1fe:	0e                   	(bad)
 1ff:	3c 19                	cmp    al,0x19
 201:	01 13                	add    DWORD PTR [rbx],edx
 203:	00 00                	add    BYTE PTR [rax],al
 205:	20 16                	and    BYTE PTR [rsi],dl
 207:	00 03                	add    BYTE PTR [rbx],al
 209:	0e                   	(bad)
 20a:	3a 21                	cmp    ah,BYTE PTR [rcx]
 20c:	2a 3b                	sub    bh,BYTE PTR [rbx]
 20e:	05 39 0b 49 13       	add    eax,0x13490b39
 213:	32 21                	xor    ah,BYTE PTR [rcx]
 215:	01 00                	add    DWORD PTR [rax],eax
 217:	00 21                	add    BYTE PTR [rcx],ah
 219:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 21c:	19 03                	sbb    DWORD PTR [rbx],eax
 21e:	0e                   	(bad)
 21f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 221:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 223:	39 0b                	cmp    DWORD PTR [rbx],ecx
 225:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 226:	0e                   	(bad)
 227:	3c 19                	cmp    al,0x19
 229:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 22c:	13 00                	adc    eax,DWORD PTR [rax]
 22e:	00 22                	add    BYTE PTR [rdx],ah
 230:	39 00                	cmp    DWORD PTR [rax],eax
 232:	03 0e                	add    ecx,DWORD PTR [rsi]
 234:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 236:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 238:	39 0b                	cmp    DWORD PTR [rbx],ecx
 23a:	00 00                	add    BYTE PTR [rax],al
 23c:	23 1c 00             	and    ebx,DWORD PTR [rax+rax*1]
 23f:	49 13 38             	adc    rdi,QWORD PTR [r8]
 242:	21 00                	and    DWORD PTR [rax],eax
 244:	00 00                	add    BYTE PTR [rax],al
 246:	24 2e                	and    al,0x2e
 248:	01 3f                	add    DWORD PTR [rdi],edi
 24a:	19 03                	sbb    DWORD PTR [rbx],eax
 24c:	08 3a                	or     BYTE PTR [rdx],bh
 24e:	0b 3b                	or     edi,DWORD PTR [rbx]
 250:	05 39 21 07 6e       	add    eax,0x6e072139
 255:	0e                   	(bad)
 256:	49 13 32             	adc    rsi,QWORD PTR [r10]
 259:	21 01                	and    DWORD PTR [rcx],eax
 25b:	3c 19                	cmp    al,0x19
 25d:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 260:	13 00                	adc    eax,DWORD PTR [rax]
 262:	00 25 34 00 03 0e    	add    BYTE PTR [rip+0xe030034],ah        # e03029c <__TMC_END__+0xe02c284>
 268:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 26a:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490da9 <__TMC_END__+0x1348cd91>
 270:	3c 19                	cmp    al,0x19
 272:	1c 0b                	sbb    al,0xb
 274:	6c                   	ins    BYTE PTR es:[rdi],dx
 275:	19 00                	sbb    DWORD PTR [rax],eax
 277:	00 26                	add    BYTE PTR [rsi],ah
 279:	18 00                	sbb    BYTE PTR [rax],al
 27b:	00 00                	add    BYTE PTR [rax],al
 27d:	27                   	(bad)
 27e:	39 00                	cmp    DWORD PTR [rax],eax
 280:	03 0e                	add    ecx,DWORD PTR [rsi]
 282:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 284:	3b 05 39 0b 00 00    	cmp    eax,DWORD PTR [rip+0xb39]        # dc3 <_init-0x23d>
 28a:	28 39                	sub    BYTE PTR [rcx],bh
 28c:	01 03                	add    DWORD PTR [rbx],eax
 28e:	0e                   	(bad)
 28f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 291:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 293:	39 0b                	cmp    DWORD PTR [rbx],ecx
 295:	01 13                	add    DWORD PTR [rbx],edx
 297:	00 00                	add    BYTE PTR [rax],al
 299:	29 02                	sub    DWORD PTR [rdx],eax
 29b:	00 03                	add    BYTE PTR [rbx],al
 29d:	0e                   	(bad)
 29e:	3c 19                	cmp    al,0x19
 2a0:	00 00                	add    BYTE PTR [rax],al
 2a2:	2a 2e                	sub    ch,BYTE PTR [rsi]
 2a4:	01 3f                	add    DWORD PTR [rdi],edi
 2a6:	19 03                	sbb    DWORD PTR [rbx],eax
 2a8:	0e                   	(bad)
 2a9:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2ab:	3b 05 39 21 07 6e    	cmp    eax,DWORD PTR [rip+0x6e072139]        # 6e0723ea <__TMC_END__+0x6e06e3d2>
 2b1:	0e                   	(bad)
 2b2:	32 0b                	xor    cl,BYTE PTR [rbx]
 2b4:	3c 19                	cmp    al,0x19
 2b6:	63 19                	movsxd ebx,DWORD PTR [rcx]
 2b8:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 2bb:	13 00                	adc    eax,DWORD PTR [rax]
 2bd:	00 2b                	add    BYTE PTR [rbx],ch
 2bf:	02 01                	add    al,BYTE PTR [rcx]
 2c1:	03 0e                	add    ecx,DWORD PTR [rsi]
 2c3:	0b 0b                	or     ecx,DWORD PTR [rbx]
 2c5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2c7:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13010e06 <__TMC_END__+0x1300cdee>
 2cd:	00 00                	add    BYTE PTR [rax],al
 2cf:	2c 2e                	sub    al,0x2e
 2d1:	01 3f                	add    DWORD PTR [rdi],edi
 2d3:	19 03                	sbb    DWORD PTR [rbx],eax
 2d5:	0e                   	(bad)
 2d6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2d8:	3b 05 39 21 0d 3c    	cmp    eax,DWORD PTR [rip+0x3c0d2139]        # 3c0d2417 <__TMC_END__+0x3c0ce3ff>
 2de:	19 01                	sbb    DWORD PTR [rcx],eax
 2e0:	13 00                	adc    eax,DWORD PTR [rax]
 2e2:	00 2d 01 01 49 13    	add    BYTE PTR [rip+0x13490101],ch        # 134903e9 <__TMC_END__+0x1348c3d1>
 2e8:	01 13                	add    DWORD PTR [rbx],edx
 2ea:	00 00                	add    BYTE PTR [rax],al
 2ec:	2e 21 00             	cs and DWORD PTR [rax],eax
 2ef:	49 13 2f             	adc    rbp,QWORD PTR [r15]
 2f2:	0b 00                	or     eax,DWORD PTR [rax]
 2f4:	00 2f                	add    BYTE PTR [rdi],ch
 2f6:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 2f9:	19 03                	sbb    DWORD PTR [rbx],eax
 2fb:	0e                   	(bad)
 2fc:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 2fe:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 300:	39 0b                	cmp    DWORD PTR [rbx],ecx
 302:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 303:	0e                   	(bad)
 304:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 308:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 30b:	13 00                	adc    eax,DWORD PTR [rax]
 30d:	00 30                	add    BYTE PTR [rax],dh
 30f:	13 01                	adc    eax,DWORD PTR [rcx]
 311:	03 0e                	add    ecx,DWORD PTR [rsi]
 313:	0b 0b                	or     ecx,DWORD PTR [rbx]
 315:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 317:	3b 05 39 21 0c 01    	cmp    eax,DWORD PTR [rip+0x10c2139]        # 10c2456 <__TMC_END__+0x10be43e>
 31d:	13 00                	adc    eax,DWORD PTR [rax]
 31f:	00 31                	add    BYTE PTR [rcx],dh
 321:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 324:	19 03                	sbb    DWORD PTR [rbx],eax
 326:	0e                   	(bad)
 327:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 329:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 32b:	39 0b                	cmp    DWORD PTR [rbx],ecx
 32d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 32e:	0e                   	(bad)
 32f:	49 13 32             	adc    rsi,QWORD PTR [r10]
 332:	21 01                	and    DWORD PTR [rcx],eax
 334:	3c 19                	cmp    al,0x19
 336:	8b 01                	mov    eax,DWORD PTR [rcx]
 338:	21 01                	and    DWORD PTR [rcx],eax
 33a:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 33d:	13 00                	adc    eax,DWORD PTR [rax]
 33f:	00 32                	add    BYTE PTR [rdx],dh
 341:	0d 00 03 08 3a       	or     eax,0x3a080300
 346:	0b 3b                	or     edi,DWORD PTR [rbx]
 348:	0b 39                	or     edi,DWORD PTR [rcx]
 34a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 34d:	38 0b                	cmp    BYTE PTR [rbx],cl
 34f:	00 00                	add    BYTE PTR [rax],al
 351:	33 2e                	xor    ebp,DWORD PTR [rsi]
 353:	00 3f                	add    BYTE PTR [rdi],bh
 355:	19 03                	sbb    DWORD PTR [rbx],eax
 357:	0e                   	(bad)
 358:	3a 21                	cmp    ah,BYTE PTR [rcx]
 35a:	2f                   	(bad)
 35b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 35d:	39 21                	cmp    DWORD PTR [rcx],esp
 35f:	1b 6e 0e             	sbb    ebp,DWORD PTR [rsi+0xe]
 362:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 366:	00 00                	add    BYTE PTR [rax],al
 368:	34 42                	xor    al,0x42
 36a:	00 0b                	add    BYTE PTR [rbx],cl
 36c:	21 08                	and    DWORD PTR [rax],ecx
 36e:	49 13 00             	adc    rax,QWORD PTR [r8]
 371:	00 35 0d 00 03 0e    	add    BYTE PTR [rip+0xe03000d],dh        # e030384 <__TMC_END__+0xe02c36c>
 377:	3a 21                	cmp    ah,BYTE PTR [rcx]
 379:	02 3b                	add    bh,BYTE PTR [rbx]
 37b:	21 00                	and    DWORD PTR [rax],eax
 37d:	49 13 38             	adc    rdi,QWORD PTR [r8]
 380:	0b 00                	or     eax,DWORD PTR [rax]
 382:	00 36                	add    BYTE PTR [rsi],dh
 384:	13 01                	adc    eax,DWORD PTR [rcx]
 386:	0b 0b                	or     ecx,DWORD PTR [rbx]
 388:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 38a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 38c:	39 0b                	cmp    DWORD PTR [rbx],ecx
 38e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 38f:	0e                   	(bad)
 390:	01 13                	add    DWORD PTR [rbx],edx
 392:	00 00                	add    BYTE PTR [rax],al
 394:	37                   	(bad)
 395:	0d 00 03 0e 3a       	or     eax,0x3a0e0300
 39a:	0b 3b                	or     edi,DWORD PTR [rbx]
 39c:	0b 39                	or     edi,DWORD PTR [rcx]
 39e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 3a1:	00 00                	add    BYTE PTR [rax],al
 3a3:	38 2f                	cmp    BYTE PTR [rdi],ch
 3a5:	00 03                	add    BYTE PTR [rbx],al
 3a7:	0e                   	(bad)
 3a8:	49 13 1e             	adc    rbx,QWORD PTR [r14]
 3ab:	19 00                	sbb    DWORD PTR [rax],eax
 3ad:	00 39                	add    BYTE PTR [rcx],bh
 3af:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 3b2:	19 03                	sbb    DWORD PTR [rbx],eax
 3b4:	0e                   	(bad)
 3b5:	3a 21                	cmp    ah,BYTE PTR [rcx]
 3b7:	28 3b                	sub    BYTE PTR [rbx],bh
 3b9:	05 39 21 11 6e       	add    eax,0x6e112139
 3be:	0e                   	(bad)
 3bf:	3c 19                	cmp    al,0x19
 3c1:	8b 01                	mov    eax,DWORD PTR [rcx]
 3c3:	21 01                	and    DWORD PTR [rcx],eax
 3c5:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 3c8:	13 00                	adc    eax,DWORD PTR [rax]
 3ca:	00 3a                	add    BYTE PTR [rdx],bh
 3cc:	2e 00 3f             	cs add BYTE PTR [rdi],bh
 3cf:	19 03                	sbb    DWORD PTR [rbx],eax
 3d1:	0e                   	(bad)
 3d2:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 3d4:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 13490f13 <__TMC_END__+0x1348cefb>
 3da:	3c 19                	cmp    al,0x19
 3dc:	00 00                	add    BYTE PTR [rax],al
 3de:	3b 2e                	cmp    ebp,DWORD PTR [rsi]
 3e0:	01 3f                	add    DWORD PTR [rdi],edi
 3e2:	19 03                	sbb    DWORD PTR [rbx],eax
 3e4:	0e                   	(bad)
 3e5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 3e7:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 3e9:	39 0b                	cmp    DWORD PTR [rbx],ecx
 3eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3ec:	0e                   	(bad)
 3ed:	3c 19                	cmp    al,0x19
 3ef:	63 19                	movsxd ebx,DWORD PTR [rcx]
 3f1:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 3f4:	13 00                	adc    eax,DWORD PTR [rax]
 3f6:	00 3c 2e             	add    BYTE PTR [rsi+rbp*1],bh
 3f9:	01 3f                	add    DWORD PTR [rdi],edi
 3fb:	19 03                	sbb    DWORD PTR [rbx],eax
 3fd:	0e                   	(bad)
 3fe:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 400:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 402:	39 0b                	cmp    DWORD PTR [rbx],ecx
 404:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 405:	0e                   	(bad)
 406:	32 21                	xor    ah,BYTE PTR [rcx]
 408:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
 40b:	8b 01                	mov    eax,DWORD PTR [rcx]
 40d:	21 01                	and    DWORD PTR [rcx],eax
 40f:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 412:	13 00                	adc    eax,DWORD PTR [rax]
 414:	00 3d 0d 00 03 0e    	add    BYTE PTR [rip+0xe03000d],bh        # e030427 <__TMC_END__+0xe02c40f>
 41a:	3a 21                	cmp    ah,BYTE PTR [rcx]
 41c:	2a 3b                	sub    bh,BYTE PTR [rbx]
 41e:	21 91 08 39 21 11    	and    DWORD PTR [rcx+0x11213908],edx
 424:	49 13 38             	adc    rdi,QWORD PTR [r8]
 427:	21 00                	and    DWORD PTR [rax],eax
 429:	32 21                	xor    ah,BYTE PTR [rcx]
 42b:	02 00                	add    al,BYTE PTR [rax]
 42d:	00 3e                	add    BYTE PTR [rsi],bh
 42f:	2e 00 3f             	cs add BYTE PTR [rdi],bh
 432:	19 03                	sbb    DWORD PTR [rbx],eax
 434:	0e                   	(bad)
 435:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 437:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 439:	39 0b                	cmp    DWORD PTR [rbx],ecx
 43b:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 43f:	00 00                	add    BYTE PTR [rax],al
 441:	3f                   	(bad)
 442:	13 00                	adc    eax,DWORD PTR [rax]
 444:	03 0e                	add    ecx,DWORD PTR [rsi]
 446:	3c 19                	cmp    al,0x19
 448:	00 00                	add    BYTE PTR [rax],al
 44a:	40 34 00             	rex xor al,0x0
 44d:	03 08                	add    ecx,DWORD PTR [rax]
 44f:	3a 21                	cmp    ah,BYTE PTR [rcx]
 451:	01 3b                	add    DWORD PTR [rbx],edi
 453:	0b 39                	or     edi,DWORD PTR [rcx]
 455:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 458:	02 18                	add    bl,BYTE PTR [rax]
 45a:	00 00                	add    BYTE PTR [rax],al
 45c:	41 30 00             	xor    BYTE PTR [r8],al
 45f:	03 0e                	add    ecx,DWORD PTR [rsi]
 461:	49 13 1c 07          	adc    rbx,QWORD PTR [r15+rax*1]
 465:	00 00                	add    BYTE PTR [rax],al
 467:	42 39 00             	rex.X cmp DWORD PTR [rax],eax
 46a:	03 0e                	add    ecx,DWORD PTR [rsi]
 46c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 46e:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 1890fad <__TMC_END__+0x188cf95>
 474:	19 00                	sbb    DWORD PTR [rax],eax
 476:	00 43 2e             	add    BYTE PTR [rbx+0x2e],al
 479:	01 3f                	add    DWORD PTR [rdi],edi
 47b:	19 03                	sbb    DWORD PTR [rbx],eax
 47d:	08 3a                	or     BYTE PTR [rdx],bh
 47f:	21 16                	and    DWORD PTR [rsi],edx
 481:	3b 05 39 21 07 6e    	cmp    eax,DWORD PTR [rip+0x6e072139]        # 6e0725c0 <__TMC_END__+0x6e06e5a8>
 487:	0e                   	(bad)
 488:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 48c:	01 13                	add    DWORD PTR [rbx],edx
 48e:	00 00                	add    BYTE PTR [rax],al
 490:	44 1c 00             	rex.R sbb al,0x0
 493:	49 13 38             	adc    rdi,QWORD PTR [r8]
 496:	21 00                	and    DWORD PTR [rax],eax
 498:	32 21                	xor    ah,BYTE PTR [rcx]
 49a:	01 00                	add    DWORD PTR [rax],eax
 49c:	00 45 2e             	add    BYTE PTR [rbp+0x2e],al
 49f:	01 3f                	add    DWORD PTR [rdi],edi
 4a1:	19 03                	sbb    DWORD PTR [rbx],eax
 4a3:	08 3a                	or     BYTE PTR [rdx],bh
 4a5:	0b 3b                	or     edi,DWORD PTR [rbx]
 4a7:	0b 39                	or     edi,DWORD PTR [rcx]
 4a9:	21 07                	and    DWORD PTR [rdi],eax
 4ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 4ac:	0e                   	(bad)
 4ad:	49 13 32             	adc    rsi,QWORD PTR [r10]
 4b0:	21 01                	and    DWORD PTR [rcx],eax
 4b2:	3c 19                	cmp    al,0x19
 4b4:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 4b7:	13 00                	adc    eax,DWORD PTR [rax]
 4b9:	00 46 2e             	add    BYTE PTR [rsi+0x2e],al
 4bc:	01 3f                	add    DWORD PTR [rdi],edi
 4be:	19 03                	sbb    DWORD PTR [rbx],eax
 4c0:	0e                   	(bad)
 4c1:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4c3:	3b 05 39 21 07 6e    	cmp    eax,DWORD PTR [rip+0x6e072139]        # 6e072602 <__TMC_END__+0x6e06e5ea>
 4c9:	0e                   	(bad)
 4ca:	32 21                	xor    ah,BYTE PTR [rcx]
 4cc:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
 4cf:	8a 01                	mov    al,BYTE PTR [rcx]
 4d1:	19 64 13 01          	sbb    DWORD PTR [rbx+rdx*1+0x1],esp
 4d5:	13 00                	adc    eax,DWORD PTR [rax]
 4d7:	00 47 2e             	add    BYTE PTR [rdi+0x2e],al
 4da:	01 3f                	add    DWORD PTR [rdi],edi
 4dc:	19 03                	sbb    DWORD PTR [rbx],eax
 4de:	0e                   	(bad)
 4df:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 4e1:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1020 <__TMC_END__+0xe6dd008>
 4e7:	49 13 32             	adc    rsi,QWORD PTR [r10]
 4ea:	21 01                	and    DWORD PTR [rcx],eax
 4ec:	3c 19                	cmp    al,0x19
 4ee:	8a 01                	mov    al,BYTE PTR [rcx]
 4f0:	19 64 13 01          	sbb    DWORD PTR [rbx+rdx*1+0x1],esp
 4f4:	13 00                	adc    eax,DWORD PTR [rax]
 4f6:	00 48 2e             	add    BYTE PTR [rax+0x2e],cl
 4f9:	01 3f                	add    DWORD PTR [rdi],edi
 4fb:	19 03                	sbb    DWORD PTR [rbx],eax
 4fd:	0e                   	(bad)
 4fe:	3a 21                	cmp    ah,BYTE PTR [rcx]
 500:	28 3b                	sub    BYTE PTR [rbx],bh
 502:	21 cb                	and    ebx,ecx
 504:	04 39                	add    al,0x39
 506:	21 0d 6e 0e 49 13    	and    DWORD PTR [rip+0x13490e6e],ecx        # 1349137a <__TMC_END__+0x1348d362>
 50c:	3c 19                	cmp    al,0x19
 50e:	8a 01                	mov    al,BYTE PTR [rcx]
 510:	19 64 13 01          	sbb    DWORD PTR [rbx+rdx*1+0x1],esp
 514:	13 00                	adc    eax,DWORD PTR [rax]
 516:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 519:	01 03                	add    DWORD PTR [rbx],eax
 51b:	0e                   	(bad)
 51c:	0b 0b                	or     ecx,DWORD PTR [rbx]
 51e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 520:	3b 05 39 0b 32 0b    	cmp    eax,DWORD PTR [rip+0xb320b39]        # b32105f <__TMC_END__+0xb31d047>
 526:	01 13                	add    DWORD PTR [rbx],edx
 528:	00 00                	add    BYTE PTR [rax],al
 52a:	4a                   	rex.WX
 52b:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 52e:	19 03                	sbb    DWORD PTR [rbx],eax
 530:	0e                   	(bad)
 531:	3a 21                	cmp    ah,BYTE PTR [rcx]
 533:	29 3b                	sub    DWORD PTR [rbx],edi
 535:	05 39 21 07 6e       	add    eax,0x6e072139
 53a:	0e                   	(bad)
 53b:	32 21                	xor    ah,BYTE PTR [rcx]
 53d:	01 3c 19             	add    DWORD PTR [rcx+rbx*1],edi
 540:	8b 01                	mov    eax,DWORD PTR [rcx]
 542:	21 01                	and    DWORD PTR [rcx],eax
 544:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 547:	13 00                	adc    eax,DWORD PTR [rax]
 549:	00 4b 0d             	add    BYTE PTR [rbx+0xd],cl
 54c:	00 03                	add    BYTE PTR [rbx],al
 54e:	0e                   	(bad)
 54f:	3a 21                	cmp    ah,BYTE PTR [rcx]
 551:	03 3b                	add    edi,DWORD PTR [rbx]
 553:	05 39 0b 49 13       	add    eax,0x13490b39
 558:	88 01                	mov    BYTE PTR [rcx],al
 55a:	0b 38                	or     edi,DWORD PTR [rax]
 55c:	0b 00                	or     eax,DWORD PTR [rax]
 55e:	00 4c 3b 00          	add    BYTE PTR [rbx+rdi*1+0x0],cl
 562:	03 0e                	add    ecx,DWORD PTR [rsi]
 564:	00 00                	add    BYTE PTR [rax],al
 566:	4d 15 01 49 13 01    	rex.WRB adc rax,0x1134901
 56c:	13 00                	adc    eax,DWORD PTR [rax]
 56e:	00 4e 34             	add    BYTE PTR [rsi+0x34],cl
 571:	00 03                	add    BYTE PTR [rbx],al
 573:	0e                   	(bad)
 574:	3a 21                	cmp    ah,BYTE PTR [rcx]
 576:	01 3b                	add    DWORD PTR [rbx],edi
 578:	0b 39                	or     edi,DWORD PTR [rcx]
 57a:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 57d:	02 18                	add    bl,BYTE PTR [rax]
 57f:	00 00                	add    BYTE PTR [rax],al
 581:	4f 05 00 03 0e 3a    	rex.WRXB add rax,0x3a0e0300
 587:	21 01                	and    DWORD PTR [rcx],eax
 589:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 58b:	39 0b                	cmp    DWORD PTR [rbx],ecx
 58d:	49 13 02             	adc    rax,QWORD PTR [r10]
 590:	18 00                	sbb    BYTE PTR [rax],al
 592:	00 50 05             	add    BYTE PTR [rax+0x5],dl
 595:	00 03                	add    BYTE PTR [rbx],al
 597:	08 3a                	or     BYTE PTR [rdx],bh
 599:	21 01                	and    DWORD PTR [rcx],eax
 59b:	3b 21                	cmp    esp,DWORD PTR [rcx]
 59d:	06                   	(bad)
 59e:	39 0b                	cmp    DWORD PTR [rbx],ecx
 5a0:	49 13 02             	adc    rax,QWORD PTR [r10]
 5a3:	18 00                	sbb    BYTE PTR [rax],al
 5a5:	00 51 11             	add    BYTE PTR [rcx+0x11],dl
 5a8:	01 25 0e 13 0b 03    	add    DWORD PTR [rip+0x30b130e],esp        # 30b18bc <__TMC_END__+0x30ad8a4>
 5ae:	1f                   	(bad)
 5af:	1b 1f                	sbb    ebx,DWORD PTR [rdi]
 5b1:	11 01                	adc    DWORD PTR [rcx],eax
 5b3:	12 07                	adc    al,BYTE PTR [rdi]
 5b5:	10 17                	adc    BYTE PTR [rdi],dl
 5b7:	00 00                	add    BYTE PTR [rax],al
 5b9:	52                   	push   rdx
 5ba:	13 01                	adc    eax,DWORD PTR [rcx]
 5bc:	03 0e                	add    ecx,DWORD PTR [rsi]
 5be:	0b 0b                	or     ecx,DWORD PTR [rbx]
 5c0:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 5c2:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 5c4:	01 13                	add    DWORD PTR [rbx],edx
 5c6:	00 00                	add    BYTE PTR [rax],al
 5c8:	53                   	push   rbx
 5c9:	0f 00 0b             	str    WORD PTR [rbx]
 5cc:	0b 00                	or     eax,DWORD PTR [rax]
 5ce:	00 54 17 01          	add    BYTE PTR [rdi+rdx*1+0x1],dl
 5d2:	0b 0b                	or     ecx,DWORD PTR [rbx]
 5d4:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 5d6:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 5d8:	39 0b                	cmp    DWORD PTR [rbx],ecx
 5da:	01 13                	add    DWORD PTR [rbx],edx
 5dc:	00 00                	add    BYTE PTR [rax],al
 5de:	55                   	push   rbp
 5df:	24 00                	and    al,0x0
 5e1:	0b 0b                	or     ecx,DWORD PTR [rbx]
 5e3:	3e 0b 03             	ds or  eax,DWORD PTR [rbx]
 5e6:	08 00                	or     BYTE PTR [rax],al
 5e8:	00 56 39             	add    BYTE PTR [rsi+0x39],dl
 5eb:	01 03                	add    DWORD PTR [rbx],eax
 5ed:	08 3a                	or     BYTE PTR [rdx],bh
 5ef:	0b 3b                	or     edi,DWORD PTR [rbx]
 5f1:	05 39 0b 01 13       	add    eax,0x13010b39
 5f6:	00 00                	add    BYTE PTR [rax],al
 5f8:	57                   	push   rdi
 5f9:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 5fc:	19 03                	sbb    DWORD PTR [rbx],eax
 5fe:	0e                   	(bad)
 5ff:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 601:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 603:	39 0b                	cmp    DWORD PTR [rbx],ecx
 605:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 606:	0e                   	(bad)
 607:	49 13 32             	adc    rsi,QWORD PTR [r10]
 60a:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
 60d:	63 19                	movsxd ebx,DWORD PTR [rcx]
 60f:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 612:	13 00                	adc    eax,DWORD PTR [rax]
 614:	00 58 2e             	add    BYTE PTR [rax+0x2e],bl
 617:	01 3f                	add    DWORD PTR [rdi],edi
 619:	19 03                	sbb    DWORD PTR [rbx],eax
 61b:	0e                   	(bad)
 61c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 61e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 620:	39 0b                	cmp    DWORD PTR [rbx],ecx
 622:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 623:	0e                   	(bad)
 624:	49 13 32             	adc    rsi,QWORD PTR [r10]
 627:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
 62a:	64 13 00             	adc    eax,DWORD PTR fs:[rax]
 62d:	00 59 2e             	add    BYTE PTR [rcx+0x2e],bl
 630:	01 3f                	add    DWORD PTR [rdi],edi
 632:	19 03                	sbb    DWORD PTR [rbx],eax
 634:	0e                   	(bad)
 635:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 637:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 639:	39 0b                	cmp    DWORD PTR [rbx],ecx
 63b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 63c:	0e                   	(bad)
 63d:	3c 19                	cmp    al,0x19
 63f:	00 00                	add    BYTE PTR [rax],al
 641:	5a                   	pop    rdx
 642:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 645:	19 03                	sbb    DWORD PTR [rbx],eax
 647:	0e                   	(bad)
 648:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 64a:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 64c:	39 0b                	cmp    DWORD PTR [rbx],ecx
 64e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 64f:	0e                   	(bad)
 650:	87 01                	xchg   DWORD PTR [rcx],eax
 652:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
 655:	01 13                	add    DWORD PTR [rbx],edx
 657:	00 00                	add    BYTE PTR [rax],al
 659:	5b                   	pop    rbx
 65a:	39 00                	cmp    DWORD PTR [rax],eax
 65c:	03 0e                	add    ecx,DWORD PTR [rsi]
 65e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 660:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 662:	39 0b                	cmp    DWORD PTR [rbx],ecx
 664:	89 01                	mov    DWORD PTR [rcx],eax
 666:	19 00                	sbb    DWORD PTR [rax],eax
 668:	00 5c 13 00          	add    BYTE PTR [rbx+rdx*1+0x0],bl
 66c:	03 0e                	add    ecx,DWORD PTR [rsi]
 66e:	0b 0b                	or     ecx,DWORD PTR [rbx]
 670:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 672:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 674:	39 0b                	cmp    DWORD PTR [rbx],ecx
 676:	00 00                	add    BYTE PTR [rax],al
 678:	5d                   	pop    rbp
 679:	2e 00 3f             	cs add BYTE PTR [rdi],bh
 67c:	19 03                	sbb    DWORD PTR [rbx],eax
 67e:	08 3a                	or     BYTE PTR [rdx],bh
 680:	0b 3b                	or     edi,DWORD PTR [rbx]
 682:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
 687:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 68b:	00 00                	add    BYTE PTR [rax],al
 68d:	5e                   	pop    rsi
 68e:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 691:	19 03                	sbb    DWORD PTR [rbx],eax
 693:	0e                   	(bad)
 694:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 696:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 698:	39 0b                	cmp    DWORD PTR [rbx],ecx
 69a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 69b:	0e                   	(bad)
 69c:	32 0b                	xor    cl,BYTE PTR [rbx]
 69e:	3c 19                	cmp    al,0x19
 6a0:	64 13 00             	adc    eax,DWORD PTR fs:[rax]
 6a3:	00 5f 2e             	add    BYTE PTR [rdi+0x2e],bl
 6a6:	01 3f                	add    DWORD PTR [rdi],edi
 6a8:	19 03                	sbb    DWORD PTR [rbx],eax
 6aa:	0e                   	(bad)
 6ab:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 6ad:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 6af:	39 0b                	cmp    DWORD PTR [rbx],ecx
 6b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 6b2:	0e                   	(bad)
 6b3:	32 0b                	xor    cl,BYTE PTR [rbx]
 6b5:	3c 19                	cmp    al,0x19
 6b7:	8a 01                	mov    al,BYTE PTR [rcx]
 6b9:	19 64 13 01          	sbb    DWORD PTR [rbx+rdx*1+0x1],esp
 6bd:	13 00                	adc    eax,DWORD PTR [rax]
 6bf:	00 60 39             	add    BYTE PTR [rax+0x39],ah
 6c2:	01 03                	add    DWORD PTR [rbx],eax
 6c4:	0e                   	(bad)
 6c5:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 6c7:	3b 05 39 0b 89 01    	cmp    eax,DWORD PTR [rip+0x1890b39]        # 1891206 <__TMC_END__+0x188d1ee>
 6cd:	19 01                	sbb    DWORD PTR [rcx],eax
 6cf:	13 00                	adc    eax,DWORD PTR [rax]
 6d1:	00 61 04             	add    BYTE PTR [rcx+0x4],ah
 6d4:	01 3e                	add    DWORD PTR [rsi],edi
 6d6:	0b 0b                	or     ecx,DWORD PTR [rbx]
 6d8:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 6db:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 6dd:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 6df:	39 0b                	cmp    DWORD PTR [rbx],ecx
 6e1:	01 13                	add    DWORD PTR [rbx],edx
 6e3:	00 00                	add    BYTE PTR [rax],al
 6e5:	62 17 01 0b 0b       	(bad)
 6ea:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 6ec:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 6ee:	39 0b                	cmp    DWORD PTR [rbx],ecx
 6f0:	89 01                	mov    DWORD PTR [rcx],eax
 6f2:	19 01                	sbb    DWORD PTR [rcx],eax
 6f4:	13 00                	adc    eax,DWORD PTR [rax]
 6f6:	00 63 0d             	add    BYTE PTR [rbx+0xd],ah
 6f9:	00 49 13             	add    BYTE PTR [rcx+0x13],cl
 6fc:	38 0b                	cmp    BYTE PTR [rbx],cl
 6fe:	00 00                	add    BYTE PTR [rax],al
 700:	64 39 00             	cmp    DWORD PTR fs:[rax],eax
 703:	03 08                	add    ecx,DWORD PTR [rax]
 705:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 707:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 709:	39 0b                	cmp    DWORD PTR [rbx],ecx
 70b:	00 00                	add    BYTE PTR [rax],al
 70d:	65 04 01             	gs add al,0x1
 710:	03 0e                	add    ecx,DWORD PTR [rsi]
 712:	6d                   	ins    DWORD PTR es:[rdi],dx
 713:	19 3e                	sbb    DWORD PTR [rsi],edi
 715:	0b 0b                	or     ecx,DWORD PTR [rbx]
 717:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 71a:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 71c:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 71e:	39 0b                	cmp    DWORD PTR [rbx],ecx
 720:	01 13                	add    DWORD PTR [rbx],edx
 722:	00 00                	add    BYTE PTR [rax],al
 724:	66 39 00             	cmp    WORD PTR [rax],ax
 727:	03 08                	add    ecx,DWORD PTR [rax]
 729:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 72b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 72d:	39 0b                	cmp    DWORD PTR [rbx],ecx
 72f:	89 01                	mov    DWORD PTR [rcx],eax
 731:	19 00                	sbb    DWORD PTR [rax],eax
 733:	00 67 04             	add    BYTE PTR [rdi+0x4],ah
 736:	01 03                	add    DWORD PTR [rbx],eax
 738:	0e                   	(bad)
 739:	6d                   	ins    DWORD PTR es:[rdi],dx
 73a:	19 3e                	sbb    DWORD PTR [rsi],edi
 73c:	0b 0b                	or     ecx,DWORD PTR [rbx]
 73e:	0b 49 13             	or     ecx,DWORD PTR [rcx+0x13]
 741:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 743:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 13011282 <__TMC_END__+0x1300d26a>
 749:	00 00                	add    BYTE PTR [rax],al
 74b:	68 28 00 03 08       	push   0x8030028
 750:	1c 0b                	sbb    al,0xb
 752:	00 00                	add    BYTE PTR [rax],al
 754:	69 02 01 03 0e 0b    	imul   eax,DWORD PTR [rdx],0xb0e0301
 75a:	0b 3a                	or     edi,DWORD PTR [rdx]
 75c:	0b 3b                	or     edi,DWORD PTR [rbx]
 75e:	05 39 0b 1d 13       	add    eax,0x131d0b39
 763:	01 13                	add    DWORD PTR [rbx],edx
 765:	00 00                	add    BYTE PTR [rax],al
 767:	6a 2e                	push   0x2e
 769:	01 3f                	add    DWORD PTR [rdi],edi
 76b:	19 03                	sbb    DWORD PTR [rbx],eax
 76d:	0e                   	(bad)
 76e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 770:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e12af <__TMC_END__+0xe6dd297>
 776:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 77a:	63 19                	movsxd ebx,DWORD PTR [rcx]
 77c:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 77f:	13 00                	adc    eax,DWORD PTR [rax]
 781:	00 6b 2e             	add    BYTE PTR [rbx+0x2e],ch
 784:	01 3f                	add    DWORD PTR [rdi],edi
 786:	19 03                	sbb    DWORD PTR [rbx],eax
 788:	08 3a                	or     BYTE PTR [rdx],bh
 78a:	0b 3b                	or     edi,DWORD PTR [rbx]
 78c:	05 39 0b 6e 0e       	add    eax,0xe6e0b39
 791:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 795:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 798:	13 00                	adc    eax,DWORD PTR [rax]
 79a:	00 6c 2e 01          	add    BYTE PTR [rsi+rbp*1+0x1],ch
 79e:	3f                   	(bad)
 79f:	19 03                	sbb    DWORD PTR [rbx],eax
 7a1:	0e                   	(bad)
 7a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7a3:	0e                   	(bad)
 7a4:	34 19                	xor    al,0x19
 7a6:	32 0b                	xor    cl,BYTE PTR [rbx]
 7a8:	3c 19                	cmp    al,0x19
 7aa:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 7ad:	13 00                	adc    eax,DWORD PTR [rax]
 7af:	00 6d 0d             	add    BYTE PTR [rbp+0xd],ch
 7b2:	00 03                	add    BYTE PTR [rbx],al
 7b4:	0e                   	(bad)
 7b5:	49 13 38             	adc    rdi,QWORD PTR [r8]
 7b8:	0b 34 19             	or     esi,DWORD PTR [rcx+rbx*1]
 7bb:	32 0b                	xor    cl,BYTE PTR [rbx]
 7bd:	00 00                	add    BYTE PTR [rax],al
 7bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 7c0:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 7c3:	19 03                	sbb    DWORD PTR [rbx],eax
 7c5:	0e                   	(bad)
 7c6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 7c8:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1307 <__TMC_END__+0xe6dd2ef>
 7ce:	4c 0b 4d 18          	or     r9,QWORD PTR [rbp+0x18]
 7d2:	1d 13 3c 19 64       	sbb    eax,0x64193c13
 7d7:	13 01                	adc    eax,DWORD PTR [rcx]
 7d9:	13 00                	adc    eax,DWORD PTR [rax]
 7db:	00 6f 2e             	add    BYTE PTR [rdi+0x2e],ch
 7de:	01 3f                	add    DWORD PTR [rdi],edi
 7e0:	19 03                	sbb    DWORD PTR [rbx],eax
 7e2:	0e                   	(bad)
 7e3:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 7e5:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1324 <__TMC_END__+0xe6dd30c>
 7eb:	49 13 4c 0b 4d       	adc    rcx,QWORD PTR [r11+rcx*1+0x4d]
 7f0:	18 1d 13 32 0b 3c    	sbb    BYTE PTR [rip+0x3c0b3213],bl        # 3c0b3a09 <__TMC_END__+0x3c0af9f1>
 7f6:	19 64 13 01          	sbb    DWORD PTR [rbx+rdx*1+0x1],esp
 7fa:	13 00                	adc    eax,DWORD PTR [rax]
 7fc:	00 70 2e             	add    BYTE PTR [rax+0x2e],dh
 7ff:	01 3f                	add    DWORD PTR [rdi],edi
 801:	19 03                	sbb    DWORD PTR [rbx],eax
 803:	0e                   	(bad)
 804:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 806:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1345 <__TMC_END__+0xe6dd32d>
 80c:	4c 0b 4d 18          	or     r9,QWORD PTR [rbp+0x18]
 810:	1d 13 32 0b 3c       	sbb    eax,0x3c0b3213
 815:	19 64 13 01          	sbb    DWORD PTR [rbx+rdx*1+0x1],esp
 819:	13 00                	adc    eax,DWORD PTR [rax]
 81b:	00 71 2e             	add    BYTE PTR [rcx+0x2e],dh
 81e:	01 3f                	add    DWORD PTR [rdi],edi
 820:	19 03                	sbb    DWORD PTR [rbx],eax
 822:	0e                   	(bad)
 823:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 825:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1364 <__TMC_END__+0xe6dd34c>
 82b:	49 13 32             	adc    rsi,QWORD PTR [r10]
 82e:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
 831:	8b 01                	mov    eax,DWORD PTR [rcx]
 833:	0b 64 13 01          	or     esp,DWORD PTR [rbx+rdx*1+0x1]
 837:	13 00                	adc    eax,DWORD PTR [rax]
 839:	00 72 2e             	add    BYTE PTR [rdx+0x2e],dh
 83c:	01 3f                	add    DWORD PTR [rdi],edi
 83e:	19 03                	sbb    DWORD PTR [rbx],eax
 840:	0e                   	(bad)
 841:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 843:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e1382 <__TMC_END__+0xe6dd36a>
 849:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 84d:	8a 01                	mov    al,BYTE PTR [rcx]
 84f:	19 01                	sbb    DWORD PTR [rcx],eax
 851:	13 00                	adc    eax,DWORD PTR [rax]
 853:	00 73 0d             	add    BYTE PTR [rbx+0xd],dh
 856:	00 03                	add    BYTE PTR [rbx],al
 858:	0e                   	(bad)
 859:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 85b:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 85d:	39 0b                	cmp    DWORD PTR [rbx],ecx
 85f:	49 13 38             	adc    rdi,QWORD PTR [r8]
 862:	0b 32                	or     esi,DWORD PTR [rdx]
 864:	0b 00                	or     eax,DWORD PTR [rax]
 866:	00 74 2e 01          	add    BYTE PTR [rsi+rbp*1+0x1],dh
 86a:	3f                   	(bad)
 86b:	19 03                	sbb    DWORD PTR [rbx],eax
 86d:	0e                   	(bad)
 86e:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 870:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 872:	39 0b                	cmp    DWORD PTR [rbx],ecx
 874:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 875:	0e                   	(bad)
 876:	32 0b                	xor    cl,BYTE PTR [rbx]
 878:	3c 19                	cmp    al,0x19
 87a:	63 19                	movsxd ebx,DWORD PTR [rcx]
 87c:	64 13 01             	adc    eax,DWORD PTR fs:[rcx]
 87f:	13 00                	adc    eax,DWORD PTR [rax]
 881:	00 75 34             	add    BYTE PTR [rbp+0x34],dh
 884:	00 03                	add    BYTE PTR [rbx],al
 886:	0e                   	(bad)
 887:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 889:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 88b:	39 0b                	cmp    DWORD PTR [rbx],ecx
 88d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 88e:	0e                   	(bad)
 88f:	49 13 3f             	adc    rdi,QWORD PTR [r15]
 892:	19 32                	sbb    DWORD PTR [rdx],esi
 894:	0b 3c 19             	or     edi,DWORD PTR [rcx+rbx*1]
 897:	1c 07                	sbb    al,0x7
 899:	6c                   	ins    BYTE PTR es:[rdi],dx
 89a:	19 20                	sbb    DWORD PTR [rax],esp
 89c:	0b 00                	or     eax,DWORD PTR [rax]
 89e:	00 76 02             	add    BYTE PTR [rsi+0x2],dh
 8a1:	01 03                	add    DWORD PTR [rbx],eax
 8a3:	0e                   	(bad)
 8a4:	3c 19                	cmp    al,0x19
 8a6:	00 00                	add    BYTE PTR [rax],al
 8a8:	77 13                	ja     8bd <_init-0x743>
 8aa:	01 03                	add    DWORD PTR [rbx],eax
 8ac:	08 0b                	or     BYTE PTR [rbx],cl
 8ae:	0b 3a                	or     edi,DWORD PTR [rdx]
 8b0:	0b 3b                	or     edi,DWORD PTR [rbx]
 8b2:	0b 39                	or     edi,DWORD PTR [rcx]
 8b4:	0b 01                	or     eax,DWORD PTR [rcx]
 8b6:	13 00                	adc    eax,DWORD PTR [rax]
 8b8:	00 78 39             	add    BYTE PTR [rax+0x39],bh
 8bb:	01 03                	add    DWORD PTR [rbx],eax
 8bd:	0e                   	(bad)
 8be:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 8c0:	3b 05 39 0b 01 13    	cmp    eax,DWORD PTR [rip+0x13010b39]        # 130113ff <__TMC_END__+0x1300d3e7>
 8c6:	00 00                	add    BYTE PTR [rax],al
 8c8:	79 2e                	jns    8f8 <_init-0x708>
 8ca:	01 3f                	add    DWORD PTR [rdi],edi
 8cc:	19 03                	sbb    DWORD PTR [rbx],eax
 8ce:	08 3a                	or     BYTE PTR [rdx],bh
 8d0:	0b 3b                	or     edi,DWORD PTR [rbx]
 8d2:	0b 39                	or     edi,DWORD PTR [rcx]
 8d4:	0b 6e 0e             	or     ebp,DWORD PTR [rsi+0xe]
 8d7:	49 13 3c 19          	adc    rdi,QWORD PTR [r9+rbx*1]
 8db:	01 13                	add    DWORD PTR [rbx],edx
 8dd:	00 00                	add    BYTE PTR [rax],al
 8df:	7a 2e                	jp     90f <_init-0x6f1>
 8e1:	01 3f                	add    DWORD PTR [rdi],edi
 8e3:	19 03                	sbb    DWORD PTR [rbx],eax
 8e5:	0e                   	(bad)
 8e6:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 8e8:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 8ea:	39 0b                	cmp    DWORD PTR [rbx],ecx
 8ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 8ed:	0e                   	(bad)
 8ee:	3c 19                	cmp    al,0x19
 8f0:	01 13                	add    DWORD PTR [rbx],edx
 8f2:	00 00                	add    BYTE PTR [rax],al
 8f4:	7b 13                	jnp    909 <_init-0x6f7>
 8f6:	01 0b                	add    DWORD PTR [rbx],ecx
 8f8:	0b 88 01 0b 3a 0b    	or     ecx,DWORD PTR [rax+0xb3a0b01]
 8fe:	3b 05 39 0b 6e 0e    	cmp    eax,DWORD PTR [rip+0xe6e0b39]        # e6e143d <__TMC_END__+0xe6dd425>
 904:	01 13                	add    DWORD PTR [rbx],edx
 906:	00 00                	add    BYTE PTR [rax],al
 908:	7c 16                	jl     920 <_init-0x6e0>
 90a:	00 03                	add    BYTE PTR [rbx],al
 90c:	0e                   	(bad)
 90d:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 90f:	3b 05 39 0b 49 13    	cmp    eax,DWORD PTR [rip+0x13490b39]        # 1349144e <__TMC_END__+0x1348d436>
 915:	88 01                	mov    BYTE PTR [rcx],al
 917:	0b 00                	or     eax,DWORD PTR [rax]
 919:	00 7d 26             	add    BYTE PTR [rbp+0x26],bh
 91c:	00 00                	add    BYTE PTR [rax],al
 91e:	00 7e 3a             	add    BYTE PTR [rsi+0x3a],bh
 921:	00 3a                	add    BYTE PTR [rdx],bh
 923:	0b 3b                	or     edi,DWORD PTR [rbx]
 925:	0b 39                	or     edi,DWORD PTR [rcx]
 927:	0b 18                	or     ebx,DWORD PTR [rax]
 929:	13 00                	adc    eax,DWORD PTR [rax]
 92b:	00 7f 15             	add    BYTE PTR [rdi+0x15],bh
 92e:	00 00                	add    BYTE PTR [rax],al
 930:	00 80 01 2e 01 3f    	add    BYTE PTR [rax+0x3f012e01],al
 936:	19 03                	sbb    DWORD PTR [rbx],eax
 938:	08 3a                	or     BYTE PTR [rdx],bh
 93a:	0b 3b                	or     edi,DWORD PTR [rbx]
 93c:	05 39 0b 49 13       	add    eax,0x13490b39
 941:	3c 19                	cmp    al,0x19
 943:	01 13                	add    DWORD PTR [rbx],edx
 945:	00 00                	add    BYTE PTR [rax],al
 947:	81 01 2e 01 3f 19    	add    DWORD PTR [rcx],0x193f012e
 94d:	03 0e                	add    ecx,DWORD PTR [rsi]
 94f:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 951:	3b 05 39 0b 87 01    	cmp    eax,DWORD PTR [rip+0x1870b39]        # 1871490 <__TMC_END__+0x186d478>
 957:	19 3c 19             	sbb    DWORD PTR [rcx+rbx*1],edi
 95a:	01 13                	add    DWORD PTR [rbx],edx
 95c:	00 00                	add    BYTE PTR [rax],al
 95e:	82                   	(bad)
 95f:	01 16                	add    DWORD PTR [rsi],edx
 961:	00 03                	add    BYTE PTR [rbx],al
 963:	0e                   	(bad)
 964:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 966:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 968:	39 0b                	cmp    DWORD PTR [rbx],ecx
 96a:	00 00                	add    BYTE PTR [rax],al
 96c:	83 01 0f             	add    DWORD PTR [rcx],0xf
 96f:	00 0b                	add    BYTE PTR [rbx],cl
 971:	0b 03                	or     eax,DWORD PTR [rbx]
 973:	0e                   	(bad)
 974:	49 13 00             	adc    rax,QWORD PTR [r8]
 977:	00 84 01 2e 01 3f 19 	add    BYTE PTR [rcx+rax*1+0x193f012e],al
 97e:	03 0e                	add    ecx,DWORD PTR [rsi]
 980:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 982:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 984:	39 0b                	cmp    DWORD PTR [rbx],ecx
 986:	49 13 11             	adc    rdx,QWORD PTR [r9]
 989:	01 12                	add    DWORD PTR [rdx],edx
 98b:	07                   	(bad)
 98c:	40 18 7c 19 01       	sbb    BYTE PTR [rcx+rbx*1+0x1],dil
 991:	13 00                	adc    eax,DWORD PTR [rax]
 993:	00 85 01 2e 01 3f    	add    BYTE PTR [rbp+0x3f012e01],al
 999:	19 03                	sbb    DWORD PTR [rbx],eax
 99b:	0e                   	(bad)
 99c:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 99e:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 9a0:	39 0b                	cmp    DWORD PTR [rbx],ecx
 9a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 9a3:	0e                   	(bad)
 9a4:	49 13 11             	adc    rdx,QWORD PTR [r9]
 9a7:	01 12                	add    DWORD PTR [rdx],edx
 9a9:	07                   	(bad)
 9aa:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
 9ae:	01 13                	add    DWORD PTR [rbx],edx
 9b0:	00 00                	add    BYTE PTR [rax],al
 9b2:	86 01                	xchg   BYTE PTR [rcx],al
 9b4:	2e 01 3f             	cs add DWORD PTR [rdi],edi
 9b7:	19 03                	sbb    DWORD PTR [rbx],eax
 9b9:	0e                   	(bad)
 9ba:	3a 0b                	cmp    cl,BYTE PTR [rbx]
 9bc:	3b 0b                	cmp    ecx,DWORD PTR [rbx]
 9be:	39 0b                	cmp    DWORD PTR [rbx],ecx
 9c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 9c1:	0e                   	(bad)
 9c2:	49 13 11             	adc    rdx,QWORD PTR [r9]
 9c5:	01 12                	add    DWORD PTR [rdx],edx
 9c7:	07                   	(bad)
 9c8:	40 18 7a 19          	sbb    BYTE PTR [rdx+0x19],dil
 9cc:	00 00                	add    BYTE PTR [rax],al
	...

Disassembly of section .debug_line:

0000000000000000 <.debug_line>:
   0:	e6 01                	out    0x1,al
   2:	00 00                	add    BYTE PTR [rax],al
   4:	05 00 08 00 a0       	add    eax,0xa0000800
   9:	01 00                	add    DWORD PTR [rax],eax
   b:	00 01                	add    BYTE PTR [rcx],al
   d:	01 01                	add    DWORD PTR [rcx],eax
   f:	fb                   	sti
  10:	0e                   	(bad)
  11:	0d 00 01 01 01       	or     eax,0x1010100
  16:	01 00                	add    DWORD PTR [rax],eax
  18:	00 00                	add    BYTE PTR [rax],al
  1a:	01 00                	add    DWORD PTR [rax],eax
  1c:	00 01                	add    BYTE PTR [rcx],al
  1e:	01 01                	add    DWORD PTR [rcx],eax
  20:	1f                   	(bad)
  21:	0c 17                	or     al,0x17
  23:	00 00                	add    BYTE PTR [rax],al
  25:	00 3e                	add    BYTE PTR [rsi],bh
  27:	00 00                	add    BYTE PTR [rax],al
  29:	00 4c 00 00          	add    BYTE PTR [rax+rax*1+0x0],cl
  2d:	00 7c 00 00          	add    BYTE PTR [rax+rax*1+0x0],bh
  31:	00 94 00 00 00 ac 00 	add    BYTE PTR [rax+rax*1+0xac0000],dl
  38:	00 00                	add    BYTE PTR [rax],al
  3a:	dd 00                	fld    QWORD PTR [rax]
  3c:	00 00                	add    BYTE PTR [rax],al
  3e:	fa                   	cli
  3f:	00 00                	add    BYTE PTR [rax],al
  41:	00 18                	add    BYTE PTR [rax],bl
  43:	01 00                	add    DWORD PTR [rax],eax
  45:	00 25 01 00 00 41    	add    BYTE PTR [rip+0x41000001],ah        # 4100004c <__TMC_END__+0x40ffc034>
  4b:	01 00                	add    DWORD PTR [rax],eax
  4d:	00 53 01             	add    BYTE PTR [rbx+0x1],dl
  50:	00 00                	add    BYTE PTR [rax],al
  52:	02 01                	add    al,BYTE PTR [rcx]
  54:	1f                   	(bad)
  55:	02 0f                	add    cl,BYTE PTR [rdi]
  57:	44 0e                	rex.R (bad)
  59:	00 00                	add    BYTE PTR [rax],al
  5b:	00 01                	add    BYTE PTR [rcx],al
  5d:	0e                   	(bad)
  5e:	00 00                	add    BYTE PTR [rax],al
  60:	00 01                	add    BYTE PTR [rcx],al
  62:	64 01 00             	add    DWORD PTR fs:[rax],eax
  65:	00 00                	add    BYTE PTR [rax],al
  67:	6f                   	outs   dx,DWORD PTR ds:[rsi]
  68:	01 00                	add    DWORD PTR [rax],eax
  6a:	00 02                	add    BYTE PTR [rdx],al
  6c:	78 01                	js     6f <_init-0xf91>
  6e:	00 00                	add    BYTE PTR [rax],al
  70:	03 81 01 00 00 03    	add    eax,DWORD PTR [rcx+0x3000001]
  76:	83 01 00             	add    DWORD PTR [rcx],0x0
  79:	00 03                	add    BYTE PTR [rbx],al
  7b:	8f 01                	pop    QWORD PTR [rcx]
  7d:	00 00                	add    BYTE PTR [rax],al
  7f:	03 98 01 00 00 03    	add    ebx,DWORD PTR [rax+0x3000001]
  85:	91                   	xchg   ecx,eax
  86:	01 00                	add    DWORD PTR [rax],eax
  88:	00 03                	add    BYTE PTR [rbx],al
  8a:	a6                   	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
  8b:	01 00                	add    DWORD PTR [rax],eax
  8d:	00 04 ad 01 00 00 05 	add    BYTE PTR [rbp*4+0x5000001],al
  94:	b9 01 00 00 04       	mov    ecx,0x4000001
  99:	c5 01 00             	(bad)
  9c:	00 06                	add    BYTE PTR [rsi],al
  9e:	d5 01 00 00          	{rex2 0x1} add BYTE PTR [r8],al
  a2:	04 de                	add    al,0xde
  a4:	01 00                	add    DWORD PTR [rax],eax
  a6:	00 06                	add    BYTE PTR [rsi],al
  a8:	f2 01 00             	repnz add DWORD PTR [rax],eax
  ab:	00 06                	add    BYTE PTR [rsi],al
  ad:	ff 01                	inc    DWORD PTR [rcx]
  af:	00 00                	add    BYTE PTR [rax],al
  b1:	04 07                	add    al,0x7
  b3:	02 00                	add    al,BYTE PTR [rax]
  b5:	00 04 0c             	add    BYTE PTR [rsp+rcx*1],al
  b8:	02 00                	add    al,BYTE PTR [rax]
  ba:	00 06                	add    BYTE PTR [rsi],al
  bc:	1b 02                	sbb    eax,DWORD PTR [rdx]
  be:	00 00                	add    BYTE PTR [rax],al
  c0:	06                   	(bad)
  c1:	26 02 00             	es add al,BYTE PTR [rax]
  c4:	00 06                	add    BYTE PTR [rsi],al
  c6:	40 02 00             	rex add al,BYTE PTR [rax]
  c9:	00 06                	add    BYTE PTR [rsi],al
  cb:	4e 02 00             	rex.WRX add r8b,BYTE PTR [rax]
  ce:	00 04 56             	add    BYTE PTR [rsi+rdx*2],al
  d1:	02 00                	add    al,BYTE PTR [rax]
  d3:	00 06                	add    BYTE PTR [rsi],al
  d5:	5a                   	pop    rdx
  d6:	02 00                	add    al,BYTE PTR [rax]
  d8:	00 06                	add    BYTE PTR [rsi],al
  da:	66 02 00             	data16 add al,BYTE PTR [rax]
  dd:	00 07                	add    BYTE PTR [rdi],al
  df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  e0:	02 00                	add    al,BYTE PTR [rax]
  e2:	00 04 76             	add    BYTE PTR [rsi+rsi*2],al
  e5:	02 00                	add    al,BYTE PTR [rax]
  e7:	00 04 82             	add    BYTE PTR [rdx+rax*4],al
  ea:	02 00                	add    al,BYTE PTR [rax]
  ec:	00 04 8a             	add    BYTE PTR [rdx+rcx*4],al
  ef:	02 00                	add    al,BYTE PTR [rax]
  f1:	00 04 91             	add    BYTE PTR [rcx+rdx*4],al
  f4:	02 00                	add    al,BYTE PTR [rax]
  f6:	00 06                	add    BYTE PTR [rsi],al
  f8:	a0 02 00 00 04 b1 02 	movabs al,ds:0x2b104000002
  ff:	00 00 
 101:	04 b9                	add    al,0xb9
 103:	02 00                	add    al,BYTE PTR [rax]
 105:	00 04 c1             	add    BYTE PTR [rcx+rax*8],al
 108:	02 00                	add    al,BYTE PTR [rax]
 10a:	00 04 ca             	add    BYTE PTR [rdx+rcx*8],al
 10d:	02 00                	add    al,BYTE PTR [rax]
 10f:	00 05 dc 02 00 00    	add    BYTE PTR [rip+0x2dc],al        # 3f1 <_init-0xc0f>
 115:	04 e2                	add    al,0xe2
 117:	02 00                	add    al,BYTE PTR [rax]
 119:	00 04 ea             	add    BYTE PTR [rdx+rbp*8],al
 11c:	02 00                	add    al,BYTE PTR [rax]
 11e:	00 06                	add    BYTE PTR [rsi],al
 120:	f4                   	hlt
 121:	02 00                	add    al,BYTE PTR [rax]
 123:	00 06                	add    BYTE PTR [rsi],al
 125:	ff 02                	inc    DWORD PTR [rdx]
 127:	00 00                	add    BYTE PTR [rax],al
 129:	04 06                	add    al,0x6
 12b:	03 00                	add    eax,DWORD PTR [rax]
 12d:	00 06                	add    BYTE PTR [rsi],al
 12f:	15 03 00 00 04       	adc    eax,0x4000003
 134:	a5                   	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
 135:	03 00                	add    eax,DWORD PTR [rax]
 137:	00 08                	add    BYTE PTR [rax],cl
 139:	1c 03                	sbb    al,0x3
 13b:	00 00                	add    BYTE PTR [rax],al
 13d:	03 28                	add    ebp,DWORD PTR [rax]
 13f:	03 00                	add    eax,DWORD PTR [rax]
 141:	00 06                	add    BYTE PTR [rsi],al
 143:	91                   	xchg   ecx,eax
 144:	02 00                	add    al,BYTE PTR [rax]
 146:	00 09                	add    BYTE PTR [rcx],cl
 148:	39 03                	cmp    DWORD PTR [rbx],eax
 14a:	00 00                	add    BYTE PTR [rax],al
 14c:	08 38                	or     BYTE PTR [rax],bh
 14e:	02 00                	add    al,BYTE PTR [rax]
 150:	00 0a                	add    BYTE PTR [rdx],cl
 152:	42 03 00             	rex.X add eax,DWORD PTR [rax]
 155:	00 03                	add    BYTE PTR [rbx],al
 157:	4b 03 00             	rex.WXB add rax,QWORD PTR [r8]
 15a:	00 03                	add    BYTE PTR [rbx],al
 15c:	5d                   	pop    rbp
 15d:	03 00                	add    eax,DWORD PTR [rax]
 15f:	00 03                	add    BYTE PTR [rbx],al
 161:	67 03 00             	add    eax,DWORD PTR [eax]
 164:	00 06                	add    BYTE PTR [rsi],al
 166:	74 03                	je     16b <_init-0xe95>
 168:	00 00                	add    BYTE PTR [rax],al
 16a:	08 38                	or     BYTE PTR [rax],bh
 16c:	02 00                	add    al,BYTE PTR [rax]
 16e:	00 0b                	add    BYTE PTR [rbx],cl
 170:	7d 03                	jge    175 <_init-0xe8b>
 172:	00 00                	add    BYTE PTR [rax],al
 174:	0a 8b 03 00 00 03    	or     cl,BYTE PTR [rbx+0x3000003]
 17a:	96                   	xchg   esi,eax
 17b:	03 00                	add    eax,DWORD PTR [rax]
 17d:	00 08                	add    BYTE PTR [rax],cl
 17f:	9e                   	sahf
 180:	03 00                	add    eax,DWORD PTR [rax]
 182:	00 0a                	add    BYTE PTR [rdx],cl
 184:	ad                   	lods   eax,DWORD PTR ds:[rsi]
 185:	03 00                	add    eax,DWORD PTR [rax]
 187:	00 08                	add    BYTE PTR [rax],cl
 189:	b6 03                	mov    dh,0x3
 18b:	00 00                	add    BYTE PTR [rax],al
 18d:	08 bd 03 00 00 0a    	or     BYTE PTR [rbp+0xa000003],bh
 193:	cc                   	int3
 194:	03 00                	add    eax,DWORD PTR [rax]
 196:	00 0a                	add    BYTE PTR [rdx],cl
 198:	db 03                	fild   DWORD PTR [rbx]
 19a:	00 00                	add    BYTE PTR [rax],al
 19c:	08 e4                	or     ah,ah
 19e:	03 00                	add    eax,DWORD PTR [rax]
 1a0:	00 08                	add    BYTE PTR [rax],cl
 1a2:	ed                   	in     eax,dx
 1a3:	03 00                	add    eax,DWORD PTR [rax]
 1a5:	00 06                	add    BYTE PTR [rsi],al
 1a7:	ff 03                	inc    DWORD PTR [rbx]
 1a9:	00 00                	add    BYTE PTR [rax],al
 1ab:	04 05                	add    al,0x5
 1ad:	01 00                	add    DWORD PTR [rax],eax
 1af:	09 02                	or     DWORD PTR [rdx],eax
 1b1:	19 11                	sbb    DWORD PTR [rcx],edx
 1b3:	00 00                	add    BYTE PTR [rax],al
 1b5:	00 00                	add    BYTE PTR [rax],al
 1b7:	00 00                	add    BYTE PTR [rax],al
 1b9:	18 05 05 e6 05 0c    	sbb    BYTE PTR [rip+0xc05e605],al        # c05e7c4 <__TMC_END__+0xc05a7ac>
 1bf:	08 60 05             	or     BYTE PTR [rax+0x5],ah
 1c2:	01 4b 30             	add    DWORD PTR [rbx+0x30],ecx
 1c5:	05 05 76 05 0c       	add    eax,0xc057605
 1ca:	fa                   	cli
 1cb:	05 01 4b 05 0c       	add    eax,0xc054b01
 1d0:	30 ac 05 0a e5 05 09 	xor    BYTE PTR [rbp+rax*1+0x905e50a],ch
 1d7:	02 38                	add    bh,BYTE PTR [rax]
 1d9:	13 05 0d 9f 00 02    	adc    eax,DWORD PTR [rip+0x2009f0d]        # 200a0ec <__TMC_END__+0x20060d4>
 1df:	04 01                	add    al,0x1
 1e1:	08 5b 06             	or     BYTE PTR [rbx+0x6],bl
 1e4:	58                   	pop    rax
 1e5:	02 02                	add    al,BYTE PTR [rdx]
 1e7:	00 01                	add    BYTE PTR [rcx],al
 1e9:	01                   	.byte 0x1

Disassembly of section .debug_str:

0000000000000000 <.debug_str>:
       0:	5f                   	pop    rdi
       1:	5a                   	pop    rdx
       2:	4e 53                	rex.WRX push rbx
       4:	74 38                	je     3e <_init-0xfc2>
       6:	5f                   	pop    rdi
       7:	5f                   	pop    rdi
       8:	66 6f                	outs   dx,WORD PTR ds:[rsi]
       a:	72 6d                	jb     79 <_init-0xf87>
       c:	61                   	(bad)
       d:	74 35                	je     44 <_init-0xfbc>
       f:	5f                   	pop    rdi
      10:	53                   	push   rbx
      11:	69 6e 6b 49 63 45 61 	imul   ebp,DWORD PTR [rsi+0x6b],0x61456349
      18:	53                   	push   rbx
      19:	45 52                	rex.RB push r10
      1b:	4b 53                	rex.WXB push r11
      1d:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
      20:	77 63                	ja     85 <_init-0xf7b>
      22:	73 70                	jae    94 <_init-0xf6c>
      24:	62 72 6b 00 6c       	(bad)
      29:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
      2c:	76 00                	jbe    2e <_init-0xfd2>
      2e:	5f                   	pop    rdi
      2f:	5a                   	pop    rdx
      30:	53                   	push   rbx
      31:	74 38                	je     6b <_init-0xf95>
      33:	74 6f                	je     a4 <_init-0xf5c>
      35:	5f                   	pop    rdi
      36:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
      39:	72 73                	jb     ae <_init-0xf52>
      3b:	50                   	push   rax
      3c:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
      3f:	64 53                	fs push rbx
      41:	74 31                	je     74 <_init-0xf8c>
      43:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
      46:	61                   	(bad)
      47:	72 73                	jb     bc <_init-0xf44>
      49:	5f                   	pop    rdi
      4a:	66 6f                	outs   dx,WORD PTR ds:[rsi]
      4c:	72 6d                	jb     bb <_init-0xf45>
      4e:	61                   	(bad)
      4f:	74 69                	je     ba <_init-0xf46>
      51:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
      54:	4e                   	rex.WRX
      55:	4b 53                	rex.WXB push r11
      57:	74 37                	je     90 <_init-0xf70>
      59:	5f                   	pop    rdi
      5a:	5f                   	pop    rdi
      5b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
      5e:	31 31                	xor    DWORD PTR [rcx],esi
      60:	31 32                	xor    DWORD PTR [rdx],esi
      62:	62 61 73 69 63       	(bad)
      67:	5f                   	pop    rdi
      68:	73 74                	jae    de <_init-0xf22>
      6a:	72 69                	jb     d5 <_init-0xf2b>
      6c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      6d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
      72:	31 31                	xor    DWORD PTR [rcx],esi
      74:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
      77:	72 5f                	jb     d8 <_init-0xf28>
      79:	74 72                	je     ed <_init-0xf13>
      7b:	61                   	(bad)
      7c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
      83:	61 
      84:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
      88:	34 62                	xor    al,0x62
      8a:	61                   	(bad)
      8b:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
      8e:	76 00                	jbe    90 <_init-0xf70>
      90:	5f                   	pop    rdi
      91:	5a                   	pop    rdx
      92:	4e 53                	rex.WRX push rbx
      94:	74 37                	je     cd <_init-0xf33>
      96:	5f                   	pop    rdi
      97:	5f                   	pop    rdi
      98:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
      9b:	31 31                	xor    DWORD PTR [rcx],esi
      9d:	31 32                	xor    DWORD PTR [rdx],esi
      9f:	62 61 73 69 63       	(bad)
      a4:	5f                   	pop    rdi
      a5:	73 74                	jae    11b <_init-0xee5>
      a7:	72 69                	jb     112 <_init-0xeee>
      a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      aa:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
      af:	31 31                	xor    DWORD PTR [rcx],esi
      b1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
      b4:	72 5f                	jb     115 <_init-0xeeb>
      b6:	74 72                	je     12a <_init-0xed6>
      b8:	61                   	(bad)
      b9:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
      c0:	61 
      c1:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
      c5:	37                   	(bad)
      c6:	72 65                	jb     12d <_init-0xed3>
      c8:	70 6c                	jo     136 <_init-0xeca>
      ca:	61                   	(bad)
      cb:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
      ce:	6d                   	ins    DWORD PTR es:[rdi],dx
      cf:	6d                   	ins    DWORD PTR es:[rdi],dx
      d0:	50                   	push   rax
      d1:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
      d5:	5f                   	pop    rdi
      d6:	5a                   	pop    rdx
      d7:	4e                   	rex.WRX
      d8:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
      dc:	67 6e                	outs   dx,BYTE PTR ds:[esi]
      de:	75 5f                	jne    13f <_init-0xec1>
      e0:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
      e3:	31 37                	xor    DWORD PTR [rdi],esi
      e5:	5f                   	pop    rdi
      e6:	5f                   	pop    rdi
      e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
      e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
      e9:	72 6d                	jb     158 <_init-0xea8>
      eb:	61                   	(bad)
      ec:	6c                   	ins    BYTE PTR es:[rdi],dx
      ed:	5f                   	pop    rdi
      ee:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
      f5:	72 
      f6:	49 50                	rex.WB push r8
      f8:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
      fc:	74 37                	je     135 <_init-0xecb>
      fe:	5f                   	pop    rdi
      ff:	5f                   	pop    rdi
     100:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     103:	31 31                	xor    DWORD PTR [rcx],esi
     105:	31 32                	xor    DWORD PTR [rdx],esi
     107:	62 61 73 69 63       	(bad)
     10c:	5f                   	pop    rdi
     10d:	73 74                	jae    183 <_init-0xe7d>
     10f:	72 69                	jb     17a <_init-0xe86>
     111:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     112:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     117:	31 31                	xor    DWORD PTR [rcx],esi
     119:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     11c:	72 5f                	jb     17d <_init-0xe83>
     11e:	74 72                	je     192 <_init-0xe6e>
     120:	61                   	(bad)
     121:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     128:	61 
     129:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     12d:	45                   	rex.RB
     12e:	45 70 6c             	rex.RB jo 19d <_init-0xe63>
     131:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
     133:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     136:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
     13d:	73 74                	jae    1b3 <_init-0xe4d>
     13f:	36 34 5f             	ss xor al,0x5f
     142:	74 00                	je     144 <_init-0xebc>
     144:	5f                   	pop    rdi
     145:	5a                   	pop    rdx
     146:	4e                   	rex.WRX
     147:	4b 53                	rex.WXB push r11
     149:	74 37                	je     182 <_init-0xe7e>
     14b:	5f                   	pop    rdi
     14c:	5f                   	pop    rdi
     14d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     150:	31 31                	xor    DWORD PTR [rcx],esi
     152:	31 32                	xor    DWORD PTR [rdx],esi
     154:	62 61 73 69 63       	(bad)
     159:	5f                   	pop    rdi
     15a:	73 74                	jae    1d0 <_init-0xe30>
     15c:	72 69                	jb     1c7 <_init-0xe39>
     15e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     15f:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     164:	31 31                	xor    DWORD PTR [rcx],esi
     166:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     169:	72 5f                	jb     1ca <_init-0xe36>
     16b:	74 72                	je     1df <_init-0xe21>
     16d:	61                   	(bad)
     16e:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     175:	61 
     176:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     17a:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
     17d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     17e:	74 61                	je     1e1 <_init-0xe1f>
     180:	69 6e 73 45 63 00 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f006345
     187:	66 69 6c 65 6e 6f 00 	imul   bp,WORD PTR [rbp+riz*2+0x6e],0x6f
     18e:	5f                   	pop    rdi
     18f:	5f                   	pop    rdi
     190:	70 61                	jo     1f3 <_init-0xe0d>
     192:	69 72 5f 62 61 73 65 	imul   esi,DWORD PTR [rdx+0x5f],0x65736162
     199:	3c 73                	cmp    al,0x73
     19b:	68 6f 72 74 20       	push   0x2074726f
     1a0:	75 6e                	jne    210 <_init-0xdf0>
     1a2:	73 69                	jae    20d <_init-0xdf3>
     1a4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     1a6:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
     1ab:	74 2c                	je     1d9 <_init-0xe27>
     1ad:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
     1b0:	61                   	(bad)
     1b1:	72 20                	jb     1d3 <_init-0xe2d>
     1b3:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     1b6:	73 74                	jae    22c <_init-0xdd4>
     1b8:	2a 3e                	sub    bh,BYTE PTR [rsi]
     1ba:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     1bd:	4e 53                	rex.WRX push rbx
     1bf:	74 37                	je     1f8 <_init-0xe08>
     1c1:	5f                   	pop    rdi
     1c2:	5f                   	pop    rdi
     1c3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     1c6:	31 31                	xor    DWORD PTR [rcx],esi
     1c8:	31 32                	xor    DWORD PTR [rdx],esi
     1ca:	62 61 73 69 63       	(bad)
     1cf:	5f                   	pop    rdi
     1d0:	73 74                	jae    246 <_init-0xdba>
     1d2:	72 69                	jb     23d <_init-0xdc3>
     1d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     1d5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     1da:	31 31                	xor    DWORD PTR [rcx],esi
     1dc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     1df:	72 5f                	jb     240 <_init-0xdc0>
     1e1:	74 72                	je     255 <_init-0xdab>
     1e3:	61                   	(bad)
     1e4:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     1eb:	61 
     1ec:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     1f0:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     1f3:	5f                   	pop    rdi
     1f4:	65 72 61             	gs jb  258 <_init-0xda8>
     1f7:	73 65                	jae    25e <_init-0xda2>
     1f9:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     1fb:	6d                   	ins    DWORD PTR es:[rdi],dx
     1fc:	00 74 6f 5f          	add    BYTE PTR [rdi+rbp*2+0x5f],dh
     200:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     203:	72 5f                	jb     264 <_init-0xd9c>
     205:	74 79                	je     280 <_init-0xd80>
     207:	70 65                	jo     26e <_init-0xd92>
     209:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     20c:	53                   	push   rbx
     20d:	74 38                	je     247 <_init-0xdb9>
     20f:	74 6f                	je     280 <_init-0xd80>
     211:	5f                   	pop    rdi
     212:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     215:	72 73                	jb     28a <_init-0xd76>
     217:	50                   	push   rax
     218:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
     21b:	79 69                	jns    286 <_init-0xd7a>
     21d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     220:	4e                   	rex.WRX
     221:	4b 53                	rex.WXB push r11
     223:	74 31                	je     256 <_init-0xdaa>
     225:	36 72 65             	ss jb  28d <_init-0xd73>
     228:	76 65                	jbe    28f <_init-0xd71>
     22a:	72 73                	jb     29f <_init-0xd61>
     22c:	65 5f                	gs pop rdi
     22e:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     235:	72 
     236:	49                   	rex.WB
     237:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     23b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     23d:	75 5f                	jne    29e <_init-0xd62>
     23f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     242:	31 37                	xor    DWORD PTR [rdi],esi
     244:	5f                   	pop    rdi
     245:	5f                   	pop    rdi
     246:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     247:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     248:	72 6d                	jb     2b7 <_init-0xd49>
     24a:	61                   	(bad)
     24b:	6c                   	ins    BYTE PTR es:[rdi],dx
     24c:	5f                   	pop    rdi
     24d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     254:	72 
     255:	49 50                	rex.WB push r8
     257:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     25a:	34 73                	xor    al,0x73
     25c:	70 61                	jo     2bf <_init-0xd41>
     25e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     25f:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     264:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     267:	36 37                	ss (bad)
     269:	34 34                	xor    al,0x34
     26b:	30 37                	xor    BYTE PTR [rdi],dh
     26d:	33 37                	xor    esi,DWORD PTR [rdi]
     26f:	30 39                	xor    BYTE PTR [rcx],bh
     271:	35 35 31 36 31       	xor    eax,0x31363135
     276:	35 45 45 45 45       	xor    eax,0x45454545
     27b:	45 70 6c             	rex.RB jo 2ea <_init-0xd16>
     27e:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
     280:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     283:	4e                   	rex.WRX
     284:	4b 53                	rex.WXB push r11
     286:	74 31                	je     2b9 <_init-0xd47>
     288:	37                   	(bad)
     289:	62 61 73 69 63       	(bad)
     28e:	5f                   	pop    rdi
     28f:	73 74                	jae    305 <_init-0xcfb>
     291:	72 69                	jb     2fc <_init-0xd04>
     293:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     294:	67 5f                	addr32 pop rdi
     296:	76 69                	jbe    301 <_init-0xcff>
     298:	65 77 49             	gs ja  2e4 <_init-0xd1c>
     29b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     29e:	31 31                	xor    DWORD PTR [rcx],esi
     2a0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     2a3:	72 5f                	jb     304 <_init-0xcfc>
     2a5:	74 72                	je     319 <_init-0xce7>
     2a7:	61                   	(bad)
     2a8:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
     2af:	34 
     2b0:	66 69 6e 64 45 53    	imul   bp,WORD PTR [rsi+0x64],0x5345
     2b6:	32 5f 6d             	xor    bl,BYTE PTR [rdi+0x6d]
     2b9:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
     2bd:	73 65                	jae    324 <_init-0xcdc>
     2bf:	63 00                	movsxd eax,DWORD PTR [rax]
     2c1:	5f                   	pop    rdi
     2c2:	4d 5f                	rex.WRB pop r15
     2c4:	67 65 74 00          	addr32 gs je 2c8 <_init-0xd38>
     2c8:	66 77 69             	data16 ja 334 <_init-0xccc>
     2cb:	64 65 00 64 65 61    	fs add BYTE PTR gs:[rbp+riz*2+0x61],ah
     2d1:	6c                   	ins    BYTE PTR es:[rdi],dx
     2d2:	6c                   	ins    BYTE PTR es:[rdi],dx
     2d3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     2d4:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
     2d7:	65 00 69 6e          	add    BYTE PTR gs:[rcx+0x6e],ch
     2db:	74 5f                	je     33c <_init-0xcc4>
     2dd:	70 5f                	jo     33e <_init-0xcc2>
     2df:	73 65                	jae    346 <_init-0xcba>
     2e1:	70 5f                	jo     342 <_init-0xcbe>
     2e3:	62 79 5f 73 70       	(bad)
     2e8:	61                   	(bad)
     2e9:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
     2ec:	5f                   	pop    rdi
     2ed:	5f                   	pop    rdi
     2ee:	75 69                	jne    359 <_init-0xca7>
     2f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     2f1:	74 31                	je     324 <_init-0xcdc>
     2f3:	36 5f                	ss pop rdi
     2f5:	74 00                	je     2f7 <_init-0xd09>
     2f7:	5f                   	pop    rdi
     2f8:	5a                   	pop    rdx
     2f9:	4e                   	rex.WRX
     2fa:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
     2fe:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     300:	75 5f                	jne    361 <_init-0xc9f>
     302:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     305:	31 37                	xor    DWORD PTR [rdi],esi
     307:	5f                   	pop    rdi
     308:	5f                   	pop    rdi
     309:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     30a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     30b:	72 6d                	jb     37a <_init-0xc86>
     30d:	61                   	(bad)
     30e:	6c                   	ins    BYTE PTR es:[rdi],dx
     30f:	5f                   	pop    rdi
     310:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     317:	72 
     318:	49 50                	rex.WB push r8
     31a:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     31d:	34 73                	xor    al,0x73
     31f:	70 61                	jo     382 <_init-0xc7e>
     321:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     322:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     327:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     32a:	36 37                	ss (bad)
     32c:	34 34                	xor    al,0x34
     32e:	30 37                	xor    BYTE PTR [rdi],dh
     330:	33 37                	xor    esi,DWORD PTR [rdi]
     332:	30 39                	xor    BYTE PTR [rcx],bh
     334:	35 35 31 36 31       	xor    eax,0x31363135
     339:	35 45 45 45 6d       	xor    eax,0x6d454545
     33e:	69 45 6c 00 5f 5a 4e 	imul   eax,DWORD PTR [rbp+0x6c],0x4e5a5f00
     345:	4b 53                	rex.WXB push r11
     347:	74 31                	je     37a <_init-0xc86>
     349:	37                   	(bad)
     34a:	62 61 73 69 63       	(bad)
     34f:	5f                   	pop    rdi
     350:	73 74                	jae    3c6 <_init-0xc3a>
     352:	72 69                	jb     3bd <_init-0xc43>
     354:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     355:	67 5f                	addr32 pop rdi
     357:	76 69                	jbe    3c2 <_init-0xc3e>
     359:	65 77 49             	gs ja  3a5 <_init-0xc5b>
     35c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     35f:	31 31                	xor    DWORD PTR [rcx],esi
     361:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     364:	72 5f                	jb     3c5 <_init-0xc3b>
     366:	74 72                	je     3da <_init-0xc26>
     368:	61                   	(bad)
     369:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x37454563
     370:	37 
     371:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
     374:	70 61                	jo     3d7 <_init-0xc29>
     376:	72 65                	jb     3dd <_init-0xc23>
     378:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     37a:	6d                   	ins    DWORD PTR es:[rdi],dx
     37b:	53                   	push   rbx
     37c:	32 5f 6d             	xor    bl,BYTE PTR [rdi+0x6d]
     37f:	6d                   	ins    DWORD PTR es:[rdi],dx
     380:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     383:	4e 53                	rex.WRX push rbx
     385:	74 37                	je     3be <_init-0xc42>
     387:	5f                   	pop    rdi
     388:	5f                   	pop    rdi
     389:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     38c:	31 31                	xor    DWORD PTR [rcx],esi
     38e:	31 32                	xor    DWORD PTR [rdx],esi
     390:	62 61 73 69 63       	(bad)
     395:	5f                   	pop    rdi
     396:	73 74                	jae    40c <_init-0xbf4>
     398:	72 69                	jb     403 <_init-0xbfd>
     39a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     39b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     3a0:	31 31                	xor    DWORD PTR [rcx],esi
     3a2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     3a5:	72 5f                	jb     406 <_init-0xbfa>
     3a7:	74 72                	je     41b <_init-0xbe5>
     3a9:	61                   	(bad)
     3aa:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     3b1:	61 
     3b2:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     3b6:	43 34 45             	rex.XB xor al,0x45
     3b9:	4e 53                	rex.WRX push rbx
     3bb:	34 5f                	xor    al,0x5f
     3bd:	31 32                	xor    DWORD PTR [rdx],esi
     3bf:	5f                   	pop    rdi
     3c0:	5f                   	pop    rdi
     3c1:	73 76                	jae    439 <_init-0xbc7>
     3c3:	5f                   	pop    rdi
     3c4:	77 72                	ja     438 <_init-0xbc8>
     3c6:	61                   	(bad)
     3c7:	70 70                	jo     439 <_init-0xbc7>
     3c9:	65 72 45             	gs jb  411 <_init-0xbef>
     3cc:	52                   	push   rdx
     3cd:	4b 53                	rex.WXB push r11
     3cf:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     3d2:	5f                   	pop    rdi
     3d3:	5f                   	pop    rdi
     3d4:	75 69                	jne    43f <_init-0xbc1>
     3d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     3d7:	74 38                	je     411 <_init-0xbef>
     3d9:	5f                   	pop    rdi
     3da:	74 00                	je     3dc <_init-0xc24>
     3dc:	5f                   	pop    rdi
     3dd:	5a                   	pop    rdx
     3de:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     3e2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     3e4:	75 5f                	jne    445 <_init-0xbbb>
     3e6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     3e9:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
     3ec:	5f                   	pop    rdi
     3ed:	61                   	(bad)
     3ee:	6c                   	ins    BYTE PTR es:[rdi],dx
     3ef:	6c                   	ins    BYTE PTR es:[rdi],dx
     3f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     3f1:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
     3f4:	72 61                	jb     457 <_init-0xba9>
     3f6:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
     3fd:	63 
     3fe:	45 63 45 31          	movsxd r8d,DWORD PTR [r13+0x31]
     402:	35 5f 53 5f 6e       	xor    eax,0x6e5f535f
     407:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     408:	74 68                	je     472 <_init-0xb8e>
     40a:	72 6f                	jb     47b <_init-0xb85>
     40c:	77 5f                	ja     46d <_init-0xb93>
     40e:	6d                   	ins    DWORD PTR es:[rdi],dx
     40f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     410:	76 65                	jbe    477 <_init-0xb89>
     412:	45 76 00             	rex.RB jbe 415 <_init-0xbeb>
     415:	37                   	(bad)
     416:	6c                   	ins    BYTE PTR es:[rdi],dx
     417:	6c                   	ins    BYTE PTR es:[rdi],dx
     418:	64 69 76 5f 74 00 5f 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x5a5f0074
     41f:	5a 
     420:	4e 53                	rex.WRX push rbx
     422:	74 34                	je     458 <_init-0xba8>
     424:	70 61                	jo     487 <_init-0xb79>
     426:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
     42d:	45                   	rex.RB
     42e:	43 34 45             	rex.XB xor al,0x45
     431:	76 51                	jbe    484 <_init-0xb7c>
     433:	61                   	(bad)
     434:	61                   	(bad)
     435:	32 36                	xor    dh,BYTE PTR [rsi]
     437:	69 73 5f 64 65 66 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61666564
     43e:	75 6c                	jne    4ac <_init-0xb54>
     440:	74 5f                	je     4a1 <_init-0xb5f>
     442:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     445:	73 74                	jae    4bb <_init-0xb45>
     447:	72 75                	jb     4be <_init-0xb42>
     449:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
     44d:	6c                   	ins    BYTE PTR es:[rdi],dx
     44e:	65 5f                	gs pop rdi
     450:	76 49                	jbe    49b <_init-0xb65>
     452:	54                   	push   rsp
     453:	5f                   	pop    rdi
     454:	45 32 36             	xor    r14b,BYTE PTR [r14]
     457:	69 73 5f 64 65 66 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61666564
     45e:	75 6c                	jne    4cc <_init-0xb34>
     460:	74 5f                	je     4c1 <_init-0xb3f>
     462:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     465:	73 74                	jae    4db <_init-0xb25>
     467:	72 75                	jb     4de <_init-0xb22>
     469:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
     46d:	6c                   	ins    BYTE PTR es:[rdi],dx
     46e:	65 5f                	gs pop rdi
     470:	76 49                	jbe    4bb <_init-0xb45>
     472:	54                   	push   rsp
     473:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
     476:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     479:	76 65                	jbe    4e0 <_init-0xb20>
     47b:	72 73                	jb     4f0 <_init-0xb10>
     47d:	65 5f                	gs pop rdi
     47f:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     486:	72 
     487:	3c 5f                	cmp    al,0x5f
     489:	5f                   	pop    rdi
     48a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     48c:	75 5f                	jne    4ed <_init-0xb13>
     48e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     491:	3a 3a                	cmp    bh,BYTE PTR [rdx]
     493:	5f                   	pop    rdi
     494:	5f                   	pop    rdi
     495:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     496:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     497:	72 6d                	jb     506 <_init-0xafa>
     499:	61                   	(bad)
     49a:	6c                   	ins    BYTE PTR es:[rdi],dx
     49b:	5f                   	pop    rdi
     49c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     4a3:	72 
     4a4:	3c 63                	cmp    al,0x63
     4a6:	68 61 72 2a 2c       	push   0x2c2a7261
     4ab:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
     4ae:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
     4b1:	5f                   	pop    rdi
     4b2:	5f                   	pop    rdi
     4b3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     4b6:	31 31                	xor    DWORD PTR [rcx],esi
     4b8:	3a 3a                	cmp    bh,BYTE PTR [rdx]
     4ba:	62 61 73 69 63       	(bad)
     4bf:	5f                   	pop    rdi
     4c0:	73 74                	jae    536 <_init-0xaca>
     4c2:	72 69                	jb     52d <_init-0xad3>
     4c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     4c5:	67 3c 63             	addr32 cmp al,0x63
     4c8:	68 61 72 2c 20       	push   0x202c7261
     4cd:	73 74                	jae    543 <_init-0xabd>
     4cf:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
     4d2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     4d5:	72 5f                	jb     536 <_init-0xaca>
     4d7:	74 72                	je     54b <_init-0xab5>
     4d9:	61                   	(bad)
     4da:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
     4e1:	72 
     4e2:	3e 2c 20             	ds sub al,0x20
     4e5:	73 74                	jae    55b <_init-0xaa5>
     4e7:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
     4ea:	61                   	(bad)
     4eb:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ec:	6c                   	ins    BYTE PTR es:[rdi],dx
     4ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4ee:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
     4f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     4f2:	72 3c                	jb     530 <_init-0xad0>
     4f4:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     4f7:	72 3e                	jb     537 <_init-0xac9>
     4f9:	20 3e                	and    BYTE PTR [rsi],bh
     4fb:	20 3e                	and    BYTE PTR [rsi],bh
     4fd:	20 3e                	and    BYTE PTR [rsi],bh
     4ff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     502:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     503:	70 73                	jo     578 <_init-0xa88>
     505:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     508:	4e                   	rex.WRX
     509:	4b 53                	rex.WXB push r11
     50b:	74 31                	je     53e <_init-0xac2>
     50d:	37                   	(bad)
     50e:	62 61 73 69 63       	(bad)
     513:	5f                   	pop    rdi
     514:	73 74                	jae    58a <_init-0xa76>
     516:	72 69                	jb     581 <_init-0xa7f>
     518:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     519:	67 5f                	addr32 pop rdi
     51b:	76 69                	jbe    586 <_init-0xa7a>
     51d:	65 77 49             	gs ja  569 <_init-0xa97>
     520:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     523:	31 31                	xor    DWORD PTR [rcx],esi
     525:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     528:	72 5f                	jb     589 <_init-0xa77>
     52a:	74 72                	je     59e <_init-0xa62>
     52c:	61                   	(bad)
     52d:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
     534:	31 
     535:	37                   	(bad)
     536:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
     53c:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
     543:	74 5f                	je     5a4 <_init-0xa5c>
     545:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     546:	66 45 63 6d 00       	movsxd r13w,DWORD PTR [r13+0x0]
     54b:	5f                   	pop    rdi
     54c:	5a                   	pop    rdx
     54d:	4e                   	rex.WRX
     54e:	4b 53                	rex.WXB push r11
     550:	74 37                	je     589 <_init-0xa77>
     552:	5f                   	pop    rdi
     553:	5f                   	pop    rdi
     554:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     557:	31 31                	xor    DWORD PTR [rcx],esi
     559:	31 32                	xor    DWORD PTR [rdx],esi
     55b:	62 61 73 69 63       	(bad)
     560:	5f                   	pop    rdi
     561:	73 74                	jae    5d7 <_init-0xa29>
     563:	72 69                	jb     5ce <_init-0xa32>
     565:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     566:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     56b:	31 31                	xor    DWORD PTR [rcx],esi
     56d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     570:	72 5f                	jb     5d1 <_init-0xa2f>
     572:	74 72                	je     5e6 <_init-0xa1a>
     574:	61                   	(bad)
     575:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     57c:	61 
     57d:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     581:	35 62 65 67 69       	xor    eax,0x69676562
     586:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     587:	45 76 00             	rex.RB jbe 58a <_init-0xa76>
     58a:	5f                   	pop    rdi
     58b:	5f                   	pop    rdi
     58c:	65 78 74             	gs js  603 <_init-0x9fd>
     58f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     591:	74 5f                	je     5f2 <_init-0xa0e>
     593:	73 74                	jae    609 <_init-0x9f7>
     595:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     596:	72 61                	jb     5f9 <_init-0xa07>
     598:	67 65 3c 31          	addr32 gs cmp al,0x31
     59c:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     59f:	36 37                	ss (bad)
     5a1:	34 34                	xor    al,0x34
     5a3:	30 37                	xor    BYTE PTR [rdi],dh
     5a5:	33 37                	xor    esi,DWORD PTR [rdi]
     5a7:	30 39                	xor    BYTE PTR [rcx],bh
     5a9:	35 35 31 36 31       	xor    eax,0x31363135
     5ae:	35 3e 00 5f 5a       	xor    eax,0x5a5f003e
     5b3:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     5b7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     5b9:	75 5f                	jne    61a <_init-0x9e6>
     5bb:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     5be:	31 37                	xor    DWORD PTR [rdi],esi
     5c0:	5f                   	pop    rdi
     5c1:	5f                   	pop    rdi
     5c2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5c3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     5c4:	72 6d                	jb     633 <_init-0x9cd>
     5c6:	61                   	(bad)
     5c7:	6c                   	ins    BYTE PTR es:[rdi],dx
     5c8:	5f                   	pop    rdi
     5c9:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     5d0:	72 
     5d1:	49 50                	rex.WB push r8
     5d3:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
     5d6:	74 37                	je     60f <_init-0x9f1>
     5d8:	5f                   	pop    rdi
     5d9:	5f                   	pop    rdi
     5da:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     5dd:	31 31                	xor    DWORD PTR [rcx],esi
     5df:	31 32                	xor    DWORD PTR [rdx],esi
     5e1:	62 61 73 69 63       	(bad)
     5e6:	5f                   	pop    rdi
     5e7:	73 74                	jae    65d <_init-0x9a3>
     5e9:	72 69                	jb     654 <_init-0x9ac>
     5eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     5ec:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     5f1:	31 31                	xor    DWORD PTR [rcx],esi
     5f3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     5f6:	72 5f                	jb     657 <_init-0x9a9>
     5f8:	74 72                	je     66c <_init-0x994>
     5fa:	61                   	(bad)
     5fb:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     602:	61 
     603:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     607:	45                   	rex.RB
     608:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     60a:	6d                   	ins    DWORD PTR es:[rdi],dx
     60b:	45 69 00 5f 73 68 6f 	imul   r8d,DWORD PTR [r8],0x6f68735f
     612:	72 74                	jb     688 <_init-0x978>
     614:	62 75 66 00 5f 5f 67 	vmaxsh xmm11,xmm19,WORD PTR [rdi+0xce]
     61b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     61c:	75 5f                	jne    67d <_init-0x983>
     61e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     621:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     624:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     628:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     62a:	75 5f                	jne    68b <_init-0x975>
     62c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     62f:	31 37                	xor    DWORD PTR [rdi],esi
     631:	5f                   	pop    rdi
     632:	5f                   	pop    rdi
     633:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     634:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     635:	72 6d                	jb     6a4 <_init-0x95c>
     637:	61                   	(bad)
     638:	6c                   	ins    BYTE PTR es:[rdi],dx
     639:	5f                   	pop    rdi
     63a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     641:	72 
     642:	49 50                	rex.WB push r8
     644:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
     648:	74 37                	je     681 <_init-0x97f>
     64a:	5f                   	pop    rdi
     64b:	5f                   	pop    rdi
     64c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     64f:	31 31                	xor    DWORD PTR [rcx],esi
     651:	31 32                	xor    DWORD PTR [rdx],esi
     653:	62 61 73 69 63       	(bad)
     658:	5f                   	pop    rdi
     659:	73 74                	jae    6cf <_init-0x931>
     65b:	72 69                	jb     6c6 <_init-0x93a>
     65d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     65e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     663:	31 31                	xor    DWORD PTR [rcx],esi
     665:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     668:	72 5f                	jb     6c9 <_init-0x937>
     66a:	74 72                	je     6de <_init-0x922>
     66c:	61                   	(bad)
     66d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     674:	61 
     675:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     679:	45                   	rex.RB
     67a:	45 70 70             	rex.RB jo 6ed <_init-0x913>
     67d:	45 69 00 69 74 65 72 	imul   r8d,DWORD PTR [r8],0x72657469
     684:	61                   	(bad)
     685:	74 6f                	je     6f6 <_init-0x90a>
     687:	72 5f                	jb     6e8 <_init-0x918>
     689:	74 72                	je     6fd <_init-0x903>
     68b:	61                   	(bad)
     68c:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
     693:	72 
     694:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
     697:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     698:	73 74                	jae    70e <_init-0x8f2>
     69a:	2a 3e                	sub    bh,BYTE PTR [rsi]
     69c:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
     69f:	5f                   	pop    rdi
     6a0:	75 6e                	jne    710 <_init-0x8f0>
     6a2:	75 73                	jne    717 <_init-0x8e9>
     6a4:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
     6a9:	4e 53                	rex.WRX push rbx
     6ab:	74 38                	je     6e5 <_init-0x91b>
     6ad:	5f                   	pop    rdi
     6ae:	5f                   	pop    rdi
     6af:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     6b1:	72 6d                	jb     720 <_init-0x8e0>
     6b3:	61                   	(bad)
     6b4:	74 31                	je     6e7 <_init-0x919>
     6b6:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
     6b9:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
     6c0:	72 49                	jb     70b <_init-0x8f5>
     6c2:	63 45 43             	movsxd eax,DWORD PTR [rbp+0x43]
     6c5:	34 45                	xor    al,0x45
     6c7:	52                   	push   rdx
     6c8:	4e 53                	rex.WRX push rbx
     6ca:	5f                   	pop    rdi
     6cb:	35 5f 53 69 6e       	xor    eax,0x6e69535f
     6d0:	6b 49 63 45          	imul   ecx,DWORD PTR [rcx+0x63],0x45
     6d4:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
     6d8:	4e 53                	rex.WRX push rbx
     6da:	74 37                	je     713 <_init-0x8ed>
     6dc:	5f                   	pop    rdi
     6dd:	5f                   	pop    rdi
     6de:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     6e1:	31 31                	xor    DWORD PTR [rcx],esi
     6e3:	31 32                	xor    DWORD PTR [rdx],esi
     6e5:	62 61 73 69 63       	(bad)
     6ea:	5f                   	pop    rdi
     6eb:	73 74                	jae    761 <_init-0x89f>
     6ed:	72 69                	jb     758 <_init-0x8a8>
     6ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     6f0:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     6f5:	31 31                	xor    DWORD PTR [rcx],esi
     6f7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     6fa:	72 5f                	jb     75b <_init-0x8a5>
     6fc:	74 72                	je     770 <_init-0x890>
     6fe:	61                   	(bad)
     6ff:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     706:	61 
     707:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     70b:	43 34 45             	rex.XB xor al,0x45
     70e:	52                   	push   rdx
     70f:	4b 53                	rex.WXB push r11
     711:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     714:	5f                   	pop    rdi
     715:	5a                   	pop    rdx
     716:	4e 53                	rex.WRX push rbx
     718:	74 37                	je     751 <_init-0x8af>
     71a:	5f                   	pop    rdi
     71b:	5f                   	pop    rdi
     71c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     71f:	31 31                	xor    DWORD PTR [rcx],esi
     721:	31 32                	xor    DWORD PTR [rdx],esi
     723:	62 61 73 69 63       	(bad)
     728:	5f                   	pop    rdi
     729:	73 74                	jae    79f <_init-0x861>
     72b:	72 69                	jb     796 <_init-0x86a>
     72d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     72e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     733:	31 31                	xor    DWORD PTR [rcx],esi
     735:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     738:	72 5f                	jb     799 <_init-0x867>
     73a:	74 72                	je     7ae <_init-0x852>
     73c:	61                   	(bad)
     73d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     744:	61 
     745:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     749:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
     750:	45 
     751:	6d                   	ins    DWORD PTR es:[rdi],dx
     752:	52                   	push   rdx
     753:	4b 53                	rex.WXB push r11
     755:	34 5f                	xor    al,0x5f
     757:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     75a:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     761:	76 66                	jbe    7c9 <_init-0x837>
     763:	77 73                	ja     7d8 <_init-0x828>
     765:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
     768:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
     76c:	4e                   	rex.WRX
     76d:	4b 53                	rex.WXB push r11
     76f:	74 31                	je     7a2 <_init-0x85e>
     771:	37                   	(bad)
     772:	62 61 73 69 63       	(bad)
     777:	5f                   	pop    rdi
     778:	73 74                	jae    7ee <_init-0x812>
     77a:	72 69                	jb     7e5 <_init-0x81b>
     77c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     77d:	67 5f                	addr32 pop rdi
     77f:	76 69                	jbe    7ea <_init-0x816>
     781:	65 77 49             	gs ja  7cd <_init-0x833>
     784:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     787:	31 31                	xor    DWORD PTR [rcx],esi
     789:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     78c:	72 5f                	jb     7ed <_init-0x813>
     78e:	74 72                	je     802 <_init-0x7fe>
     790:	61                   	(bad)
     791:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
     798:	34 
     799:	66 69 6e 64 45 50    	imul   bp,WORD PTR [rsi+0x64],0x5045
     79f:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
     7a3:	5f                   	pop    rdi
     7a4:	5a                   	pop    rdx
     7a5:	4e                   	rex.WRX
     7a6:	4b 53                	rex.WXB push r11
     7a8:	74 31                	je     7db <_init-0x825>
     7aa:	37                   	(bad)
     7ab:	62 61 73 69 63       	(bad)
     7b0:	5f                   	pop    rdi
     7b1:	73 74                	jae    827 <_init-0x7d9>
     7b3:	72 69                	jb     81e <_init-0x7e2>
     7b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     7b6:	67 5f                	addr32 pop rdi
     7b8:	76 69                	jbe    823 <_init-0x7dd>
     7ba:	65 77 49             	gs ja  806 <_init-0x7fa>
     7bd:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     7c0:	31 31                	xor    DWORD PTR [rcx],esi
     7c2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     7c5:	72 5f                	jb     826 <_init-0x7da>
     7c7:	74 72                	je     83b <_init-0x7c5>
     7c9:	61                   	(bad)
     7ca:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x38454563
     7d1:	38 
     7d2:	6d                   	ins    DWORD PTR es:[rdi],dx
     7d3:	61                   	(bad)
     7d4:	78 5f                	js     835 <_init-0x7cb>
     7d6:	73 69                	jae    841 <_init-0x7bf>
     7d8:	7a 65                	jp     83f <_init-0x7c1>
     7da:	45 76 00             	rex.RB jbe 7dd <_init-0x823>
     7dd:	77 63                	ja     842 <_init-0x7be>
     7df:	73 6e                	jae    84f <_init-0x7b1>
     7e1:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
     7e4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     7e7:	53                   	push   rbx
     7e8:	74 38                	je     822 <_init-0x7de>
     7ea:	74 6f                	je     85b <_init-0x7a5>
     7ec:	5f                   	pop    rdi
     7ed:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     7f0:	72 73                	jb     865 <_init-0x79b>
     7f2:	50                   	push   rax
     7f3:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
     7f6:	65 53                	gs push rbx
     7f8:	74 31                	je     82b <_init-0x7d5>
     7fa:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
     7fd:	61                   	(bad)
     7fe:	72 73                	jb     873 <_init-0x78d>
     800:	5f                   	pop    rdi
     801:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     803:	72 6d                	jb     872 <_init-0x78e>
     805:	61                   	(bad)
     806:	74 00                	je     808 <_init-0x7f8>
     808:	5f                   	pop    rdi
     809:	5a                   	pop    rdx
     80a:	4e                   	rex.WRX
     80b:	4b 53                	rex.WXB push r11
     80d:	74 31                	je     840 <_init-0x7c0>
     80f:	37                   	(bad)
     810:	62 61 73 69 63       	(bad)
     815:	5f                   	pop    rdi
     816:	73 74                	jae    88c <_init-0x774>
     818:	72 69                	jb     883 <_init-0x77d>
     81a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     81b:	67 5f                	addr32 pop rdi
     81d:	76 69                	jbe    888 <_init-0x778>
     81f:	65 77 49             	gs ja  86b <_init-0x795>
     822:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     825:	31 31                	xor    DWORD PTR [rcx],esi
     827:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     82a:	72 5f                	jb     88b <_init-0x775>
     82c:	74 72                	je     8a0 <_init-0x760>
     82e:	61                   	(bad)
     82f:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x39454563
     836:	39 
     837:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     839:	64 73 5f             	fs jae 89b <_init-0x765>
     83c:	77 69                	ja     8a7 <_init-0x759>
     83e:	74 68                	je     8a8 <_init-0x758>
     840:	45 63 00             	movsxd r8d,DWORD PTR [r8]
     843:	5f                   	pop    rdi
     844:	5a                   	pop    rdx
     845:	4e                   	rex.WRX
     846:	4b 53                	rex.WXB push r11
     848:	74 37                	je     881 <_init-0x77f>
     84a:	5f                   	pop    rdi
     84b:	5f                   	pop    rdi
     84c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     84f:	31 31                	xor    DWORD PTR [rcx],esi
     851:	31 32                	xor    DWORD PTR [rdx],esi
     853:	62 61 73 69 63       	(bad)
     858:	5f                   	pop    rdi
     859:	73 74                	jae    8cf <_init-0x731>
     85b:	72 69                	jb     8c6 <_init-0x73a>
     85d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     85e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     863:	31 31                	xor    DWORD PTR [rcx],esi
     865:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     868:	72 5f                	jb     8c9 <_init-0x737>
     86a:	74 72                	je     8de <_init-0x722>
     86c:	61                   	(bad)
     86d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     874:	61 
     875:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     879:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
     87c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     87d:	74 61                	je     8e0 <_init-0x720>
     87f:	69 6e 73 45 53 74 31 	imul   ebp,DWORD PTR [rsi+0x73],0x31745345
     886:	37                   	(bad)
     887:	62 61 73 69 63       	(bad)
     88c:	5f                   	pop    rdi
     88d:	73 74                	jae    903 <_init-0x6fd>
     88f:	72 69                	jb     8fa <_init-0x706>
     891:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     892:	67 5f                	addr32 pop rdi
     894:	76 69                	jbe    8ff <_init-0x701>
     896:	65 77 49             	gs ja  8e2 <_init-0x71e>
     899:	63 53 32             	movsxd edx,DWORD PTR [rbx+0x32]
     89c:	5f                   	pop    rdi
     89d:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
     8a1:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
     8a8:	77 63                	ja     90d <_init-0x6f3>
     8aa:	73 74                	jae    920 <_init-0x6e0>
     8ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8ad:	75 6c                	jne    91b <_init-0x6e5>
     8af:	6c                   	ins    BYTE PTR es:[rdi],dx
     8b0:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
     8b3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     8b4:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
     8b8:	61                   	(bad)
     8b9:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
     8bc:	73 73                	jae    931 <_init-0x6cf>
     8be:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     8c1:	4e 53                	rex.WRX push rbx
     8c3:	74 31                	je     8f6 <_init-0x70a>
     8c5:	37                   	(bad)
     8c6:	62 61 73 69 63       	(bad)
     8cb:	5f                   	pop    rdi
     8cc:	73 74                	jae    942 <_init-0x6be>
     8ce:	72 69                	jb     939 <_init-0x6c7>
     8d0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     8d1:	67 5f                	addr32 pop rdi
     8d3:	76 69                	jbe    93e <_init-0x6c2>
     8d5:	65 77 49             	gs ja  921 <_init-0x6df>
     8d8:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     8db:	31 31                	xor    DWORD PTR [rcx],esi
     8dd:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     8e0:	72 5f                	jb     941 <_init-0x6bf>
     8e2:	74 72                	je     956 <_init-0x6aa>
     8e4:	61                   	(bad)
     8e5:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x43454563
     8ec:	43 
     8ed:	34 45                	xor    al,0x45
     8ef:	44 6e                	rex.R outs dx,BYTE PTR ds:[rsi]
     8f1:	00 69 64             	add    BYTE PTR [rcx+0x64],ch
     8f4:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     8f6:	74 69                	je     961 <_init-0x69f>
     8f8:	66 69 65 72 5f 72    	imul   sp,WORD PTR [rbp+0x72],0x725f
     8fe:	65 6d                	gs ins DWORD PTR es:[rdi],dx
     900:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     901:	76 65                	jbe    968 <_init-0x698>
     903:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
     907:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     90b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     90d:	75 5f                	jne    96e <_init-0x692>
     90f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     912:	31 37                	xor    DWORD PTR [rdi],esi
     914:	5f                   	pop    rdi
     915:	5f                   	pop    rdi
     916:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     917:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     918:	72 6d                	jb     987 <_init-0x679>
     91a:	61                   	(bad)
     91b:	6c                   	ins    BYTE PTR es:[rdi],dx
     91c:	5f                   	pop    rdi
     91d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     924:	72 
     925:	49 50                	rex.WB push r8
     927:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
     92a:	74 37                	je     963 <_init-0x69d>
     92c:	5f                   	pop    rdi
     92d:	5f                   	pop    rdi
     92e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     931:	31 31                	xor    DWORD PTR [rcx],esi
     933:	31 32                	xor    DWORD PTR [rdx],esi
     935:	62 61 73 69 63       	(bad)
     93a:	5f                   	pop    rdi
     93b:	73 74                	jae    9b1 <_init-0x64f>
     93d:	72 69                	jb     9a8 <_init-0x658>
     93f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     940:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     945:	31 31                	xor    DWORD PTR [rcx],esi
     947:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     94a:	72 5f                	jb     9ab <_init-0x655>
     94c:	74 72                	je     9c0 <_init-0x640>
     94e:	61                   	(bad)
     94f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     956:	61 
     957:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     95b:	45                   	rex.RB
     95c:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     95e:	6d                   	ins    DWORD PTR es:[rdi],dx
     95f:	45 76 00             	rex.RB jbe 962 <_init-0x69e>
     962:	5f                   	pop    rdi
     963:	5a                   	pop    rdx
     964:	4e 53                	rex.WRX push rbx
     966:	74 34                	je     99c <_init-0x664>
     968:	73 70                	jae    9da <_init-0x626>
     96a:	61                   	(bad)
     96b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     96c:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     971:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     974:	36 37                	ss (bad)
     976:	34 34                	xor    al,0x34
     978:	30 37                	xor    BYTE PTR [rdi],dh
     97a:	33 37                	xor    esi,DWORD PTR [rdi]
     97c:	30 39                	xor    BYTE PTR [rcx],bh
     97e:	35 35 31 36 31       	xor    eax,0x31363135
     983:	35 45 45 43 34       	xor    eax,0x34434545
     988:	45 52                	rex.RB push r10
     98a:	4b 53                	rex.WXB push r11
     98c:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
     98f:	5f                   	pop    rdi
     990:	5a                   	pop    rdx
     991:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     995:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     997:	75 5f                	jne    9f8 <_init-0x608>
     999:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     99c:	31 37                	xor    DWORD PTR [rdi],esi
     99e:	5f                   	pop    rdi
     99f:	5f                   	pop    rdi
     9a0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9a1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     9a2:	72 6d                	jb     a11 <_init-0x5ef>
     9a4:	61                   	(bad)
     9a5:	6c                   	ins    BYTE PTR es:[rdi],dx
     9a6:	5f                   	pop    rdi
     9a7:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     9ae:	72 
     9af:	49 50                	rex.WB push r8
     9b1:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     9b4:	34 73                	xor    al,0x73
     9b6:	70 61                	jo     a19 <_init-0x5e7>
     9b8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9b9:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     9be:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     9c1:	36 37                	ss (bad)
     9c3:	34 34                	xor    al,0x34
     9c5:	30 37                	xor    BYTE PTR [rdi],dh
     9c7:	33 37                	xor    esi,DWORD PTR [rdi]
     9c9:	30 39                	xor    BYTE PTR [rcx],bh
     9cb:	35 35 31 36 31       	xor    eax,0x31363135
     9d0:	35 45 45 45 6d       	xor    eax,0x6d454545
     9d5:	6d                   	ins    DWORD PTR es:[rdi],dx
     9d6:	45 69 00 5f 5f 66 6f 	imul   r8d,DWORD PTR [r8],0x6f665f5f
     9dd:	72 6d                	jb     a4c <_init-0x5b4>
     9df:	61                   	(bad)
     9e0:	74 00                	je     9e2 <_init-0x61e>
     9e2:	5f                   	pop    rdi
     9e3:	5a                   	pop    rdx
     9e4:	4e 53                	rex.WRX push rbx
     9e6:	74 37                	je     a1f <_init-0x5e1>
     9e8:	5f                   	pop    rdi
     9e9:	5f                   	pop    rdi
     9ea:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     9ed:	31 31                	xor    DWORD PTR [rcx],esi
     9ef:	31 32                	xor    DWORD PTR [rdx],esi
     9f1:	62 61 73 69 63       	(bad)
     9f6:	5f                   	pop    rdi
     9f7:	73 74                	jae    a6d <_init-0x593>
     9f9:	72 69                	jb     a64 <_init-0x59c>
     9fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     9fc:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     a01:	31 31                	xor    DWORD PTR [rcx],esi
     a03:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     a06:	72 5f                	jb     a67 <_init-0x599>
     a08:	74 72                	je     a7c <_init-0x584>
     a0a:	61                   	(bad)
     a0b:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     a12:	61 
     a13:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     a17:	31 32                	xor    DWORD PTR [rdx],esi
     a19:	5f                   	pop    rdi
     a1a:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
     a1c:	6c                   	ins    BYTE PTR es:[rdi],dx
     a1d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     a1e:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
     a21:	69 64 65 72 43 34 45 	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x50453443
     a28:	50 
     a29:	63 52 4b             	movsxd edx,DWORD PTR [rdx+0x4b]
     a2c:	53                   	push   rbx
     a2d:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     a30:	5f                   	pop    rdi
     a31:	5a                   	pop    rdx
     a32:	4e 53                	rex.WRX push rbx
     a34:	74 37                	je     a6d <_init-0x593>
     a36:	5f                   	pop    rdi
     a37:	5f                   	pop    rdi
     a38:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     a3b:	31 31                	xor    DWORD PTR [rcx],esi
     a3d:	31 32                	xor    DWORD PTR [rdx],esi
     a3f:	62 61 73 69 63       	(bad)
     a44:	5f                   	pop    rdi
     a45:	73 74                	jae    abb <_init-0x545>
     a47:	72 69                	jb     ab2 <_init-0x54e>
     a49:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a4a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     a4f:	31 31                	xor    DWORD PTR [rcx],esi
     a51:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     a54:	72 5f                	jb     ab5 <_init-0x54b>
     a56:	74 72                	je     aca <_init-0x536>
     a58:	61                   	(bad)
     a59:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     a60:	61 
     a61:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     a65:	43 34 45             	rex.XB xor al,0x45
     a68:	52                   	push   rdx
     a69:	4b 53                	rex.WXB push r11
     a6b:	34 5f                	xor    al,0x5f
     a6d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     a70:	4e 53                	rex.WRX push rbx
     a72:	74 37                	je     aab <_init-0x555>
     a74:	5f                   	pop    rdi
     a75:	5f                   	pop    rdi
     a76:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     a79:	31 31                	xor    DWORD PTR [rcx],esi
     a7b:	31 32                	xor    DWORD PTR [rdx],esi
     a7d:	62 61 73 69 63       	(bad)
     a82:	5f                   	pop    rdi
     a83:	73 74                	jae    af9 <_init-0x507>
     a85:	72 69                	jb     af0 <_init-0x510>
     a87:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     a88:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     a8d:	31 31                	xor    DWORD PTR [rcx],esi
     a8f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     a92:	72 5f                	jb     af3 <_init-0x50d>
     a94:	74 72                	je     b08 <_init-0x4f8>
     a96:	61                   	(bad)
     a97:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     a9e:	61 
     a9f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     aa3:	61                   	(bad)
     aa4:	53                   	push   rbx
     aa5:	45 53                	rex.RB push r11
     aa7:	74 31                	je     ada <_init-0x526>
     aa9:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
     ab0:	6c 
     ab1:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
     ab8:	73 74                	jae    b2e <_init-0x4d2>
     aba:	49 63 45 00          	movsxd rax,DWORD PTR [r13+0x0]
     abe:	5f                   	pop    rdi
     abf:	5a                   	pop    rdx
     ac0:	4e 53                	rex.WRX push rbx
     ac2:	74 31                	je     af5 <_init-0x50b>
     ac4:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
     ac7:	61                   	(bad)
     ac8:	72 5f                	jb     b29 <_init-0x4d7>
     aca:	74 72                	je     b3e <_init-0x4c2>
     acc:	61                   	(bad)
     acd:	69 74 73 49 63 45 34 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x66344563
     ad4:	66 
     ad5:	69 6e 64 45 50 4b 63 	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
     adc:	6d                   	ins    DWORD PTR es:[rdi],dx
     add:	52                   	push   rdx
     ade:	53                   	push   rbx
     adf:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
     ae2:	5f                   	pop    rdi
     ae3:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
     ae5:	61                   	(bad)
     ae6:	67 73 00             	addr32 jae ae9 <_init-0x517>
     ae9:	5f                   	pop    rdi
     aea:	4d 5f                	rex.WRB pop r15
     aec:	6c                   	ins    BYTE PTR es:[rdi],dx
     aed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     aee:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
     af1:	5f                   	pop    rdi
     af2:	64 61                	fs (bad)
     af4:	74 61                	je     b57 <_init-0x4a9>
     af6:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
     af9:	74 5f                	je     b5a <_init-0x4a6>
     afb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
     afe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     aff:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
     b04:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
     b07:	67 5f                	addr32 pop rdi
     b09:	73 61                	jae    b6c <_init-0x494>
     b0b:	76 65                	jbe    b72 <_init-0x48e>
     b0d:	5f                   	pop    rdi
     b0e:	61                   	(bad)
     b0f:	72 65                	jb     b76 <_init-0x48a>
     b11:	61                   	(bad)
     b12:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     b15:	4e 53                	rex.WRX push rbx
     b17:	61                   	(bad)
     b18:	49 63 45 38          	movsxd rax,DWORD PTR [r13+0x38]
     b1c:	61                   	(bad)
     b1d:	6c                   	ins    BYTE PTR es:[rdi],dx
     b1e:	6c                   	ins    BYTE PTR es:[rdi],dx
     b1f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b20:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
     b23:	65 45 6d             	gs rex.RB ins DWORD PTR es:[rdi],dx
     b26:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
     b29:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     b2a:	66 66 5f             	data16 pop di
     b2d:	74 00                	je     b2f <_init-0x4d1>
     b2f:	5f                   	pop    rdi
     b30:	5a                   	pop    rdx
     b31:	4e 53                	rex.WRX push rbx
     b33:	74 37                	je     b6c <_init-0x494>
     b35:	5f                   	pop    rdi
     b36:	5f                   	pop    rdi
     b37:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     b3a:	31 31                	xor    DWORD PTR [rcx],esi
     b3c:	31 32                	xor    DWORD PTR [rdx],esi
     b3e:	62 61 73 69 63       	(bad)
     b43:	5f                   	pop    rdi
     b44:	73 74                	jae    bba <_init-0x446>
     b46:	72 69                	jb     bb1 <_init-0x44f>
     b48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b49:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     b4e:	31 31                	xor    DWORD PTR [rcx],esi
     b50:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     b53:	72 5f                	jb     bb4 <_init-0x44c>
     b55:	74 72                	je     bc9 <_init-0x437>
     b57:	61                   	(bad)
     b58:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     b5f:	61 
     b60:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     b64:	43 34 45             	rex.XB xor al,0x45
     b67:	50                   	push   rax
     b68:	4b 63 6d 52          	rex.WXB movsxd rbp,DWORD PTR [r13+0x52]
     b6c:	4b 53                	rex.WXB push r11
     b6e:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     b71:	5f                   	pop    rdi
     b72:	5f                   	pop    rdi
     b73:	62 66 6c 6f 61       	(bad)
     b78:	74 31                	je     bab <_init-0x455>
     b7a:	36 5f                	ss pop rdi
     b7c:	74 00                	je     b7e <_init-0x482>
     b7e:	5f                   	pop    rdi
     b7f:	5a                   	pop    rdx
     b80:	4e                   	rex.WRX
     b81:	4b 53                	rex.WXB push r11
     b83:	74 37                	je     bbc <_init-0x444>
     b85:	5f                   	pop    rdi
     b86:	5f                   	pop    rdi
     b87:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     b8a:	31 31                	xor    DWORD PTR [rcx],esi
     b8c:	31 32                	xor    DWORD PTR [rdx],esi
     b8e:	62 61 73 69 63       	(bad)
     b93:	5f                   	pop    rdi
     b94:	73 74                	jae    c0a <_init-0x3f6>
     b96:	72 69                	jb     c01 <_init-0x3ff>
     b98:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     b99:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     b9e:	31 31                	xor    DWORD PTR [rcx],esi
     ba0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     ba3:	72 5f                	jb     c04 <_init-0x3fc>
     ba5:	74 72                	je     c19 <_init-0x3e7>
     ba7:	61                   	(bad)
     ba8:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     baf:	61 
     bb0:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     bb4:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
     bb7:	5f                   	pop    rdi
     bb8:	6c                   	ins    BYTE PTR es:[rdi],dx
     bb9:	69 6d 69 74 45 6d 6d 	imul   ebp,DWORD PTR [rbp+0x69],0x6d6d4574
     bc0:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
     bc3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     bc4:	73 74                	jae    c3a <_init-0x3c6>
     bc6:	5f                   	pop    rdi
     bc7:	70 6f                	jo     c38 <_init-0x3c8>
     bc9:	69 6e 74 65 72 00 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e007265
     bd0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     bd1:	5f                   	pop    rdi
     bd2:	6c                   	ins    BYTE PTR es:[rdi],dx
     bd3:	69 6e 6b 00 66 6f 72 	imul   ebp,DWORD PTR [rsi+0x6b],0x726f6600
     bda:	6b 00 73             	imul   eax,DWORD PTR [rax],0x73
     bdd:	75 62                	jne    c41 <_init-0x3bf>
     bdf:	73 74                	jae    c55 <_init-0x3ab>
     be1:	72 00                	jb     be3 <_init-0x41d>
     be3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     be4:	65 74 77             	gs je  c5e <_init-0x3a2>
     be7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     be8:	72 6b                	jb     c55 <_init-0x3ab>
     bea:	5f                   	pop    rdi
     beb:	72 65                	jb     c52 <_init-0x3ae>
     bed:	73 65                	jae    c54 <_init-0x3ac>
     bef:	74 00                	je     bf1 <_init-0x40f>
     bf1:	5f                   	pop    rdi
     bf2:	4d 5f                	rex.WRB pop r15
     bf4:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
     bf7:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
     bfa:	6c                   	ins    BYTE PTR es:[rdi],dx
     bfb:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
     bfd:	67 74 68             	addr32 je c68 <_init-0x398>
     c00:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     c03:	4e 53                	rex.WRX push rbx
     c05:	74 37                	je     c3e <_init-0x3c2>
     c07:	5f                   	pop    rdi
     c08:	5f                   	pop    rdi
     c09:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     c0c:	31 31                	xor    DWORD PTR [rcx],esi
     c0e:	31 32                	xor    DWORD PTR [rdx],esi
     c10:	62 61 73 69 63       	(bad)
     c15:	5f                   	pop    rdi
     c16:	73 74                	jae    c8c <_init-0x374>
     c18:	72 69                	jb     c83 <_init-0x37d>
     c1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c1b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     c20:	31 31                	xor    DWORD PTR [rcx],esi
     c22:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     c25:	72 5f                	jb     c86 <_init-0x37a>
     c27:	74 72                	je     c9b <_init-0x365>
     c29:	61                   	(bad)
     c2a:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     c31:	61 
     c32:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     c36:	31 33                	xor    DWORD PTR [rbx],esi
     c38:	73 68                	jae    ca2 <_init-0x35e>
     c3a:	72 69                	jb     ca5 <_init-0x35b>
     c3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c3d:	6b 5f 74 6f          	imul   ebx,DWORD PTR [rdi+0x74],0x6f
     c41:	5f                   	pop    rdi
     c42:	66 69 74 45 76 00 74 	imul   si,WORD PTR [rbp+rax*2+0x76],0x7400
     c49:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c4a:	77 63                	ja     caf <_init-0x351>
     c4c:	74 72                	je     cc0 <_init-0x340>
     c4e:	61                   	(bad)
     c4f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c50:	73 00                	jae    c52 <_init-0x3ae>
     c52:	75 69                	jne    cbd <_init-0x343>
     c54:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c55:	74 5f                	je     cb6 <_init-0x34a>
     c57:	66 61                	data16 (bad)
     c59:	73 74                	jae    ccf <_init-0x331>
     c5b:	33 32                	xor    esi,DWORD PTR [rdx]
     c5d:	5f                   	pop    rdi
     c5e:	74 00                	je     c60 <_init-0x3a0>
     c60:	5f                   	pop    rdi
     c61:	43 61                	rex.XB (bad)
     c63:	74 65                	je     cca <_init-0x336>
     c65:	67 6f                	outs   dx,DWORD PTR ds:[esi]
     c67:	72 79                	jb     ce2 <_init-0x31e>
     c69:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
     c6d:	69 73 64 73 74 00 5f 	imul   esi,DWORD PTR [rbx+0x64],0x5f007473
     c74:	46 6c                	rex.RX ins BYTE PTR es:[rdi],dx
     c76:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c77:	61                   	(bad)
     c78:	74 31                	je     cab <_init-0x355>
     c7a:	32 38                	xor    bh,BYTE PTR [rax]
     c7c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     c7f:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     c83:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     c85:	75 5f                	jne    ce6 <_init-0x31a>
     c87:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     c8a:	31 37                	xor    DWORD PTR [rdi],esi
     c8c:	5f                   	pop    rdi
     c8d:	5f                   	pop    rdi
     c8e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     c8f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     c90:	72 6d                	jb     cff <_init-0x301>
     c92:	61                   	(bad)
     c93:	6c                   	ins    BYTE PTR es:[rdi],dx
     c94:	5f                   	pop    rdi
     c95:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     c9c:	72 
     c9d:	49 50                	rex.WB push r8
     c9f:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     ca2:	34 73                	xor    al,0x73
     ca4:	70 61                	jo     d07 <_init-0x2f9>
     ca6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ca7:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     cac:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     caf:	36 37                	ss (bad)
     cb1:	34 34                	xor    al,0x34
     cb3:	30 37                	xor    BYTE PTR [rdi],dh
     cb5:	33 37                	xor    esi,DWORD PTR [rdi]
     cb7:	30 39                	xor    BYTE PTR [rcx],bh
     cb9:	35 35 31 36 31       	xor    eax,0x31363135
     cbe:	35 45 45 45 70       	xor    eax,0x70454545
     cc3:	70 45                	jo     d0a <_init-0x2f6>
     cc5:	69 00 5f 6c 6f 63    	imul   eax,DWORD PTR [rax],0x636f6c5f
     ccb:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
     cce:	5a                   	pop    rdx
     ccf:	4e 53                	rex.WRX push rbx
     cd1:	74 37                	je     d0a <_init-0x2f6>
     cd3:	5f                   	pop    rdi
     cd4:	5f                   	pop    rdi
     cd5:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     cd8:	31 31                	xor    DWORD PTR [rcx],esi
     cda:	31 32                	xor    DWORD PTR [rdx],esi
     cdc:	62 61 73 69 63       	(bad)
     ce1:	5f                   	pop    rdi
     ce2:	73 74                	jae    d58 <_init-0x2a8>
     ce4:	72 69                	jb     d4f <_init-0x2b1>
     ce6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ce7:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     cec:	31 31                	xor    DWORD PTR [rcx],esi
     cee:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     cf1:	72 5f                	jb     d52 <_init-0x2ae>
     cf3:	74 72                	je     d67 <_init-0x299>
     cf5:	61                   	(bad)
     cf6:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     cfd:	61 
     cfe:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     d02:	43 34 45             	rex.XB xor al,0x45
     d05:	53                   	push   rbx
     d06:	74 31                	je     d39 <_init-0x2c7>
     d08:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
     d0f:	6c 
     d10:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
     d17:	73 74                	jae    d8d <_init-0x273>
     d19:	49 63 45 52          	movsxd rax,DWORD PTR [r13+0x52]
     d1d:	4b 53                	rex.WXB push r11
     d1f:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
     d22:	5f                   	pop    rdi
     d23:	5a                   	pop    rdx
     d24:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     d28:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     d2a:	75 5f                	jne    d8b <_init-0x275>
     d2c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     d2f:	31 37                	xor    DWORD PTR [rdi],esi
     d31:	5f                   	pop    rdi
     d32:	5f                   	pop    rdi
     d33:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d34:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     d35:	72 6d                	jb     da4 <_init-0x25c>
     d37:	61                   	(bad)
     d38:	6c                   	ins    BYTE PTR es:[rdi],dx
     d39:	5f                   	pop    rdi
     d3a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
     d41:	72 
     d42:	49 50                	rex.WB push r8
     d44:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     d47:	34 73                	xor    al,0x73
     d49:	70 61                	jo     dac <_init-0x254>
     d4b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d4c:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     d51:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     d54:	36 37                	ss (bad)
     d56:	34 34                	xor    al,0x34
     d58:	30 37                	xor    BYTE PTR [rdi],dh
     d5a:	33 37                	xor    esi,DWORD PTR [rdi]
     d5c:	30 39                	xor    BYTE PTR [rcx],bh
     d5e:	35 35 31 36 31       	xor    eax,0x31363135
     d63:	35 45 45 45 70       	xor    eax,0x70454545
     d68:	70 45                	jo     daf <_init-0x251>
     d6a:	76 00                	jbe    d6c <_init-0x294>
     d6c:	5f                   	pop    rdi
     d6d:	5a                   	pop    rdx
     d6e:	4e                   	rex.WRX
     d6f:	4b 53                	rex.WXB push r11
     d71:	74 34                	je     da7 <_init-0x259>
     d73:	73 70                	jae    de5 <_init-0x21b>
     d75:	61                   	(bad)
     d76:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     d77:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     d7c:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     d7f:	36 37                	ss (bad)
     d81:	34 34                	xor    al,0x34
     d83:	30 37                	xor    BYTE PTR [rdi],dh
     d85:	33 37                	xor    esi,DWORD PTR [rdi]
     d87:	30 39                	xor    BYTE PTR [rcx],bh
     d89:	35 35 31 36 31       	xor    eax,0x31363135
     d8e:	35 45 45 69 78       	xor    eax,0x78694545
     d93:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
     d95:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     d98:	4e                   	rex.WRX
     d99:	4b 53                	rex.WXB push r11
     d9b:	74 31                	je     dce <_init-0x232>
     d9d:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
     da4:	6c 
     da5:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
     dac:	73 74                	jae    e22 <_init-0x1de>
     dae:	49 63 45 34          	movsxd rax,DWORD PTR [r13+0x34]
     db2:	73 69                	jae    e1d <_init-0x1e3>
     db4:	7a 65                	jp     e1b <_init-0x1e5>
     db6:	45 76 00             	rex.RB jbe db9 <_init-0x247>
     db9:	5f                   	pop    rdi
     dba:	5a                   	pop    rdx
     dbb:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
     dbf:	67 6e                	outs   dx,BYTE PTR ds:[esi]
     dc1:	75 5f                	jne    e22 <_init-0x1de>
     dc3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     dc6:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
     dc9:	5f                   	pop    rdi
     dca:	61                   	(bad)
     dcb:	6c                   	ins    BYTE PTR es:[rdi],dx
     dcc:	6c                   	ins    BYTE PTR es:[rdi],dx
     dcd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     dce:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
     dd1:	72 61                	jb     e34 <_init-0x1cc>
     dd3:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
     dda:	63 
     ddb:	45 63 45 31          	movsxd r8d,DWORD PTR [r13+0x31]
     ddf:	35 5f 53 5f 61       	xor    eax,0x615f535f
     de4:	6c                   	ins    BYTE PTR es:[rdi],dx
     de5:	77 61                	ja     e48 <_init-0x1b8>
     de7:	79 73                	jns    e5c <_init-0x1a4>
     de9:	5f                   	pop    rdi
     dea:	65 71 75             	gs jno e62 <_init-0x19e>
     ded:	61                   	(bad)
     dee:	6c                   	ins    BYTE PTR es:[rdi],dx
     def:	45 76 00             	rex.RB jbe df2 <_init-0x20e>
     df2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     df3:	70 65                	jo     e5a <_init-0x1a6>
     df5:	72 61                	jb     e58 <_init-0x1a8>
     df7:	74 6f                	je     e68 <_init-0x198>
     df9:	72 20                	jb     e1b <_init-0x1e5>
     dfb:	62 6f 6f 6c 00       	(bad)
     e00:	5f                   	pop    rdi
     e01:	5a                   	pop    rdx
     e02:	4e 53                	rex.WRX push rbx
     e04:	74 37                	je     e3d <_init-0x1c3>
     e06:	5f                   	pop    rdi
     e07:	5f                   	pop    rdi
     e08:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     e0b:	31 31                	xor    DWORD PTR [rcx],esi
     e0d:	31 32                	xor    DWORD PTR [rdx],esi
     e0f:	62 61 73 69 63       	(bad)
     e14:	5f                   	pop    rdi
     e15:	73 74                	jae    e8b <_init-0x175>
     e17:	72 69                	jb     e82 <_init-0x17e>
     e19:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e1a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     e1f:	31 31                	xor    DWORD PTR [rcx],esi
     e21:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     e24:	72 5f                	jb     e85 <_init-0x17b>
     e26:	74 72                	je     e9a <_init-0x166>
     e28:	61                   	(bad)
     e29:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     e30:	61 
     e31:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     e35:	31 30                	xor    DWORD PTR [rax],esi
     e37:	5f                   	pop    rdi
     e38:	4d 5f                	rex.WRB pop r15
     e3a:	64 69 73 70 6f 73 65 	imul   esi,DWORD PTR fs:[rbx+0x70],0x4565736f
     e41:	45 
     e42:	76 00                	jbe    e44 <_init-0x1bc>
     e44:	5f                   	pop    rdi
     e45:	5a                   	pop    rdx
     e46:	4e 53                	rex.WRX push rbx
     e48:	74 37                	je     e81 <_init-0x17f>
     e4a:	5f                   	pop    rdi
     e4b:	5f                   	pop    rdi
     e4c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     e4f:	31 31                	xor    DWORD PTR [rcx],esi
     e51:	31 32                	xor    DWORD PTR [rdx],esi
     e53:	62 61 73 69 63       	(bad)
     e58:	5f                   	pop    rdi
     e59:	73 74                	jae    ecf <_init-0x131>
     e5b:	72 69                	jb     ec6 <_init-0x13a>
     e5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     e5e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     e63:	31 31                	xor    DWORD PTR [rcx],esi
     e65:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     e68:	72 5f                	jb     ec9 <_init-0x137>
     e6a:	74 72                	je     ede <_init-0x122>
     e6c:	61                   	(bad)
     e6d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     e74:	61 
     e75:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     e79:	35 65 72 61 73       	xor    eax,0x73617265
     e7e:	65 45 6d             	gs rex.RB ins DWORD PTR es:[rdi],dx
     e81:	6d                   	ins    DWORD PTR es:[rdi],dx
     e82:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     e85:	4e 53                	rex.WRX push rbx
     e87:	74 38                	je     ec1 <_init-0x13f>
     e89:	5f                   	pop    rdi
     e8a:	5f                   	pop    rdi
     e8b:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     e8d:	72 6d                	jb     efc <_init-0x104>
     e8f:	61                   	(bad)
     e90:	74 35                	je     ec7 <_init-0x139>
     e92:	5f                   	pop    rdi
     e93:	53                   	push   rbx
     e94:	69 6e 6b 49 63 45 43 	imul   ebp,DWORD PTR [rsi+0x6b],0x43456349
     e9b:	34 45                	xor    al,0x45
     e9d:	52                   	push   rdx
     e9e:	4b 53                	rex.WXB push r11
     ea0:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
     ea3:	5f                   	pop    rdi
     ea4:	5f                   	pop    rdi
     ea5:	6d                   	ins    DWORD PTR es:[rdi],dx
     ea6:	61                   	(bad)
     ea7:	78 5f                	js     f08 <_init-0xf8>
     ea9:	61                   	(bad)
     eaa:	6c                   	ins    BYTE PTR es:[rdi],dx
     eab:	69 67 6e 5f 6c 64 00 	imul   esp,DWORD PTR [rdi+0x6e],0x646c5f
     eb2:	61                   	(bad)
     eb3:	74 6f                	je     f24 <_init-0xdc>
     eb5:	69 00 5f 5f 6d 61    	imul   eax,DWORD PTR [rax],0x616d5f5f
     ebb:	78 5f                	js     f1c <_init-0xe4>
     ebd:	61                   	(bad)
     ebe:	6c                   	ins    BYTE PTR es:[rdi],dx
     ebf:	69 67 6e 5f 6c 6c 00 	imul   esp,DWORD PTR [rdi+0x6e],0x6c6c5f
     ec6:	5f                   	pop    rdi
     ec7:	5a                   	pop    rdx
     ec8:	4e                   	rex.WRX
     ec9:	4b 53                	rex.WXB push r11
     ecb:	74 34                	je     f01 <_init-0xff>
     ecd:	73 70                	jae    f3f <_init-0xc1>
     ecf:	61                   	(bad)
     ed0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ed1:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
     ed6:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
     ed9:	36 37                	ss (bad)
     edb:	34 34                	xor    al,0x34
     edd:	30 37                	xor    BYTE PTR [rdi],dh
     edf:	33 37                	xor    esi,DWORD PTR [rdi]
     ee1:	30 39                	xor    BYTE PTR [rcx],bh
     ee3:	35 35 31 36 31       	xor    eax,0x31363135
     ee8:	35 45 45 35 63       	xor    eax,0x63354545
     eed:	72 65                	jb     f54 <_init-0xac>
     eef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     ef0:	64 45 76 00          	fs rex.RB jbe ef4 <_init-0x10c>
     ef4:	61                   	(bad)
     ef5:	74 6f                	je     f66 <_init-0x9a>
     ef7:	6c                   	ins    BYTE PTR es:[rdi],dx
     ef8:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
     efb:	5f                   	pop    rdi
     efc:	70 00                	jo     efe <_init-0x102>
     efe:	5f                   	pop    rdi
     eff:	5a                   	pop    rdx
     f00:	53                   	push   rbx
     f01:	74 38                	je     f3b <_init-0xc5>
     f03:	74 6f                	je     f74 <_init-0x8c>
     f05:	5f                   	pop    rdi
     f06:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     f09:	72 73                	jb     f7e <_init-0x82>
     f0b:	50                   	push   rax
     f0c:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
     f0f:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
     f13:	73 6e                	jae    f83 <_init-0x7d>
     f15:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
     f18:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
     f1b:	73 73                	jae    f90 <_init-0x70>
     f1d:	70 6e                	jo     f8d <_init-0x73>
     f1f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
     f22:	4e 53                	rex.WRX push rbx
     f24:	74 37                	je     f5d <_init-0xa3>
     f26:	5f                   	pop    rdi
     f27:	5f                   	pop    rdi
     f28:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
     f2b:	31 31                	xor    DWORD PTR [rcx],esi
     f2d:	31 32                	xor    DWORD PTR [rdx],esi
     f2f:	62 61 73 69 63       	(bad)
     f34:	5f                   	pop    rdi
     f35:	73 74                	jae    fab <_init-0x55>
     f37:	72 69                	jb     fa2 <_init-0x5e>
     f39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     f3a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
     f3f:	31 31                	xor    DWORD PTR [rcx],esi
     f41:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     f44:	72 5f                	jb     fa5 <_init-0x5b>
     f46:	74 72                	je     fba <_init-0x46>
     f48:	61                   	(bad)
     f49:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
     f50:	61 
     f51:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
     f55:	36 61                	ss (bad)
     f57:	73 73                	jae    fcc <_init-0x34>
     f59:	69 67 6e 45 50 4b 63 	imul   esp,DWORD PTR [rdi+0x6e],0x634b5045
     f60:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
     f63:	5f                   	pop    rdi
     f64:	6d                   	ins    DWORD PTR es:[rdi],dx
     f65:	6f                   	outs   dx,DWORD PTR ds:[rsi]
     f66:	76 65                	jbe    fcd <_init-0x33>
     f68:	00 6e 75             	add    BYTE PTR [rsi+0x75],ch
     f6b:	6d                   	ins    DWORD PTR es:[rdi],dx
     f6c:	62 65 72 73 00       	(bad)
     f71:	63 72 62             	movsxd esi,DWORD PTR [rdx+0x62]
     f74:	65 67 69 6e 00 5f 5a 	imul   ebp,DWORD PTR gs:[esi+0x0],0x534e5a5f
     f7b:	4e 53 
     f7d:	74 38                	je     fb7 <_init-0x49>
     f7f:	5f                   	pop    rdi
     f80:	5f                   	pop    rdi
     f81:	66 6f                	outs   dx,WORD PTR ds:[rsi]
     f83:	72 6d                	jb     ff2 <_init-0xe>
     f85:	61                   	(bad)
     f86:	74 31                	je     fb9 <_init-0x47>
     f88:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
     f8b:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
     f92:	72 49                	jb     fdd <_init-0x23>
     f94:	63 45 70             	movsxd eax,DWORD PTR [rbp+0x70]
     f97:	70 45                	jo     fde <_init-0x22>
     f99:	69 00 5f 5f 70 6f    	imul   eax,DWORD PTR [rax],0x6f705f5f
     f9f:	73 00                	jae    fa1 <_init-0x5f>
     fa1:	5f                   	pop    rdi
     fa2:	5a                   	pop    rdx
     fa3:	4e                   	rex.WRX
     fa4:	4b 53                	rex.WXB push r11
     fa6:	74 31                	je     fd9 <_init-0x27>
     fa8:	37                   	(bad)
     fa9:	62 61 73 69 63       	(bad)
     fae:	5f                   	pop    rdi
     faf:	73 74                	jae    1025 <_init+0x25>
     fb1:	72 69                	jb     101c <_init+0x1c>
     fb3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fb4:	67 5f                	addr32 pop rdi
     fb6:	76 69                	jbe    1021 <_init+0x21>
     fb8:	65 77 49             	gs ja  1004 <_init+0x4>
     fbb:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
     fbe:	31 31                	xor    DWORD PTR [rcx],esi
     fc0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
     fc3:	72 5f                	jb     1024 <_init+0x24>
     fc5:	74 72                	je     1039 <fork@plt+0x9>
     fc7:	61                   	(bad)
     fc8:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
     fcf:	34 
     fd0:	72 65                	jb     1037 <fork@plt+0x7>
     fd2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
     fd3:	64 45 76 00          	fs rex.RB jbe fd7 <_init-0x29>
     fd7:	5f                   	pop    rdi
     fd8:	5f                   	pop    rdi
     fd9:	64 65 62 75 67 00 5f 	(bad)
     fe0:	5a                   	pop    rdx
     fe1:	4e 53                	rex.WRX push rbx
     fe3:	74 34                	je     1019 <_init+0x19>
     fe5:	70 61                	jo     1048 <_Z8my_writeiPKvm@plt+0x8>
     fe7:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
     fee:	45 61                	rex.RB (bad)
     ff0:	53                   	push   rbx
     ff1:	45 52                	rex.RB push r10
     ff3:	4b 53                	rex.WXB push r11
     ff5:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
     ff8:	63 6c 31 33          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x33]
     ffc:	5f                   	pop    rdi
     ffd:	53                   	push   rbx
     ffe:	5f                   	pop    rdi
     fff:	61                   	(bad)
    1000:	73 73                	jae    1075 <_Z8my_writeiPKvm@plt+0x35>
    1002:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    1009:	49 52                	rex.WB push r10
    100b:	4b 54                	rex.WXB push r12
    100d:	5f                   	pop    rdi
    100e:	52                   	push   rdx
    100f:	4b 54                	rex.WXB push r12
    1011:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    1014:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1018:	4e 53                	rex.WRX push rbx
    101a:	74 37                	je     1053 <_Z8my_writeiPKvm@plt+0x13>
    101c:	5f                   	pop    rdi
    101d:	5f                   	pop    rdi
    101e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1021:	31 31                	xor    DWORD PTR [rcx],esi
    1023:	31 32                	xor    DWORD PTR [rdx],esi
    1025:	62 61 73 69 63       	(bad)
    102a:	5f                   	pop    rdi
    102b:	73 74                	jae    10a1 <_Z8my_writeiPKvm@plt+0x61>
    102d:	72 69                	jb     1098 <_Z8my_writeiPKvm@plt+0x58>
    102f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1030:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1035:	31 31                	xor    DWORD PTR [rcx],esi
    1037:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    103a:	72 5f                	jb     109b <_Z8my_writeiPKvm@plt+0x5b>
    103c:	74 72                	je     10b0 <_Z8my_writeiPKvm@plt+0x70>
    103e:	61                   	(bad)
    103f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1046:	61 
    1047:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    104b:	36 61                	ss (bad)
    104d:	73 73                	jae    10c2 <_Z8my_writeiPKvm@plt+0x82>
    104f:	69 67 6e 45 50 4b 63 	imul   esp,DWORD PTR [rdi+0x6e],0x634b5045
    1056:	6d                   	ins    DWORD PTR es:[rdi],dx
    1057:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    105a:	5f                   	pop    rdi
    105b:	67 65 74 5f          	addr32 gs je 10be <_Z8my_writeiPKvm@plt+0x7e>
    105f:	61                   	(bad)
    1060:	6c                   	ins    BYTE PTR es:[rdi],dx
    1061:	6c                   	ins    BYTE PTR es:[rdi],dx
    1062:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1063:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    1066:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1067:	72 00                	jb     1069 <_Z8my_writeiPKvm@plt+0x29>
    1069:	5f                   	pop    rdi
    106a:	5a                   	pop    rdx
    106b:	4e 53                	rex.WRX push rbx
    106d:	74 37                	je     10a6 <_Z8my_writeiPKvm@plt+0x66>
    106f:	5f                   	pop    rdi
    1070:	5f                   	pop    rdi
    1071:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1074:	31 31                	xor    DWORD PTR [rcx],esi
    1076:	31 32                	xor    DWORD PTR [rdx],esi
    1078:	62 61 73 69 63       	(bad)
    107d:	5f                   	pop    rdi
    107e:	73 74                	jae    10f4 <_Z8my_writeiPKvm@plt+0xb4>
    1080:	72 69                	jb     10eb <_Z8my_writeiPKvm@plt+0xab>
    1082:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1083:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1088:	31 31                	xor    DWORD PTR [rcx],esi
    108a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    108d:	72 5f                	jb     10ee <_Z8my_writeiPKvm@plt+0xae>
    108f:	74 72                	je     1103 <_Z8my_writeiPKvm@plt+0xc3>
    1091:	61                   	(bad)
    1092:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1099:	61 
    109a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    109e:	31 31                	xor    DWORD PTR [rcx],esi
    10a0:	5f                   	pop    rdi
    10a1:	4d 5f                	rex.WRB pop r15
    10a3:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    10a6:	61                   	(bad)
    10a7:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
    10aa:	79 45                	jns    10f1 <_Z8my_writeiPKvm@plt+0xb1>
    10ac:	6d                   	ins    DWORD PTR es:[rdi],dx
    10ad:	00 70 72             	add    BYTE PTR [rax+0x72],dh
    10b0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10b1:	74 6f                	je     1122 <_Z8my_writeiPKvm+0x9>
    10b3:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    10b6:	5f                   	pop    rdi
    10b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10b9:	74 5f                	je     111a <_Z8my_writeiPKvm+0x1>
    10bb:	73 75                	jae    1132 <_Z8my_writeiPKvm+0x19>
    10bd:	70 70                	jo     112f <_Z8my_writeiPKvm+0x16>
    10bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    10c0:	72 74                	jb     1136 <_Z8my_writeiPKvm+0x1d>
    10c2:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
    10c7:	4e 53                	rex.WRX push rbx
    10c9:	61                   	(bad)
    10ca:	49 63 45 43          	movsxd rax,DWORD PTR [r13+0x43]
    10ce:	34 45                	xor    al,0x45
    10d0:	52                   	push   rdx
    10d1:	4b 53                	rex.WXB push r11
    10d3:	5f                   	pop    rdi
    10d4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    10d7:	4e 53                	rex.WRX push rbx
    10d9:	74 37                	je     1112 <_Z8my_writeiPKvm@plt+0xd2>
    10db:	5f                   	pop    rdi
    10dc:	5f                   	pop    rdi
    10dd:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    10e0:	31 31                	xor    DWORD PTR [rcx],esi
    10e2:	31 32                	xor    DWORD PTR [rdx],esi
    10e4:	62 61 73 69 63       	(bad)
    10e9:	5f                   	pop    rdi
    10ea:	73 74                	jae    1160 <_Z7my_exiti+0x1c>
    10ec:	72 69                	jb     1157 <_Z7my_exiti+0x13>
    10ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    10ef:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    10f4:	31 31                	xor    DWORD PTR [rcx],esi
    10f6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    10f9:	72 5f                	jb     115a <_Z7my_exiti+0x16>
    10fb:	74 72                	je     116f <main+0xe>
    10fd:	61                   	(bad)
    10fe:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1105:	61 
    1106:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    110a:	36 61                	ss (bad)
    110c:	70 70                	jo     117e <main+0x1d>
    110e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1110:	64 45 53             	fs rex.RB push r11
    1113:	74 31                	je     1146 <_Z7my_exiti+0x2>
    1115:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    111c:	6c 
    111d:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    1124:	73 74                	jae    119a <main+0x39>
    1126:	49 63 45 00          	movsxd rax,DWORD PTR [r13+0x0]
    112a:	5f                   	pop    rdi
    112b:	5a                   	pop    rdx
    112c:	53                   	push   rbx
    112d:	74 38                	je     1167 <main+0x6>
    112f:	74 6f                	je     11a0 <main+0x3f>
    1131:	5f                   	pop    rdi
    1132:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1135:	72 73                	jb     11aa <main+0x49>
    1137:	50                   	push   rax
    1138:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    113b:	64 53                	fs push rbx
    113d:	74 31                	je     1170 <main+0xf>
    113f:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    1142:	61                   	(bad)
    1143:	72 73                	jb     11b8 <main+0x57>
    1145:	5f                   	pop    rdi
    1146:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    1148:	72 6d                	jb     11b7 <main+0x56>
    114a:	61                   	(bad)
    114b:	74 00                	je     114d <_Z7my_exiti+0x9>
    114d:	5f                   	pop    rdi
    114e:	5a                   	pop    rdx
    114f:	4e 53                	rex.WRX push rbx
    1151:	74 37                	je     118a <main+0x29>
    1153:	5f                   	pop    rdi
    1154:	5f                   	pop    rdi
    1155:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1158:	31 31                	xor    DWORD PTR [rcx],esi
    115a:	31 32                	xor    DWORD PTR [rdx],esi
    115c:	62 61 73 69 63       	(bad)
    1161:	5f                   	pop    rdi
    1162:	73 74                	jae    11d8 <main+0x77>
    1164:	72 69                	jb     11cf <main+0x6e>
    1166:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1167:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    116c:	31 31                	xor    DWORD PTR [rcx],esi
    116e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1171:	72 5f                	jb     11d2 <main+0x71>
    1173:	74 72                	je     11e7 <_fini+0xb>
    1175:	61                   	(bad)
    1176:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    117d:	61 
    117e:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1182:	69 78 45 6d 00 73 65 	imul   edi,DWORD PTR [rax+0x45],0x6573006d
    1189:	74 6c                	je     11f7 <_fini+0x1b>
    118b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    118c:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    118f:	65 00 5f 4d          	add    BYTE PTR gs:[rdi+0x4d],bl
    1193:	5f                   	pop    rdi
    1194:	65 78 74             	gs js  120b <_fini+0x2f>
    1197:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1199:	74 5f                	je     11fa <_fini+0x1e>
    119b:	76 61                	jbe    11fe <_fini+0x22>
    119d:	6c                   	ins    BYTE PTR es:[rdi],dx
    119e:	75 65                	jne    1205 <_fini+0x29>
    11a0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    11a3:	4e 53                	rex.WRX push rbx
    11a5:	74 34                	je     11db <main+0x7a>
    11a7:	70 61                	jo     120a <_fini+0x2e>
    11a9:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    11b0:	45                   	rex.RB
    11b1:	43 34 45             	rex.XB xor al,0x45
    11b4:	76 51                	jbe    1207 <_fini+0x2b>
    11b6:	61                   	(bad)
    11b7:	61                   	(bad)
    11b8:	32 36                	xor    dh,BYTE PTR [rsi]
    11ba:	69 73 5f 64 65 66 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61666564
    11c1:	75 6c                	jne    122f <_fini+0x53>
    11c3:	74 5f                	je     1224 <_fini+0x48>
    11c5:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    11c8:	73 74                	jae    123e <_fini+0x62>
    11ca:	72 75                	jb     1241 <_fini+0x65>
    11cc:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
    11d0:	6c                   	ins    BYTE PTR es:[rdi],dx
    11d1:	65 5f                	gs pop rdi
    11d3:	76 49                	jbe    121e <_fini+0x42>
    11d5:	54                   	push   rsp
    11d6:	5f                   	pop    rdi
    11d7:	45 32 36             	xor    r14b,BYTE PTR [r14]
    11da:	69 73 5f 64 65 66 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61666564
    11e1:	75 6c                	jne    124f <_fini+0x73>
    11e3:	74 5f                	je     1244 <_fini+0x68>
    11e5:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    11e8:	73 74                	jae    125e <_fini+0x82>
    11ea:	72 75                	jb     1261 <_fini+0x85>
    11ec:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
    11f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    11f1:	65 5f                	gs pop rdi
    11f3:	76 49                	jbe    123e <_fini+0x62>
    11f5:	54                   	push   rsp
    11f6:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    11f9:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    11fc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    11ff:	31 31                	xor    DWORD PTR [rcx],esi
    1201:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1204:	4e 53                	rex.WRX push rbx
    1206:	74 31                	je     1239 <_fini+0x5d>
    1208:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    120d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    1210:	74 69                	je     127b <_fini+0x9f>
    1212:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1213:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1214:	5f                   	pop    rdi
    1215:	70 74                	jo     128b <_fini+0xaf>
    1217:	72 31                	jb     124a <_fini+0x6e>
    1219:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    121c:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    121f:	74 69                	je     128a <_fini+0xae>
    1221:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1222:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1223:	5f                   	pop    rdi
    1224:	70 74                	jo     129a <_fini+0xbe>
    1226:	72 43                	jb     126b <_fini+0x8f>
    1228:	34 45                	xor    al,0x45
    122a:	4f 53                	rex.WRXB push r11
    122c:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    122f:	5f                   	pop    rdi
    1230:	5a                   	pop    rdx
    1231:	4e 53                	rex.WRX push rbx
    1233:	74 37                	je     126c <_fini+0x90>
    1235:	5f                   	pop    rdi
    1236:	5f                   	pop    rdi
    1237:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    123a:	31 31                	xor    DWORD PTR [rcx],esi
    123c:	31 32                	xor    DWORD PTR [rdx],esi
    123e:	62 61 73 69 63       	(bad)
    1243:	5f                   	pop    rdi
    1244:	73 74                	jae    12ba <_fini+0xde>
    1246:	72 69                	jb     12b1 <_fini+0xd5>
    1248:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1249:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    124e:	31 31                	xor    DWORD PTR [rcx],esi
    1250:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1253:	72 5f                	jb     12b4 <_fini+0xd8>
    1255:	74 72                	je     12c9 <_fini+0xed>
    1257:	61                   	(bad)
    1258:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    125f:	61 
    1260:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1264:	36 61                	ss (bad)
    1266:	73 73                	jae    12db <_fini+0xff>
    1268:	69 67 6e 45 6d 63 00 	imul   esp,DWORD PTR [rdi+0x6e],0x636d45
    126f:	31 31                	xor    DWORD PTR [rcx],esi
    1271:	6d                   	ins    DWORD PTR es:[rdi],dx
    1272:	61                   	(bad)
    1273:	78 5f                	js     12d4 <_fini+0xf8>
    1275:	61                   	(bad)
    1276:	6c                   	ins    BYTE PTR es:[rdi],dx
    1277:	69 67 6e 5f 74 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f00745f
    127e:	5f                   	pop    rdi
    127f:	69 73 5f 73 70 65 63 	imul   esi,DWORD PTR [rbx+0x5f],0x63657073
    1286:	69 61 6c 69 7a 61 74 	imul   esp,DWORD PTR [rcx+0x6c],0x74617a69
    128d:	69 6f 6e 5f 6f 66 00 	imul   ebp,DWORD PTR [rdi+0x6e],0x666f5f
    1294:	5f                   	pop    rdi
    1295:	5f                   	pop    rdi
    1296:	64 65 73 74          	fs gs jae 130e <_fini+0x132>
    129a:	72 75                	jb     1311 <_fini+0x135>
    129c:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
    12a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    12a1:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    12a5:	73 78                	jae    131f <_fini+0x143>
    12a7:	66 72 6d             	data16 jb 1317 <_fini+0x13b>
    12aa:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    12ad:	75 69                	jne    1318 <_fini+0x13c>
    12af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12b0:	74 5f                	je     1311 <_fini+0x135>
    12b2:	6c                   	ins    BYTE PTR es:[rdi],dx
    12b3:	65 61                	gs (bad)
    12b5:	73 74                	jae    132b <_fini+0x14f>
    12b7:	33 32                	xor    esi,DWORD PTR [rdx]
    12b9:	5f                   	pop    rdi
    12ba:	74 00                	je     12bc <_fini+0xe0>
    12bc:	5f                   	pop    rdi
    12bd:	5f                   	pop    rdi
    12be:	73 79                	jae    1339 <_fini+0x15d>
    12c0:	73 63                	jae    1325 <_fini+0x149>
    12c2:	61                   	(bad)
    12c3:	6c                   	ins    BYTE PTR es:[rdi],dx
    12c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    12c5:	5f                   	pop    rdi
    12c6:	73 6c                	jae    1334 <_fini+0x158>
    12c8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    12c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12ca:	67 5f                	addr32 pop rdi
    12cc:	74 00                	je     12ce <_fini+0xf2>
    12ce:	5f                   	pop    rdi
    12cf:	5f                   	pop    rdi
    12d0:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    12d7:	66 77 73             	data16 ja 134d <_fini+0x171>
    12da:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    12dd:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    12e1:	4e                   	rex.WRX
    12e2:	4b 53                	rex.WXB push r11
    12e4:	74 37                	je     131d <_fini+0x141>
    12e6:	5f                   	pop    rdi
    12e7:	5f                   	pop    rdi
    12e8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    12eb:	31 31                	xor    DWORD PTR [rcx],esi
    12ed:	31 32                	xor    DWORD PTR [rdx],esi
    12ef:	62 61 73 69 63       	(bad)
    12f4:	5f                   	pop    rdi
    12f5:	73 74                	jae    136b <_fini+0x18f>
    12f7:	72 69                	jb     1362 <_fini+0x186>
    12f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    12fa:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    12ff:	31 31                	xor    DWORD PTR [rcx],esi
    1301:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1304:	72 5f                	jb     1365 <_fini+0x189>
    1306:	74 72                	je     137a <_fini+0x19e>
    1308:	61                   	(bad)
    1309:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1310:	61 
    1311:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1315:	36 63 62 65          	ss movsxd esp,DWORD PTR [rdx+0x65]
    1319:	67 69 6e 45 76 00 63 	imul   ebp,DWORD PTR [esi+0x45],0x6f630076
    1320:	6f 
    1321:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1322:	74 61                	je     1385 <_fini+0x1a9>
    1324:	69 6e 73 00 5f 49 4f 	imul   ebp,DWORD PTR [rsi+0x73],0x4f495f00
    132b:	5f                   	pop    rdi
    132c:	77 72                	ja     13a0 <_fini+0x1c4>
    132e:	69 74 65 5f 65 6e 64 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x646e65
    1335:	00 
    1336:	5f                   	pop    rdi
    1337:	5f                   	pop    rdi
    1338:	69 73 77 61 70 00 5f 	imul   esi,DWORD PTR [rbx+0x77],0x5f007061
    133f:	5f                   	pop    rdi
    1340:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    1347:	73 74                	jae    13bd <_fini+0x1e1>
    1349:	72 74                	jb     13bf <_fini+0x1e3>
    134b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    134c:	6c                   	ins    BYTE PTR es:[rdi],dx
    134d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1350:	4e 53                	rex.WRX push rbx
    1352:	74 37                	je     138b <_fini+0x1af>
    1354:	5f                   	pop    rdi
    1355:	5f                   	pop    rdi
    1356:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1359:	31 31                	xor    DWORD PTR [rcx],esi
    135b:	31 32                	xor    DWORD PTR [rdx],esi
    135d:	62 61 73 69 63       	(bad)
    1362:	5f                   	pop    rdi
    1363:	73 74                	jae    13d9 <_fini+0x1fd>
    1365:	72 69                	jb     13d0 <_fini+0x1f4>
    1367:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1368:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    136d:	31 31                	xor    DWORD PTR [rcx],esi
    136f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1372:	72 5f                	jb     13d3 <_fini+0x1f7>
    1374:	74 72                	je     13e8 <_fini+0x20c>
    1376:	61                   	(bad)
    1377:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    137e:	61 
    137f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1383:	43 34 45             	rex.XB xor al,0x45
    1386:	4f 53                	rex.WRXB push r11
    1388:	34 5f                	xor    al,0x5f
    138a:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    138d:	4e 53                	rex.WRX push rbx
    138f:	74 37                	je     13c8 <_fini+0x1ec>
    1391:	5f                   	pop    rdi
    1392:	5f                   	pop    rdi
    1393:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1396:	31 31                	xor    DWORD PTR [rcx],esi
    1398:	31 32                	xor    DWORD PTR [rdx],esi
    139a:	62 61 73 69 63       	(bad)
    139f:	5f                   	pop    rdi
    13a0:	73 74                	jae    1416 <_fini+0x23a>
    13a2:	72 69                	jb     140d <_fini+0x231>
    13a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13a5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    13aa:	31 31                	xor    DWORD PTR [rcx],esi
    13ac:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    13af:	72 5f                	jb     1410 <_fini+0x234>
    13b1:	74 72                	je     1425 <_fini+0x249>
    13b3:	61                   	(bad)
    13b4:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    13bb:	61 
    13bc:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    13c0:	37                   	(bad)
    13c1:	72 65                	jb     1428 <_fini+0x24c>
    13c3:	70 6c                	jo     1431 <_fini+0x255>
    13c5:	61                   	(bad)
    13c6:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    13c9:	6d                   	ins    DWORD PTR es:[rdi],dx
    13ca:	6d                   	ins    DWORD PTR es:[rdi],dx
    13cb:	52                   	push   rdx
    13cc:	4b 53                	rex.WXB push r11
    13ce:	34 5f                	xor    al,0x5f
    13d0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    13d3:	4e                   	rex.WRX
    13d4:	4b 53                	rex.WXB push r11
    13d6:	74 38                	je     1410 <_fini+0x234>
    13d8:	5f                   	pop    rdi
    13d9:	5f                   	pop    rdi
    13da:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    13dc:	72 6d                	jb     144b <_fini+0x26f>
    13de:	61                   	(bad)
    13df:	74 35                	je     1416 <_fini+0x23a>
    13e1:	5f                   	pop    rdi
    13e2:	53                   	push   rbx
    13e3:	69 6e 6b 49 63 45 31 	imul   ebp,DWORD PTR [rsi+0x6b],0x31456349
    13ea:	32 5f 52             	xor    bl,BYTE PTR [rdi+0x52]
    13ed:	65 73 65             	gs jae 1455 <_fini+0x279>
    13f0:	72 76                	jb     1468 <_fini+0x28c>
    13f2:	61                   	(bad)
    13f3:	74 69                	je     145e <_fini+0x282>
    13f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    13f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    13f7:	33 67 65             	xor    esp,DWORD PTR [rdi+0x65]
    13fa:	74 45                	je     1441 <_fini+0x265>
    13fc:	76 00                	jbe    13fe <_fini+0x222>
    13fe:	5f                   	pop    rdi
    13ff:	4d 5f                	rex.WRB pop r15
    1401:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1402:	76 65                	jbe    1469 <_fini+0x28d>
    1404:	72 66                	jb     146c <_fini+0x290>
    1406:	6c                   	ins    BYTE PTR es:[rdi],dx
    1407:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1408:	77 00                	ja     140a <_fini+0x22e>
    140a:	5f                   	pop    rdi
    140b:	5a                   	pop    rdx
    140c:	4e                   	rex.WRX
    140d:	4b 53                	rex.WXB push r11
    140f:	74 37                	je     1448 <_fini+0x26c>
    1411:	5f                   	pop    rdi
    1412:	5f                   	pop    rdi
    1413:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1416:	31 31                	xor    DWORD PTR [rcx],esi
    1418:	31 32                	xor    DWORD PTR [rdx],esi
    141a:	62 61 73 69 63       	(bad)
    141f:	5f                   	pop    rdi
    1420:	73 74                	jae    1496 <_fini+0x2ba>
    1422:	72 69                	jb     148d <_fini+0x2b1>
    1424:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1425:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    142a:	31 31                	xor    DWORD PTR [rcx],esi
    142c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    142f:	72 5f                	jb     1490 <_fini+0x2b4>
    1431:	74 72                	je     14a5 <_fini+0x2c9>
    1433:	61                   	(bad)
    1434:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    143b:	61 
    143c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1440:	39 65 6e             	cmp    DWORD PTR [rbp+0x6e],esp
    1443:	64 73 5f             	fs jae 14a5 <_fini+0x2c9>
    1446:	77 69                	ja     14b1 <_fini+0x2d5>
    1448:	74 68                	je     14b2 <_fini+0x2d6>
    144a:	45 53                	rex.RB push r11
    144c:	74 31                	je     147f <_fini+0x2a3>
    144e:	37                   	(bad)
    144f:	62 61 73 69 63       	(bad)
    1454:	5f                   	pop    rdi
    1455:	73 74                	jae    14cb <_fini+0x2ef>
    1457:	72 69                	jb     14c2 <_fini+0x2e6>
    1459:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    145a:	67 5f                	addr32 pop rdi
    145c:	76 69                	jbe    14c7 <_fini+0x2eb>
    145e:	65 77 49             	gs ja  14aa <_fini+0x2ce>
    1461:	63 53 32             	movsxd edx,DWORD PTR [rbx+0x32]
    1464:	5f                   	pop    rdi
    1465:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    1469:	4e 53                	rex.WRX push rbx
    146b:	74 37                	je     14a4 <_fini+0x2c8>
    146d:	5f                   	pop    rdi
    146e:	5f                   	pop    rdi
    146f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1472:	31 31                	xor    DWORD PTR [rcx],esi
    1474:	31 32                	xor    DWORD PTR [rdx],esi
    1476:	62 61 73 69 63       	(bad)
    147b:	5f                   	pop    rdi
    147c:	73 74                	jae    14f2 <_fini+0x316>
    147e:	72 69                	jb     14e9 <_fini+0x30d>
    1480:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1481:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1486:	31 31                	xor    DWORD PTR [rcx],esi
    1488:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    148b:	72 5f                	jb     14ec <_fini+0x310>
    148d:	74 72                	je     1501 <_fini+0x325>
    148f:	61                   	(bad)
    1490:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1497:	61 
    1498:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    149c:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
    14a3:	45 
    14a4:	6d                   	ins    DWORD PTR es:[rdi],dx
    14a5:	50                   	push   rax
    14a6:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    14aa:	76 61                	jbe    150d <_fini+0x331>
    14ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    14ad:	75 65                	jne    1514 <_fini+0x338>
    14af:	5f                   	pop    rdi
    14b0:	74 79                	je     152b <_fini+0x34f>
    14b2:	70 65                	jo     1519 <_fini+0x33d>
    14b4:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    14b7:	74 6f                	je     1528 <_fini+0x34c>
    14b9:	6d                   	ins    DWORD PTR es:[rdi],dx
    14ba:	62                   	(bad)
    14bb:	00 6e 75             	add    BYTE PTR [rsi+0x75],ch
    14be:	6c                   	ins    BYTE PTR es:[rdi],dx
    14bf:	6c                   	ins    BYTE PTR es:[rdi],dx
    14c0:	70 74                	jo     1536 <_fini+0x35a>
    14c2:	72 5f                	jb     1523 <_fini+0x347>
    14c4:	74 00                	je     14c6 <_fini+0x2ea>
    14c6:	5f                   	pop    rdi
    14c7:	5a                   	pop    rdx
    14c8:	4e                   	rex.WRX
    14c9:	4b 53                	rex.WXB push r11
    14cb:	74 37                	je     1504 <_fini+0x328>
    14cd:	5f                   	pop    rdi
    14ce:	5f                   	pop    rdi
    14cf:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    14d2:	31 31                	xor    DWORD PTR [rcx],esi
    14d4:	31 32                	xor    DWORD PTR [rdx],esi
    14d6:	62 61 73 69 63       	(bad)
    14db:	5f                   	pop    rdi
    14dc:	73 74                	jae    1552 <_fini+0x376>
    14de:	72 69                	jb     1549 <_fini+0x36d>
    14e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    14e1:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    14e6:	31 31                	xor    DWORD PTR [rcx],esi
    14e8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    14eb:	72 5f                	jb     154c <_fini+0x370>
    14ed:	74 72                	je     1561 <_fini+0x385>
    14ef:	61                   	(bad)
    14f0:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    14f7:	61 
    14f8:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    14fc:	38 6d 61             	cmp    BYTE PTR [rbp+0x61],ch
    14ff:	78 5f                	js     1560 <_fini+0x384>
    1501:	73 69                	jae    156c <_fini+0x390>
    1503:	7a 65                	jp     156a <_fini+0x38e>
    1505:	45 76 00             	rex.RB jbe 1508 <_fini+0x32c>
    1508:	5f                   	pop    rdi
    1509:	5a                   	pop    rdx
    150a:	4e 53                	rex.WRX push rbx
    150c:	74 37                	je     1545 <_fini+0x369>
    150e:	5f                   	pop    rdi
    150f:	5f                   	pop    rdi
    1510:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1513:	31 31                	xor    DWORD PTR [rcx],esi
    1515:	31 32                	xor    DWORD PTR [rdx],esi
    1517:	62 61 73 69 63       	(bad)
    151c:	5f                   	pop    rdi
    151d:	73 74                	jae    1593 <_fini+0x3b7>
    151f:	72 69                	jb     158a <_fini+0x3ae>
    1521:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1522:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1527:	31 31                	xor    DWORD PTR [rcx],esi
    1529:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    152c:	72 5f                	jb     158d <_fini+0x3b1>
    152e:	74 72                	je     15a2 <_fini+0x3c6>
    1530:	61                   	(bad)
    1531:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1538:	61 
    1539:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    153d:	37                   	(bad)
    153e:	72 65                	jb     15a5 <_fini+0x3c9>
    1540:	70 6c                	jo     15ae <_fini+0x3d2>
    1542:	61                   	(bad)
    1543:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    1546:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    154a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    154c:	75 5f                	jne    15ad <_fini+0x3d1>
    154e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1551:	31 37                	xor    DWORD PTR [rdi],esi
    1553:	5f                   	pop    rdi
    1554:	5f                   	pop    rdi
    1555:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1556:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1557:	72 6d                	jb     15c6 <_fini+0x3ea>
    1559:	61                   	(bad)
    155a:	6c                   	ins    BYTE PTR es:[rdi],dx
    155b:	5f                   	pop    rdi
    155c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    1563:	72 
    1564:	49 50                	rex.WB push r8
    1566:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    156a:	5f                   	pop    rdi
    156b:	45                   	rex.RB
    156c:	45 53                	rex.RB push r11
    156e:	39 5f 4e             	cmp    DWORD PTR [rdi+0x4e],ebx
    1571:	53                   	push   rbx
    1572:	36 5f                	ss pop rdi
    1574:	49 50                	rex.WB push r8
    1576:	63 53 34             	movsxd edx,DWORD PTR [rbx+0x34]
    1579:	5f                   	pop    rdi
    157a:	45                   	rex.RB
    157b:	45 53                	rex.RB push r11
    157d:	42 5f                	rex.X pop rdi
    157f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1582:	4e 53                	rex.WRX push rbx
    1584:	74 31                	je     15b7 <_fini+0x3db>
    1586:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    1589:	61                   	(bad)
    158a:	72 5f                	jb     15eb <_fini+0x40f>
    158c:	74 72                	je     1600 <_fini+0x424>
    158e:	61                   	(bad)
    158f:	69 74 73 49 63 45 31 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31314563
    1596:	31 
    1597:	65 71 5f             	gs jno 15f9 <_fini+0x41d>
    159a:	69 6e 74 5f 74 79 70 	imul   ebp,DWORD PTR [rsi+0x74],0x7079745f
    15a1:	65 45 52             	gs rex.RB push r10
    15a4:	4b 69 53 32 5f 00 5f 	rex.WXB imul rdx,QWORD PTR [r11+0x32],0x535f005f
    15ab:	53 
    15ac:	5f                   	pop    rdi
    15ad:	6c                   	ins    BYTE PTR es:[rdi],dx
    15ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15af:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    15b2:	5f                   	pop    rdi
    15b3:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    15b6:	61                   	(bad)
    15b7:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
    15ba:	79 00                	jns    15bc <_fini+0x3e0>
    15bc:	5f                   	pop    rdi
    15bd:	5a                   	pop    rdx
    15be:	4e 53                	rex.WRX push rbx
    15c0:	74 31                	je     15f3 <_fini+0x417>
    15c2:	36 61                	ss (bad)
    15c4:	6c                   	ins    BYTE PTR es:[rdi],dx
    15c5:	6c                   	ins    BYTE PTR es:[rdi],dx
    15c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15c7:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    15ca:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15cb:	72 5f                	jb     162c <_fini+0x450>
    15cd:	74 72                	je     1641 <_fini+0x465>
    15cf:	61                   	(bad)
    15d0:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    15d7:	63 
    15d8:	45                   	rex.RB
    15d9:	45 38 61 6c          	cmp    BYTE PTR [r9+0x6c],r12b
    15dd:	6c                   	ins    BYTE PTR es:[rdi],dx
    15de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15df:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    15e2:	65 45 52             	gs rex.RB push r10
    15e5:	53                   	push   rbx
    15e6:	30 5f 6d             	xor    BYTE PTR [rdi+0x6d],bl
    15e9:	50                   	push   rax
    15ea:	4b 76 00             	rex.WXB jbe 15ed <_fini+0x411>
    15ed:	5f                   	pop    rdi
    15ee:	5a                   	pop    rdx
    15ef:	4e 53                	rex.WRX push rbx
    15f1:	74 31                	je     1624 <_fini+0x448>
    15f3:	35 5f 5f 6e 65       	xor    eax,0x656e5f5f
    15f8:	77 5f                	ja     1659 <_fini+0x47d>
    15fa:	61                   	(bad)
    15fb:	6c                   	ins    BYTE PTR es:[rdi],dx
    15fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    15fd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    15fe:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    1601:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1602:	72 49                	jb     164d <_fini+0x471>
    1604:	63 45 43             	movsxd eax,DWORD PTR [rbp+0x43]
    1607:	34 45                	xor    al,0x45
    1609:	52                   	push   rdx
    160a:	4b 53                	rex.WXB push r11
    160c:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    160f:	5f                   	pop    rdi
    1610:	5a                   	pop    rdx
    1611:	4e                   	rex.WRX
    1612:	4b 53                	rex.WXB push r11
    1614:	74 37                	je     164d <_fini+0x471>
    1616:	5f                   	pop    rdi
    1617:	5f                   	pop    rdi
    1618:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    161b:	31 31                	xor    DWORD PTR [rcx],esi
    161d:	31 32                	xor    DWORD PTR [rdx],esi
    161f:	62 61 73 69 63       	(bad)
    1624:	5f                   	pop    rdi
    1625:	73 74                	jae    169b <_fini+0x4bf>
    1627:	72 69                	jb     1692 <_fini+0x4b6>
    1629:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    162a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    162f:	31 31                	xor    DWORD PTR [rcx],esi
    1631:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1634:	72 5f                	jb     1695 <_fini+0x4b9>
    1636:	74 72                	je     16aa <_fini+0x4ce>
    1638:	61                   	(bad)
    1639:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1640:	61 
    1641:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1645:	37                   	(bad)
    1646:	63 72 62             	movsxd esi,DWORD PTR [rdx+0x62]
    1649:	65 67 69 6e 45 76 00 	imul   ebp,DWORD PTR gs:[esi+0x45],0x535f0076
    1650:	5f 53 
    1652:	5f                   	pop    rdi
    1653:	73 65                	jae    16ba <_fini+0x4de>
    1655:	6c                   	ins    BYTE PTR es:[rdi],dx
    1656:	65 63 74 5f 6f       	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x6f]
    165b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    165c:	5f                   	pop    rdi
    165d:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    1660:	79 00                	jns    1662 <_fini+0x486>
    1662:	5f                   	pop    rdi
    1663:	5f                   	pop    rdi
    1664:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    166b:	73 74                	jae    16e1 <_fini+0x505>
    166d:	72 74                	jb     16e3 <_fini+0x507>
    166f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1670:	6c                   	ins    BYTE PTR es:[rdi],dx
    1671:	6c                   	ins    BYTE PTR es:[rdi],dx
    1672:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1675:	4e                   	rex.WRX
    1676:	4b 53                	rex.WXB push r11
    1678:	74 34                	je     16ae <_fini+0x4d2>
    167a:	70 61                	jo     16dd <_fini+0x501>
    167c:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    1683:	45 61                	rex.RB (bad)
    1685:	53                   	push   rbx
    1686:	45 52                	rex.RB push r10
    1688:	4b 53                	rex.WXB push r11
    168a:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    168d:	63 6c 31 39          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x39]
    1691:	5f                   	pop    rdi
    1692:	53                   	push   rbx
    1693:	5f                   	pop    rdi
    1694:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    1697:	73 74                	jae    170d <_fini+0x531>
    1699:	5f                   	pop    rdi
    169a:	61                   	(bad)
    169b:	73 73                	jae    1710 <_fini+0x534>
    169d:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    16a4:	49 52                	rex.WB push r10
    16a6:	4b 54                	rex.WXB push r12
    16a8:	5f                   	pop    rdi
    16a9:	52                   	push   rdx
    16aa:	4b 54                	rex.WXB push r12
    16ac:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    16af:	45 00 5f 5f          	add    BYTE PTR [r15+0x5f],r11b
    16b3:	73 76                	jae    172b <_fini+0x54f>
    16b5:	5f                   	pop    rdi
    16b6:	77 72                	ja     172a <_fini+0x54e>
    16b8:	61                   	(bad)
    16b9:	70 70                	jo     172b <_fini+0x54f>
    16bb:	65 72 00             	gs jb  16be <_fini+0x4e2>
    16be:	72 65                	jb     1725 <_fini+0x549>
    16c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    16c1:	61                   	(bad)
    16c2:	6d                   	ins    DWORD PTR es:[rdi],dx
    16c3:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
    16c7:	4f 5f                	rex.WRXB pop r15
    16c9:	72 65                	jb     1730 <_fini+0x554>
    16cb:	61                   	(bad)
    16cc:	64 5f                	fs pop rdi
    16ce:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    16d0:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    16d4:	4e 53                	rex.WRX push rbx
    16d6:	74 31                	je     1709 <_fini+0x52d>
    16d8:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    16db:	61                   	(bad)
    16dc:	72 5f                	jb     173d <_fini+0x561>
    16de:	74 72                	je     1752 <_fini+0x576>
    16e0:	61                   	(bad)
    16e1:	69 74 73 49 63 45 34 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63344563
    16e8:	63 
    16e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    16ea:	70 79                	jo     1765 <_fini+0x589>
    16ec:	45 50                	rex.RB push r8
    16ee:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
    16f1:	63 6d 00             	movsxd ebp,DWORD PTR [rbp+0x0]
    16f4:	5f                   	pop    rdi
    16f5:	5a                   	pop    rdx
    16f6:	4e 53                	rex.WRX push rbx
    16f8:	74 37                	je     1731 <_fini+0x555>
    16fa:	5f                   	pop    rdi
    16fb:	5f                   	pop    rdi
    16fc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    16ff:	31 31                	xor    DWORD PTR [rcx],esi
    1701:	31 32                	xor    DWORD PTR [rdx],esi
    1703:	62 61 73 69 63       	(bad)
    1708:	5f                   	pop    rdi
    1709:	73 74                	jae    177f <_fini+0x5a3>
    170b:	72 69                	jb     1776 <_fini+0x59a>
    170d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    170e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1713:	31 31                	xor    DWORD PTR [rcx],esi
    1715:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1718:	72 5f                	jb     1779 <_fini+0x59d>
    171a:	74 72                	je     178e <_fini+0x5b2>
    171c:	61                   	(bad)
    171d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1724:	61 
    1725:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1729:	37                   	(bad)
    172a:	72 65                	jb     1791 <_fini+0x5b5>
    172c:	70 6c                	jo     179a <_fini+0x5be>
    172e:	61                   	(bad)
    172f:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    1732:	6d                   	ins    DWORD PTR es:[rdi],dx
    1733:	6d                   	ins    DWORD PTR es:[rdi],dx
    1734:	6d                   	ins    DWORD PTR es:[rdi],dx
    1735:	63 00                	movsxd eax,DWORD PTR [rax]
    1737:	5f                   	pop    rdi
    1738:	5a                   	pop    rdx
    1739:	4e                   	rex.WRX
    173a:	4b 53                	rex.WXB push r11
    173c:	74 31                	je     176f <_fini+0x593>
    173e:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    1743:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    1746:	74 69                	je     17b1 <_fini+0x5d5>
    1748:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1749:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    174a:	5f                   	pop    rdi
    174b:	70 74                	jo     17c1 <_fini+0x5e5>
    174d:	72 31                	jb     1780 <_fini+0x5a4>
    174f:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    1752:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    1755:	74 69                	je     17c0 <_fini+0x5e4>
    1757:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1758:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1759:	5f                   	pop    rdi
    175a:	70 74                	jo     17d0 <_fini+0x5f4>
    175c:	72 36                	jb     1794 <_fini+0x5b8>
    175e:	5f                   	pop    rdi
    175f:	4d 5f                	rex.WRB pop r15
    1761:	67 65 74 45          	addr32 gs je 17aa <_fini+0x5ce>
    1765:	76 00                	jbe    1767 <_fini+0x58b>
    1767:	5f                   	pop    rdi
    1768:	5a                   	pop    rdx
    1769:	4e                   	rex.WRX
    176a:	4b 53                	rex.WXB push r11
    176c:	74 38                	je     17a6 <_fini+0x5ca>
    176e:	5f                   	pop    rdi
    176f:	5f                   	pop    rdi
    1770:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    1772:	72 6d                	jb     17e1 <_fini+0x605>
    1774:	61                   	(bad)
    1775:	74 31                	je     17a8 <_fini+0x5cc>
    1777:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    177a:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    1781:	72 49                	jb     17cc <_fini+0x5f0>
    1783:	63 45 31             	movsxd eax,DWORD PTR [rbp+0x31]
    1786:	30 5f 4d             	xor    BYTE PTR [rdi+0x4d],bl
    1789:	5f                   	pop    rdi
    178a:	72 65                	jb     17f1 <_fini+0x615>
    178c:	73 65                	jae    17f3 <_fini+0x617>
    178e:	72 76                	jb     1806 <_fini+0x62a>
    1790:	65 45 6d             	gs rex.RB ins DWORD PTR es:[rdi],dx
    1793:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1796:	4e                   	rex.WRX
    1797:	4b 53                	rex.WXB push r11
    1799:	74 37                	je     17d2 <_fini+0x5f6>
    179b:	5f                   	pop    rdi
    179c:	5f                   	pop    rdi
    179d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    17a0:	31 31                	xor    DWORD PTR [rcx],esi
    17a2:	31 32                	xor    DWORD PTR [rdx],esi
    17a4:	62 61 73 69 63       	(bad)
    17a9:	5f                   	pop    rdi
    17aa:	73 74                	jae    1820 <_fini+0x644>
    17ac:	72 69                	jb     1817 <_fini+0x63b>
    17ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    17af:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    17b4:	31 31                	xor    DWORD PTR [rcx],esi
    17b6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    17b9:	72 5f                	jb     181a <_fini+0x63e>
    17bb:	74 72                	je     182f <_fini+0x653>
    17bd:	61                   	(bad)
    17be:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    17c5:	61 
    17c6:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    17ca:	36 73 75             	ss jae 1842 <_fini+0x666>
    17cd:	62 73 74 72 45       	(bad)
    17d2:	6d                   	ins    DWORD PTR es:[rdi],dx
    17d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    17d4:	00 6c 6f 63          	add    BYTE PTR [rdi+rbp*2+0x63],ch
    17d8:	61                   	(bad)
    17d9:	6c                   	ins    BYTE PTR es:[rdi],dx
    17da:	74 69                	je     1845 <_fini+0x669>
    17dc:	6d                   	ins    DWORD PTR es:[rdi],dx
    17dd:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    17e1:	4e 53                	rex.WRX push rbx
    17e3:	74 31                	je     1816 <_fini+0x63a>
    17e5:	36 72 65             	ss jb  184d <_fini+0x671>
    17e8:	76 65                	jbe    184f <_fini+0x673>
    17ea:	72 73                	jb     185f <_fini+0x683>
    17ec:	65 5f                	gs pop rdi
    17ee:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    17f5:	72 
    17f6:	49                   	rex.WB
    17f7:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    17fb:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    17fd:	75 5f                	jne    185e <_fini+0x682>
    17ff:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1802:	31 37                	xor    DWORD PTR [rdi],esi
    1804:	5f                   	pop    rdi
    1805:	5f                   	pop    rdi
    1806:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1807:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1808:	72 6d                	jb     1877 <_fini+0x69b>
    180a:	61                   	(bad)
    180b:	6c                   	ins    BYTE PTR es:[rdi],dx
    180c:	5f                   	pop    rdi
    180d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    1814:	72 
    1815:	49 50                	rex.WB push r8
    1817:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    181a:	34 73                	xor    al,0x73
    181c:	70 61                	jo     187f <_fini+0x6a3>
    181e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    181f:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    1824:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    1827:	36 37                	ss (bad)
    1829:	34 34                	xor    al,0x34
    182b:	30 37                	xor    BYTE PTR [rdi],dh
    182d:	33 37                	xor    esi,DWORD PTR [rdi]
    182f:	30 39                	xor    BYTE PTR [rcx],bh
    1831:	35 35 31 36 31       	xor    eax,0x31363135
    1836:	35 45 45 45 45       	xor    eax,0x45454545
    183b:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    183d:	49                   	rex.WB
    183e:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    1840:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1843:	4e 53                	rex.WRX push rbx
    1845:	74 38                	je     187f <_fini+0x6a3>
    1847:	5f                   	pop    rdi
    1848:	5f                   	pop    rdi
    1849:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    184b:	72 6d                	jb     18ba <_fini+0x6de>
    184d:	61                   	(bad)
    184e:	74 35                	je     1885 <_fini+0x6a9>
    1850:	5f                   	pop    rdi
    1851:	53                   	push   rbx
    1852:	69 6e 6b 49 63 45 31 	imul   ebp,DWORD PTR [rsi+0x6b],0x31456349
    1859:	31 5f 4d             	xor    DWORD PTR [rdi+0x4d],ebx
    185c:	5f                   	pop    rdi
    185d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    185e:	76 65                	jbe    18c5 <_fini+0x6e9>
    1860:	72 66                	jb     18c8 <_fini+0x6ec>
    1862:	6c                   	ins    BYTE PTR es:[rdi],dx
    1863:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1864:	77 45                	ja     18ab <_fini+0x6cf>
    1866:	76 00                	jbe    1868 <_fini+0x68c>
    1868:	5f                   	pop    rdi
    1869:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
    186b:	6c                   	ins    BYTE PTR es:[rdi],dx
    186c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    186d:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
    1870:	69 64 65 72 00 77 63 	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x73637700
    1877:	73 
    1878:	73 74                	jae    18ee <_fini+0x712>
    187a:	72 00                	jb     187c <_fini+0x6a0>
    187c:	66 72 65             	data16 jb 18e4 <_fini+0x708>
    187f:	61                   	(bad)
    1880:	64 00 69 6e          	add    BYTE PTR fs:[rcx+0x6e],ch
    1884:	74 5f                	je     18e5 <_fini+0x709>
    1886:	66 72 61             	data16 jb 18ea <_fini+0x70e>
    1889:	63 5f 64             	movsxd ebx,DWORD PTR [rdi+0x64]
    188c:	69 67 69 74 73 00 5f 	imul   esp,DWORD PTR [rdi+0x69],0x5f007374
    1893:	5a                   	pop    rdx
    1894:	4e                   	rex.WRX
    1895:	4b 53                	rex.WXB push r11
    1897:	74 37                	je     18d0 <_fini+0x6f4>
    1899:	5f                   	pop    rdi
    189a:	5f                   	pop    rdi
    189b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    189e:	31 31                	xor    DWORD PTR [rcx],esi
    18a0:	31 32                	xor    DWORD PTR [rdx],esi
    18a2:	62 61 73 69 63       	(bad)
    18a7:	5f                   	pop    rdi
    18a8:	73 74                	jae    191e <_fini+0x742>
    18aa:	72 69                	jb     1915 <_fini+0x739>
    18ac:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18ad:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    18b2:	31 31                	xor    DWORD PTR [rcx],esi
    18b4:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    18b7:	72 5f                	jb     1918 <_fini+0x73c>
    18b9:	74 72                	je     192d <_fini+0x751>
    18bb:	61                   	(bad)
    18bc:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    18c3:	61 
    18c4:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    18c8:	37                   	(bad)
    18c9:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    18cc:	70 61                	jo     192f <_fini+0x753>
    18ce:	72 65                	jb     1935 <_fini+0x759>
    18d0:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    18d2:	6d                   	ins    DWORD PTR es:[rdi],dx
    18d3:	50                   	push   rax
    18d4:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    18d8:	5f                   	pop    rdi
    18d9:	4d 5f                	rex.WRB pop r15
    18db:	64 65 73 74          	fs gs jae 1953 <_fini+0x777>
    18df:	72 6f                	jb     1950 <_fini+0x774>
    18e1:	79 00                	jns    18e3 <_fini+0x707>
    18e3:	5f                   	pop    rdi
    18e4:	5a                   	pop    rdx
    18e5:	4e 53                	rex.WRX push rbx
    18e7:	74 34                	je     191d <_fini+0x741>
    18e9:	73 70                	jae    195b <_fini+0x77f>
    18eb:	61                   	(bad)
    18ec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    18ed:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    18f2:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    18f5:	36 37                	ss (bad)
    18f7:	34 34                	xor    al,0x34
    18f9:	30 37                	xor    BYTE PTR [rdi],dh
    18fb:	33 37                	xor    esi,DWORD PTR [rdi]
    18fd:	30 39                	xor    BYTE PTR [rcx],bh
    18ff:	35 35 31 36 31       	xor    eax,0x31363135
    1904:	35 45 45 61 53       	xor    eax,0x53614545
    1909:	45 52                	rex.RB push r10
    190b:	4b 53                	rex.WXB push r11
    190d:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    1910:	64 65 76 69          	fs gs jbe 197d <_fini+0x7a1>
    1914:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    1917:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1918:	72 5f                	jb     1979 <_fini+0x79d>
    191a:	72 65                	jb     1981 <_fini+0x7a5>
    191c:	73 6f                	jae    198d <_fini+0x7b1>
    191e:	75 72                	jne    1992 <_fini+0x7b6>
    1920:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    1923:	62 75 73 79 00       	(bad)
    1928:	5f                   	pop    rdi
    1929:	5a                   	pop    rdx
    192a:	4e 53                	rex.WRX push rbx
    192c:	74 38                	je     1966 <_fini+0x78a>
    192e:	5f                   	pop    rdi
    192f:	5f                   	pop    rdi
    1930:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    1932:	72 6d                	jb     19a1 <_fini+0x7c5>
    1934:	61                   	(bad)
    1935:	74 35                	je     196c <_fini+0x790>
    1937:	5f                   	pop    rdi
    1938:	53                   	push   rbx
    1939:	69 6e 6b 49 63 45 37 	imul   ebp,DWORD PTR [rsi+0x6b],0x37456349
    1940:	5f                   	pop    rdi
    1941:	4d 5f                	rex.WRB pop r15
    1943:	62 75 6d 70 45       	(bad)
    1948:	6d                   	ins    DWORD PTR es:[rdi],dx
    1949:	00 72 66             	add    BYTE PTR [rdx+0x66],dh
    194c:	69 6e 64 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x64],0x4e5a5f00
    1953:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    1957:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1959:	75 5f                	jne    19ba <_fini+0x7de>
    195b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    195e:	31 37                	xor    DWORD PTR [rdi],esi
    1960:	5f                   	pop    rdi
    1961:	5f                   	pop    rdi
    1962:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1963:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1964:	72 6d                	jb     19d3 <_fini+0x7f7>
    1966:	61                   	(bad)
    1967:	6c                   	ins    BYTE PTR es:[rdi],dx
    1968:	5f                   	pop    rdi
    1969:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    1970:	72 
    1971:	49 50                	rex.WB push r8
    1973:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    1976:	74 37                	je     19af <_fini+0x7d3>
    1978:	5f                   	pop    rdi
    1979:	5f                   	pop    rdi
    197a:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    197d:	31 31                	xor    DWORD PTR [rcx],esi
    197f:	31 32                	xor    DWORD PTR [rdx],esi
    1981:	62 61 73 69 63       	(bad)
    1986:	5f                   	pop    rdi
    1987:	73 74                	jae    19fd <_fini+0x821>
    1989:	72 69                	jb     19f4 <_fini+0x818>
    198b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    198c:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1991:	31 31                	xor    DWORD PTR [rcx],esi
    1993:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1996:	72 5f                	jb     19f7 <_fini+0x81b>
    1998:	74 72                	je     1a0c <_fini+0x830>
    199a:	61                   	(bad)
    199b:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    19a2:	61 
    19a3:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    19a7:	45                   	rex.RB
    19a8:	45                   	rex.RB
    19a9:	64 65 45 76 00       	fs gs rex.RB jbe 19ae <_fini+0x7d2>
    19ae:	72 65                	jb     1a15 <_fini+0x839>
    19b0:	6d                   	ins    DWORD PTR es:[rdi],dx
    19b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19b2:	76 65                	jbe    1a19 <_fini+0x83d>
    19b4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    19b7:	4e                   	rex.WRX
    19b8:	4b 53                	rex.WXB push r11
    19ba:	74 37                	je     19f3 <_fini+0x817>
    19bc:	5f                   	pop    rdi
    19bd:	5f                   	pop    rdi
    19be:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    19c1:	31 31                	xor    DWORD PTR [rcx],esi
    19c3:	31 32                	xor    DWORD PTR [rdx],esi
    19c5:	62 61 73 69 63       	(bad)
    19ca:	5f                   	pop    rdi
    19cb:	73 74                	jae    1a41 <_fini+0x865>
    19cd:	72 69                	jb     1a38 <_fini+0x85c>
    19cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    19d0:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    19d5:	31 31                	xor    DWORD PTR [rcx],esi
    19d7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    19da:	72 5f                	jb     1a3b <_fini+0x85f>
    19dc:	74 72                	je     1a50 <_fini+0x874>
    19de:	61                   	(bad)
    19df:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    19e6:	61 
    19e7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    19eb:	34 63                	xor    al,0x63
    19ed:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19ee:	70 79                	jo     1a69 <_fini+0x88d>
    19f0:	45 50                	rex.RB push r8
    19f2:	63 6d 6d             	movsxd ebp,DWORD PTR [rbp+0x6d]
    19f5:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    19f8:	73 74                	jae    1a6e <_fini+0x892>
    19fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    19fb:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    19ff:	75 69                	jne    1a6a <_fini+0x88e>
    1a01:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a02:	74 6d                	je     1a71 <_fini+0x895>
    1a04:	61                   	(bad)
    1a05:	78 5f                	js     1a66 <_fini+0x88a>
    1a07:	74 00                	je     1a09 <_fini+0x82d>
    1a09:	77 63                	ja     1a6e <_fini+0x892>
    1a0b:	73 74                	jae    1a81 <_fini+0x8a5>
    1a0d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a0e:	66 00 77 63          	data16 add BYTE PTR [rdi+0x63],dh
    1a12:	73 74                	jae    1a88 <_fini+0x8ac>
    1a14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1a15:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    1a18:	5a                   	pop    rdx
    1a19:	53                   	push   rbx
    1a1a:	74 38                	je     1a54 <_fini+0x878>
    1a1c:	74 6f                	je     1a8d <_fini+0x8b1>
    1a1e:	5f                   	pop    rdi
    1a1f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1a22:	72 73                	jb     1a97 <_fini+0x8bb>
    1a24:	50                   	push   rax
    1a25:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    1a28:	44                   	rex.R
    1a29:	46 31 36             	rex.RX xor DWORD PTR [rsi],r14d
    1a2c:	5f                   	pop    rdi
    1a2d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1a30:	4e                   	rex.WRX
    1a31:	4b 53                	rex.WXB push r11
    1a33:	74 31                	je     1a66 <_fini+0x88a>
    1a35:	37                   	(bad)
    1a36:	62 61 73 69 63       	(bad)
    1a3b:	5f                   	pop    rdi
    1a3c:	73 74                	jae    1ab2 <_fini+0x8d6>
    1a3e:	72 69                	jb     1aa9 <_fini+0x8cd>
    1a40:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a41:	67 5f                	addr32 pop rdi
    1a43:	76 69                	jbe    1aae <_fini+0x8d2>
    1a45:	65 77 49             	gs ja  1a91 <_fini+0x8b5>
    1a48:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    1a4b:	31 31                	xor    DWORD PTR [rcx],esi
    1a4d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1a50:	72 5f                	jb     1ab1 <_fini+0x8d5>
    1a52:	74 72                	je     1ac6 <_fini+0x8ea>
    1a54:	61                   	(bad)
    1a55:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    1a5c:	34 
    1a5d:	64 61                	fs (bad)
    1a5f:	74 61                	je     1ac2 <_fini+0x8e6>
    1a61:	45 76 00             	rex.RB jbe 1a64 <_fini+0x888>
    1a64:	5f                   	pop    rdi
    1a65:	5a                   	pop    rdx
    1a66:	53                   	push   rbx
    1a67:	74 38                	je     1aa1 <_fini+0x8c5>
    1a69:	74 6f                	je     1ada <_fini+0x8fe>
    1a6b:	5f                   	pop    rdi
    1a6c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1a6f:	72 73                	jb     1ae4 <_fini+0x908>
    1a71:	50                   	push   rax
    1a72:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    1a75:	44                   	rex.R
    1a76:	46 31 36             	rex.RX xor DWORD PTR [rsi],r14d
    1a79:	62                   	(bad)
    1a7a:	00 74 6f 6f          	add    BYTE PTR [rdi+rbp*2+0x6f],dh
    1a7e:	5f                   	pop    rdi
    1a7f:	6d                   	ins    DWORD PTR es:[rdi],dx
    1a80:	61                   	(bad)
    1a81:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a82:	79 5f                	jns    1ae3 <_fini+0x907>
    1a84:	66 69 6c 65 73 5f 6f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
    1a8b:	70 65                	jo     1af2 <_fini+0x916>
    1a8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1a8e:	5f                   	pop    rdi
    1a8f:	69 6e 5f 73 79 73 74 	imul   ebp,DWORD PTR [rsi+0x5f],0x74737973
    1a96:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1a98:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    1a9b:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
    1a9d:	70 65                	jo     1b04 <_fini+0x928>
    1a9f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1aa0:	00 66 73             	add    BYTE PTR [rsi+0x73],ah
    1aa3:	74 72                	je     1b17 <_fini+0x93b>
    1aa5:	65 61                	gs (bad)
    1aa7:	6d                   	ins    DWORD PTR es:[rdi],dx
    1aa8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1aab:	4e 53                	rex.WRX push rbx
    1aad:	74 37                	je     1ae6 <_fini+0x90a>
    1aaf:	5f                   	pop    rdi
    1ab0:	5f                   	pop    rdi
    1ab1:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1ab4:	31 31                	xor    DWORD PTR [rcx],esi
    1ab6:	31 32                	xor    DWORD PTR [rdx],esi
    1ab8:	62 61 73 69 63       	(bad)
    1abd:	5f                   	pop    rdi
    1abe:	73 74                	jae    1b34 <_fini+0x958>
    1ac0:	72 69                	jb     1b2b <_fini+0x94f>
    1ac2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ac3:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1ac8:	31 31                	xor    DWORD PTR [rcx],esi
    1aca:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1acd:	72 5f                	jb     1b2e <_fini+0x952>
    1acf:	74 72                	je     1b43 <_fini+0x967>
    1ad1:	61                   	(bad)
    1ad2:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1ad9:	61 
    1ada:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1ade:	35 66 72 6f 6e       	xor    eax,0x6e6f7266
    1ae3:	74 45                	je     1b2a <_fini+0x94e>
    1ae5:	76 00                	jbe    1ae7 <_fini+0x90b>
    1ae7:	5f                   	pop    rdi
    1ae8:	5a                   	pop    rdx
    1ae9:	4e 53                	rex.WRX push rbx
    1aeb:	74 37                	je     1b24 <_fini+0x948>
    1aed:	5f                   	pop    rdi
    1aee:	5f                   	pop    rdi
    1aef:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1af2:	31 31                	xor    DWORD PTR [rcx],esi
    1af4:	31 32                	xor    DWORD PTR [rdx],esi
    1af6:	62 61 73 69 63       	(bad)
    1afb:	5f                   	pop    rdi
    1afc:	73 74                	jae    1b72 <_fini+0x996>
    1afe:	72 69                	jb     1b69 <_fini+0x98d>
    1b00:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b01:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1b06:	31 31                	xor    DWORD PTR [rcx],esi
    1b08:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1b0b:	72 5f                	jb     1b6c <_fini+0x990>
    1b0d:	74 72                	je     1b81 <_fini+0x9a5>
    1b0f:	61                   	(bad)
    1b10:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1b17:	61 
    1b18:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1b1c:	61                   	(bad)
    1b1d:	53                   	push   rbx
    1b1e:	45 50                	rex.RB push r8
    1b20:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    1b23:	5f                   	pop    rdi
    1b24:	53                   	push   rbx
    1b25:	5f                   	pop    rdi
    1b26:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    1b29:	79 00                	jns    1b2b <_fini+0x94f>
    1b2b:	7e 5f                	jle    1b8c <_fini+0x9b0>
    1b2d:	53                   	push   rbx
    1b2e:	69 6e 6b 00 65 6e 64 	imul   ebp,DWORD PTR [rsi+0x6b],0x646e6500
    1b35:	73 5f                	jae    1b96 <_fini+0x9ba>
    1b37:	77 69                	ja     1ba2 <_fini+0x9c6>
    1b39:	74 68                	je     1ba3 <_fini+0x9c7>
    1b3b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1b3e:	4e 53                	rex.WRX push rbx
    1b40:	74 37                	je     1b79 <_fini+0x99d>
    1b42:	5f                   	pop    rdi
    1b43:	5f                   	pop    rdi
    1b44:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1b47:	31 31                	xor    DWORD PTR [rcx],esi
    1b49:	31 32                	xor    DWORD PTR [rdx],esi
    1b4b:	62 61 73 69 63       	(bad)
    1b50:	5f                   	pop    rdi
    1b51:	73 74                	jae    1bc7 <_fini+0x9eb>
    1b53:	72 69                	jb     1bbe <_fini+0x9e2>
    1b55:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b56:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1b5b:	31 31                	xor    DWORD PTR [rcx],esi
    1b5d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1b60:	72 5f                	jb     1bc1 <_fini+0x9e5>
    1b62:	74 72                	je     1bd6 <_fini+0x9fa>
    1b64:	61                   	(bad)
    1b65:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1b6c:	61 
    1b6d:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1b71:	61                   	(bad)
    1b72:	53                   	push   rbx
    1b73:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    1b76:	5f                   	pop    rdi
    1b77:	5a                   	pop    rdx
    1b78:	4e 53                	rex.WRX push rbx
    1b7a:	74 37                	je     1bb3 <_fini+0x9d7>
    1b7c:	5f                   	pop    rdi
    1b7d:	5f                   	pop    rdi
    1b7e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1b81:	31 31                	xor    DWORD PTR [rcx],esi
    1b83:	31 32                	xor    DWORD PTR [rdx],esi
    1b85:	62 61 73 69 63       	(bad)
    1b8a:	5f                   	pop    rdi
    1b8b:	73 74                	jae    1c01 <_fini+0xa25>
    1b8d:	72 69                	jb     1bf8 <_fini+0xa1c>
    1b8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1b90:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1b95:	31 31                	xor    DWORD PTR [rcx],esi
    1b97:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1b9a:	72 5f                	jb     1bfb <_fini+0xa1f>
    1b9c:	74 72                	je     1c10 <_fini+0xa34>
    1b9e:	61                   	(bad)
    1b9f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1ba6:	61 
    1ba7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1bab:	37                   	(bad)
    1bac:	72 65                	jb     1c13 <_fini+0xa37>
    1bae:	70 6c                	jo     1c1c <_fini+0xa40>
    1bb0:	61                   	(bad)
    1bb1:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    1bb4:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    1bb8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1bba:	75 5f                	jne    1c1b <_fini+0xa3f>
    1bbc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1bbf:	31 37                	xor    DWORD PTR [rdi],esi
    1bc1:	5f                   	pop    rdi
    1bc2:	5f                   	pop    rdi
    1bc3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1bc4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bc5:	72 6d                	jb     1c34 <_fini+0xa58>
    1bc7:	61                   	(bad)
    1bc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    1bc9:	5f                   	pop    rdi
    1bca:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    1bd1:	72 
    1bd2:	49 50                	rex.WB push r8
    1bd4:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    1bd8:	5f                   	pop    rdi
    1bd9:	45                   	rex.RB
    1bda:	45 53                	rex.RB push r11
    1bdc:	39 5f 52             	cmp    DWORD PTR [rdi+0x52],ebx
    1bdf:	4b 53                	rex.WXB push r11
    1be1:	34 5f                	xor    al,0x5f
    1be3:	00 6c 6c 64          	add    BYTE PTR [rsp+rbp*2+0x64],ch
    1be7:	69 76 00 5f 5f 63 6c 	imul   esi,DWORD PTR [rsi+0x0],0x6c635f5f
    1bee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1bef:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    1bf2:	74 00                	je     1bf4 <_fini+0xa18>
    1bf4:	5f                   	pop    rdi
    1bf5:	5a                   	pop    rdx
    1bf6:	4e                   	rex.WRX
    1bf7:	4b 53                	rex.WXB push r11
    1bf9:	74 31                	je     1c2c <_fini+0xa50>
    1bfb:	37                   	(bad)
    1bfc:	62 61 73 69 63       	(bad)
    1c01:	5f                   	pop    rdi
    1c02:	73 74                	jae    1c78 <_fini+0xa9c>
    1c04:	72 69                	jb     1c6f <_fini+0xa93>
    1c06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c07:	67 5f                	addr32 pop rdi
    1c09:	76 69                	jbe    1c74 <_fini+0xa98>
    1c0b:	65 77 49             	gs ja  1c57 <_fini+0xa7b>
    1c0e:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    1c11:	31 31                	xor    DWORD PTR [rcx],esi
    1c13:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1c16:	72 5f                	jb     1c77 <_fini+0xa9b>
    1c18:	74 72                	je     1c8c <_fini+0xab0>
    1c1a:	61                   	(bad)
    1c1b:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x33454563
    1c22:	33 
    1c23:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1c25:	64 45 76 00          	fs rex.RB jbe 1c29 <_fini+0xa4d>
    1c29:	73 63                	jae    1c8e <_fini+0xab2>
    1c2b:	69 65 6e 74 69 66 69 	imul   esp,DWORD PTR [rbp+0x6e],0x69666974
    1c32:	63 00                	movsxd eax,DWORD PTR [rax]
    1c34:	5f                   	pop    rdi
    1c35:	5a                   	pop    rdx
    1c36:	4e 53                	rex.WRX push rbx
    1c38:	74 31                	je     1c6b <_fini+0xa8f>
    1c3a:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    1c3f:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    1c42:	74 69                	je     1cad <_fini+0xad1>
    1c44:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c45:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c46:	5f                   	pop    rdi
    1c47:	70 74                	jo     1cbd <_fini+0xae1>
    1c49:	72 31                	jb     1c7c <_fini+0xaa0>
    1c4b:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    1c4e:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    1c51:	74 69                	je     1cbc <_fini+0xae0>
    1c53:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c54:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1c55:	5f                   	pop    rdi
    1c56:	70 74                	jo     1ccc <_fini+0xaf0>
    1c58:	72 61                	jb     1cbb <_fini+0xadf>
    1c5a:	53                   	push   rbx
    1c5b:	45 52                	rex.RB push r10
    1c5d:	4b 53                	rex.WXB push r11
    1c5f:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    1c62:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1c63:	70 65                	jo     1cca <_fini+0xaee>
    1c65:	72 61                	jb     1cc8 <_fini+0xaec>
    1c67:	74 6f                	je     1cd8 <_fini+0xafc>
    1c69:	72 2a                	jb     1c95 <_fini+0xab9>
    1c6b:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    1c6e:	65 72 61             	gs jb  1cd2 <_fini+0xaf6>
    1c71:	74 6f                	je     1ce2 <_fini+0xb06>
    1c73:	72 2b                	jb     1ca0 <_fini+0xac4>
    1c75:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    1c78:	65 72 61             	gs jb  1cdc <_fini+0xb00>
    1c7b:	74 6f                	je     1cec <_fini+0xb10>
    1c7d:	72 2d                	jb     1cac <_fini+0xad0>
    1c7f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    1c82:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1c84:	75 5f                	jne    1ce5 <_fini+0xb09>
    1c86:	64 65 62 75 67 00 5f 	(bad)
    1c8d:	5f                   	pop    rdi
    1c8e:	69 6e 74 31 36 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3631
    1c95:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    1c98:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    1c9a:	73 65                	jae    1d01 <_fini+0xb25>
    1c9c:	74 00                	je     1c9e <_fini+0xac2>
    1c9e:	5f                   	pop    rdi
    1c9f:	5a                   	pop    rdx
    1ca0:	4e 53                	rex.WRX push rbx
    1ca2:	74 37                	je     1cdb <_fini+0xaff>
    1ca4:	5f                   	pop    rdi
    1ca5:	5f                   	pop    rdi
    1ca6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1ca9:	31 31                	xor    DWORD PTR [rcx],esi
    1cab:	31 32                	xor    DWORD PTR [rdx],esi
    1cad:	62 61 73 69 63       	(bad)
    1cb2:	5f                   	pop    rdi
    1cb3:	73 74                	jae    1d29 <_fini+0xb4d>
    1cb5:	72 69                	jb     1d20 <_fini+0xb44>
    1cb7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cb8:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1cbd:	31 31                	xor    DWORD PTR [rcx],esi
    1cbf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1cc2:	72 5f                	jb     1d23 <_fini+0xb47>
    1cc4:	74 72                	je     1d38 <_fini+0xb5c>
    1cc6:	61                   	(bad)
    1cc7:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1cce:	61 
    1ccf:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1cd3:	31 32                	xor    DWORD PTR [rdx],esi
    1cd5:	5f                   	pop    rdi
    1cd6:	5f                   	pop    rdi
    1cd7:	73 76                	jae    1d4f <_fini+0xb73>
    1cd9:	5f                   	pop    rdi
    1cda:	77 72                	ja     1d4e <_fini+0xb72>
    1cdc:	61                   	(bad)
    1cdd:	70 70                	jo     1d4f <_fini+0xb73>
    1cdf:	65 72 43             	gs jb  1d25 <_fini+0xb49>
    1ce2:	34 45                	xor    al,0x45
    1ce4:	53                   	push   rbx
    1ce5:	74 31                	je     1d18 <_fini+0xb3c>
    1ce7:	37                   	(bad)
    1ce8:	62 61 73 69 63       	(bad)
    1ced:	5f                   	pop    rdi
    1cee:	73 74                	jae    1d64 <_fini+0xb88>
    1cf0:	72 69                	jb     1d5b <_fini+0xb7f>
    1cf2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1cf3:	67 5f                	addr32 pop rdi
    1cf5:	76 69                	jbe    1d60 <_fini+0xb84>
    1cf7:	65 77 49             	gs ja  1d43 <_fini+0xb67>
    1cfa:	63 53 32             	movsxd edx,DWORD PTR [rbx+0x32]
    1cfd:	5f                   	pop    rdi
    1cfe:	45 00 6f 70          	add    BYTE PTR [r15+0x70],r13b
    1d02:	65 72 61             	gs jb  1d66 <_fini+0xb8a>
    1d05:	74 6f                	je     1d76 <_fini+0xb9a>
    1d07:	72 3d                	jb     1d46 <_fini+0xb6a>
    1d09:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1d0c:	4e 53                	rex.WRX push rbx
    1d0e:	74 38                	je     1d48 <_fini+0xb6c>
    1d10:	5f                   	pop    rdi
    1d11:	5f                   	pop    rdi
    1d12:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    1d14:	72 6d                	jb     1d83 <_fini+0xba7>
    1d16:	61                   	(bad)
    1d17:	74 31                	je     1d4a <_fini+0xb6e>
    1d19:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    1d1c:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    1d23:	72 49                	jb     1d6e <_fini+0xb92>
    1d25:	63 45 43             	movsxd eax,DWORD PTR [rbp+0x43]
    1d28:	34 45                	xor    al,0x45
    1d2a:	76 00                	jbe    1d2c <_fini+0xb50>
    1d2c:	73 65                	jae    1d93 <_fini+0xbb7>
    1d2e:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    1d31:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    1d35:	4e                   	rex.WRX
    1d36:	4b 53                	rex.WXB push r11
    1d38:	74 31                	je     1d6b <_fini+0xb8f>
    1d3a:	37                   	(bad)
    1d3b:	62 61 73 69 63       	(bad)
    1d40:	5f                   	pop    rdi
    1d41:	73 74                	jae    1db7 <_fini+0xbdb>
    1d43:	72 69                	jb     1dae <_fini+0xbd2>
    1d45:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d46:	67 5f                	addr32 pop rdi
    1d48:	76 69                	jbe    1db3 <_fini+0xbd7>
    1d4a:	65 77 49             	gs ja  1d96 <_fini+0xbba>
    1d4d:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    1d50:	31 31                	xor    DWORD PTR [rcx],esi
    1d52:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1d55:	72 5f                	jb     1db6 <_fini+0xbda>
    1d57:	74 72                	je     1dcb <_fini+0xbef>
    1d59:	61                   	(bad)
    1d5a:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    1d61:	35 
    1d62:	72 66                	jb     1dca <_fini+0xbee>
    1d64:	69 6e 64 45 50 4b 63 	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
    1d6b:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d6c:	6d                   	ins    DWORD PTR es:[rdi],dx
    1d6d:	00 70 75             	add    BYTE PTR [rax+0x75],dh
    1d70:	74 77                	je     1de9 <_fini+0xc0d>
    1d72:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1d75:	72 00                	jb     1d77 <_fini+0xb9b>
    1d77:	5f                   	pop    rdi
    1d78:	5a                   	pop    rdx
    1d79:	4e 53                	rex.WRX push rbx
    1d7b:	74 37                	je     1db4 <_fini+0xbd8>
    1d7d:	5f                   	pop    rdi
    1d7e:	5f                   	pop    rdi
    1d7f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1d82:	31 31                	xor    DWORD PTR [rcx],esi
    1d84:	31 32                	xor    DWORD PTR [rdx],esi
    1d86:	62 61 73 69 63       	(bad)
    1d8b:	5f                   	pop    rdi
    1d8c:	73 74                	jae    1e02 <_fini+0xc26>
    1d8e:	72 69                	jb     1df9 <_fini+0xc1d>
    1d90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1d91:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1d96:	31 31                	xor    DWORD PTR [rcx],esi
    1d98:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1d9b:	72 5f                	jb     1dfc <_fini+0xc20>
    1d9d:	74 72                	je     1e11 <_fini+0xc35>
    1d9f:	61                   	(bad)
    1da0:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1da7:	61 
    1da8:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1dac:	44 34 45             	rex.R xor al,0x45
    1daf:	76 00                	jbe    1db1 <_fini+0xbd5>
    1db1:	5f                   	pop    rdi
    1db2:	5a                   	pop    rdx
    1db3:	4e                   	rex.WRX
    1db4:	4b 53                	rex.WXB push r11
    1db6:	74 37                	je     1def <_fini+0xc13>
    1db8:	5f                   	pop    rdi
    1db9:	5f                   	pop    rdi
    1dba:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1dbd:	31 31                	xor    DWORD PTR [rcx],esi
    1dbf:	31 32                	xor    DWORD PTR [rdx],esi
    1dc1:	62 61 73 69 63       	(bad)
    1dc6:	5f                   	pop    rdi
    1dc7:	73 74                	jae    1e3d <_fini+0xc61>
    1dc9:	72 69                	jb     1e34 <_fini+0xc58>
    1dcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1dcc:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1dd1:	31 31                	xor    DWORD PTR [rcx],esi
    1dd3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1dd6:	72 5f                	jb     1e37 <_fini+0xc5b>
    1dd8:	74 72                	je     1e4c <_fini+0xc70>
    1dda:	61                   	(bad)
    1ddb:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1de2:	61 
    1de3:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1de7:	31 36                	xor    DWORD PTR [rsi],esi
    1de9:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    1def:	61                   	(bad)
    1df0:	73 74                	jae    1e66 <_fini+0xc8a>
    1df2:	5f                   	pop    rdi
    1df3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1df4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1df5:	74 5f                	je     1e56 <_fini+0xc7a>
    1df7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1df8:	66 45 50             	rex.RB push r8w
    1dfb:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    1dff:	00 63 75             	add    BYTE PTR [rbx+0x75],ah
    1e02:	72 72                	jb     1e76 <_fini+0xc9a>
    1e04:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    1e06:	63 79 5f             	movsxd edi,DWORD PTR [rcx+0x5f]
    1e09:	73 79                	jae    1e84 <_fini+0xca8>
    1e0b:	6d                   	ins    DWORD PTR es:[rdi],dx
    1e0c:	62 6f 6c 00 5f       	(bad)
    1e11:	5a                   	pop    rdx
    1e12:	4e                   	rex.WRX
    1e13:	4b 53                	rex.WXB push r11
    1e15:	74 31                	je     1e48 <_fini+0xc6c>
    1e17:	37                   	(bad)
    1e18:	62 61 73 69 63       	(bad)
    1e1d:	5f                   	pop    rdi
    1e1e:	73 74                	jae    1e94 <_fini+0xcb8>
    1e20:	72 69                	jb     1e8b <_fini+0xcaf>
    1e22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e23:	67 5f                	addr32 pop rdi
    1e25:	76 69                	jbe    1e90 <_fini+0xcb4>
    1e27:	65 77 49             	gs ja  1e73 <_fini+0xc97>
    1e2a:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    1e2d:	31 31                	xor    DWORD PTR [rcx],esi
    1e2f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1e32:	72 5f                	jb     1e93 <_fini+0xcb7>
    1e34:	74 72                	je     1ea8 <_fini+0xccc>
    1e36:	61                   	(bad)
    1e37:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    1e3e:	31 
    1e3f:	33 66 69             	xor    esp,DWORD PTR [rsi+0x69]
    1e42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e43:	64 5f                	fs pop rdi
    1e45:	66 69 72 73 74 5f    	imul   si,WORD PTR [rdx+0x73],0x5f74
    1e4b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e4c:	66 45 63 6d 00       	movsxd r13w,DWORD PTR [r13+0x0]
    1e51:	5f                   	pop    rdi
    1e52:	5a                   	pop    rdx
    1e53:	4e                   	rex.WRX
    1e54:	4b 53                	rex.WXB push r11
    1e56:	74 34                	je     1e8c <_fini+0xcb0>
    1e58:	73 70                	jae    1eca <_fini+0xcee>
    1e5a:	61                   	(bad)
    1e5b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e5c:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    1e61:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    1e64:	36 37                	ss (bad)
    1e66:	34 34                	xor    al,0x34
    1e68:	30 37                	xor    BYTE PTR [rdi],dh
    1e6a:	33 37                	xor    esi,DWORD PTR [rdi]
    1e6c:	30 39                	xor    BYTE PTR [rcx],bh
    1e6e:	35 35 31 36 31       	xor    eax,0x31363135
    1e73:	35 45 45 35 66       	xor    eax,0x66354545
    1e78:	72 6f                	jb     1ee9 <_fini+0xd0d>
    1e7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e7b:	74 45                	je     1ec2 <_fini+0xce6>
    1e7d:	76 00                	jbe    1e7f <_fini+0xca3>
    1e7f:	5f                   	pop    rdi
    1e80:	5f                   	pop    rdi
    1e81:	76 61                	jbe    1ee4 <_fini+0xd08>
    1e83:	72 69                	jb     1eee <_fini+0xd12>
    1e85:	61                   	(bad)
    1e86:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e87:	74 00                	je     1e89 <_fini+0xcad>
    1e89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1e8a:	65 74 77             	gs je  1f04 <_fini+0xd28>
    1e8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1e8e:	72 6b                	jb     1efb <_fini+0xd1f>
    1e90:	5f                   	pop    rdi
    1e91:	75 6e                	jne    1f01 <_fini+0xd25>
    1e93:	72 65                	jb     1efa <_fini+0xd1e>
    1e95:	61                   	(bad)
    1e96:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1e99:	62 6c 65 00 5f       	(bad)
    1e9e:	4d 5f                	rex.WRB pop r15
    1ea0:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ea1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ea2:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    1ea5:	5f                   	pop    rdi
    1ea6:	62 75 66 00 5f 5a 4e 	vmaxsh xmm11,xmm19,WORD PTR [rdx+0x9c]
    1ead:	39 5f 5f             	cmp    DWORD PTR [rdi+0x5f],ebx
    1eb0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    1eb2:	75 5f                	jne    1f13 <_fini+0xd37>
    1eb4:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1eb7:	31 37                	xor    DWORD PTR [rdi],esi
    1eb9:	5f                   	pop    rdi
    1eba:	5f                   	pop    rdi
    1ebb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ebc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1ebd:	72 6d                	jb     1f2c <_fini+0xd50>
    1ebf:	61                   	(bad)
    1ec0:	6c                   	ins    BYTE PTR es:[rdi],dx
    1ec1:	5f                   	pop    rdi
    1ec2:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    1ec9:	72 
    1eca:	49 50                	rex.WB push r8
    1ecc:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    1ed0:	74 37                	je     1f09 <_fini+0xd2d>
    1ed2:	5f                   	pop    rdi
    1ed3:	5f                   	pop    rdi
    1ed4:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1ed7:	31 31                	xor    DWORD PTR [rcx],esi
    1ed9:	31 32                	xor    DWORD PTR [rdx],esi
    1edb:	62 61 73 69 63       	(bad)
    1ee0:	5f                   	pop    rdi
    1ee1:	73 74                	jae    1f57 <_fini+0xd7b>
    1ee3:	72 69                	jb     1f4e <_fini+0xd72>
    1ee5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1ee6:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1eeb:	31 31                	xor    DWORD PTR [rcx],esi
    1eed:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1ef0:	72 5f                	jb     1f51 <_fini+0xd75>
    1ef2:	74 72                	je     1f66 <_fini+0xd8a>
    1ef4:	61                   	(bad)
    1ef5:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1efc:	61 
    1efd:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1f01:	45                   	rex.RB
    1f02:	45                   	rex.RB
    1f03:	43 34 45             	rex.XB xor al,0x45
    1f06:	76 00                	jbe    1f08 <_fini+0xd2c>
    1f08:	5f                   	pop    rdi
    1f09:	5a                   	pop    rdx
    1f0a:	4e                   	rex.WRX
    1f0b:	4b 53                	rex.WXB push r11
    1f0d:	74 31                	je     1f40 <_fini+0xd64>
    1f0f:	37                   	(bad)
    1f10:	62 61 73 69 63       	(bad)
    1f15:	5f                   	pop    rdi
    1f16:	73 74                	jae    1f8c <_fini+0xdb0>
    1f18:	72 69                	jb     1f83 <_fini+0xda7>
    1f1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f1b:	67 5f                	addr32 pop rdi
    1f1d:	76 69                	jbe    1f88 <_fini+0xdac>
    1f1f:	65 77 49             	gs ja  1f6b <_fini+0xd8f>
    1f22:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    1f25:	31 31                	xor    DWORD PTR [rcx],esi
    1f27:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1f2a:	72 5f                	jb     1f8b <_fini+0xdaf>
    1f2c:	74 72                	je     1fa0 <_fini+0xdc4>
    1f2e:	61                   	(bad)
    1f2f:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    1f36:	31 
    1f37:	37                   	(bad)
    1f38:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    1f3e:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
    1f45:	74 5f                	je     1fa6 <_fini+0xdca>
    1f47:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    1f48:	66 45 50             	rex.RB push r8w
    1f4b:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    1f4f:	00 70 65             	add    BYTE PTR [rax+0x65],dh
    1f52:	72 6d                	jb     1fc1 <_fini+0xde5>
    1f54:	69 73 73 69 6f 6e 5f 	imul   esi,DWORD PTR [rbx+0x73],0x5f6e6f69
    1f5b:	64 65 6e             	fs outs dx,BYTE PTR gs:[rsi]
    1f5e:	69 65 64 00 5f 5a 4e 	imul   esp,DWORD PTR [rbp+0x64],0x4e5a5f00
    1f65:	4b 53                	rex.WXB push r11
    1f67:	74 31                	je     1f9a <_fini+0xdbe>
    1f69:	37                   	(bad)
    1f6a:	62 61 73 69 63       	(bad)
    1f6f:	5f                   	pop    rdi
    1f70:	73 74                	jae    1fe6 <_fini+0xe0a>
    1f72:	72 69                	jb     1fdd <_fini+0xe01>
    1f74:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1f75:	67 5f                	addr32 pop rdi
    1f77:	76 69                	jbe    1fe2 <_fini+0xe06>
    1f79:	65 77 49             	gs ja  1fc5 <_fini+0xde9>
    1f7c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    1f7f:	31 31                	xor    DWORD PTR [rcx],esi
    1f81:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1f84:	72 5f                	jb     1fe5 <_fini+0xe09>
    1f86:	74 72                	je     1ffa <_fini+0xe1e>
    1f88:	61                   	(bad)
    1f89:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    1f90:	35 
    1f91:	72 66                	jb     1ff9 <_fini+0xe1d>
    1f93:	69 6e 64 45 53 32 5f 	imul   ebp,DWORD PTR [rsi+0x64],0x5f325345
    1f9a:	6d                   	ins    DWORD PTR es:[rdi],dx
    1f9b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    1f9e:	4e                   	rex.WRX
    1f9f:	4b 53                	rex.WXB push r11
    1fa1:	74 37                	je     1fda <_fini+0xdfe>
    1fa3:	5f                   	pop    rdi
    1fa4:	5f                   	pop    rdi
    1fa5:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1fa8:	31 31                	xor    DWORD PTR [rcx],esi
    1faa:	31 32                	xor    DWORD PTR [rdx],esi
    1fac:	62 61 73 69 63       	(bad)
    1fb1:	5f                   	pop    rdi
    1fb2:	73 74                	jae    2028 <_ZNSt8__detail14__destructibleIlEE>
    1fb4:	72 69                	jb     201f <_ZNSt8__detail19__destructible_implIPKwEE>
    1fb6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    1fb7:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    1fbc:	31 31                	xor    DWORD PTR [rcx],esi
    1fbe:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    1fc1:	72 5f                	jb     2022 <_ZNSt8__detail19__destructible_implIN9__gnu_cxx17__normal_iteratorIPwNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEEEEE>
    1fc3:	74 72                	je     2037 <__GNU_EH_FRAME_HDR+0x3>
    1fc5:	61                   	(bad)
    1fc6:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    1fcd:	61 
    1fce:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    1fd2:	31 33                	xor    DWORD PTR [rbx],esi
    1fd4:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    1fda:	69 72 73 74 5f 6f 66 	imul   esi,DWORD PTR [rdx+0x73],0x666f5f74
    1fe1:	45 63 6d 00          	movsxd r13d,DWORD PTR [r13+0x0]
    1fe5:	5f                   	pop    rdi
    1fe6:	5a                   	pop    rdx
    1fe7:	4e                   	rex.WRX
    1fe8:	4b 53                	rex.WXB push r11
    1fea:	74 37                	je     2023 <_ZSt22__is_specialization_ofINSt7__cxx1112basic_stringIcSt11char_traitsIcESaIcEEESt6vectorE>
    1fec:	5f                   	pop    rdi
    1fed:	5f                   	pop    rdi
    1fee:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    1ff1:	31 31                	xor    DWORD PTR [rcx],esi
    1ff3:	31 32                	xor    DWORD PTR [rdx],esi
    1ff5:	62 61 73 69 63       	(bad)
    1ffa:	5f                   	pop    rdi
    1ffb:	73 74                	jae    2071 <__GNU_EH_FRAME_HDR+0x3d>
    1ffd:	72 69                	jb     2068 <__GNU_EH_FRAME_HDR+0x34>
    1fff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2000:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2005:	31 31                	xor    DWORD PTR [rcx],esi
    2007:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    200a:	72 5f                	jb     206b <__GNU_EH_FRAME_HDR+0x37>
    200c:	74 72                	je     2080 <__GNU_EH_FRAME_HDR+0x4c>
    200e:	61                   	(bad)
    200f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2016:	61 
    2017:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    201b:	33 65 6e             	xor    esp,DWORD PTR [rbp+0x6e]
    201e:	64 45 76 00          	fs rex.RB jbe 2022 <_ZNSt8__detail19__destructible_implIN9__gnu_cxx17__normal_iteratorIPwNSt7__cxx1112basic_stringIwSt11char_traitsIwESaIwEEEEEEE>
    2022:	5f                   	pop    rdi
    2023:	5a                   	pop    rdx
    2024:	4e                   	rex.WRX
    2025:	4b 53                	rex.WXB push r11
    2027:	74 31                	je     205a <__GNU_EH_FRAME_HDR+0x26>
    2029:	37                   	(bad)
    202a:	62 61 73 69 63       	(bad)
    202f:	5f                   	pop    rdi
    2030:	73 74                	jae    20a6 <__GNU_EH_FRAME_HDR+0x72>
    2032:	72 69                	jb     209d <__GNU_EH_FRAME_HDR+0x69>
    2034:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2035:	67 5f                	addr32 pop rdi
    2037:	76 69                	jbe    20a2 <__GNU_EH_FRAME_HDR+0x6e>
    2039:	65 77 49             	gs ja  2085 <__GNU_EH_FRAME_HDR+0x51>
    203c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    203f:	31 31                	xor    DWORD PTR [rcx],esi
    2041:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2044:	72 5f                	jb     20a5 <__GNU_EH_FRAME_HDR+0x71>
    2046:	74 72                	je     20ba <__GNU_EH_FRAME_HDR+0x86>
    2048:	61                   	(bad)
    2049:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    2050:	31 
    2051:	37                   	(bad)
    2052:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    2058:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
    205f:	74 5f                	je     20c0 <__GNU_EH_FRAME_HDR+0x8c>
    2061:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2062:	66 45 50             	rex.RB push r8w
    2065:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    2069:	5f                   	pop    rdi
    206a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    206d:	69 6e 00 5f 5a 4e 4b 	imul   ebp,DWORD PTR [rsi+0x0],0x4b4e5a5f
    2074:	53                   	push   rbx
    2075:	74 34                	je     20ab <__GNU_EH_FRAME_HDR+0x77>
    2077:	73 70                	jae    20e9 <__GNU_EH_FRAME_HDR+0xb5>
    2079:	61                   	(bad)
    207a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    207b:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    2080:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    2083:	36 37                	ss (bad)
    2085:	34 34                	xor    al,0x34
    2087:	30 37                	xor    BYTE PTR [rdi],dh
    2089:	33 37                	xor    esi,DWORD PTR [rdi]
    208b:	30 39                	xor    BYTE PTR [rcx],bh
    208d:	35 35 31 36 31       	xor    eax,0x31363135
    2092:	35 45 45 37 63       	xor    eax,0x63374545
    2097:	72 62                	jb     20fb <__GNU_EH_FRAME_HDR+0xc7>
    2099:	65 67 69 6e 45 76 00 	imul   ebp,DWORD PTR gs:[esi+0x45],0x6e690076
    20a0:	69 6e 
    20a2:	74 5f                	je     2103 <__GNU_EH_FRAME_HDR+0xcf>
    20a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20a5:	5f                   	pop    rdi
    20a6:	63 73 5f             	movsxd esi,DWORD PTR [rbx+0x5f]
    20a9:	70 72                	jo     211d <__GNU_EH_FRAME_HDR+0xe9>
    20ab:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    20af:	65 73 00             	gs jae 20b2 <__GNU_EH_FRAME_HDR+0x7e>
    20b2:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    20b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20b6:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    20bb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20bc:	5f                   	pop    rdi
    20bd:	61                   	(bad)
    20be:	6c                   	ins    BYTE PTR es:[rdi],dx
    20bf:	72 65                	jb     2126 <__GNU_EH_FRAME_HDR+0xf2>
    20c1:	61                   	(bad)
    20c2:	64 79 5f             	fs jns 2124 <__GNU_EH_FRAME_HDR+0xf0>
    20c5:	69 6e 5f 70 72 6f 67 	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
    20cc:	72 65                	jb     2133 <__GNU_EH_FRAME_HDR+0xff>
    20ce:	73 73                	jae    2143 <__GNU_EH_FRAME_HDR+0x10f>
    20d0:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    20d3:	4e                   	rex.WRX
    20d4:	4b 53                	rex.WXB push r11
    20d6:	74 37                	je     210f <__GNU_EH_FRAME_HDR+0xdb>
    20d8:	5f                   	pop    rdi
    20d9:	5f                   	pop    rdi
    20da:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    20dd:	31 31                	xor    DWORD PTR [rcx],esi
    20df:	31 32                	xor    DWORD PTR [rdx],esi
    20e1:	62 61 73 69 63       	(bad)
    20e6:	5f                   	pop    rdi
    20e7:	73 74                	jae    215d <__GNU_EH_FRAME_HDR+0x129>
    20e9:	72 69                	jb     2154 <__GNU_EH_FRAME_HDR+0x120>
    20eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    20ec:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    20f1:	31 31                	xor    DWORD PTR [rcx],esi
    20f3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    20f6:	72 5f                	jb     2157 <__GNU_EH_FRAME_HDR+0x123>
    20f8:	74 72                	je     216c <__GNU_EH_FRAME_HDR+0x138>
    20fa:	61                   	(bad)
    20fb:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2102:	61 
    2103:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2107:	31 33                	xor    DWORD PTR [rbx],esi
    2109:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    210f:	69 72 73 74 5f 6f 66 	imul   esi,DWORD PTR [rdx+0x73],0x666f5f74
    2116:	45 50                	rex.RB push r8
    2118:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    211c:	00 6d 79             	add    BYTE PTR [rbp+0x79],ch
    211f:	5f                   	pop    rdi
    2120:	65 78 69             	gs js  218c <__GNU_EH_FRAME_HDR+0x158>
    2123:	74 00                	je     2125 <__GNU_EH_FRAME_HDR+0xf1>
    2125:	6c                   	ins    BYTE PTR es:[rdi],dx
    2126:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2127:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    212a:	65 63 6f 6e          	movsxd ebp,DWORD PTR gs:[rdi+0x6e]
    212e:	76 00                	jbe    2130 <__GNU_EH_FRAME_HDR+0xfc>
    2130:	5f                   	pop    rdi
    2131:	5a                   	pop    rdx
    2132:	4e 53                	rex.WRX push rbx
    2134:	74 31                	je     2167 <__GNU_EH_FRAME_HDR+0x133>
    2136:	37                   	(bad)
    2137:	62 61 73 69 63       	(bad)
    213c:	5f                   	pop    rdi
    213d:	73 74                	jae    21b3 <__GNU_EH_FRAME_HDR+0x17f>
    213f:	72 69                	jb     21aa <__GNU_EH_FRAME_HDR+0x176>
    2141:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2142:	67 5f                	addr32 pop rdi
    2144:	76 69                	jbe    21af <__GNU_EH_FRAME_HDR+0x17b>
    2146:	65 77 49             	gs ja  2192 <__GNU_EH_FRAME_HDR+0x15e>
    2149:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    214c:	31 31                	xor    DWORD PTR [rcx],esi
    214e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2151:	72 5f                	jb     21b2 <__GNU_EH_FRAME_HDR+0x17e>
    2153:	74 72                	je     21c7 <__GNU_EH_FRAME_HDR+0x193>
    2155:	61                   	(bad)
    2156:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    215d:	31 
    215e:	33 72 65             	xor    esi,DWORD PTR [rdx+0x65]
    2161:	6d                   	ins    DWORD PTR es:[rdi],dx
    2162:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2163:	76 65                	jbe    21ca <__GNU_EH_FRAME_HDR+0x196>
    2165:	5f                   	pop    rdi
    2166:	70 72                	jo     21da <__GNU_EH_FRAME_HDR+0x1a6>
    2168:	65 66 69 78 45 6d 00 	imul   di,WORD PTR gs:[rax+0x45],0x6d
    216f:	5f                   	pop    rdi
    2170:	5f                   	pop    rdi
    2171:	69 74 65 72 5f 64 69 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6669645f
    2178:	66 
    2179:	66 5f                	pop    di
    217b:	74 00                	je     217d <__GNU_EH_FRAME_HDR+0x149>
    217d:	31 31                	xor    DWORD PTR [rcx],esi
    217f:	5f                   	pop    rdi
    2180:	5f                   	pop    rdi
    2181:	6d                   	ins    DWORD PTR es:[rdi],dx
    2182:	62 73 74 61 74       	(bad)
    2187:	65 5f                	gs pop rdi
    2189:	74 00                	je     218b <__GNU_EH_FRAME_HDR+0x157>
    218b:	5f                   	pop    rdi
    218c:	5a                   	pop    rdx
    218d:	4e                   	rex.WRX
    218e:	4b 53                	rex.WXB push r11
    2190:	74 37                	je     21c9 <__GNU_EH_FRAME_HDR+0x195>
    2192:	5f                   	pop    rdi
    2193:	5f                   	pop    rdi
    2194:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2197:	31 31                	xor    DWORD PTR [rcx],esi
    2199:	31 32                	xor    DWORD PTR [rdx],esi
    219b:	62 61 73 69 63       	(bad)
    21a0:	5f                   	pop    rdi
    21a1:	73 74                	jae    2217 <__GNU_EH_FRAME_HDR+0x1e3>
    21a3:	72 69                	jb     220e <__GNU_EH_FRAME_HDR+0x1da>
    21a5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21a6:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    21ab:	31 31                	xor    DWORD PTR [rcx],esi
    21ad:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    21b0:	72 5f                	jb     2211 <__GNU_EH_FRAME_HDR+0x1dd>
    21b2:	74 72                	je     2226 <__GNU_EH_FRAME_HDR+0x1f2>
    21b4:	61                   	(bad)
    21b5:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    21bc:	61 
    21bd:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    21c1:	31 36                	xor    DWORD PTR [rsi],esi
    21c3:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    21c9:	61                   	(bad)
    21ca:	73 74                	jae    2240 <__GNU_EH_FRAME_HDR+0x20c>
    21cc:	5f                   	pop    rdi
    21cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21cf:	74 5f                	je     2230 <__GNU_EH_FRAME_HDR+0x1fc>
    21d1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    21d2:	66 45 50             	rex.RB push r8w
    21d5:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    21d9:	5f                   	pop    rdi
    21da:	5a                   	pop    rdx
    21db:	4e 53                	rex.WRX push rbx
    21dd:	74 37                	je     2216 <__GNU_EH_FRAME_HDR+0x1e2>
    21df:	5f                   	pop    rdi
    21e0:	5f                   	pop    rdi
    21e1:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    21e4:	31 31                	xor    DWORD PTR [rcx],esi
    21e6:	31 32                	xor    DWORD PTR [rdx],esi
    21e8:	62 61 73 69 63       	(bad)
    21ed:	5f                   	pop    rdi
    21ee:	73 74                	jae    2264 <__GNU_EH_FRAME_HDR+0x230>
    21f0:	72 69                	jb     225b <__GNU_EH_FRAME_HDR+0x227>
    21f2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    21f3:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    21f8:	31 31                	xor    DWORD PTR [rcx],esi
    21fa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    21fd:	72 5f                	jb     225e <__GNU_EH_FRAME_HDR+0x22a>
    21ff:	74 72                	je     2273 <__GNU_EH_FRAME_HDR+0x23f>
    2201:	61                   	(bad)
    2202:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2209:	61 
    220a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    220e:	43 34 45             	rex.XB xor al,0x45
    2211:	52                   	push   rdx
    2212:	4b 53                	rex.WXB push r11
    2214:	34 5f                	xor    al,0x5f
    2216:	52                   	push   rdx
    2217:	4b 53                	rex.WXB push r11
    2219:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    221c:	75 6e                	jne    228c <__GNU_EH_FRAME_HDR+0x258>
    221e:	73 69                	jae    2289 <__GNU_EH_FRAME_HDR+0x255>
    2220:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2222:	65 64 20 63 68       	gs and BYTE PTR fs:[rbx+0x68],ah
    2227:	61                   	(bad)
    2228:	72 00                	jb     222a <__GNU_EH_FRAME_HDR+0x1f6>
    222a:	5f                   	pop    rdi
    222b:	5a                   	pop    rdx
    222c:	4e 53                	rex.WRX push rbx
    222e:	74 37                	je     2267 <__GNU_EH_FRAME_HDR+0x233>
    2230:	5f                   	pop    rdi
    2231:	5f                   	pop    rdi
    2232:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2235:	31 31                	xor    DWORD PTR [rcx],esi
    2237:	31 32                	xor    DWORD PTR [rdx],esi
    2239:	62 61 73 69 63       	(bad)
    223e:	5f                   	pop    rdi
    223f:	73 74                	jae    22b5 <__GNU_EH_FRAME_HDR+0x281>
    2241:	72 69                	jb     22ac <__GNU_EH_FRAME_HDR+0x278>
    2243:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2244:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2249:	31 31                	xor    DWORD PTR [rcx],esi
    224b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    224e:	72 5f                	jb     22af <__GNU_EH_FRAME_HDR+0x27b>
    2250:	74 72                	je     22c4 <__GNU_EH_FRAME_HDR+0x290>
    2252:	61                   	(bad)
    2253:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    225a:	61 
    225b:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    225f:	36 61                	ss (bad)
    2261:	70 70                	jo     22d3 <__GNU_EH_FRAME_HDR+0x29f>
    2263:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2265:	64 45 50             	fs rex.RB push r8
    2268:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    226c:	5f                   	pop    rdi
    226d:	5a                   	pop    rdx
    226e:	4e 53                	rex.WRX push rbx
    2270:	74 38                	je     22aa <__GNU_EH_FRAME_HDR+0x276>
    2272:	5f                   	pop    rdi
    2273:	5f                   	pop    rdi
    2274:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2276:	72 6d                	jb     22e5 <__GNU_EH_FRAME_HDR+0x2b1>
    2278:	61                   	(bad)
    2279:	74 35                	je     22b0 <__GNU_EH_FRAME_HDR+0x27c>
    227b:	5f                   	pop    rdi
    227c:	53                   	push   rbx
    227d:	69 6e 6b 49 63 45 39 	imul   ebp,DWORD PTR [rsi+0x6b],0x39456349
    2284:	5f                   	pop    rdi
    2285:	4d 5f                	rex.WRB pop r15
    2287:	72 65                	jb     22ee <__GNU_EH_FRAME_HDR+0x2ba>
    2289:	77 69                	ja     22f4 <__GNU_EH_FRAME_HDR+0x2c0>
    228b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    228c:	64 45 76 00          	fs rex.RB jbe 2290 <__GNU_EH_FRAME_HDR+0x25c>
    2290:	5f                   	pop    rdi
    2291:	5a                   	pop    rdx
    2292:	4e                   	rex.WRX
    2293:	4b 53                	rex.WXB push r11
    2295:	74 37                	je     22ce <__GNU_EH_FRAME_HDR+0x29a>
    2297:	5f                   	pop    rdi
    2298:	5f                   	pop    rdi
    2299:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    229c:	31 31                	xor    DWORD PTR [rcx],esi
    229e:	31 32                	xor    DWORD PTR [rdx],esi
    22a0:	62 61 73 69 63       	(bad)
    22a5:	5f                   	pop    rdi
    22a6:	73 74                	jae    231c <__GNU_EH_FRAME_HDR+0x2e8>
    22a8:	72 69                	jb     2313 <__GNU_EH_FRAME_HDR+0x2df>
    22aa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    22ab:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    22b0:	31 31                	xor    DWORD PTR [rcx],esi
    22b2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    22b5:	72 5f                	jb     2316 <__GNU_EH_FRAME_HDR+0x2e2>
    22b7:	74 72                	je     232b <__GNU_EH_FRAME_HDR+0x2f7>
    22b9:	61                   	(bad)
    22ba:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    22c1:	61 
    22c2:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    22c6:	31 32                	xor    DWORD PTR [rdx],esi
    22c8:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    22ce:	61                   	(bad)
    22cf:	73 74                	jae    2345 <__GNU_EH_FRAME_HDR+0x311>
    22d1:	5f                   	pop    rdi
    22d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    22d3:	66 45 50             	rex.RB push r8w
    22d6:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    22da:	5f                   	pop    rdi
    22db:	5a                   	pop    rdx
    22dc:	4e 53                	rex.WRX push rbx
    22de:	74 38                	je     2318 <__GNU_EH_FRAME_HDR+0x2e4>
    22e0:	5f                   	pop    rdi
    22e1:	5f                   	pop    rdi
    22e2:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    22e4:	72 6d                	jb     2353 <__GNU_EH_FRAME_HDR+0x31f>
    22e6:	61                   	(bad)
    22e7:	74 35                	je     231e <__GNU_EH_FRAME_HDR+0x2ea>
    22e9:	5f                   	pop    rdi
    22ea:	53                   	push   rbx
    22eb:	69 6e 6b 49 63 45 38 	imul   ebp,DWORD PTR [rsi+0x6b],0x38456349
    22f2:	5f                   	pop    rdi
    22f3:	4d 5f                	rex.WRB pop r15
    22f5:	72 65                	jb     235c <__GNU_EH_FRAME_HDR+0x328>
    22f7:	73 65                	jae    235e <__GNU_EH_FRAME_HDR+0x32a>
    22f9:	74 45                	je     2340 <__GNU_EH_FRAME_HDR+0x30c>
    22fb:	53                   	push   rbx
    22fc:	74 34                	je     2332 <__GNU_EH_FRAME_HDR+0x2fe>
    22fe:	73 70                	jae    2370 <__GNU_EH_FRAME_HDR+0x33c>
    2300:	61                   	(bad)
    2301:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2302:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    2307:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    230a:	36 37                	ss (bad)
    230c:	34 34                	xor    al,0x34
    230e:	30 37                	xor    BYTE PTR [rdi],dh
    2310:	33 37                	xor    esi,DWORD PTR [rdi]
    2312:	30 39                	xor    BYTE PTR [rcx],bh
    2314:	35 35 31 36 31       	xor    eax,0x31363135
    2319:	35 45 45 6d 00       	xor    eax,0x6d4545
    231e:	72 61                	jb     2381 <__GNU_EH_FRAME_HDR+0x34d>
    2320:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2321:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    2323:	6d                   	ins    DWORD PTR es:[rdi],dx
    2324:	5f                   	pop    rdi
    2325:	61                   	(bad)
    2326:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    2329:	73 73                	jae    239e <__GNU_EH_FRAME_HDR+0x36a>
    232b:	5f                   	pop    rdi
    232c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2333:	72 
    2334:	5f                   	pop    rdi
    2335:	74 61                	je     2398 <__GNU_EH_FRAME_HDR+0x364>
    2337:	67 00 6f 77          	add    BYTE PTR [edi+0x77],ch
    233b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    233c:	65 72 5f             	gs jb  239e <__GNU_EH_FRAME_HDR+0x36a>
    233f:	64 65 61             	fs gs (bad)
    2342:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2346:	4e                   	rex.WRX
    2347:	4b 53                	rex.WXB push r11
    2349:	74 31                	je     237c <__GNU_EH_FRAME_HDR+0x348>
    234b:	37                   	(bad)
    234c:	62 61 73 69 63       	(bad)
    2351:	5f                   	pop    rdi
    2352:	73 74                	jae    23c8 <__GNU_EH_FRAME_HDR+0x394>
    2354:	72 69                	jb     23bf <__GNU_EH_FRAME_HDR+0x38b>
    2356:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2357:	67 5f                	addr32 pop rdi
    2359:	76 69                	jbe    23c4 <__GNU_EH_FRAME_HDR+0x390>
    235b:	65 77 49             	gs ja  23a7 <__GNU_EH_FRAME_HDR+0x373>
    235e:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    2361:	31 31                	xor    DWORD PTR [rcx],esi
    2363:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2366:	72 5f                	jb     23c7 <__GNU_EH_FRAME_HDR+0x393>
    2368:	74 72                	je     23dc <__GNU_EH_FRAME_HDR+0x3a8>
    236a:	61                   	(bad)
    236b:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x36454563
    2372:	36 
    2373:	6c                   	ins    BYTE PTR es:[rdi],dx
    2374:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2376:	67 74 68             	addr32 je 23e1 <__GNU_EH_FRAME_HDR+0x3ad>
    2379:	45 76 00             	rex.RB jbe 237c <__GNU_EH_FRAME_HDR+0x348>
    237c:	5f                   	pop    rdi
    237d:	5a                   	pop    rdx
    237e:	4e                   	rex.WRX
    237f:	4b 53                	rex.WXB push r11
    2381:	74 37                	je     23ba <__GNU_EH_FRAME_HDR+0x386>
    2383:	5f                   	pop    rdi
    2384:	5f                   	pop    rdi
    2385:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2388:	31 31                	xor    DWORD PTR [rcx],esi
    238a:	31 32                	xor    DWORD PTR [rdx],esi
    238c:	62 61 73 69 63       	(bad)
    2391:	5f                   	pop    rdi
    2392:	73 74                	jae    2408 <__GNU_EH_FRAME_HDR+0x3d4>
    2394:	72 69                	jb     23ff <__GNU_EH_FRAME_HDR+0x3cb>
    2396:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2397:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    239c:	31 31                	xor    DWORD PTR [rcx],esi
    239e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    23a1:	72 5f                	jb     2402 <__GNU_EH_FRAME_HDR+0x3ce>
    23a3:	74 72                	je     2417 <__GNU_EH_FRAME_HDR+0x3e3>
    23a5:	61                   	(bad)
    23a6:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    23ad:	61 
    23ae:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    23b2:	69 78 45 6d 00 5f 5a 	imul   edi,DWORD PTR [rax+0x45],0x5a5f006d
    23b9:	53                   	push   rbx
    23ba:	74 38                	je     23f4 <__GNU_EH_FRAME_HDR+0x3c0>
    23bc:	74 6f                	je     242d <__GNU_EH_FRAME_HDR+0x3f9>
    23be:	5f                   	pop    rdi
    23bf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    23c2:	72 73                	jb     2437 <__GNU_EH_FRAME_HDR+0x403>
    23c4:	50                   	push   rax
    23c5:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    23c8:	44                   	rex.R
    23c9:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    23cc:	38 5f 00             	cmp    BYTE PTR [rdi+0x0],bl
    23cf:	5f                   	pop    rdi
    23d0:	5a                   	pop    rdx
    23d1:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    23d5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    23d7:	75 5f                	jne    2438 <__GNU_EH_FRAME_HDR+0x404>
    23d9:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    23dc:	31 37                	xor    DWORD PTR [rdi],esi
    23de:	5f                   	pop    rdi
    23df:	5f                   	pop    rdi
    23e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    23e1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    23e2:	72 6d                	jb     2451 <__GNU_EH_FRAME_HDR+0x41d>
    23e4:	61                   	(bad)
    23e5:	6c                   	ins    BYTE PTR es:[rdi],dx
    23e6:	5f                   	pop    rdi
    23e7:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    23ee:	72 
    23ef:	49 50                	rex.WB push r8
    23f1:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    23f5:	74 37                	je     242e <__GNU_EH_FRAME_HDR+0x3fa>
    23f7:	5f                   	pop    rdi
    23f8:	5f                   	pop    rdi
    23f9:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    23fc:	31 31                	xor    DWORD PTR [rcx],esi
    23fe:	31 32                	xor    DWORD PTR [rdx],esi
    2400:	62 61 73 69 63       	(bad)
    2405:	5f                   	pop    rdi
    2406:	73 74                	jae    247c <__GNU_EH_FRAME_HDR+0x448>
    2408:	72 69                	jb     2473 <__GNU_EH_FRAME_HDR+0x43f>
    240a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    240b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2410:	31 31                	xor    DWORD PTR [rcx],esi
    2412:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2415:	72 5f                	jb     2476 <__GNU_EH_FRAME_HDR+0x442>
    2417:	74 72                	je     248b <__GNU_EH_FRAME_HDR+0x457>
    2419:	61                   	(bad)
    241a:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2421:	61 
    2422:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2426:	45                   	rex.RB
    2427:	45 70 4c             	rex.RB jo 2476 <__GNU_EH_FRAME_HDR+0x442>
    242a:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    242c:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    242f:	4f 5f                	rex.WRXB pop r15
    2431:	6c                   	ins    BYTE PTR es:[rdi],dx
    2432:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2433:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    2436:	74 00                	je     2438 <__GNU_EH_FRAME_HDR+0x404>
    2438:	77 63                	ja     249d <__GNU_EH_FRAME_HDR+0x469>
    243a:	73 6c                	jae    24a8 <__GNU_EH_FRAME_HDR+0x474>
    243c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    243e:	00 63 6c             	add    BYTE PTR [rbx+0x6c],ah
    2441:	65 61                	gs (bad)
    2443:	72 65                	jb     24aa <__GNU_EH_FRAME_HDR+0x476>
    2445:	72 72                	jb     24b9 <__GNU_EH_FRAME_HDR+0x485>
    2447:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    244a:	69 6e 6b 3c 63 68 61 	imul   ebp,DWORD PTR [rsi+0x6b],0x6168633c
    2451:	72 3e                	jb     2491 <__GNU_EH_FRAME_HDR+0x45d>
    2453:	00 66 6c             	add    BYTE PTR [rsi+0x6c],ah
    2456:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2457:	61                   	(bad)
    2458:	74 00                	je     245a <__GNU_EH_FRAME_HDR+0x426>
    245a:	5f                   	pop    rdi
    245b:	5a                   	pop    rdx
    245c:	4e 53                	rex.WRX push rbx
    245e:	74 37                	je     2497 <__GNU_EH_FRAME_HDR+0x463>
    2460:	5f                   	pop    rdi
    2461:	5f                   	pop    rdi
    2462:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2465:	31 31                	xor    DWORD PTR [rcx],esi
    2467:	31 32                	xor    DWORD PTR [rdx],esi
    2469:	62 61 73 69 63       	(bad)
    246e:	5f                   	pop    rdi
    246f:	73 74                	jae    24e5 <__GNU_EH_FRAME_HDR+0x4b1>
    2471:	72 69                	jb     24dc <__GNU_EH_FRAME_HDR+0x4a8>
    2473:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2474:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2479:	31 31                	xor    DWORD PTR [rcx],esi
    247b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    247e:	72 5f                	jb     24df <__GNU_EH_FRAME_HDR+0x4ab>
    2480:	74 72                	je     24f4 <__GNU_EH_FRAME_HDR+0x4c0>
    2482:	61                   	(bad)
    2483:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    248a:	61 
    248b:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    248f:	70 4c                	jo     24dd <__GNU_EH_FRAME_HDR+0x4a9>
    2491:	45 52                	rex.RB push r10
    2493:	4b 53                	rex.WXB push r11
    2495:	34 5f                	xor    al,0x5f
    2497:	00 6c 6f 6e          	add    BYTE PTR [rdi+rbp*2+0x6e],ch
    249b:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
    24a0:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    24a4:	74 00                	je     24a6 <__GNU_EH_FRAME_HDR+0x472>
    24a6:	5f                   	pop    rdi
    24a7:	5a                   	pop    rdx
    24a8:	4e 53                	rex.WRX push rbx
    24aa:	74 37                	je     24e3 <__GNU_EH_FRAME_HDR+0x4af>
    24ac:	5f                   	pop    rdi
    24ad:	5f                   	pop    rdi
    24ae:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    24b1:	31 31                	xor    DWORD PTR [rcx],esi
    24b3:	31 32                	xor    DWORD PTR [rdx],esi
    24b5:	62 61 73 69 63       	(bad)
    24ba:	5f                   	pop    rdi
    24bb:	73 74                	jae    2531 <__GNU_EH_FRAME_HDR+0x4fd>
    24bd:	72 69                	jb     2528 <__GNU_EH_FRAME_HDR+0x4f4>
    24bf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    24c0:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    24c5:	31 31                	xor    DWORD PTR [rcx],esi
    24c7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    24ca:	72 5f                	jb     252b <__GNU_EH_FRAME_HDR+0x4f7>
    24cc:	74 72                	je     2540 <__GNU_EH_FRAME_HDR+0x50c>
    24ce:	61                   	(bad)
    24cf:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    24d6:	61 
    24d7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    24db:	31 37                	xor    DWORD PTR [rdi],esi
    24dd:	5f                   	pop    rdi
    24de:	4d 5f                	rex.WRB pop r15
    24e0:	75 73                	jne    2555 <__GNU_EH_FRAME_HDR+0x521>
    24e2:	65 5f                	gs pop rdi
    24e4:	6c                   	ins    BYTE PTR es:[rdi],dx
    24e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    24e6:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    24e9:	5f                   	pop    rdi
    24ea:	64 61                	fs (bad)
    24ec:	74 61                	je     254f <__GNU_EH_FRAME_HDR+0x51b>
    24ee:	45 76 00             	rex.RB jbe 24f1 <__GNU_EH_FRAME_HDR+0x4bd>
    24f1:	5f                   	pop    rdi
    24f2:	5a                   	pop    rdx
    24f3:	4e 53                	rex.WRX push rbx
    24f5:	74 31                	je     2528 <__GNU_EH_FRAME_HDR+0x4f4>
    24f7:	36 72 65             	ss jb  255f <__GNU_EH_FRAME_HDR+0x52b>
    24fa:	76 65                	jbe    2561 <__GNU_EH_FRAME_HDR+0x52d>
    24fc:	72 73                	jb     2571 <__GNU_EH_FRAME_HDR+0x53d>
    24fe:	65 5f                	gs pop rdi
    2500:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2507:	72 
    2508:	49                   	rex.WB
    2509:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    250d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    250f:	75 5f                	jne    2570 <__GNU_EH_FRAME_HDR+0x53c>
    2511:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2514:	31 37                	xor    DWORD PTR [rdi],esi
    2516:	5f                   	pop    rdi
    2517:	5f                   	pop    rdi
    2518:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2519:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    251a:	72 6d                	jb     2589 <__GNU_EH_FRAME_HDR+0x555>
    251c:	61                   	(bad)
    251d:	6c                   	ins    BYTE PTR es:[rdi],dx
    251e:	5f                   	pop    rdi
    251f:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2526:	72 
    2527:	49 50                	rex.WB push r8
    2529:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    252c:	34 73                	xor    al,0x73
    252e:	70 61                	jo     2591 <__GNU_EH_FRAME_HDR+0x55d>
    2530:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2531:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    2536:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    2539:	36 37                	ss (bad)
    253b:	34 34                	xor    al,0x34
    253d:	30 37                	xor    BYTE PTR [rdi],dh
    253f:	33 37                	xor    esi,DWORD PTR [rdi]
    2541:	30 39                	xor    BYTE PTR [rcx],bh
    2543:	35 35 31 36 31       	xor    eax,0x31363135
    2548:	35 45 45 45 45       	xor    eax,0x45454545
    254d:	45                   	rex.RB
    254e:	43 34 45             	rex.XB xor al,0x45
    2551:	53                   	push   rbx
    2552:	35 5f 00 5f 5a       	xor    eax,0x5a5f005f
    2557:	4e 53                	rex.WRX push rbx
    2559:	74 31                	je     258c <__GNU_EH_FRAME_HDR+0x558>
    255b:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    255e:	61                   	(bad)
    255f:	72 5f                	jb     25c0 <__GNU_EH_FRAME_HDR+0x58c>
    2561:	74 72                	je     25d5 <__GNU_EH_FRAME_HDR+0x5a1>
    2563:	61                   	(bad)
    2564:	69 74 73 49 63 45 32 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x65324563
    256b:	65 
    256c:	71 45                	jno    25b3 <__GNU_EH_FRAME_HDR+0x57f>
    256e:	52                   	push   rdx
    256f:	4b 63 53 32          	rex.WXB movsxd rdx,DWORD PTR [r11+0x32]
    2573:	5f                   	pop    rdi
    2574:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2577:	61                   	(bad)
    2578:	6c                   	ins    BYTE PTR es:[rdi],dx
    2579:	6c                   	ins    BYTE PTR es:[rdi],dx
    257a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    257b:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
    257e:	72 61                	jb     25e1 <__GNU_EH_FRAME_HDR+0x5ad>
    2580:	69 74 73 3c 73 74 64 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x3a647473
    2587:	3a 
    2588:	3a 61 6c             	cmp    ah,BYTE PTR [rcx+0x6c]
    258b:	6c                   	ins    BYTE PTR es:[rdi],dx
    258c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    258d:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    2590:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2591:	72 3c                	jb     25cf <__GNU_EH_FRAME_HDR+0x59b>
    2593:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2596:	72 3e                	jb     25d6 <__GNU_EH_FRAME_HDR+0x5a2>
    2598:	2c 20                	sub    al,0x20
    259a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    259d:	72 3e                	jb     25dd <__GNU_EH_FRAME_HDR+0x5a9>
    259f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    25a2:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    25a9:	76 73                	jbe    261e <__GNU_EH_FRAME_HDR+0x5ea>
    25ab:	77 73                	ja     2620 <__GNU_EH_FRAME_HDR+0x5ec>
    25ad:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    25b0:	66 00 5f 4d          	data16 add BYTE PTR [rdi+0x4d],bl
    25b4:	5f                   	pop    rdi
    25b5:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    25b8:	63 6b 00             	movsxd ebp,DWORD PTR [rbx+0x0]
    25bb:	5f                   	pop    rdi
    25bc:	5a                   	pop    rdx
    25bd:	4e 53                	rex.WRX push rbx
    25bf:	74 37                	je     25f8 <__GNU_EH_FRAME_HDR+0x5c4>
    25c1:	5f                   	pop    rdi
    25c2:	5f                   	pop    rdi
    25c3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    25c6:	31 31                	xor    DWORD PTR [rcx],esi
    25c8:	31 32                	xor    DWORD PTR [rdx],esi
    25ca:	62 61 73 69 63       	(bad)
    25cf:	5f                   	pop    rdi
    25d0:	73 74                	jae    2646 <__GNU_EH_FRAME_HDR+0x612>
    25d2:	72 69                	jb     263d <__GNU_EH_FRAME_HDR+0x609>
    25d4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    25d5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    25da:	31 31                	xor    DWORD PTR [rcx],esi
    25dc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    25df:	72 5f                	jb     2640 <__GNU_EH_FRAME_HDR+0x60c>
    25e1:	74 72                	je     2655 <__GNU_EH_FRAME_HDR+0x621>
    25e3:	61                   	(bad)
    25e4:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    25eb:	61 
    25ec:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    25f0:	36 61                	ss (bad)
    25f2:	73 73                	jae    2667 <__GNU_EH_FRAME_HDR+0x633>
    25f4:	69 67 6e 45 52 4b 53 	imul   esp,DWORD PTR [rdi+0x6e],0x534b5245
    25fb:	34 5f                	xor    al,0x5f
    25fd:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2600:	4e                   	rex.WRX
    2601:	4b 53                	rex.WXB push r11
    2603:	74 31                	je     2636 <__GNU_EH_FRAME_HDR+0x602>
    2605:	37                   	(bad)
    2606:	62 61 73 69 63       	(bad)
    260b:	5f                   	pop    rdi
    260c:	73 74                	jae    2682 <__GNU_EH_FRAME_HDR+0x64e>
    260e:	72 69                	jb     2679 <__GNU_EH_FRAME_HDR+0x645>
    2610:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2611:	67 5f                	addr32 pop rdi
    2613:	76 69                	jbe    267e <__GNU_EH_FRAME_HDR+0x64a>
    2615:	65 77 49             	gs ja  2661 <__GNU_EH_FRAME_HDR+0x62d>
    2618:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    261b:	31 31                	xor    DWORD PTR [rcx],esi
    261d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2620:	72 5f                	jb     2681 <__GNU_EH_FRAME_HDR+0x64d>
    2622:	74 72                	je     2696 <__GNU_EH_FRAME_HDR+0x662>
    2624:	61                   	(bad)
    2625:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x37454563
    262c:	37 
    262d:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    2630:	70 61                	jo     2693 <__GNU_EH_FRAME_HDR+0x65f>
    2632:	72 65                	jb     2699 <__GNU_EH_FRAME_HDR+0x665>
    2634:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    2636:	6d                   	ins    DWORD PTR es:[rdi],dx
    2637:	53                   	push   rbx
    2638:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    263b:	72 65                	jb     26a2 <__GNU_EH_FRAME_HDR+0x66e>
    263d:	73 75                	jae    26b4 <__GNU_EH_FRAME_HDR+0x680>
    263f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2640:	74 5f                	je     26a1 <__GNU_EH_FRAME_HDR+0x66d>
    2642:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2643:	75 74                	jne    26b9 <__GNU_EH_FRAME_HDR+0x685>
    2645:	5f                   	pop    rdi
    2646:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2647:	66 5f                	pop    di
    2649:	72 61                	jb     26ac <__GNU_EH_FRAME_HDR+0x678>
    264b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    264c:	67 65 00 5f 53       	add    BYTE PTR gs:[edi+0x53],bl
    2651:	5f                   	pop    rdi
    2652:	61                   	(bad)
    2653:	6c                   	ins    BYTE PTR es:[rdi],dx
    2654:	77 61                	ja     26b7 <__GNU_EH_FRAME_HDR+0x683>
    2656:	79 73                	jns    26cb <__GNU_EH_FRAME_HDR+0x697>
    2658:	5f                   	pop    rdi
    2659:	65 71 75             	gs jno 26d1 <__GNU_EH_FRAME_HDR+0x69d>
    265c:	61                   	(bad)
    265d:	6c                   	ins    BYTE PTR es:[rdi],dx
    265e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2661:	4e                   	rex.WRX
    2662:	4b 53                	rex.WXB push r11
    2664:	74 31                	je     2697 <__GNU_EH_FRAME_HDR+0x663>
    2666:	37                   	(bad)
    2667:	62 61 73 69 63       	(bad)
    266c:	5f                   	pop    rdi
    266d:	73 74                	jae    26e3 <__GNU_EH_FRAME_HDR+0x6af>
    266f:	72 69                	jb     26da <__GNU_EH_FRAME_HDR+0x6a6>
    2671:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2672:	67 5f                	addr32 pop rdi
    2674:	76 69                	jbe    26df <__GNU_EH_FRAME_HDR+0x6ab>
    2676:	65 77 49             	gs ja  26c2 <__GNU_EH_FRAME_HDR+0x68e>
    2679:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    267c:	31 31                	xor    DWORD PTR [rcx],esi
    267e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2681:	72 5f                	jb     26e2 <__GNU_EH_FRAME_HDR+0x6ae>
    2683:	74 72                	je     26f7 <__GNU_EH_FRAME_HDR+0x6c3>
    2685:	61                   	(bad)
    2686:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    268d:	35 
    268e:	72 66                	jb     26f6 <__GNU_EH_FRAME_HDR+0x6c2>
    2690:	69 6e 64 45 50 4b 63 	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
    2697:	6d                   	ins    DWORD PTR es:[rdi],dx
    2698:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    269b:	53                   	push   rbx
    269c:	74 38                	je     26d6 <__GNU_EH_FRAME_HDR+0x6a2>
    269e:	74 6f                	je     270f <__GNU_EH_FRAME_HDR+0x6db>
    26a0:	5f                   	pop    rdi
    26a1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    26a4:	72 73                	jb     2719 <__GNU_EH_FRAME_HDR+0x6e5>
    26a6:	50                   	push   rax
    26a7:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    26aa:	65 53                	gs push rbx
    26ac:	74 31                	je     26df <__GNU_EH_FRAME_HDR+0x6ab>
    26ae:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    26b1:	61                   	(bad)
    26b2:	72 73                	jb     2727 <__GNU_EH_FRAME_HDR+0x6f3>
    26b4:	5f                   	pop    rdi
    26b5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    26b7:	72 6d                	jb     2726 <__GNU_EH_FRAME_HDR+0x6f2>
    26b9:	61                   	(bad)
    26ba:	74 69                	je     2725 <__GNU_EH_FRAME_HDR+0x6f1>
    26bc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    26bf:	4e                   	rex.WRX
    26c0:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    26c4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    26c6:	75 5f                	jne    2727 <__GNU_EH_FRAME_HDR+0x6f3>
    26c8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    26cb:	31 37                	xor    DWORD PTR [rdi],esi
    26cd:	5f                   	pop    rdi
    26ce:	5f                   	pop    rdi
    26cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    26d1:	72 6d                	jb     2740 <__GNU_EH_FRAME_HDR+0x70c>
    26d3:	61                   	(bad)
    26d4:	6c                   	ins    BYTE PTR es:[rdi],dx
    26d5:	5f                   	pop    rdi
    26d6:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    26dd:	72 
    26de:	49 50                	rex.WB push r8
    26e0:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    26e4:	74 37                	je     271d <__GNU_EH_FRAME_HDR+0x6e9>
    26e6:	5f                   	pop    rdi
    26e7:	5f                   	pop    rdi
    26e8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    26eb:	31 31                	xor    DWORD PTR [rcx],esi
    26ed:	31 32                	xor    DWORD PTR [rdx],esi
    26ef:	62 61 73 69 63       	(bad)
    26f4:	5f                   	pop    rdi
    26f5:	73 74                	jae    276b <__GNU_EH_FRAME_HDR+0x737>
    26f7:	72 69                	jb     2762 <__GNU_EH_FRAME_HDR+0x72e>
    26f9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    26fa:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    26ff:	31 31                	xor    DWORD PTR [rcx],esi
    2701:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2704:	72 5f                	jb     2765 <__GNU_EH_FRAME_HDR+0x731>
    2706:	74 72                	je     277a <__GNU_EH_FRAME_HDR+0x746>
    2708:	61                   	(bad)
    2709:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2710:	61 
    2711:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2715:	45                   	rex.RB
    2716:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    2718:	69 45 6c 00 5f 5a 4e 	imul   eax,DWORD PTR [rbp+0x6c],0x4e5a5f00
    271f:	53                   	push   rbx
    2720:	74 37                	je     2759 <__GNU_EH_FRAME_HDR+0x725>
    2722:	5f                   	pop    rdi
    2723:	5f                   	pop    rdi
    2724:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2727:	31 31                	xor    DWORD PTR [rcx],esi
    2729:	31 32                	xor    DWORD PTR [rdx],esi
    272b:	62 61 73 69 63       	(bad)
    2730:	5f                   	pop    rdi
    2731:	73 74                	jae    27a7 <__GNU_EH_FRAME_HDR+0x773>
    2733:	72 69                	jb     279e <__GNU_EH_FRAME_HDR+0x76a>
    2735:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2736:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    273b:	31 31                	xor    DWORD PTR [rcx],esi
    273d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2740:	72 5f                	jb     27a1 <__GNU_EH_FRAME_HDR+0x76d>
    2742:	74 72                	je     27b6 <__GNU_EH_FRAME_HDR+0x782>
    2744:	61                   	(bad)
    2745:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    274c:	61 
    274d:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2751:	31 36                	xor    DWORD PTR [rsi],esi
    2753:	5f                   	pop    rdi
    2754:	4d 5f                	rex.WRB pop r15
    2756:	67 65 74 5f          	addr32 gs je 27b9 <__GNU_EH_FRAME_HDR+0x785>
    275a:	61                   	(bad)
    275b:	6c                   	ins    BYTE PTR es:[rdi],dx
    275c:	6c                   	ins    BYTE PTR es:[rdi],dx
    275d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    275e:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    2761:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2762:	72 45                	jb     27a9 <__GNU_EH_FRAME_HDR+0x775>
    2764:	76 00                	jbe    2766 <__GNU_EH_FRAME_HDR+0x732>
    2766:	5f                   	pop    rdi
    2767:	5a                   	pop    rdx
    2768:	4e                   	rex.WRX
    2769:	4b 53                	rex.WXB push r11
    276b:	74 31                	je     279e <__GNU_EH_FRAME_HDR+0x76a>
    276d:	37                   	(bad)
    276e:	62 61 73 69 63       	(bad)
    2773:	5f                   	pop    rdi
    2774:	73 74                	jae    27ea <__GNU_EH_FRAME_HDR+0x7b6>
    2776:	72 69                	jb     27e1 <__GNU_EH_FRAME_HDR+0x7ad>
    2778:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2779:	67 5f                	addr32 pop rdi
    277b:	76 69                	jbe    27e6 <__GNU_EH_FRAME_HDR+0x7b2>
    277d:	65 77 49             	gs ja  27c9 <__GNU_EH_FRAME_HDR+0x795>
    2780:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    2783:	31 31                	xor    DWORD PTR [rcx],esi
    2785:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2788:	72 5f                	jb     27e9 <__GNU_EH_FRAME_HDR+0x7b5>
    278a:	74 72                	je     27fe <__GNU_EH_FRAME_HDR+0x7ca>
    278c:	61                   	(bad)
    278d:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x36454563
    2794:	36 
    2795:	63 62 65             	movsxd esp,DWORD PTR [rdx+0x65]
    2798:	67 69 6e 45 76 00 5f 	imul   ebp,DWORD PTR [esi+0x45],0x5a5f0076
    279f:	5a 
    27a0:	4e                   	rex.WRX
    27a1:	4b 53                	rex.WXB push r11
    27a3:	74 31                	je     27d6 <__GNU_EH_FRAME_HDR+0x7a2>
    27a5:	37                   	(bad)
    27a6:	62 61 73 69 63       	(bad)
    27ab:	5f                   	pop    rdi
    27ac:	73 74                	jae    2822 <__GNU_EH_FRAME_HDR+0x7ee>
    27ae:	72 69                	jb     2819 <__GNU_EH_FRAME_HDR+0x7e5>
    27b0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27b1:	67 5f                	addr32 pop rdi
    27b3:	76 69                	jbe    281e <__GNU_EH_FRAME_HDR+0x7ea>
    27b5:	65 77 49             	gs ja  2801 <__GNU_EH_FRAME_HDR+0x7cd>
    27b8:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    27bb:	31 31                	xor    DWORD PTR [rcx],esi
    27bd:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    27c0:	72 5f                	jb     2821 <__GNU_EH_FRAME_HDR+0x7ed>
    27c2:	74 72                	je     2836 <__GNU_EH_FRAME_HDR+0x802>
    27c4:	61                   	(bad)
    27c5:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x36454563
    27cc:	36 
    27cd:	72 62                	jb     2831 <__GNU_EH_FRAME_HDR+0x7fd>
    27cf:	65 67 69 6e 45 76 00 	imul   ebp,DWORD PTR gs:[esi+0x45],0x5a5f0076
    27d6:	5f 5a 
    27d8:	4e                   	rex.WRX
    27d9:	4b 53                	rex.WXB push r11
    27db:	74 38                	je     2815 <__GNU_EH_FRAME_HDR+0x7e1>
    27dd:	5f                   	pop    rdi
    27de:	5f                   	pop    rdi
    27df:	64 65 74 61          	fs gs je 2844 <__GNU_EH_FRAME_HDR+0x810>
    27e3:	69 6c 31 36 5f 5f 65 	imul   ebp,DWORD PTR [rcx+rsi*1+0x36],0x78655f5f
    27ea:	78 
    27eb:	74 65                	je     2852 <__GNU_EH_FRAME_HDR+0x81e>
    27ed:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    27ee:	74 5f                	je     284f <__GNU_EH_FRAME_HDR+0x81b>
    27f0:	73 74                	jae    2866 <__GNU_EH_FRAME_HDR+0x832>
    27f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    27f3:	72 61                	jb     2856 <__GNU_EH_FRAME_HDR+0x822>
    27f5:	67 65 49             	addr32 gs rex.WB
    27f8:	4c 6d                	rex.WR ins DWORD PTR es:[rdi],dx
    27fa:	31 38                	xor    DWORD PTR [rax],edi
    27fc:	34 34                	xor    al,0x34
    27fe:	36 37                	ss (bad)
    2800:	34 34                	xor    al,0x34
    2802:	30 37                	xor    BYTE PTR [rdi],dh
    2804:	33 37                	xor    esi,DWORD PTR [rdi]
    2806:	30 39                	xor    BYTE PTR [rcx],bh
    2808:	35 35 31 36 31       	xor    eax,0x31363135
    280d:	35 45 45 39 5f       	xor    eax,0x5f394545
    2812:	4d 5f                	rex.WRB pop r15
    2814:	65 78 74             	gs js  288b <__GNU_EH_FRAME_HDR+0x857>
    2817:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2819:	74 45                	je     2860 <__GNU_EH_FRAME_HDR+0x82c>
    281b:	76 00                	jbe    281d <__GNU_EH_FRAME_HDR+0x7e9>
    281d:	5f                   	pop    rdi
    281e:	5a                   	pop    rdx
    281f:	4e                   	rex.WRX
    2820:	4b 53                	rex.WXB push r11
    2822:	74 34                	je     2858 <__GNU_EH_FRAME_HDR+0x824>
    2824:	73 70                	jae    2896 <__GNU_EH_FRAME_HDR+0x862>
    2826:	61                   	(bad)
    2827:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2828:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    282d:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    2830:	36 37                	ss (bad)
    2832:	34 34                	xor    al,0x34
    2834:	30 37                	xor    BYTE PTR [rdi],dh
    2836:	33 37                	xor    esi,DWORD PTR [rdi]
    2838:	30 39                	xor    BYTE PTR [rcx],bh
    283a:	35 35 31 36 31       	xor    eax,0x31363135
    283f:	35 45 45 34 62       	xor    eax,0x62344545
    2844:	61                   	(bad)
    2845:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
    2848:	76 00                	jbe    284a <__GNU_EH_FRAME_HDR+0x816>
    284a:	5f                   	pop    rdi
    284b:	5a                   	pop    rdx
    284c:	4e 53                	rex.WRX push rbx
    284e:	74 31                	je     2881 <__GNU_EH_FRAME_HDR+0x84d>
    2850:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    2855:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    2858:	74 69                	je     28c3 <__GNU_EH_FRAME_HDR+0x88f>
    285a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    285b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    285c:	5f                   	pop    rdi
    285d:	70 74                	jo     28d3 <__GNU_EH_FRAME_HDR+0x89f>
    285f:	72 31                	jb     2892 <__GNU_EH_FRAME_HDR+0x85e>
    2861:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    2864:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    2867:	74 69                	je     28d2 <__GNU_EH_FRAME_HDR+0x89e>
    2869:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    286a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    286b:	5f                   	pop    rdi
    286c:	70 74                	jo     28e2 <__GNU_EH_FRAME_HDR+0x8ae>
    286e:	72 44                	jb     28b4 <__GNU_EH_FRAME_HDR+0x880>
    2870:	34 45                	xor    al,0x45
    2872:	76 00                	jbe    2874 <__GNU_EH_FRAME_HDR+0x840>
    2874:	5f                   	pop    rdi
    2875:	5a                   	pop    rdx
    2876:	4e                   	rex.WRX
    2877:	4b 53                	rex.WXB push r11
    2879:	74 31                	je     28ac <__GNU_EH_FRAME_HDR+0x878>
    287b:	36 72 65             	ss jb  28e3 <__GNU_EH_FRAME_HDR+0x8af>
    287e:	76 65                	jbe    28e5 <__GNU_EH_FRAME_HDR+0x8b1>
    2880:	72 73                	jb     28f5 <__GNU_EH_FRAME_HDR+0x8c1>
    2882:	65 5f                	gs pop rdi
    2884:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    288b:	72 
    288c:	49                   	rex.WB
    288d:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    2891:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2893:	75 5f                	jne    28f4 <__GNU_EH_FRAME_HDR+0x8c0>
    2895:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2898:	31 37                	xor    DWORD PTR [rdi],esi
    289a:	5f                   	pop    rdi
    289b:	5f                   	pop    rdi
    289c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    289d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    289e:	72 6d                	jb     290d <__GNU_EH_FRAME_HDR+0x8d9>
    28a0:	61                   	(bad)
    28a1:	6c                   	ins    BYTE PTR es:[rdi],dx
    28a2:	5f                   	pop    rdi
    28a3:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    28aa:	72 
    28ab:	49 50                	rex.WB push r8
    28ad:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    28b0:	34 73                	xor    al,0x73
    28b2:	70 61                	jo     2915 <__GNU_EH_FRAME_HDR+0x8e1>
    28b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28b5:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    28ba:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    28bd:	36 37                	ss (bad)
    28bf:	34 34                	xor    al,0x34
    28c1:	30 37                	xor    BYTE PTR [rdi],dh
    28c3:	33 37                	xor    esi,DWORD PTR [rdi]
    28c5:	30 39                	xor    BYTE PTR [rcx],bh
    28c7:	35 35 31 36 31       	xor    eax,0x31363135
    28cc:	35 45 45 45 45       	xor    eax,0x45454545
    28d1:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    28d3:	69 45 6c 00 74 6d 5f 	imul   eax,DWORD PTR [rbp+0x6c],0x5f6d7400
    28da:	7a 6f                	jp     294b <__GNU_EH_FRAME_HDR+0x917>
    28dc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28dd:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    28e1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    28e2:	65 77 5f             	gs ja  2944 <__GNU_EH_FRAME_HDR+0x910>
    28e5:	61                   	(bad)
    28e6:	6c                   	ins    BYTE PTR es:[rdi],dx
    28e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    28e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28e9:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    28ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    28ed:	72 3c                	jb     292b <__GNU_EH_FRAME_HDR+0x8f7>
    28ef:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    28f2:	72 3e                	jb     2932 <__GNU_EH_FRAME_HDR+0x8fe>
    28f4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    28f7:	73 77                	jae    2970 <__GNU_EH_FRAME_HDR+0x93c>
    28f9:	61                   	(bad)
    28fa:	70 00                	jo     28fc <__GNU_EH_FRAME_HDR+0x8c8>
    28fc:	77 63                	ja     2961 <__GNU_EH_FRAME_HDR+0x92d>
    28fe:	73 66                	jae    2966 <__GNU_EH_FRAME_HDR+0x932>
    2900:	74 69                	je     296b <__GNU_EH_FRAME_HDR+0x937>
    2902:	6d                   	ins    DWORD PTR es:[rdi],dx
    2903:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    2907:	4e                   	rex.WRX
    2908:	4b 53                	rex.WXB push r11
    290a:	74 37                	je     2943 <__GNU_EH_FRAME_HDR+0x90f>
    290c:	5f                   	pop    rdi
    290d:	5f                   	pop    rdi
    290e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2911:	31 31                	xor    DWORD PTR [rcx],esi
    2913:	31 32                	xor    DWORD PTR [rdx],esi
    2915:	62 61 73 69 63       	(bad)
    291a:	5f                   	pop    rdi
    291b:	73 74                	jae    2991 <__GNU_EH_FRAME_HDR+0x95d>
    291d:	72 69                	jb     2988 <__GNU_EH_FRAME_HDR+0x954>
    291f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2920:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2925:	31 31                	xor    DWORD PTR [rcx],esi
    2927:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    292a:	72 5f                	jb     298b <__GNU_EH_FRAME_HDR+0x957>
    292c:	74 72                	je     29a0 <__GNU_EH_FRAME_HDR+0x96c>
    292e:	61                   	(bad)
    292f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2936:	61 
    2937:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    293b:	34 66                	xor    al,0x66
    293d:	69 6e 64 45 50 4b 63 	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
    2944:	6d                   	ins    DWORD PTR es:[rdi],dx
    2945:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    2948:	74 62                	je     29ac <__GNU_EH_FRAME_HDR+0x978>
    294a:	75 66                	jne    29b2 <__GNU_EH_FRAME_HDR+0x97e>
    294c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    294f:	4e 53                	rex.WRX push rbx
    2951:	74 31                	je     2984 <__GNU_EH_FRAME_HDR+0x950>
    2953:	36 72 65             	ss jb  29bb <__GNU_EH_FRAME_HDR+0x987>
    2956:	76 65                	jbe    29bd <__GNU_EH_FRAME_HDR+0x989>
    2958:	72 73                	jb     29cd <__GNU_EH_FRAME_HDR+0x999>
    295a:	65 5f                	gs pop rdi
    295c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2963:	72 
    2964:	49                   	rex.WB
    2965:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    2969:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    296b:	75 5f                	jne    29cc <__GNU_EH_FRAME_HDR+0x998>
    296d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2970:	31 37                	xor    DWORD PTR [rdi],esi
    2972:	5f                   	pop    rdi
    2973:	5f                   	pop    rdi
    2974:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2975:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2976:	72 6d                	jb     29e5 <__GNU_EH_FRAME_HDR+0x9b1>
    2978:	61                   	(bad)
    2979:	6c                   	ins    BYTE PTR es:[rdi],dx
    297a:	5f                   	pop    rdi
    297b:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2982:	72 
    2983:	49 50                	rex.WB push r8
    2985:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    2988:	34 73                	xor    al,0x73
    298a:	70 61                	jo     29ed <__GNU_EH_FRAME_HDR+0x9b9>
    298c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    298d:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    2992:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    2995:	36 37                	ss (bad)
    2997:	34 34                	xor    al,0x34
    2999:	30 37                	xor    BYTE PTR [rdi],dh
    299b:	33 37                	xor    esi,DWORD PTR [rdi]
    299d:	30 39                	xor    BYTE PTR [rcx],bh
    299f:	35 35 31 36 31       	xor    eax,0x31363135
    29a4:	35 45 45 45 45       	xor    eax,0x45454545
    29a9:	45 61                	rex.RB (bad)
    29ab:	53                   	push   rbx
    29ac:	45 52                	rex.RB push r10
    29ae:	4b 53                	rex.WXB push r11
    29b0:	36 5f                	ss pop rdi
    29b2:	00 5f 44             	add    BYTE PTR [rdi+0x44],bl
    29b5:	69 73 74 61 6e 63 65 	imul   esi,DWORD PTR [rbx+0x74],0x65636e61
    29bc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    29bf:	4e 53                	rex.WRX push rbx
    29c1:	74 37                	je     29fa <__GNU_EH_FRAME_HDR+0x9c6>
    29c3:	5f                   	pop    rdi
    29c4:	5f                   	pop    rdi
    29c5:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    29c8:	31 31                	xor    DWORD PTR [rcx],esi
    29ca:	31 32                	xor    DWORD PTR [rdx],esi
    29cc:	62 61 73 69 63       	(bad)
    29d1:	5f                   	pop    rdi
    29d2:	73 74                	jae    2a48 <__GNU_EH_FRAME_HDR+0xa14>
    29d4:	72 69                	jb     2a3f <__GNU_EH_FRAME_HDR+0xa0b>
    29d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    29d7:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    29dc:	31 31                	xor    DWORD PTR [rcx],esi
    29de:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    29e1:	72 5f                	jb     2a42 <__GNU_EH_FRAME_HDR+0xa0e>
    29e3:	74 72                	je     2a57 <__GNU_EH_FRAME_HDR+0xa23>
    29e5:	61                   	(bad)
    29e6:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    29ed:	61 
    29ee:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    29f2:	36 72 62             	ss jb  2a57 <__GNU_EH_FRAME_HDR+0xa23>
    29f5:	65 67 69 6e 45 76 00 	imul   ebp,DWORD PTR gs:[esi+0x45],0x4d5f0076
    29fc:	5f 4d 
    29fe:	5f                   	pop    rdi
    29ff:	61                   	(bad)
    2a00:	64 64 72 65          	fs fs jb 2a69 <__GNU_EH_FRAME_HDR+0xa35>
    2a04:	66 00 6d 62          	data16 add BYTE PTR [rbp+0x62],ch
    2a08:	72 6c                	jb     2a76 <__GNU_EH_FRAME_HDR+0xa42>
    2a0a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2a0c:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    2a0f:	5f                   	pop    rdi
    2a10:	75 73                	jne    2a85 <__GNU_EH_FRAME_HDR+0xa51>
    2a12:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
    2a17:	4e                   	rex.WRX
    2a18:	4b 53                	rex.WXB push r11
    2a1a:	74 37                	je     2a53 <__GNU_EH_FRAME_HDR+0xa1f>
    2a1c:	5f                   	pop    rdi
    2a1d:	5f                   	pop    rdi
    2a1e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2a21:	31 31                	xor    DWORD PTR [rcx],esi
    2a23:	31 32                	xor    DWORD PTR [rdx],esi
    2a25:	62 61 73 69 63       	(bad)
    2a2a:	5f                   	pop    rdi
    2a2b:	73 74                	jae    2aa1 <__GNU_EH_FRAME_HDR+0xa6d>
    2a2d:	72 69                	jb     2a98 <__GNU_EH_FRAME_HDR+0xa64>
    2a2f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a30:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2a35:	31 31                	xor    DWORD PTR [rcx],esi
    2a37:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2a3a:	72 5f                	jb     2a9b <__GNU_EH_FRAME_HDR+0xa67>
    2a3c:	74 72                	je     2ab0 <__GNU_EH_FRAME_HDR+0xa7c>
    2a3e:	61                   	(bad)
    2a3f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2a46:	61 
    2a47:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2a4b:	31 31                	xor    DWORD PTR [rcx],esi
    2a4d:	5f                   	pop    rdi
    2a4e:	4d 5f                	rex.WRB pop r15
    2a50:	64 69 73 6a 75 6e 63 	imul   esi,DWORD PTR fs:[rbx+0x6a],0x74636e75
    2a57:	74 
    2a58:	45 50                	rex.RB push r8
    2a5a:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    2a5d:	5f                   	pop    rdi
    2a5e:	5a                   	pop    rdx
    2a5f:	4e 53                	rex.WRX push rbx
    2a61:	74 31                	je     2a94 <__GNU_EH_FRAME_HDR+0xa60>
    2a63:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    2a66:	61                   	(bad)
    2a67:	72 5f                	jb     2ac8 <__GNU_EH_FRAME_HDR+0xa94>
    2a69:	74 72                	je     2add <__GNU_EH_FRAME_HDR+0xaa9>
    2a6b:	61                   	(bad)
    2a6c:	69 74 73 49 63 45 36 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61364563
    2a73:	61 
    2a74:	73 73                	jae    2ae9 <__GNU_EH_FRAME_HDR+0xab5>
    2a76:	69 67 6e 45 52 63 52 	imul   esp,DWORD PTR [rdi+0x6e],0x52635245
    2a7d:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    2a80:	72 65                	jb     2ae7 <__GNU_EH_FRAME_HDR+0xab3>
    2a82:	61                   	(bad)
    2a83:	64 5f                	fs pop rdi
    2a85:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2a86:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2a87:	6c                   	ins    BYTE PTR es:[rdi],dx
    2a88:	79 5f                	jns    2ae9 <__GNU_EH_FRAME_HDR+0xab5>
    2a8a:	66 69 6c 65 5f 73 79 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7973
    2a91:	73 74                	jae    2b07 <__GNU_EH_FRAME_HDR+0xad3>
    2a93:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    2a95:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2a98:	4e                   	rex.WRX
    2a99:	4b 53                	rex.WXB push r11
    2a9b:	74 31                	je     2ace <__GNU_EH_FRAME_HDR+0xa9a>
    2a9d:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    2aa2:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    2aa5:	74 69                	je     2b10 <__GNU_EH_FRAME_HDR+0xadc>
    2aa7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2aa8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2aa9:	5f                   	pop    rdi
    2aaa:	70 74                	jo     2b20 <__GNU_EH_FRAME_HDR+0xaec>
    2aac:	72 31                	jb     2adf <__GNU_EH_FRAME_HDR+0xaab>
    2aae:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    2ab1:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    2ab4:	74 69                	je     2b1f <__GNU_EH_FRAME_HDR+0xaeb>
    2ab6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ab7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ab8:	5f                   	pop    rdi
    2ab9:	70 74                	jo     2b2f <__GNU_EH_FRAME_HDR+0xafb>
    2abb:	72 63                	jb     2b20 <__GNU_EH_FRAME_HDR+0xaec>
    2abd:	76 62                	jbe    2b21 <__GNU_EH_FRAME_HDR+0xaed>
    2abf:	45 76 00             	rex.RB jbe 2ac2 <__GNU_EH_FRAME_HDR+0xa8e>
    2ac2:	5f                   	pop    rdi
    2ac3:	5a                   	pop    rdx
    2ac4:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    2ac8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2aca:	75 5f                	jne    2b2b <__GNU_EH_FRAME_HDR+0xaf7>
    2acc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2acf:	31 37                	xor    DWORD PTR [rdi],esi
    2ad1:	5f                   	pop    rdi
    2ad2:	5f                   	pop    rdi
    2ad3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ad4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2ad5:	72 6d                	jb     2b44 <__GNU_EH_FRAME_HDR+0xb10>
    2ad7:	61                   	(bad)
    2ad8:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ad9:	5f                   	pop    rdi
    2ada:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2ae1:	72 
    2ae2:	49 50                	rex.WB push r8
    2ae4:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    2ae7:	74 37                	je     2b20 <__GNU_EH_FRAME_HDR+0xaec>
    2ae9:	5f                   	pop    rdi
    2aea:	5f                   	pop    rdi
    2aeb:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2aee:	31 31                	xor    DWORD PTR [rcx],esi
    2af0:	31 32                	xor    DWORD PTR [rdx],esi
    2af2:	62 61 73 69 63       	(bad)
    2af7:	5f                   	pop    rdi
    2af8:	73 74                	jae    2b6e <__GNU_EH_FRAME_HDR+0xb3a>
    2afa:	72 69                	jb     2b65 <__GNU_EH_FRAME_HDR+0xb31>
    2afc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2afd:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2b02:	31 31                	xor    DWORD PTR [rcx],esi
    2b04:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2b07:	72 5f                	jb     2b68 <__GNU_EH_FRAME_HDR+0xb34>
    2b09:	74 72                	je     2b7d <__GNU_EH_FRAME_HDR+0xb49>
    2b0b:	61                   	(bad)
    2b0c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2b13:	61 
    2b14:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2b18:	45                   	rex.RB
    2b19:	45                   	rex.RB
    2b1a:	43 34 45             	rex.XB xor al,0x45
    2b1d:	76 00                	jbe    2b1f <__GNU_EH_FRAME_HDR+0xaeb>
    2b1f:	73 69                	jae    2b8a <__GNU_EH_FRAME_HDR+0xb56>
    2b21:	7a 65                	jp     2b88 <__GNU_EH_FRAME_HDR+0xb54>
    2b23:	5f                   	pop    rdi
    2b24:	74 79                	je     2b9f <__GNU_EH_FRAME_HDR+0xb6b>
    2b26:	70 65                	jo     2b8d <__GNU_EH_FRAME_HDR+0xb59>
    2b28:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2b2b:	4e 53                	rex.WRX push rbx
    2b2d:	74 37                	je     2b66 <__GNU_EH_FRAME_HDR+0xb32>
    2b2f:	5f                   	pop    rdi
    2b30:	5f                   	pop    rdi
    2b31:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2b34:	31 31                	xor    DWORD PTR [rcx],esi
    2b36:	31 32                	xor    DWORD PTR [rdx],esi
    2b38:	62 61 73 69 63       	(bad)
    2b3d:	5f                   	pop    rdi
    2b3e:	73 74                	jae    2bb4 <__GNU_EH_FRAME_HDR+0xb80>
    2b40:	72 69                	jb     2bab <__GNU_EH_FRAME_HDR+0xb77>
    2b42:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b43:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2b48:	31 31                	xor    DWORD PTR [rcx],esi
    2b4a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2b4d:	72 5f                	jb     2bae <__GNU_EH_FRAME_HDR+0xb7a>
    2b4f:	74 72                	je     2bc3 <__GNU_EH_FRAME_HDR+0xb8f>
    2b51:	61                   	(bad)
    2b52:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2b59:	61 
    2b5a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2b5e:	31 33                	xor    DWORD PTR [rbx],esi
    2b60:	5f                   	pop    rdi
    2b61:	53                   	push   rbx
    2b62:	5f                   	pop    rdi
    2b63:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    2b66:	79 5f                	jns    2bc7 <__GNU_EH_FRAME_HDR+0xb93>
    2b68:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2b6b:	72 73                	jb     2be0 <__GNU_EH_FRAME_HDR+0xbac>
    2b6d:	45 50                	rex.RB push r8
    2b6f:	63 4e 39             	movsxd ecx,DWORD PTR [rsi+0x39]
    2b72:	5f                   	pop    rdi
    2b73:	5f                   	pop    rdi
    2b74:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2b76:	75 5f                	jne    2bd7 <__GNU_EH_FRAME_HDR+0xba3>
    2b78:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2b7b:	31 37                	xor    DWORD PTR [rdi],esi
    2b7d:	5f                   	pop    rdi
    2b7e:	5f                   	pop    rdi
    2b7f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2b80:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2b81:	72 6d                	jb     2bf0 <__GNU_EH_FRAME_HDR+0xbbc>
    2b83:	61                   	(bad)
    2b84:	6c                   	ins    BYTE PTR es:[rdi],dx
    2b85:	5f                   	pop    rdi
    2b86:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2b8d:	72 
    2b8e:	49 53                	rex.WB push r11
    2b90:	35 5f 53 34 5f       	xor    eax,0x5f34535f
    2b95:	45                   	rex.RB
    2b96:	45 53                	rex.RB push r11
    2b98:	38 5f 00             	cmp    BYTE PTR [rdi+0x0],bl
    2b9b:	5f                   	pop    rdi
    2b9c:	5a                   	pop    rdx
    2b9d:	4e 53                	rex.WRX push rbx
    2b9f:	74 38                	je     2bd9 <__GNU_EH_FRAME_HDR+0xba5>
    2ba1:	5f                   	pop    rdi
    2ba2:	5f                   	pop    rdi
    2ba3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    2ba5:	72 6d                	jb     2c14 <__GNU_EH_FRAME_HDR+0xbe0>
    2ba7:	61                   	(bad)
    2ba8:	74 31                	je     2bdb <__GNU_EH_FRAME_HDR+0xba7>
    2baa:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    2bad:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    2bb4:	72 49                	jb     2bff <__GNU_EH_FRAME_HDR+0xbcb>
    2bb6:	63 45 43             	movsxd eax,DWORD PTR [rbp+0x43]
    2bb9:	34 45                	xor    al,0x45
    2bbb:	52                   	push   rdx
    2bbc:	4b 53                	rex.WXB push r11
    2bbe:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
    2bc1:	73 74                	jae    2c37 <__GNU_EH_FRAME_HDR+0xc03>
    2bc3:	72 74                	jb     2c39 <__GNU_EH_FRAME_HDR+0xc05>
    2bc5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2bc6:	6c                   	ins    BYTE PTR es:[rdi],dx
    2bc7:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    2bcb:	4e                   	rex.WRX
    2bcc:	4b 53                	rex.WXB push r11
    2bce:	74 31                	je     2c01 <__GNU_EH_FRAME_HDR+0xbcd>
    2bd0:	37                   	(bad)
    2bd1:	62 61 73 69 63       	(bad)
    2bd6:	5f                   	pop    rdi
    2bd7:	73 74                	jae    2c4d <__GNU_EH_FRAME_HDR+0xc19>
    2bd9:	72 69                	jb     2c44 <__GNU_EH_FRAME_HDR+0xc10>
    2bdb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2bdc:	67 5f                	addr32 pop rdi
    2bde:	76 69                	jbe    2c49 <__GNU_EH_FRAME_HDR+0xc15>
    2be0:	65 77 49             	gs ja  2c2c <__GNU_EH_FRAME_HDR+0xbf8>
    2be3:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    2be6:	31 31                	xor    DWORD PTR [rcx],esi
    2be8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2beb:	72 5f                	jb     2c4c <__GNU_EH_FRAME_HDR+0xc18>
    2bed:	74 72                	je     2c61 <__GNU_EH_FRAME_HDR+0xc2d>
    2bef:	61                   	(bad)
    2bf0:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x38454563
    2bf7:	38 
    2bf8:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    2bfb:	74 61                	je     2c5e <__GNU_EH_FRAME_HDR+0xc2a>
    2bfd:	69 6e 73 45 53 32 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f325345
    2c04:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2c07:	4e 53                	rex.WRX push rbx
    2c09:	74 31                	je     2c3c <__GNU_EH_FRAME_HDR+0xc08>
    2c0b:	35 5f 5f 6e 65       	xor    eax,0x656e5f5f
    2c10:	77 5f                	ja     2c71 <__GNU_EH_FRAME_HDR+0xc3d>
    2c12:	61                   	(bad)
    2c13:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c14:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c16:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    2c19:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c1a:	72 49                	jb     2c65 <__GNU_EH_FRAME_HDR+0xc31>
    2c1c:	63 45 31             	movsxd eax,DWORD PTR [rbp+0x31]
    2c1f:	30 64 65 61          	xor    BYTE PTR [rbp+riz*2+0x61],ah
    2c23:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c24:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c25:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c26:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    2c29:	65 45 50             	gs rex.RB push r8
    2c2c:	63 6d 00             	movsxd ebp,DWORD PTR [rbp+0x0]
    2c2f:	5f                   	pop    rdi
    2c30:	53                   	push   rbx
    2c31:	5f                   	pop    rdi
    2c32:	61                   	(bad)
    2c33:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c34:	6c                   	ins    BYTE PTR es:[rdi],dx
    2c35:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c36:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    2c39:	65 00 62 61          	add    BYTE PTR gs:[rdx+0x61],ah
    2c3d:	64 5f                	fs pop rdi
    2c3f:	61                   	(bad)
    2c40:	64 64 72 65          	fs fs jb 2ca9 <__GNU_EH_FRAME_HDR+0xc75>
    2c44:	73 73                	jae    2cb9 <__GNU_EH_FRAME_HDR+0xc85>
    2c46:	00 61 74             	add    BYTE PTR [rcx+0x74],ah
    2c49:	65 78 69             	gs js  2cb5 <__GNU_EH_FRAME_HDR+0xc81>
    2c4c:	74 00                	je     2c4e <__GNU_EH_FRAME_HDR+0xc1a>
    2c4e:	5f                   	pop    rdi
    2c4f:	5a                   	pop    rdx
    2c50:	4e 53                	rex.WRX push rbx
    2c52:	74 31                	je     2c85 <__GNU_EH_FRAME_HDR+0xc51>
    2c54:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    2c57:	61                   	(bad)
    2c58:	72 5f                	jb     2cb9 <__GNU_EH_FRAME_HDR+0xc85>
    2c5a:	74 72                	je     2cce <__GNU_EH_FRAME_HDR+0xc9a>
    2c5c:	61                   	(bad)
    2c5d:	69 74 73 49 63 45 37 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x6e374563
    2c64:	6e 
    2c65:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2c66:	74 5f                	je     2cc7 <__GNU_EH_FRAME_HDR+0xc93>
    2c68:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
    2c6a:	66 45 52             	rex.RB push r10w
    2c6d:	4b 69 00 5f 5a 4e 4b 	rex.WXB imul rax,QWORD PTR [r8],0x4b4e5a5f
    2c74:	53                   	push   rbx
    2c75:	74 34                	je     2cab <__GNU_EH_FRAME_HDR+0xc77>
    2c77:	73 70                	jae    2ce9 <__GNU_EH_FRAME_HDR+0xcb5>
    2c79:	61                   	(bad)
    2c7a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2c7b:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    2c80:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    2c83:	36 37                	ss (bad)
    2c85:	34 34                	xor    al,0x34
    2c87:	30 37                	xor    BYTE PTR [rdi],dh
    2c89:	33 37                	xor    esi,DWORD PTR [rdi]
    2c8b:	30 39                	xor    BYTE PTR [rcx],bh
    2c8d:	35 35 31 36 31       	xor    eax,0x31363135
    2c92:	35 45 45 31 30       	xor    eax,0x30314545
    2c97:	73 69                	jae    2d02 <__GNU_EH_FRAME_HDR+0xcce>
    2c99:	7a 65                	jp     2d00 <__GNU_EH_FRAME_HDR+0xccc>
    2c9b:	5f                   	pop    rdi
    2c9c:	62 79 74 65 73       	(bad)
    2ca1:	45 76 00             	rex.RB jbe 2ca4 <__GNU_EH_FRAME_HDR+0xc70>
    2ca4:	5f                   	pop    rdi
    2ca5:	5a                   	pop    rdx
    2ca6:	4e                   	rex.WRX
    2ca7:	4b 53                	rex.WXB push r11
    2ca9:	74 37                	je     2ce2 <__GNU_EH_FRAME_HDR+0xcae>
    2cab:	5f                   	pop    rdi
    2cac:	5f                   	pop    rdi
    2cad:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2cb0:	31 31                	xor    DWORD PTR [rcx],esi
    2cb2:	31 32                	xor    DWORD PTR [rdx],esi
    2cb4:	62 61 73 69 63       	(bad)
    2cb9:	5f                   	pop    rdi
    2cba:	73 74                	jae    2d30 <__GNU_EH_FRAME_HDR+0xcfc>
    2cbc:	72 69                	jb     2d27 <__GNU_EH_FRAME_HDR+0xcf3>
    2cbe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2cbf:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2cc4:	31 31                	xor    DWORD PTR [rcx],esi
    2cc6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2cc9:	72 5f                	jb     2d2a <__GNU_EH_FRAME_HDR+0xcf6>
    2ccb:	74 72                	je     2d3f <__GNU_EH_FRAME_HDR+0xd0b>
    2ccd:	61                   	(bad)
    2cce:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2cd5:	61 
    2cd6:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2cda:	34 63                	xor    al,0x63
    2cdc:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2cde:	64 45 76 00          	fs rex.RB jbe 2ce2 <__GNU_EH_FRAME_HDR+0xcae>
    2ce2:	5f                   	pop    rdi
    2ce3:	5f                   	pop    rdi
    2ce4:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    2ceb:	73 74                	jae    2d61 <__GNU_EH_FRAME_HDR+0xd2d>
    2ced:	72 74                	jb     2d63 <__GNU_EH_FRAME_HDR+0xd2f>
    2cef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2cf0:	75 6c                	jne    2d5e <__GNU_EH_FRAME_HDR+0xd2a>
    2cf2:	00 6e 65             	add    BYTE PTR [rsi+0x65],ch
    2cf5:	67 61                	addr32 (bad)
    2cf7:	74 69                	je     2d62 <__GNU_EH_FRAME_HDR+0xd2e>
    2cf9:	76 65                	jbe    2d60 <__GNU_EH_FRAME_HDR+0xd2c>
    2cfb:	5f                   	pop    rdi
    2cfc:	73 69                	jae    2d67 <__GNU_EH_FRAME_HDR+0xd33>
    2cfe:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2d00:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    2d03:	4e                   	rex.WRX
    2d04:	4b 53                	rex.WXB push r11
    2d06:	74 34                	je     2d3c <__GNU_EH_FRAME_HDR+0xd08>
    2d08:	73 70                	jae    2d7a <__GNU_EH_FRAME_HDR+0xd46>
    2d0a:	61                   	(bad)
    2d0b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d0c:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    2d11:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    2d14:	36 37                	ss (bad)
    2d16:	34 34                	xor    al,0x34
    2d18:	30 37                	xor    BYTE PTR [rdi],dh
    2d1a:	33 37                	xor    esi,DWORD PTR [rdi]
    2d1c:	30 39                	xor    BYTE PTR [rcx],bh
    2d1e:	35 35 31 36 31       	xor    eax,0x31363135
    2d23:	35 45 45 35 62       	xor    eax,0x62354545
    2d28:	65 67 69 6e 45 76 00 	imul   ebp,DWORD PTR gs:[esi+0x45],0x5a5f0076
    2d2f:	5f 5a 
    2d31:	4e 53                	rex.WRX push rbx
    2d33:	74 37                	je     2d6c <__GNU_EH_FRAME_HDR+0xd38>
    2d35:	5f                   	pop    rdi
    2d36:	5f                   	pop    rdi
    2d37:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2d3a:	31 31                	xor    DWORD PTR [rcx],esi
    2d3c:	31 32                	xor    DWORD PTR [rdx],esi
    2d3e:	62 61 73 69 63       	(bad)
    2d43:	5f                   	pop    rdi
    2d44:	73 74                	jae    2dba <__GNU_EH_FRAME_HDR+0xd86>
    2d46:	72 69                	jb     2db1 <__GNU_EH_FRAME_HDR+0xd7d>
    2d48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2d49:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2d4e:	31 31                	xor    DWORD PTR [rcx],esi
    2d50:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2d53:	72 5f                	jb     2db4 <__GNU_EH_FRAME_HDR+0xd80>
    2d55:	74 72                	je     2dc9 <__GNU_EH_FRAME_HDR+0xd95>
    2d57:	61                   	(bad)
    2d58:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2d5f:	61 
    2d60:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2d64:	37                   	(bad)
    2d65:	5f                   	pop    rdi
    2d66:	4d 5f                	rex.WRB pop r15
    2d68:	64 61                	fs (bad)
    2d6a:	74 61                	je     2dcd <__GNU_EH_FRAME_HDR+0xd99>
    2d6c:	45 50                	rex.RB push r8
    2d6e:	63 00                	movsxd eax,DWORD PTR [rax]
    2d70:	5f                   	pop    rdi
    2d71:	5a                   	pop    rdx
    2d72:	4e 53                	rex.WRX push rbx
    2d74:	61                   	(bad)
    2d75:	49 63 45 61          	movsxd rax,DWORD PTR [r13+0x61]
    2d79:	53                   	push   rbx
    2d7a:	45 52                	rex.RB push r10
    2d7c:	4b 53                	rex.WXB push r11
    2d7e:	5f                   	pop    rdi
    2d7f:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    2d82:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    2d89:	73 74                	jae    2dff <__GNU_EH_FRAME_HDR+0xdcb>
    2d8b:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    2d8e:	00 7e 62             	add    BYTE PTR [rsi+0x62],bh
    2d91:	61                   	(bad)
    2d92:	73 69                	jae    2dfd <__GNU_EH_FRAME_HDR+0xdc9>
    2d94:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    2d97:	74 72                	je     2e0b <__GNU_EH_FRAME_HDR+0xdd7>
    2d99:	69 6e 67 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x67],0x4e5a5f00
    2da0:	53                   	push   rbx
    2da1:	74 31                	je     2dd4 <__GNU_EH_FRAME_HDR+0xda0>
    2da3:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    2daa:	6c 
    2dab:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    2db2:	73 74                	jae    2e28 <__GNU_EH_FRAME_HDR+0xdf4>
    2db4:	49 63 45 43          	movsxd rax,DWORD PTR [r13+0x43]
    2db8:	34 45                	xor    al,0x45
    2dba:	50                   	push   rax
    2dbb:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    2dbf:	5f                   	pop    rdi
    2dc0:	5a                   	pop    rdx
    2dc1:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    2dc5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2dc7:	75 5f                	jne    2e28 <__GNU_EH_FRAME_HDR+0xdf4>
    2dc9:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2dcc:	31 37                	xor    DWORD PTR [rdi],esi
    2dce:	5f                   	pop    rdi
    2dcf:	5f                   	pop    rdi
    2dd0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dd1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2dd2:	72 6d                	jb     2e41 <__GNU_EH_FRAME_HDR+0xe0d>
    2dd4:	61                   	(bad)
    2dd5:	6c                   	ins    BYTE PTR es:[rdi],dx
    2dd6:	5f                   	pop    rdi
    2dd7:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2dde:	72 
    2ddf:	49 50                	rex.WB push r8
    2de1:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    2de4:	74 37                	je     2e1d <__GNU_EH_FRAME_HDR+0xde9>
    2de6:	5f                   	pop    rdi
    2de7:	5f                   	pop    rdi
    2de8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2deb:	31 31                	xor    DWORD PTR [rcx],esi
    2ded:	31 32                	xor    DWORD PTR [rdx],esi
    2def:	62 61 73 69 63       	(bad)
    2df4:	5f                   	pop    rdi
    2df5:	73 74                	jae    2e6b <__GNU_EH_FRAME_HDR+0xe37>
    2df7:	72 69                	jb     2e62 <__GNU_EH_FRAME_HDR+0xe2e>
    2df9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2dfa:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2dff:	31 31                	xor    DWORD PTR [rcx],esi
    2e01:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2e04:	72 5f                	jb     2e65 <__GNU_EH_FRAME_HDR+0xe31>
    2e06:	74 72                	je     2e7a <__GNU_EH_FRAME_HDR+0xe46>
    2e08:	61                   	(bad)
    2e09:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2e10:	61 
    2e11:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2e15:	45                   	rex.RB
    2e16:	45 70 4c             	rex.RB jo 2e65 <__GNU_EH_FRAME_HDR+0xe31>
    2e19:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    2e1b:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
    2e1e:	5f                   	pop    rdi
    2e1f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e20:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e21:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    2e24:	61                   	(bad)
    2e25:	76 61                	jbe    2e88 <__GNU_EH_FRAME_HDR+0xe54>
    2e27:	69 6c 61 62 6c 65 00 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x5f00656c
    2e2e:	5f 
    2e2f:	5a                   	pop    rdx
    2e30:	4e                   	rex.WRX
    2e31:	4b 53                	rex.WXB push r11
    2e33:	74 37                	je     2e6c <__GNU_EH_FRAME_HDR+0xe38>
    2e35:	5f                   	pop    rdi
    2e36:	5f                   	pop    rdi
    2e37:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2e3a:	31 31                	xor    DWORD PTR [rcx],esi
    2e3c:	31 32                	xor    DWORD PTR [rdx],esi
    2e3e:	62 61 73 69 63       	(bad)
    2e43:	5f                   	pop    rdi
    2e44:	73 74                	jae    2eba <__GNU_EH_FRAME_HDR+0xe86>
    2e46:	72 69                	jb     2eb1 <__GNU_EH_FRAME_HDR+0xe7d>
    2e48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e49:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2e4e:	31 31                	xor    DWORD PTR [rcx],esi
    2e50:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2e53:	72 5f                	jb     2eb4 <__GNU_EH_FRAME_HDR+0xe80>
    2e55:	74 72                	je     2ec9 <__GNU_EH_FRAME_HDR+0xe95>
    2e57:	61                   	(bad)
    2e58:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2e5f:	61 
    2e60:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2e64:	36 72 62             	ss jb  2ec9 <__GNU_EH_FRAME_HDR+0xe95>
    2e67:	65 67 69 6e 45 76 00 	imul   ebp,DWORD PTR gs:[esi+0x45],0x5a5f0076
    2e6e:	5f 5a 
    2e70:	4e 53                	rex.WRX push rbx
    2e72:	74 31                	je     2ea5 <__GNU_EH_FRAME_HDR+0xe71>
    2e74:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    2e79:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    2e7c:	74 69                	je     2ee7 <__GNU_EH_FRAME_HDR+0xeb3>
    2e7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e7f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e80:	5f                   	pop    rdi
    2e81:	70 74                	jo     2ef7 <__GNU_EH_FRAME_HDR+0xec3>
    2e83:	72 31                	jb     2eb6 <__GNU_EH_FRAME_HDR+0xe82>
    2e85:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    2e88:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    2e8b:	74 69                	je     2ef6 <__GNU_EH_FRAME_HDR+0xec2>
    2e8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2e8e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2e8f:	5f                   	pop    rdi
    2e90:	70 74                	jo     2f06 <__GNU_EH_FRAME_HDR+0xed2>
    2e92:	72 61                	jb     2ef5 <__GNU_EH_FRAME_HDR+0xec1>
    2e94:	53                   	push   rbx
    2e95:	45                   	rex.RB
    2e96:	4f 53                	rex.WRXB push r11
    2e98:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    2e9b:	66 74 65             	data16 je 2f03 <__GNU_EH_FRAME_HDR+0xecf>
    2e9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    2e9f:	6c                   	ins    BYTE PTR es:[rdi],dx
    2ea0:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    2ea3:	74 5f                	je     2f04 <__GNU_EH_FRAME_HDR+0xed0>
    2ea5:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    2ea8:	72 5f                	jb     2f09 <__GNU_EH_FRAME_HDR+0xed5>
    2eaa:	73 79                	jae    2f25 <__GNU_EH_FRAME_HDR+0xef1>
    2eac:	6d                   	ins    DWORD PTR es:[rdi],dx
    2ead:	62 6f 6c 00 72       	(bad)
    2eb2:	65 73 6f             	gs jae 2f24 <__GNU_EH_FRAME_HDR+0xef0>
    2eb5:	75 72                	jne    2f29 <__GNU_EH_FRAME_HDR+0xef5>
    2eb7:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    2eba:	75 6e                	jne    2f2a <__GNU_EH_FRAME_HDR+0xef6>
    2ebc:	61                   	(bad)
    2ebd:	76 61                	jbe    2f20 <__GNU_EH_FRAME_HDR+0xeec>
    2ebf:	69 6c 61 62 6c 65 5f 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x745f656c
    2ec6:	74 
    2ec7:	72 79                	jb     2f42 <__GNU_EH_FRAME_HDR+0xf0e>
    2ec9:	5f                   	pop    rdi
    2eca:	61                   	(bad)
    2ecb:	67 61                	addr32 (bad)
    2ecd:	69 6e 00 5f 5a 4e 4b 	imul   ebp,DWORD PTR [rsi+0x0],0x4b4e5a5f
    2ed4:	53                   	push   rbx
    2ed5:	74 37                	je     2f0e <__GNU_EH_FRAME_HDR+0xeda>
    2ed7:	5f                   	pop    rdi
    2ed8:	5f                   	pop    rdi
    2ed9:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2edc:	31 31                	xor    DWORD PTR [rcx],esi
    2ede:	31 32                	xor    DWORD PTR [rdx],esi
    2ee0:	62 61 73 69 63       	(bad)
    2ee5:	5f                   	pop    rdi
    2ee6:	73 74                	jae    2f5c <__GNU_EH_FRAME_HDR+0xf28>
    2ee8:	72 69                	jb     2f53 <__GNU_EH_FRAME_HDR+0xf1f>
    2eea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2eeb:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2ef0:	31 31                	xor    DWORD PTR [rcx],esi
    2ef2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2ef5:	72 5f                	jb     2f56 <__GNU_EH_FRAME_HDR+0xf22>
    2ef7:	74 72                	je     2f6b <__GNU_EH_FRAME_HDR+0xf37>
    2ef9:	61                   	(bad)
    2efa:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2f01:	61 
    2f02:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2f06:	36 6c                	ss ins BYTE PTR es:[rdi],dx
    2f08:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    2f0a:	67 74 68             	addr32 je 2f75 <__GNU_EH_FRAME_HDR+0xf41>
    2f0d:	45 76 00             	rex.RB jbe 2f10 <__GNU_EH_FRAME_HDR+0xedc>
    2f10:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f12:	5f                   	pop    rdi
    2f13:	70 72                	jo     2f87 <__GNU_EH_FRAME_HDR+0xf53>
    2f15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f16:	74 6f                	je     2f87 <__GNU_EH_FRAME_HDR+0xf53>
    2f18:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    2f1b:	5f                   	pop    rdi
    2f1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f1d:	70 74                	jo     2f93 <__GNU_EH_FRAME_HDR+0xf5f>
    2f1f:	69 6f 6e 00 5f 5a 4e 	imul   ebp,DWORD PTR [rdi+0x6e],0x4e5a5f00
    2f26:	53                   	push   rbx
    2f27:	74 37                	je     2f60 <__GNU_EH_FRAME_HDR+0xf2c>
    2f29:	5f                   	pop    rdi
    2f2a:	5f                   	pop    rdi
    2f2b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2f2e:	31 31                	xor    DWORD PTR [rcx],esi
    2f30:	31 32                	xor    DWORD PTR [rdx],esi
    2f32:	62 61 73 69 63       	(bad)
    2f37:	5f                   	pop    rdi
    2f38:	73 74                	jae    2fae <__GNU_EH_FRAME_HDR+0xf7a>
    2f3a:	72 69                	jb     2fa5 <__GNU_EH_FRAME_HDR+0xf71>
    2f3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f3d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2f42:	31 31                	xor    DWORD PTR [rcx],esi
    2f44:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2f47:	72 5f                	jb     2fa8 <__GNU_EH_FRAME_HDR+0xf74>
    2f49:	74 72                	je     2fbd <__GNU_EH_FRAME_HDR+0xf89>
    2f4b:	61                   	(bad)
    2f4c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2f53:	61 
    2f54:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2f58:	37                   	(bad)
    2f59:	72 65                	jb     2fc0 <__GNU_EH_FRAME_HDR+0xf8c>
    2f5b:	70 6c                	jo     2fc9 <__GNU_EH_FRAME_HDR+0xf95>
    2f5d:	61                   	(bad)
    2f5e:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    2f61:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    2f65:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    2f67:	75 5f                	jne    2fc8 <__GNU_EH_FRAME_HDR+0xf94>
    2f69:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2f6c:	31 37                	xor    DWORD PTR [rdi],esi
    2f6e:	5f                   	pop    rdi
    2f6f:	5f                   	pop    rdi
    2f70:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2f71:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2f72:	72 6d                	jb     2fe1 <__GNU_EH_FRAME_HDR+0xfad>
    2f74:	61                   	(bad)
    2f75:	6c                   	ins    BYTE PTR es:[rdi],dx
    2f76:	5f                   	pop    rdi
    2f77:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    2f7e:	72 
    2f7f:	49 50                	rex.WB push r8
    2f81:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    2f85:	5f                   	pop    rdi
    2f86:	45                   	rex.RB
    2f87:	45 53                	rex.RB push r11
    2f89:	39 5f 6d             	cmp    DWORD PTR [rdi+0x6d],ebx
    2f8c:	63 00                	movsxd eax,DWORD PTR [rax]
    2f8e:	5f                   	pop    rdi
    2f8f:	5a                   	pop    rdx
    2f90:	4e 53                	rex.WRX push rbx
    2f92:	74 37                	je     2fcb <__GNU_EH_FRAME_HDR+0xf97>
    2f94:	5f                   	pop    rdi
    2f95:	5f                   	pop    rdi
    2f96:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2f99:	31 31                	xor    DWORD PTR [rcx],esi
    2f9b:	31 32                	xor    DWORD PTR [rdx],esi
    2f9d:	62 61 73 69 63       	(bad)
    2fa2:	5f                   	pop    rdi
    2fa3:	73 74                	jae    3019 <__GNU_EH_FRAME_HDR+0xfe5>
    2fa5:	72 69                	jb     3010 <__GNU_EH_FRAME_HDR+0xfdc>
    2fa7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2fa8:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2fad:	31 31                	xor    DWORD PTR [rcx],esi
    2faf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2fb2:	72 5f                	jb     3013 <__GNU_EH_FRAME_HDR+0xfdf>
    2fb4:	74 72                	je     3028 <__GNU_EH_FRAME_HDR+0xff4>
    2fb6:	61                   	(bad)
    2fb7:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    2fbe:	61 
    2fbf:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    2fc3:	31 32                	xor    DWORD PTR [rdx],esi
    2fc5:	5f                   	pop    rdi
    2fc6:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
    2fc8:	6c                   	ins    BYTE PTR es:[rdi],dx
    2fc9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    2fca:	63 5f 68             	movsxd ebx,DWORD PTR [rdi+0x68]
    2fcd:	69 64 65 72 43 34 45 	imul   esp,DWORD PTR [rbp+riz*2+0x72],0x50453443
    2fd4:	50 
    2fd5:	63 4f 53             	movsxd ecx,DWORD PTR [rdi+0x53]
    2fd8:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    2fdb:	5f                   	pop    rdi
    2fdc:	5a                   	pop    rdx
    2fdd:	4e 53                	rex.WRX push rbx
    2fdf:	74 37                	je     3018 <__GNU_EH_FRAME_HDR+0xfe4>
    2fe1:	5f                   	pop    rdi
    2fe2:	5f                   	pop    rdi
    2fe3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    2fe6:	31 31                	xor    DWORD PTR [rcx],esi
    2fe8:	31 32                	xor    DWORD PTR [rdx],esi
    2fea:	62 61 73 69 63       	(bad)
    2fef:	5f                   	pop    rdi
    2ff0:	73 74                	jae    3066 <__GNU_EH_FRAME_HDR+0x1032>
    2ff2:	72 69                	jb     305d <__GNU_EH_FRAME_HDR+0x1029>
    2ff4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    2ff5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    2ffa:	31 31                	xor    DWORD PTR [rcx],esi
    2ffc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    2fff:	72 5f                	jb     3060 <__GNU_EH_FRAME_HDR+0x102c>
    3001:	74 72                	je     3075 <__GNU_EH_FRAME_HDR+0x1041>
    3003:	61                   	(bad)
    3004:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    300b:	61 
    300c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3010:	31 30                	xor    DWORD PTR [rax],esi
    3012:	5f                   	pop    rdi
    3013:	4d 5f                	rex.WRB pop r15
    3015:	64 65 73 74          	fs gs jae 308d <__GNU_EH_FRAME_HDR+0x1059>
    3019:	72 6f                	jb     308a <__GNU_EH_FRAME_HDR+0x1056>
    301b:	79 45                	jns    3062 <__GNU_EH_FRAME_HDR+0x102e>
    301d:	6d                   	ins    DWORD PTR es:[rdi],dx
    301e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3021:	4e 53                	rex.WRX push rbx
    3023:	74 37                	je     305c <__GNU_EH_FRAME_HDR+0x1028>
    3025:	5f                   	pop    rdi
    3026:	5f                   	pop    rdi
    3027:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    302a:	31 31                	xor    DWORD PTR [rcx],esi
    302c:	31 32                	xor    DWORD PTR [rdx],esi
    302e:	62 61 73 69 63       	(bad)
    3033:	5f                   	pop    rdi
    3034:	73 74                	jae    30aa <__GNU_EH_FRAME_HDR+0x1076>
    3036:	72 69                	jb     30a1 <__GNU_EH_FRAME_HDR+0x106d>
    3038:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3039:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    303e:	31 31                	xor    DWORD PTR [rcx],esi
    3040:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3043:	72 5f                	jb     30a4 <__GNU_EH_FRAME_HDR+0x1070>
    3045:	74 72                	je     30b9 <__GNU_EH_FRAME_HDR+0x1085>
    3047:	61                   	(bad)
    3048:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    304f:	61 
    3050:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3054:	37                   	(bad)
    3055:	72 65                	jb     30bc <__GNU_EH_FRAME_HDR+0x1088>
    3057:	70 6c                	jo     30c5 <__GNU_EH_FRAME_HDR+0x1091>
    3059:	61                   	(bad)
    305a:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    305d:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    3061:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3063:	75 5f                	jne    30c4 <__GNU_EH_FRAME_HDR+0x1090>
    3065:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3068:	31 37                	xor    DWORD PTR [rdi],esi
    306a:	5f                   	pop    rdi
    306b:	5f                   	pop    rdi
    306c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    306d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    306e:	72 6d                	jb     30dd <__GNU_EH_FRAME_HDR+0x10a9>
    3070:	61                   	(bad)
    3071:	6c                   	ins    BYTE PTR es:[rdi],dx
    3072:	5f                   	pop    rdi
    3073:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    307a:	72 
    307b:	49 50                	rex.WB push r8
    307d:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    3081:	5f                   	pop    rdi
    3082:	45                   	rex.RB
    3083:	45 53                	rex.RB push r11
    3085:	39 5f 53             	cmp    DWORD PTR [rdi+0x53],ebx
    3088:	74 31                	je     30bb <__GNU_EH_FRAME_HDR+0x1087>
    308a:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    3091:	6c 
    3092:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    3099:	73 74                	jae    310f <__GNU_EH_FRAME_HDR+0x10db>
    309b:	49 63 45 00          	movsxd rax,DWORD PTR [r13+0x0]
    309f:	5f                   	pop    rdi
    30a0:	5a                   	pop    rdx
    30a1:	4e                   	rex.WRX
    30a2:	4b 53                	rex.WXB push r11
    30a4:	74 31                	je     30d7 <__GNU_EH_FRAME_HDR+0x10a3>
    30a6:	37                   	(bad)
    30a7:	62 61 73 69 63       	(bad)
    30ac:	5f                   	pop    rdi
    30ad:	73 74                	jae    3123 <__GNU_EH_FRAME_HDR+0x10ef>
    30af:	72 69                	jb     311a <__GNU_EH_FRAME_HDR+0x10e6>
    30b1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    30b2:	67 5f                	addr32 pop rdi
    30b4:	76 69                	jbe    311f <__GNU_EH_FRAME_HDR+0x10eb>
    30b6:	65 77 49             	gs ja  3102 <__GNU_EH_FRAME_HDR+0x10ce>
    30b9:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    30bc:	31 31                	xor    DWORD PTR [rcx],esi
    30be:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    30c1:	72 5f                	jb     3122 <__GNU_EH_FRAME_HDR+0x10ee>
    30c3:	74 72                	je     3137 <__GNU_EH_FRAME_HDR+0x1103>
    30c5:	61                   	(bad)
    30c6:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x39454563
    30cd:	39 
    30ce:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    30d0:	64 73 5f             	fs jae 3132 <__GNU_EH_FRAME_HDR+0x10fe>
    30d3:	77 69                	ja     313e <__GNU_EH_FRAME_HDR+0x110a>
    30d5:	74 68                	je     313f <__GNU_EH_FRAME_HDR+0x110b>
    30d7:	45 53                	rex.RB push r11
    30d9:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    30dc:	5f                   	pop    rdi
    30dd:	5a                   	pop    rdx
    30de:	38 6d 79             	cmp    BYTE PTR [rbp+0x79],ch
    30e1:	5f                   	pop    rdi
    30e2:	77 72                	ja     3156 <__GNU_EH_FRAME_HDR+0x1122>
    30e4:	69 74 65 69 50 4b 76 	imul   esi,DWORD PTR [rbp+riz*2+0x69],0x6d764b50
    30eb:	6d 
    30ec:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    30ef:	6c                   	ins    BYTE PTR es:[rdi],dx
    30f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    30f1:	61                   	(bad)
    30f2:	74 31                	je     3125 <__GNU_EH_FRAME_HDR+0x10f1>
    30f4:	36 00 5f 5a          	ss add BYTE PTR [rdi+0x5a],bl
    30f8:	4e                   	rex.WRX
    30f9:	4b 53                	rex.WXB push r11
    30fb:	74 31                	je     312e <__GNU_EH_FRAME_HDR+0x10fa>
    30fd:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    3104:	6c 
    3105:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    310c:	73 74                	jae    3182 <__GNU_EH_FRAME_HDR+0x114e>
    310e:	49 63 45 35          	movsxd rax,DWORD PTR [r13+0x35]
    3112:	62 65 67 69 6e       	(bad)
    3117:	45 76 00             	rex.RB jbe 311a <__GNU_EH_FRAME_HDR+0x10e6>
    311a:	5f                   	pop    rdi
    311b:	5a                   	pop    rdx
    311c:	4e                   	rex.WRX
    311d:	4b 53                	rex.WXB push r11
    311f:	74 34                	je     3155 <__GNU_EH_FRAME_HDR+0x1121>
    3121:	73 70                	jae    3193 <__GNU_EH_FRAME_HDR+0x115f>
    3123:	61                   	(bad)
    3124:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3125:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    312a:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    312d:	36 37                	ss (bad)
    312f:	34 34                	xor    al,0x34
    3131:	30 37                	xor    BYTE PTR [rdi],dh
    3133:	33 37                	xor    esi,DWORD PTR [rdi]
    3135:	30 39                	xor    BYTE PTR [rcx],bh
    3137:	35 35 31 36 31       	xor    eax,0x31363135
    313c:	35 45 45 35 65       	xor    eax,0x65354545
    3141:	6d                   	ins    DWORD PTR es:[rdi],dx
    3142:	70 74                	jo     31b8 <__GNU_EH_FRAME_HDR+0x1184>
    3144:	79 45                	jns    318b <__GNU_EH_FRAME_HDR+0x1157>
    3146:	76 00                	jbe    3148 <__GNU_EH_FRAME_HDR+0x1114>
    3148:	5f                   	pop    rdi
    3149:	5f                   	pop    rdi
    314a:	73 77                	jae    31c3 <__GNU_EH_FRAME_HDR+0x118f>
    314c:	61                   	(bad)
    314d:	70 70                	jo     31bf <__GNU_EH_FRAME_HDR+0x118b>
    314f:	61                   	(bad)
    3150:	62 6c 65 5f 64       	(bad)
    3155:	65 74 61             	gs je  31b9 <__GNU_EH_FRAME_HDR+0x1185>
    3158:	69 6c 73 00 5f 5a 4e 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x4b4e5a5f
    315f:	4b 
    3160:	53                   	push   rbx
    3161:	74 37                	je     319a <__GNU_EH_FRAME_HDR+0x1166>
    3163:	5f                   	pop    rdi
    3164:	5f                   	pop    rdi
    3165:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3168:	31 31                	xor    DWORD PTR [rcx],esi
    316a:	31 32                	xor    DWORD PTR [rdx],esi
    316c:	62 61 73 69 63       	(bad)
    3171:	5f                   	pop    rdi
    3172:	73 74                	jae    31e8 <__GNU_EH_FRAME_HDR+0x11b4>
    3174:	72 69                	jb     31df <__GNU_EH_FRAME_HDR+0x11ab>
    3176:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3177:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    317c:	31 31                	xor    DWORD PTR [rcx],esi
    317e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3181:	72 5f                	jb     31e2 <__GNU_EH_FRAME_HDR+0x11ae>
    3183:	74 72                	je     31f7 <__GNU_EH_FRAME_HDR+0x11c3>
    3185:	61                   	(bad)
    3186:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    318d:	61 
    318e:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3192:	37                   	(bad)
    3193:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3196:	70 61                	jo     31f9 <__GNU_EH_FRAME_HDR+0x11c5>
    3198:	72 65                	jb     31ff <__GNU_EH_FRAME_HDR+0x11cb>
    319a:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    319c:	6d                   	ins    DWORD PTR es:[rdi],dx
    319d:	52                   	push   rdx
    319e:	4b 53                	rex.WXB push r11
    31a0:	34 5f                	xor    al,0x5f
    31a2:	6d                   	ins    DWORD PTR es:[rdi],dx
    31a3:	6d                   	ins    DWORD PTR es:[rdi],dx
    31a4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    31a7:	4e 53                	rex.WRX push rbx
    31a9:	74 31                	je     31dc <__GNU_EH_FRAME_HDR+0x11a8>
    31ab:	37                   	(bad)
    31ac:	62 61 73 69 63       	(bad)
    31b1:	5f                   	pop    rdi
    31b2:	73 74                	jae    3228 <__GNU_EH_FRAME_HDR+0x11f4>
    31b4:	72 69                	jb     321f <__GNU_EH_FRAME_HDR+0x11eb>
    31b6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    31b7:	67 5f                	addr32 pop rdi
    31b9:	76 69                	jbe    3224 <__GNU_EH_FRAME_HDR+0x11f0>
    31bb:	65 77 49             	gs ja  3207 <__GNU_EH_FRAME_HDR+0x11d3>
    31be:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    31c1:	31 31                	xor    DWORD PTR [rcx],esi
    31c3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    31c6:	72 5f                	jb     3227 <__GNU_EH_FRAME_HDR+0x11f3>
    31c8:	74 72                	je     323c <__GNU_EH_FRAME_HDR+0x1208>
    31ca:	61                   	(bad)
    31cb:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61454563
    31d2:	61 
    31d3:	53                   	push   rbx
    31d4:	45 52                	rex.RB push r10
    31d6:	4b 53                	rex.WXB push r11
    31d8:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    31db:	5f                   	pop    rdi
    31dc:	5a                   	pop    rdx
    31dd:	4e                   	rex.WRX
    31de:	4b 53                	rex.WXB push r11
    31e0:	74 34                	je     3216 <__GNU_EH_FRAME_HDR+0x11e2>
    31e2:	70 61                	jo     3245 <__GNU_EH_FRAME_HDR+0x1211>
    31e4:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    31eb:	45 61                	rex.RB (bad)
    31ed:	53                   	push   rbx
    31ee:	45 52                	rex.RB push r10
    31f0:	4b 53                	rex.WXB push r11
    31f2:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    31f5:	63 6c 31 39          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x39]
    31f9:	5f                   	pop    rdi
    31fa:	53                   	push   rbx
    31fb:	5f                   	pop    rdi
    31fc:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    31ff:	73 74                	jae    3275 <__GNU_EH_FRAME_HDR+0x1241>
    3201:	5f                   	pop    rdi
    3202:	61                   	(bad)
    3203:	73 73                	jae    3278 <__GNU_EH_FRAME_HDR+0x1244>
    3205:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    320c:	49 52                	rex.WB push r10
    320e:	4b 54                	rex.WXB push r12
    3210:	5f                   	pop    rdi
    3211:	52                   	push   rdx
    3212:	4b 54                	rex.WXB push r12
    3214:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    3217:	45 00 65 72          	add    BYTE PTR [r13+0x72],r12b
    321b:	72 63                	jb     3280 <__GNU_EH_FRAME_HDR+0x124c>
    321d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3220:	4e 53                	rex.WRX push rbx
    3222:	74 37                	je     325b <__GNU_EH_FRAME_HDR+0x1227>
    3224:	5f                   	pop    rdi
    3225:	5f                   	pop    rdi
    3226:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3229:	31 31                	xor    DWORD PTR [rcx],esi
    322b:	31 32                	xor    DWORD PTR [rdx],esi
    322d:	62 61 73 69 63       	(bad)
    3232:	5f                   	pop    rdi
    3233:	73 74                	jae    32a9 <__GNU_EH_FRAME_HDR+0x1275>
    3235:	72 69                	jb     32a0 <__GNU_EH_FRAME_HDR+0x126c>
    3237:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3238:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    323d:	31 31                	xor    DWORD PTR [rcx],esi
    323f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3242:	72 5f                	jb     32a3 <__GNU_EH_FRAME_HDR+0x126f>
    3244:	74 72                	je     32b8 <__GNU_EH_FRAME_HDR+0x1284>
    3246:	61                   	(bad)
    3247:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    324e:	61 
    324f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3253:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
    325a:	45 
    325b:	6d                   	ins    DWORD PTR es:[rdi],dx
    325c:	50                   	push   rax
    325d:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    3260:	63 6c 6f 63          	movsxd ebp,DWORD PTR [rdi+rbp*2+0x63]
    3264:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    3267:	5a                   	pop    rdx
    3268:	4e                   	rex.WRX
    3269:	4b 53                	rex.WXB push r11
    326b:	74 31                	je     329e <__GNU_EH_FRAME_HDR+0x126a>
    326d:	37                   	(bad)
    326e:	62 61 73 69 63       	(bad)
    3273:	5f                   	pop    rdi
    3274:	73 74                	jae    32ea <__GNU_EH_FRAME_HDR+0x12b6>
    3276:	72 69                	jb     32e1 <__GNU_EH_FRAME_HDR+0x12ad>
    3278:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3279:	67 5f                	addr32 pop rdi
    327b:	76 69                	jbe    32e6 <__GNU_EH_FRAME_HDR+0x12b2>
    327d:	65 77 49             	gs ja  32c9 <__GNU_EH_FRAME_HDR+0x1295>
    3280:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    3283:	31 31                	xor    DWORD PTR [rcx],esi
    3285:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3288:	72 5f                	jb     32e9 <__GNU_EH_FRAME_HDR+0x12b5>
    328a:	74 72                	je     32fe <__GNU_EH_FRAME_HDR+0x12ca>
    328c:	61                   	(bad)
    328d:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x37454563
    3294:	37 
    3295:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3298:	70 61                	jo     32fb <__GNU_EH_FRAME_HDR+0x12c7>
    329a:	72 65                	jb     3301 <__GNU_EH_FRAME_HDR+0x12cd>
    329c:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    329e:	6d                   	ins    DWORD PTR es:[rdi],dx
    329f:	50                   	push   rax
    32a0:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    32a4:	5f                   	pop    rdi
    32a5:	5a                   	pop    rdx
    32a6:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    32aa:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    32ac:	75 5f                	jne    330d <__GNU_EH_FRAME_HDR+0x12d9>
    32ae:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    32b1:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
    32b4:	5f                   	pop    rdi
    32b5:	61                   	(bad)
    32b6:	6c                   	ins    BYTE PTR es:[rdi],dx
    32b7:	6c                   	ins    BYTE PTR es:[rdi],dx
    32b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    32b9:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
    32bc:	72 61                	jb     331f <__GNU_EH_FRAME_HDR+0x12eb>
    32be:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    32c5:	63 
    32c6:	45 63 45 31          	movsxd r8d,DWORD PTR [r13+0x31]
    32ca:	37                   	(bad)
    32cb:	5f                   	pop    rdi
    32cc:	53                   	push   rbx
    32cd:	5f                   	pop    rdi
    32ce:	73 65                	jae    3335 <__GNU_EH_FRAME_HDR+0x1301>
    32d0:	6c                   	ins    BYTE PTR es:[rdi],dx
    32d1:	65 63 74 5f 6f       	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x6f]
    32d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    32d7:	5f                   	pop    rdi
    32d8:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    32db:	79 45                	jns    3322 <__GNU_EH_FRAME_HDR+0x12ee>
    32dd:	52                   	push   rdx
    32de:	4b 53                	rex.WXB push r11
    32e0:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
    32e3:	63 6c 65 61          	movsxd ebp,DWORD PTR [rbp+riz*2+0x61]
    32e7:	72 00                	jb     32e9 <__GNU_EH_FRAME_HDR+0x12b5>
    32e9:	5f                   	pop    rdi
    32ea:	5a                   	pop    rdx
    32eb:	4e 53                	rex.WRX push rbx
    32ed:	74 31                	je     3320 <__GNU_EH_FRAME_HDR+0x12ec>
    32ef:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    32f2:	61                   	(bad)
    32f3:	72 5f                	jb     3354 <__GNU_EH_FRAME_HDR+0x1320>
    32f5:	74 72                	je     3369 <__GNU_EH_FRAME_HDR+0x1335>
    32f7:	61                   	(bad)
    32f8:	69 74 73 49 63 45 32 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x6c324563
    32ff:	6c 
    3300:	74 45                	je     3347 <__GNU_EH_FRAME_HDR+0x1313>
    3302:	52                   	push   rdx
    3303:	4b 63 53 32          	rex.WXB movsxd rdx,DWORD PTR [r11+0x32]
    3307:	5f                   	pop    rdi
    3308:	00 61 73             	add    BYTE PTR [rcx+0x73],ah
    330b:	63 74 69 6d          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6d]
    330f:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    3313:	4e                   	rex.WRX
    3314:	4b 53                	rex.WXB push r11
    3316:	74 31                	je     3349 <__GNU_EH_FRAME_HDR+0x1315>
    3318:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    331d:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    3320:	74 69                	je     338b <__GNU_EH_FRAME_HDR+0x1357>
    3322:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3323:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3324:	5f                   	pop    rdi
    3325:	70 74                	jo     339b <__GNU_EH_FRAME_HDR+0x1367>
    3327:	72 31                	jb     335a <__GNU_EH_FRAME_HDR+0x1326>
    3329:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    332c:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    332f:	74 69                	je     339a <__GNU_EH_FRAME_HDR+0x1366>
    3331:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3332:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3333:	5f                   	pop    rdi
    3334:	70 74                	jo     33aa <__GNU_EH_FRAME_HDR+0x1376>
    3336:	72 32                	jb     336a <__GNU_EH_FRAME_HDR+0x1336>
    3338:	30 5f 5f             	xor    BYTE PTR [rdi+0x5f],bl
    333b:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
    333e:	5f                   	pop    rdi
    333f:	65 78 63             	gs js  33a5 <__GNU_EH_FRAME_HDR+0x1371>
    3342:	65 70 74             	gs jo  33b9 <__GNU_EH_FRAME_HDR+0x1385>
    3345:	69 6f 6e 5f 74 79 70 	imul   ebp,DWORD PTR [rdi+0x6e],0x7079745f
    334c:	65 45 76 00          	gs rex.RB jbe 3350 <__GNU_EH_FRAME_HDR+0x131c>
    3350:	74 6d                	je     33bf <__GNU_EH_FRAME_HDR+0x138b>
    3352:	70 66                	jo     33ba <__GNU_EH_FRAME_HDR+0x1386>
    3354:	69 6c 65 00 5f 5f 69 	imul   ebp,DWORD PTR [rbp+riz*2+0x0],0x73695f5f
    335b:	73 
    335c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    335d:	63 32                	movsxd esi,DWORD PTR [rdx]
    335f:	33 5f 73             	xor    ebx,DWORD PTR [rdi+0x73]
    3362:	77 73                	ja     33d7 <__GNU_EH_FRAME_HDR+0x13a3>
    3364:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    3367:	66 00 6e 6f          	data16 add BYTE PTR [rsi+0x6f],ch
    336b:	5f                   	pop    rdi
    336c:	73 75                	jae    33e3 <__GNU_EH_FRAME_HDR+0x13af>
    336e:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
    3371:	64 65 76 69          	fs gs jbe 33de <__GNU_EH_FRAME_HDR+0x13aa>
    3375:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    3378:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3379:	72 5f                	jb     33da <__GNU_EH_FRAME_HDR+0x13a6>
    337b:	61                   	(bad)
    337c:	64 64 72 65          	fs fs jb 33e5 <__GNU_EH_FRAME_HDR+0x13b1>
    3380:	73 73                	jae    33f5 <__GNU_EH_FRAME_HDR+0x13c1>
    3382:	00 5f 43             	add    BYTE PTR [rdi+0x43],bl
    3385:	68 61 72 54 00       	push   0x547261
    338a:	5f                   	pop    rdi
    338b:	5a                   	pop    rdx
    338c:	4e                   	rex.WRX
    338d:	4b 53                	rex.WXB push r11
    338f:	74 37                	je     33c8 <__GNU_EH_FRAME_HDR+0x1394>
    3391:	5f                   	pop    rdi
    3392:	5f                   	pop    rdi
    3393:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3396:	31 31                	xor    DWORD PTR [rcx],esi
    3398:	31 32                	xor    DWORD PTR [rdx],esi
    339a:	62 61 73 69 63       	(bad)
    339f:	5f                   	pop    rdi
    33a0:	73 74                	jae    3416 <__GNU_EH_FRAME_HDR+0x13e2>
    33a2:	72 69                	jb     340d <__GNU_EH_FRAME_HDR+0x13d9>
    33a4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    33a5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    33aa:	31 31                	xor    DWORD PTR [rcx],esi
    33ac:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    33af:	72 5f                	jb     3410 <__GNU_EH_FRAME_HDR+0x13dc>
    33b1:	74 72                	je     3425 <__GNU_EH_FRAME_HDR+0x13f1>
    33b3:	61                   	(bad)
    33b4:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    33bb:	61 
    33bc:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    33c0:	34 66                	xor    al,0x66
    33c2:	69 6e 64 45 50 4b 63 	imul   ebp,DWORD PTR [rsi+0x64],0x634b5045
    33c9:	6d                   	ins    DWORD PTR es:[rdi],dx
    33ca:	6d                   	ins    DWORD PTR es:[rdi],dx
    33cb:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    33ce:	4e 53                	rex.WRX push rbx
    33d0:	74 31                	je     3403 <__GNU_EH_FRAME_HDR+0x13cf>
    33d2:	36 61                	ss (bad)
    33d4:	6c                   	ins    BYTE PTR es:[rdi],dx
    33d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    33d6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33d7:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    33da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33db:	72 5f                	jb     343c <__GNU_EH_FRAME_HDR+0x1408>
    33dd:	74 72                	je     3451 <__GNU_EH_FRAME_HDR+0x141d>
    33df:	61                   	(bad)
    33e0:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    33e7:	63 
    33e8:	45                   	rex.RB
    33e9:	45 38 61 6c          	cmp    BYTE PTR [r9+0x6c],r12b
    33ed:	6c                   	ins    BYTE PTR es:[rdi],dx
    33ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    33ef:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    33f2:	65 45 52             	gs rex.RB push r10
    33f5:	53                   	push   rbx
    33f6:	30 5f 6d             	xor    BYTE PTR [rdi+0x6d],bl
    33f9:	00 67 6d             	add    BYTE PTR [rdi+0x6d],ah
    33fc:	74 69                	je     3467 <__GNU_EH_FRAME_HDR+0x1433>
    33fe:	6d                   	ins    DWORD PTR es:[rdi],dx
    33ff:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    3403:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    3407:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3409:	75 5f                	jne    346a <__GNU_EH_FRAME_HDR+0x1436>
    340b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    340e:	31 37                	xor    DWORD PTR [rdi],esi
    3410:	5f                   	pop    rdi
    3411:	5f                   	pop    rdi
    3412:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3413:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3414:	72 6d                	jb     3483 <__GNU_EH_FRAME_HDR+0x144f>
    3416:	61                   	(bad)
    3417:	6c                   	ins    BYTE PTR es:[rdi],dx
    3418:	5f                   	pop    rdi
    3419:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3420:	72 
    3421:	49 50                	rex.WB push r8
    3423:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    3426:	34 73                	xor    al,0x73
    3428:	70 61                	jo     348b <__GNU_EH_FRAME_HDR+0x1457>
    342a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    342b:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    3430:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    3433:	36 37                	ss (bad)
    3435:	34 34                	xor    al,0x34
    3437:	30 37                	xor    BYTE PTR [rdi],dh
    3439:	33 37                	xor    esi,DWORD PTR [rdi]
    343b:	30 39                	xor    BYTE PTR [rcx],bh
    343d:	35 35 31 36 31       	xor    eax,0x31363135
    3442:	35 45 45 45 6d       	xor    eax,0x6d454545
    3447:	6d                   	ins    DWORD PTR es:[rdi],dx
    3448:	45 76 00             	rex.RB jbe 344b <__GNU_EH_FRAME_HDR+0x1417>
    344b:	71 75                	jno    34c2 <__GNU_EH_FRAME_HDR+0x148e>
    344d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    344e:	74 00                	je     3450 <__GNU_EH_FRAME_HDR+0x141c>
    3450:	5f                   	pop    rdi
    3451:	5a                   	pop    rdx
    3452:	4e 53                	rex.WRX push rbx
    3454:	74 37                	je     348d <__GNU_EH_FRAME_HDR+0x1459>
    3456:	5f                   	pop    rdi
    3457:	5f                   	pop    rdi
    3458:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    345b:	31 31                	xor    DWORD PTR [rcx],esi
    345d:	31 32                	xor    DWORD PTR [rdx],esi
    345f:	62 61 73 69 63       	(bad)
    3464:	5f                   	pop    rdi
    3465:	73 74                	jae    34db <__GNU_EH_FRAME_HDR+0x14a7>
    3467:	72 69                	jb     34d2 <__GNU_EH_FRAME_HDR+0x149e>
    3469:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    346a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    346f:	31 31                	xor    DWORD PTR [rcx],esi
    3471:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3474:	72 5f                	jb     34d5 <__GNU_EH_FRAME_HDR+0x14a1>
    3476:	74 72                	je     34ea <__GNU_EH_FRAME_HDR+0x14b6>
    3478:	61                   	(bad)
    3479:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3480:	61 
    3481:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3485:	37                   	(bad)
    3486:	5f                   	pop    rdi
    3487:	53                   	push   rbx
    3488:	5f                   	pop    rdi
    3489:	6d                   	ins    DWORD PTR es:[rdi],dx
    348a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    348b:	76 65                	jbe    34f2 <__GNU_EH_FRAME_HDR+0x14be>
    348d:	45 50                	rex.RB push r8
    348f:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
    3492:	63 6d 00             	movsxd ebp,DWORD PTR [rbp+0x0]
    3495:	5f                   	pop    rdi
    3496:	5a                   	pop    rdx
    3497:	4e 53                	rex.WRX push rbx
    3499:	74 37                	je     34d2 <__GNU_EH_FRAME_HDR+0x149e>
    349b:	5f                   	pop    rdi
    349c:	5f                   	pop    rdi
    349d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    34a0:	31 31                	xor    DWORD PTR [rcx],esi
    34a2:	31 32                	xor    DWORD PTR [rdx],esi
    34a4:	62 61 73 69 63       	(bad)
    34a9:	5f                   	pop    rdi
    34aa:	73 74                	jae    3520 <__GNU_EH_FRAME_HDR+0x14ec>
    34ac:	72 69                	jb     3517 <__GNU_EH_FRAME_HDR+0x14e3>
    34ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34af:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    34b4:	31 31                	xor    DWORD PTR [rcx],esi
    34b6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    34b9:	72 5f                	jb     351a <__GNU_EH_FRAME_HDR+0x14e6>
    34bb:	74 72                	je     352f <__GNU_EH_FRAME_HDR+0x14fb>
    34bd:	61                   	(bad)
    34be:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    34c5:	61 
    34c6:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    34ca:	37                   	(bad)
    34cb:	72 65                	jb     3532 <__GNU_EH_FRAME_HDR+0x14fe>
    34cd:	70 6c                	jo     353b <__GNU_EH_FRAME_HDR+0x1507>
    34cf:	61                   	(bad)
    34d0:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    34d3:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    34d7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    34d9:	75 5f                	jne    353a <__GNU_EH_FRAME_HDR+0x1506>
    34db:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    34de:	31 37                	xor    DWORD PTR [rdi],esi
    34e0:	5f                   	pop    rdi
    34e1:	5f                   	pop    rdi
    34e2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    34e3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    34e4:	72 6d                	jb     3553 <__GNU_EH_FRAME_HDR+0x151f>
    34e6:	61                   	(bad)
    34e7:	6c                   	ins    BYTE PTR es:[rdi],dx
    34e8:	5f                   	pop    rdi
    34e9:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    34f0:	72 
    34f1:	49 50                	rex.WB push r8
    34f3:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    34f7:	5f                   	pop    rdi
    34f8:	45                   	rex.RB
    34f9:	45 53                	rex.RB push r11
    34fb:	39 5f 50             	cmp    DWORD PTR [rdi+0x50],ebx
    34fe:	63 53 41             	movsxd edx,DWORD PTR [rbx+0x41]
    3501:	5f                   	pop    rdi
    3502:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3505:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    3508:	73 74                	jae    357e <__GNU_EH_FRAME_HDR+0x154a>
    350a:	5f                   	pop    rdi
    350b:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3512:	72 
    3513:	00 66 72             	add    BYTE PTR [rsi+0x72],ah
    3516:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3517:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3518:	74 00                	je     351a <__GNU_EH_FRAME_HDR+0x14e6>
    351a:	5f                   	pop    rdi
    351b:	5a                   	pop    rdx
    351c:	4e                   	rex.WRX
    351d:	4b 53                	rex.WXB push r11
    351f:	74 34                	je     3555 <__GNU_EH_FRAME_HDR+0x1521>
    3521:	70 61                	jo     3584 <__GNU_EH_FRAME_HDR+0x1550>
    3523:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    352a:	45 61                	rex.RB (bad)
    352c:	53                   	push   rbx
    352d:	45                   	rex.RB
    352e:	4f 53                	rex.WRXB push r11
    3530:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    3533:	63 6c 31 39          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x39]
    3537:	5f                   	pop    rdi
    3538:	53                   	push   rbx
    3539:	5f                   	pop    rdi
    353a:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    353d:	73 74                	jae    35b3 <__GNU_EH_FRAME_HDR+0x157f>
    353f:	5f                   	pop    rdi
    3540:	61                   	(bad)
    3541:	73 73                	jae    35b6 <__GNU_EH_FRAME_HDR+0x1582>
    3543:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    354a:	49 54                	rex.WB push r12
    354c:	5f                   	pop    rdi
    354d:	54                   	push   rsp
    354e:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    3551:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    3555:	4e 53                	rex.WRX push rbx
    3557:	74 37                	je     3590 <__GNU_EH_FRAME_HDR+0x155c>
    3559:	5f                   	pop    rdi
    355a:	5f                   	pop    rdi
    355b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    355e:	31 31                	xor    DWORD PTR [rcx],esi
    3560:	31 32                	xor    DWORD PTR [rdx],esi
    3562:	62 61 73 69 63       	(bad)
    3567:	5f                   	pop    rdi
    3568:	73 74                	jae    35de <__GNU_EH_FRAME_HDR+0x15aa>
    356a:	72 69                	jb     35d5 <__GNU_EH_FRAME_HDR+0x15a1>
    356c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    356d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3572:	31 31                	xor    DWORD PTR [rcx],esi
    3574:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3577:	72 5f                	jb     35d8 <__GNU_EH_FRAME_HDR+0x15a4>
    3579:	74 72                	je     35ed <__GNU_EH_FRAME_HDR+0x15b9>
    357b:	61                   	(bad)
    357c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3583:	61 
    3584:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3588:	39 5f 53             	cmp    DWORD PTR [rdi+0x53],ebx
    358b:	5f                   	pop    rdi
    358c:	61                   	(bad)
    358d:	73 73                	jae    3602 <__GNU_EH_FRAME_HDR+0x15ce>
    358f:	69 67 6e 45 50 63 6d 	imul   esp,DWORD PTR [rdi+0x6e],0x6d635045
    3596:	63 00                	movsxd eax,DWORD PTR [rax]
    3598:	5f                   	pop    rdi
    3599:	5a                   	pop    rdx
    359a:	4e 53                	rex.WRX push rbx
    359c:	74 31                	je     35cf <__GNU_EH_FRAME_HDR+0x159b>
    359e:	35 5f 5f 6e 65       	xor    eax,0x656e5f5f
    35a3:	77 5f                	ja     3604 <__GNU_EH_FRAME_HDR+0x15d0>
    35a5:	61                   	(bad)
    35a6:	6c                   	ins    BYTE PTR es:[rdi],dx
    35a7:	6c                   	ins    BYTE PTR es:[rdi],dx
    35a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    35a9:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    35ac:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    35ad:	72 49                	jb     35f8 <__GNU_EH_FRAME_HDR+0x15c4>
    35af:	63 45 43             	movsxd eax,DWORD PTR [rbp+0x43]
    35b2:	34 45                	xor    al,0x45
    35b4:	76 00                	jbe    35b6 <__GNU_EH_FRAME_HDR+0x1582>
    35b6:	5f                   	pop    rdi
    35b7:	5f                   	pop    rdi
    35b8:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    35bb:	64 69 74 69 6f 6e 61 	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x5f6c616e
    35c2:	6c 5f 
    35c4:	74 00                	je     35c6 <__GNU_EH_FRAME_HDR+0x1592>
    35c6:	5f                   	pop    rdi
    35c7:	5a                   	pop    rdx
    35c8:	4e 53                	rex.WRX push rbx
    35ca:	74 37                	je     3603 <__GNU_EH_FRAME_HDR+0x15cf>
    35cc:	5f                   	pop    rdi
    35cd:	5f                   	pop    rdi
    35ce:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    35d1:	31 31                	xor    DWORD PTR [rcx],esi
    35d3:	31 32                	xor    DWORD PTR [rdx],esi
    35d5:	62 61 73 69 63       	(bad)
    35da:	5f                   	pop    rdi
    35db:	73 74                	jae    3651 <__GNU_EH_FRAME_HDR+0x161d>
    35dd:	72 69                	jb     3648 <__GNU_EH_FRAME_HDR+0x1614>
    35df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    35e0:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    35e5:	31 31                	xor    DWORD PTR [rcx],esi
    35e7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    35ea:	72 5f                	jb     364b <__GNU_EH_FRAME_HDR+0x1617>
    35ec:	74 72                	je     3660 <__GNU_EH_FRAME_HDR+0x162c>
    35ee:	61                   	(bad)
    35ef:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    35f6:	61 
    35f7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    35fb:	36 61                	ss (bad)
    35fd:	70 70                	jo     366f <__GNU_EH_FRAME_HDR+0x163b>
    35ff:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3601:	64 45 52             	fs rex.RB push r10
    3604:	4b 53                	rex.WXB push r11
    3606:	34 5f                	xor    al,0x5f
    3608:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    360b:	6c                   	ins    BYTE PTR es:[rdi],dx
    360c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    360d:	61                   	(bad)
    360e:	74 33                	je     3643 <__GNU_EH_FRAME_HDR+0x160f>
    3610:	32 00                	xor    al,BYTE PTR [rax]
    3612:	5f                   	pop    rdi
    3613:	52                   	push   rdx
    3614:	65 66 65 72 65       	gs data16 gs jb 367e <__GNU_EH_FRAME_HDR+0x164a>
    3619:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    361a:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    361d:	70 65                	jo     3684 <__GNU_EH_FRAME_HDR+0x1650>
    361f:	72 72                	jb     3693 <__GNU_EH_FRAME_HDR+0x165f>
    3621:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3622:	72 00                	jb     3624 <__GNU_EH_FRAME_HDR+0x15f0>
    3624:	5f                   	pop    rdi
    3625:	4d 5f                	rex.WRB pop r15
    3627:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    362a:	72 65                	jb     3691 <__GNU_EH_FRAME_HDR+0x165d>
    362c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    362d:	74 00                	je     362f <__GNU_EH_FRAME_HDR+0x15fb>
    362f:	5f                   	pop    rdi
    3630:	5f                   	pop    rdi
    3631:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    3638:	73 74                	jae    36ae <__GNU_EH_FRAME_HDR+0x167a>
    363a:	33 32                	xor    esi,DWORD PTR [rdx]
    363c:	5f                   	pop    rdi
    363d:	74 00                	je     363f <__GNU_EH_FRAME_HDR+0x160b>
    363f:	5f                   	pop    rdi
    3640:	5a                   	pop    rdx
    3641:	4e 53                	rex.WRX push rbx
    3643:	74 38                	je     367d <__GNU_EH_FRAME_HDR+0x1649>
    3645:	5f                   	pop    rdi
    3646:	5f                   	pop    rdi
    3647:	64 65 74 61          	fs gs je 36ac <__GNU_EH_FRAME_HDR+0x1678>
    364b:	69 6c 31 36 5f 5f 65 	imul   ebp,DWORD PTR [rcx+rsi*1+0x36],0x78655f5f
    3652:	78 
    3653:	74 65                	je     36ba <__GNU_EH_FRAME_HDR+0x1686>
    3655:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3656:	74 5f                	je     36b7 <__GNU_EH_FRAME_HDR+0x1683>
    3658:	73 74                	jae    36ce <__GNU_EH_FRAME_HDR+0x169a>
    365a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    365b:	72 61                	jb     36be <__GNU_EH_FRAME_HDR+0x168a>
    365d:	67 65 49             	addr32 gs rex.WB
    3660:	4c 6d                	rex.WR ins DWORD PTR es:[rdi],dx
    3662:	31 38                	xor    DWORD PTR [rax],edi
    3664:	34 34                	xor    al,0x34
    3666:	36 37                	ss (bad)
    3668:	34 34                	xor    al,0x34
    366a:	30 37                	xor    BYTE PTR [rdi],dh
    366c:	33 37                	xor    esi,DWORD PTR [rdi]
    366e:	30 39                	xor    BYTE PTR [rcx],bh
    3670:	35 35 31 36 31       	xor    eax,0x31363135
    3675:	35 45 45 43 34       	xor    eax,0x34434545
    367a:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    367c:	00 72 61             	add    BYTE PTR [rdx+0x61],dh
    367f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3680:	67 65 73 00          	addr32 gs jae 3684 <__GNU_EH_FRAME_HDR+0x1650>
    3684:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    3686:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    3688:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    368a:	74 5f                	je     36eb <__GNU_EH_FRAME_HDR+0x16b7>
    368c:	74 79                	je     3707 <__GNU_EH_FRAME_HDR+0x16d3>
    368e:	70 65                	jo     36f5 <__GNU_EH_FRAME_HDR+0x16c1>
    3690:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3693:	4e                   	rex.WRX
    3694:	4b 53                	rex.WXB push r11
    3696:	74 31                	je     36c9 <__GNU_EH_FRAME_HDR+0x1695>
    3698:	37                   	(bad)
    3699:	62 61 73 69 63       	(bad)
    369e:	5f                   	pop    rdi
    369f:	73 74                	jae    3715 <__GNU_EH_FRAME_HDR+0x16e1>
    36a1:	72 69                	jb     370c <__GNU_EH_FRAME_HDR+0x16d8>
    36a3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36a4:	67 5f                	addr32 pop rdi
    36a6:	76 69                	jbe    3711 <__GNU_EH_FRAME_HDR+0x16dd>
    36a8:	65 77 49             	gs ja  36f4 <__GNU_EH_FRAME_HDR+0x16c0>
    36ab:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    36ae:	31 31                	xor    DWORD PTR [rcx],esi
    36b0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    36b3:	72 5f                	jb     3714 <__GNU_EH_FRAME_HDR+0x16e0>
    36b5:	74 72                	je     3729 <__GNU_EH_FRAME_HDR+0x16f5>
    36b7:	61                   	(bad)
    36b8:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    36bf:	31 
    36c0:	37                   	(bad)
    36c1:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    36c7:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
    36ce:	74 5f                	je     372f <__GNU_EH_FRAME_HDR+0x16fb>
    36d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    36d1:	66 45 53             	rex.RB push r11w
    36d4:	32 5f 6d             	xor    bl,BYTE PTR [rdi+0x6d]
    36d7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    36da:	4e                   	rex.WRX
    36db:	4b 53                	rex.WXB push r11
    36dd:	74 31                	je     3710 <__GNU_EH_FRAME_HDR+0x16dc>
    36df:	37                   	(bad)
    36e0:	62 61 73 69 63       	(bad)
    36e5:	5f                   	pop    rdi
    36e6:	73 74                	jae    375c <__GNU_EH_FRAME_HDR+0x1728>
    36e8:	72 69                	jb     3753 <__GNU_EH_FRAME_HDR+0x171f>
    36ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    36eb:	67 5f                	addr32 pop rdi
    36ed:	76 69                	jbe    3758 <__GNU_EH_FRAME_HDR+0x1724>
    36ef:	65 77 49             	gs ja  373b <__GNU_EH_FRAME_HDR+0x1707>
    36f2:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    36f5:	31 31                	xor    DWORD PTR [rcx],esi
    36f7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    36fa:	72 5f                	jb     375b <__GNU_EH_FRAME_HDR+0x1727>
    36fc:	74 72                	je     3770 <__GNU_EH_FRAME_HDR+0x173c>
    36fe:	61                   	(bad)
    36ff:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    3706:	31 
    3707:	36 66 69 6e 64 5f 6c 	ss imul bp,WORD PTR [rsi+0x64],0x6c5f
    370e:	61                   	(bad)
    370f:	73 74                	jae    3785 <__GNU_EH_FRAME_HDR+0x1751>
    3711:	5f                   	pop    rdi
    3712:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3713:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3714:	74 5f                	je     3775 <__GNU_EH_FRAME_HDR+0x1741>
    3716:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3717:	66 45 63 6d 00       	movsxd r13w,DWORD PTR [r13+0x0]
    371c:	5f                   	pop    rdi
    371d:	5f                   	pop    rdi
    371e:	69 6e 74 65 67 65 72 	imul   ebp,DWORD PTR [rsi+0x74],0x72656765
    3725:	5f                   	pop    rdi
    3726:	74 6f                	je     3797 <__GNU_EH_FRAME_HDR+0x1763>
    3728:	5f                   	pop    rdi
    3729:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    372c:	72 73                	jb     37a1 <__GNU_EH_FRAME_HDR+0x176d>
    372e:	5f                   	pop    rdi
    372f:	69 73 5f 75 6e 73 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69736e75
    3736:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3738:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
    373d:	4e                   	rex.WRX
    373e:	4b 53                	rex.WXB push r11
    3740:	74 31                	je     3773 <__GNU_EH_FRAME_HDR+0x173f>
    3742:	37                   	(bad)
    3743:	62 61 73 69 63       	(bad)
    3748:	5f                   	pop    rdi
    3749:	73 74                	jae    37bf <__GNU_EH_FRAME_HDR+0x178b>
    374b:	72 69                	jb     37b6 <__GNU_EH_FRAME_HDR+0x1782>
    374d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    374e:	67 5f                	addr32 pop rdi
    3750:	76 69                	jbe    37bb <__GNU_EH_FRAME_HDR+0x1787>
    3752:	65 77 49             	gs ja  379e <__GNU_EH_FRAME_HDR+0x176a>
    3755:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    3758:	31 31                	xor    DWORD PTR [rcx],esi
    375a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    375d:	72 5f                	jb     37be <__GNU_EH_FRAME_HDR+0x178a>
    375f:	74 72                	je     37d3 <__GNU_EH_FRAME_HDR+0x179f>
    3761:	61                   	(bad)
    3762:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    3769:	34 
    376a:	66 69 6e 64 45 63    	imul   bp,WORD PTR [rsi+0x64],0x6345
    3770:	6d                   	ins    DWORD PTR es:[rdi],dx
    3771:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    3774:	4f 5f                	rex.WRXB pop r15
    3776:	73 61                	jae    37d9 <__GNU_EH_FRAME_HDR+0x17a5>
    3778:	76 65                	jbe    37df <__GNU_EH_FRAME_HDR+0x17ab>
    377a:	5f                   	pop    rdi
    377b:	62 61 73 65 00       	(bad)
    3780:	5f                   	pop    rdi
    3781:	5a                   	pop    rdx
    3782:	4e                   	rex.WRX
    3783:	4b 53                	rex.WXB push r11
    3785:	74 31                	je     37b8 <__GNU_EH_FRAME_HDR+0x1784>
    3787:	37                   	(bad)
    3788:	62 61 73 69 63       	(bad)
    378d:	5f                   	pop    rdi
    378e:	73 74                	jae    3804 <__GNU_EH_FRAME_HDR+0x17d0>
    3790:	72 69                	jb     37fb <__GNU_EH_FRAME_HDR+0x17c7>
    3792:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3793:	67 5f                	addr32 pop rdi
    3795:	76 69                	jbe    3800 <__GNU_EH_FRAME_HDR+0x17cc>
    3797:	65 77 49             	gs ja  37e3 <__GNU_EH_FRAME_HDR+0x17af>
    379a:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    379d:	31 31                	xor    DWORD PTR [rcx],esi
    379f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    37a2:	72 5f                	jb     3803 <__GNU_EH_FRAME_HDR+0x17cf>
    37a4:	74 72                	je     3818 <__GNU_EH_FRAME_HDR+0x17e4>
    37a6:	61                   	(bad)
    37a7:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    37ae:	31 
    37af:	31 73 74             	xor    DWORD PTR [rbx+0x74],esi
    37b2:	61                   	(bad)
    37b3:	72 74                	jb     3829 <__GNU_EH_FRAME_HDR+0x17f5>
    37b5:	73 5f                	jae    3816 <__GNU_EH_FRAME_HDR+0x17e2>
    37b7:	77 69                	ja     3822 <__GNU_EH_FRAME_HDR+0x17ee>
    37b9:	74 68                	je     3823 <__GNU_EH_FRAME_HDR+0x17ef>
    37bb:	45 53                	rex.RB push r11
    37bd:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    37c0:	5f                   	pop    rdi
    37c1:	5a                   	pop    rdx
    37c2:	4e 53                	rex.WRX push rbx
    37c4:	74 31                	je     37f7 <__GNU_EH_FRAME_HDR+0x17c3>
    37c6:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    37cb:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    37ce:	74 69                	je     3839 <__GNU_EH_FRAME_HDR+0x1805>
    37d0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    37d1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    37d2:	5f                   	pop    rdi
    37d3:	70 74                	jo     3849 <__GNU_EH_FRAME_HDR+0x1815>
    37d5:	72 34                	jb     380b <__GNU_EH_FRAME_HDR+0x17d7>
    37d7:	73 77                	jae    3850 <__GNU_EH_FRAME_HDR+0x181c>
    37d9:	61                   	(bad)
    37da:	70 45                	jo     3821 <__GNU_EH_FRAME_HDR+0x17ed>
    37dc:	52                   	push   rdx
    37dd:	4e 53                	rex.WRX push rbx
    37df:	5f                   	pop    rdi
    37e0:	31 33                	xor    DWORD PTR [rbx],esi
    37e2:	65 78 63             	gs js  3848 <__GNU_EH_FRAME_HDR+0x1814>
    37e5:	65 70 74             	gs jo  385c <__GNU_EH_FRAME_HDR+0x1828>
    37e8:	69 6f 6e 5f 70 74 72 	imul   ebp,DWORD PTR [rdi+0x6e],0x7274705f
    37ef:	45 53                	rex.RB push r11
    37f1:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
    37f4:	73 79                	jae    386f <__GNU_EH_FRAME_HDR+0x183b>
    37f6:	73 63                	jae    385b <__GNU_EH_FRAME_HDR+0x1827>
    37f8:	61                   	(bad)
    37f9:	6c                   	ins    BYTE PTR es:[rdi],dx
    37fa:	6c                   	ins    BYTE PTR es:[rdi],dx
    37fb:	5f                   	pop    rdi
    37fc:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    37ff:	65 00 77 63          	add    BYTE PTR gs:[rdi+0x63],dh
    3803:	74 6f                	je     3874 <__GNU_EH_FRAME_HDR+0x1840>
    3805:	62                   	(bad)
    3806:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    3809:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    380a:	5f                   	pop    rdi
    380b:	74 68                	je     3875 <__GNU_EH_FRAME_HDR+0x1841>
    380d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    380e:	75 73                	jne    3883 <__GNU_EH_FRAME_HDR+0x184f>
    3810:	61                   	(bad)
    3811:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3812:	64 73 5f             	fs jae 3874 <__GNU_EH_FRAME_HDR+0x1840>
    3815:	73 65                	jae    387c <__GNU_EH_FRAME_HDR+0x1848>
    3817:	70 00                	jo     3819 <__GNU_EH_FRAME_HDR+0x17e5>
    3819:	5f                   	pop    rdi
    381a:	5a                   	pop    rdx
    381b:	4e 53                	rex.WRX push rbx
    381d:	74 37                	je     3856 <__GNU_EH_FRAME_HDR+0x1822>
    381f:	5f                   	pop    rdi
    3820:	5f                   	pop    rdi
    3821:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3824:	31 31                	xor    DWORD PTR [rcx],esi
    3826:	31 32                	xor    DWORD PTR [rdx],esi
    3828:	62 61 73 69 63       	(bad)
    382d:	5f                   	pop    rdi
    382e:	73 74                	jae    38a4 <__GNU_EH_FRAME_HDR+0x1870>
    3830:	72 69                	jb     389b <__GNU_EH_FRAME_HDR+0x1867>
    3832:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3833:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3838:	31 31                	xor    DWORD PTR [rcx],esi
    383a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    383d:	72 5f                	jb     389e <__GNU_EH_FRAME_HDR+0x186a>
    383f:	74 72                	je     38b3 <__GNU_EH_FRAME_HDR+0x187f>
    3841:	61                   	(bad)
    3842:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3849:	61 
    384a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    384e:	43 34 45             	rex.XB xor al,0x45
    3851:	4f 53                	rex.WRXB push r11
    3853:	34 5f                	xor    al,0x5f
    3855:	52                   	push   rdx
    3856:	4b 53                	rex.WXB push r11
    3858:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    385b:	69 6f 5f 65 72 72 6f 	imul   ebp,DWORD PTR [rdi+0x5f],0x6f727265
    3862:	72 00                	jb     3864 <__GNU_EH_FRAME_HDR+0x1830>
    3864:	5f                   	pop    rdi
    3865:	5a                   	pop    rdx
    3866:	4e                   	rex.WRX
    3867:	4b 53                	rex.WXB push r11
    3869:	74 31                	je     389c <__GNU_EH_FRAME_HDR+0x1868>
    386b:	37                   	(bad)
    386c:	62 61 73 69 63       	(bad)
    3871:	5f                   	pop    rdi
    3872:	73 74                	jae    38e8 <__GNU_EH_FRAME_HDR+0x18b4>
    3874:	72 69                	jb     38df <__GNU_EH_FRAME_HDR+0x18ab>
    3876:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3877:	67 5f                	addr32 pop rdi
    3879:	76 69                	jbe    38e4 <__GNU_EH_FRAME_HDR+0x18b0>
    387b:	65 77 49             	gs ja  38c7 <__GNU_EH_FRAME_HDR+0x1893>
    387e:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    3881:	31 31                	xor    DWORD PTR [rcx],esi
    3883:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3886:	72 5f                	jb     38e7 <__GNU_EH_FRAME_HDR+0x18b3>
    3888:	74 72                	je     38fc <__GNU_EH_FRAME_HDR+0x18c8>
    388a:	61                   	(bad)
    388b:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x37454563
    3892:	37 
    3893:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    3896:	70 61                	jo     38f9 <__GNU_EH_FRAME_HDR+0x18c5>
    3898:	72 65                	jb     38ff <__GNU_EH_FRAME_HDR+0x18cb>
    389a:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    389c:	6d                   	ins    DWORD PTR es:[rdi],dx
    389d:	50                   	push   rax
    389e:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    38a1:	5f                   	pop    rdi
    38a2:	5a                   	pop    rdx
    38a3:	4e 53                	rex.WRX push rbx
    38a5:	74 31                	je     38d8 <__GNU_EH_FRAME_HDR+0x18a4>
    38a7:	36 72 65             	ss jb  390f <__GNU_EH_FRAME_HDR+0x18db>
    38aa:	76 65                	jbe    3911 <__GNU_EH_FRAME_HDR+0x18dd>
    38ac:	72 73                	jb     3921 <__GNU_EH_FRAME_HDR+0x18ed>
    38ae:	65 5f                	gs pop rdi
    38b0:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    38b7:	72 
    38b8:	49                   	rex.WB
    38b9:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    38bd:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    38bf:	75 5f                	jne    3920 <__GNU_EH_FRAME_HDR+0x18ec>
    38c1:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    38c4:	31 37                	xor    DWORD PTR [rdi],esi
    38c6:	5f                   	pop    rdi
    38c7:	5f                   	pop    rdi
    38c8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    38c9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    38ca:	72 6d                	jb     3939 <__GNU_EH_FRAME_HDR+0x1905>
    38cc:	61                   	(bad)
    38cd:	6c                   	ins    BYTE PTR es:[rdi],dx
    38ce:	5f                   	pop    rdi
    38cf:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    38d6:	72 
    38d7:	49 50                	rex.WB push r8
    38d9:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    38dc:	34 73                	xor    al,0x73
    38de:	70 61                	jo     3941 <__GNU_EH_FRAME_HDR+0x190d>
    38e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    38e1:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    38e6:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    38e9:	36 37                	ss (bad)
    38eb:	34 34                	xor    al,0x34
    38ed:	30 37                	xor    BYTE PTR [rdi],dh
    38ef:	33 37                	xor    esi,DWORD PTR [rdi]
    38f1:	30 39                	xor    BYTE PTR [rcx],bh
    38f3:	35 35 31 36 31       	xor    eax,0x31363135
    38f8:	35 45 45 45 45       	xor    eax,0x45454545
    38fd:	45                   	rex.RB
    38fe:	43 34 45             	rex.XB xor al,0x45
    3901:	52                   	push   rdx
    3902:	4b 53                	rex.WXB push r11
    3904:	36 5f                	ss pop rdi
    3906:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3909:	4e 53                	rex.WRX push rbx
    390b:	74 37                	je     3944 <__GNU_EH_FRAME_HDR+0x1910>
    390d:	5f                   	pop    rdi
    390e:	5f                   	pop    rdi
    390f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3912:	31 31                	xor    DWORD PTR [rcx],esi
    3914:	31 32                	xor    DWORD PTR [rdx],esi
    3916:	62 61 73 69 63       	(bad)
    391b:	5f                   	pop    rdi
    391c:	73 74                	jae    3992 <__GNU_EH_FRAME_HDR+0x195e>
    391e:	72 69                	jb     3989 <__GNU_EH_FRAME_HDR+0x1955>
    3920:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3921:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3926:	31 31                	xor    DWORD PTR [rcx],esi
    3928:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    392b:	72 5f                	jb     398c <__GNU_EH_FRAME_HDR+0x1958>
    392d:	74 72                	je     39a1 <__GNU_EH_FRAME_HDR+0x196d>
    392f:	61                   	(bad)
    3930:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3937:	61 
    3938:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    393c:	36 61                	ss (bad)
    393e:	70 70                	jo     39b0 <__GNU_EH_FRAME_HDR+0x197c>
    3940:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3942:	64 45 50             	fs rex.RB push r8
    3945:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    3948:	5f                   	pop    rdi
    3949:	4d 5f                	rex.WRB pop r15
    394b:	72 65                	jb     39b2 <__GNU_EH_FRAME_HDR+0x197e>
    394d:	70 6c                	jo     39bb <__GNU_EH_FRAME_HDR+0x1987>
    394f:	61                   	(bad)
    3950:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    3953:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    3956:	64 00 5f 5f          	add    BYTE PTR fs:[rdi+0x5f],bl
    395a:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    3961:	77 63                	ja     39c6 <__GNU_EH_FRAME_HDR+0x1992>
    3963:	73 74                	jae    39d9 <__GNU_EH_FRAME_HDR+0x19a5>
    3965:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3966:	6c                   	ins    BYTE PTR es:[rdi],dx
    3967:	6c                   	ins    BYTE PTR es:[rdi],dx
    3968:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    396b:	6d                   	ins    DWORD PTR es:[rdi],dx
    396c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    396d:	76 65                	jbe    39d4 <__GNU_EH_FRAME_HDR+0x19a0>
    396f:	5f                   	pop    rdi
    3970:	70 72                	jo     39e4 <__GNU_EH_FRAME_HDR+0x19b0>
    3972:	65 66 69 78 00 5f 5f 	imul   di,WORD PTR gs:[rax+0x0],0x5f5f
    3979:	77 63                	ja     39de <__GNU_EH_FRAME_HDR+0x19aa>
    397b:	68 62 00 5f 5a       	push   0x5a5f0062
    3980:	4e 53                	rex.WRX push rbx
    3982:	74 31                	je     39b5 <__GNU_EH_FRAME_HDR+0x1981>
    3984:	36 72 65             	ss jb  39ec <__GNU_EH_FRAME_HDR+0x19b8>
    3987:	76 65                	jbe    39ee <__GNU_EH_FRAME_HDR+0x19ba>
    3989:	72 73                	jb     39fe <__GNU_EH_FRAME_HDR+0x19ca>
    398b:	65 5f                	gs pop rdi
    398d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3994:	72 
    3995:	49                   	rex.WB
    3996:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    399a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    399c:	75 5f                	jne    39fd <__GNU_EH_FRAME_HDR+0x19c9>
    399e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    39a1:	31 37                	xor    DWORD PTR [rdi],esi
    39a3:	5f                   	pop    rdi
    39a4:	5f                   	pop    rdi
    39a5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    39a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    39a7:	72 6d                	jb     3a16 <__GNU_EH_FRAME_HDR+0x19e2>
    39a9:	61                   	(bad)
    39aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    39ab:	5f                   	pop    rdi
    39ac:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    39b3:	72 
    39b4:	49 50                	rex.WB push r8
    39b6:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    39b9:	34 73                	xor    al,0x73
    39bb:	70 61                	jo     3a1e <__GNU_EH_FRAME_HDR+0x19ea>
    39bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    39be:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    39c3:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    39c6:	36 37                	ss (bad)
    39c8:	34 34                	xor    al,0x34
    39ca:	30 37                	xor    BYTE PTR [rdi],dh
    39cc:	33 37                	xor    esi,DWORD PTR [rdi]
    39ce:	30 39                	xor    BYTE PTR [rcx],bh
    39d0:	35 35 31 36 31       	xor    eax,0x31363135
    39d5:	35 45 45 45 45       	xor    eax,0x45454545
    39da:	45 70 70             	rex.RB jo 3a4d <__GNU_EH_FRAME_HDR+0x1a19>
    39dd:	45 69 00 5f 49 4f 5f 	imul   r8d,DWORD PTR [r8],0x5f4f495f
    39e4:	77 72                	ja     3a58 <__GNU_EH_FRAME_HDR+0x1a24>
    39e6:	69 74 65 5f 70 74 72 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x727470
    39ed:	00 
    39ee:	5f                   	pop    rdi
    39ef:	5a                   	pop    rdx
    39f0:	4e                   	rex.WRX
    39f1:	4b 53                	rex.WXB push r11
    39f3:	74 34                	je     3a29 <__GNU_EH_FRAME_HDR+0x19f5>
    39f5:	73 70                	jae    3a67 <__GNU_EH_FRAME_HDR+0x1a33>
    39f7:	61                   	(bad)
    39f8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    39f9:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    39fe:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    3a01:	36 37                	ss (bad)
    3a03:	34 34                	xor    al,0x34
    3a05:	30 37                	xor    BYTE PTR [rdi],dh
    3a07:	33 37                	xor    esi,DWORD PTR [rdi]
    3a09:	30 39                	xor    BYTE PTR [rcx],bh
    3a0b:	35 35 31 36 31       	xor    eax,0x31363135
    3a10:	35 45 45 35 66       	xor    eax,0x66354545
    3a15:	69 72 73 74 45 6d 00 	imul   esi,DWORD PTR [rdx+0x73],0x6d4574
    3a1c:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    3a22:	61                   	(bad)
    3a23:	73 74                	jae    3a99 <__GNU_EH_FRAME_HDR+0x1a65>
    3a25:	5f                   	pop    rdi
    3a26:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3a27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3a28:	74 5f                	je     3a89 <__GNU_EH_FRAME_HDR+0x1a55>
    3a2a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3a2b:	66 00 66 69          	data16 add BYTE PTR [rsi+0x69],ah
    3a2f:	72 73                	jb     3aa4 <__GNU_EH_FRAME_HDR+0x1a70>
    3a31:	74 00                	je     3a33 <__GNU_EH_FRAME_HDR+0x19ff>
    3a33:	5f                   	pop    rdi
    3a34:	5f                   	pop    rdi
    3a35:	69 6e 74 31 32 38 20 	imul   ebp,DWORD PTR [rsi+0x74],0x20383231
    3a3c:	75 6e                	jne    3aac <__GNU_EH_FRAME_HDR+0x1a78>
    3a3e:	73 69                	jae    3aa9 <__GNU_EH_FRAME_HDR+0x1a75>
    3a40:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3a42:	65 64 00 5f 5f       	gs add BYTE PTR fs:[rdi+0x5f],bl
    3a47:	75 69                	jne    3ab2 <__GNU_EH_FRAME_HDR+0x1a7e>
    3a49:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3a4a:	74 5f                	je     3aab <__GNU_EH_FRAME_HDR+0x1a77>
    3a4c:	6c                   	ins    BYTE PTR es:[rdi],dx
    3a4d:	65 61                	gs (bad)
    3a4f:	73 74                	jae    3ac5 <__GNU_EH_FRAME_HDR+0x1a91>
    3a51:	31 36                	xor    DWORD PTR [rsi],esi
    3a53:	5f                   	pop    rdi
    3a54:	74 00                	je     3a56 <__GNU_EH_FRAME_HDR+0x1a22>
    3a56:	5f                   	pop    rdi
    3a57:	5a                   	pop    rdx
    3a58:	4e 53                	rex.WRX push rbx
    3a5a:	74 31                	je     3a8d <__GNU_EH_FRAME_HDR+0x1a59>
    3a5c:	36 72 65             	ss jb  3ac4 <__GNU_EH_FRAME_HDR+0x1a90>
    3a5f:	76 65                	jbe    3ac6 <__GNU_EH_FRAME_HDR+0x1a92>
    3a61:	72 73                	jb     3ad6 <__GNU_EH_FRAME_HDR+0x1aa2>
    3a63:	65 5f                	gs pop rdi
    3a65:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3a6c:	72 
    3a6d:	49                   	rex.WB
    3a6e:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    3a72:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3a74:	75 5f                	jne    3ad5 <__GNU_EH_FRAME_HDR+0x1aa1>
    3a76:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3a79:	31 37                	xor    DWORD PTR [rdi],esi
    3a7b:	5f                   	pop    rdi
    3a7c:	5f                   	pop    rdi
    3a7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3a7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3a7f:	72 6d                	jb     3aee <__GNU_EH_FRAME_HDR+0x1aba>
    3a81:	61                   	(bad)
    3a82:	6c                   	ins    BYTE PTR es:[rdi],dx
    3a83:	5f                   	pop    rdi
    3a84:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3a8b:	72 
    3a8c:	49 50                	rex.WB push r8
    3a8e:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    3a91:	34 73                	xor    al,0x73
    3a93:	70 61                	jo     3af6 <__GNU_EH_FRAME_HDR+0x1ac2>
    3a95:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3a96:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    3a9b:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    3a9e:	36 37                	ss (bad)
    3aa0:	34 34                	xor    al,0x34
    3aa2:	30 37                	xor    BYTE PTR [rdi],dh
    3aa4:	33 37                	xor    esi,DWORD PTR [rdi]
    3aa6:	30 39                	xor    BYTE PTR [rcx],bh
    3aa8:	35 35 31 36 31       	xor    eax,0x31363135
    3aad:	35 45 45 45 45       	xor    eax,0x45454545
    3ab2:	45 70 70             	rex.RB jo 3b25 <__GNU_EH_FRAME_HDR+0x1af1>
    3ab5:	45 76 00             	rex.RB jbe 3ab8 <__GNU_EH_FRAME_HDR+0x1a84>
    3ab8:	69 74 65 72 5f 72 65 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x6665725f
    3abf:	66 
    3ac0:	65 72 65             	gs jb  3b28 <__GNU_EH_FRAME_HDR+0x1af4>
    3ac3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ac4:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    3ac7:	74 00                	je     3ac9 <__GNU_EH_FRAME_HDR+0x1a95>
    3ac9:	5f                   	pop    rdi
    3aca:	5a                   	pop    rdx
    3acb:	4e 53                	rex.WRX push rbx
    3acd:	61                   	(bad)
    3ace:	49 63 45 44          	movsxd rax,DWORD PTR [r13+0x44]
    3ad2:	34 45                	xor    al,0x45
    3ad4:	69 00 77 69 6e 74    	imul   eax,DWORD PTR [rax],0x746e6977
    3ada:	5f                   	pop    rdi
    3adb:	74 00                	je     3add <__GNU_EH_FRAME_HDR+0x1aa9>
    3add:	6d                   	ins    DWORD PTR es:[rdi],dx
    3ade:	62 6c 65 6e 00       	(bad)
    3ae3:	5f                   	pop    rdi
    3ae4:	5a                   	pop    rdx
    3ae5:	4e                   	rex.WRX
    3ae6:	4b 53                	rex.WXB push r11
    3ae8:	74 37                	je     3b21 <__GNU_EH_FRAME_HDR+0x1aed>
    3aea:	5f                   	pop    rdi
    3aeb:	5f                   	pop    rdi
    3aec:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3aef:	31 31                	xor    DWORD PTR [rcx],esi
    3af1:	31 32                	xor    DWORD PTR [rdx],esi
    3af3:	62 61 73 69 63       	(bad)
    3af8:	5f                   	pop    rdi
    3af9:	73 74                	jae    3b6f <__GNU_EH_FRAME_HDR+0x1b3b>
    3afb:	72 69                	jb     3b66 <__GNU_EH_FRAME_HDR+0x1b32>
    3afd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3afe:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3b03:	31 31                	xor    DWORD PTR [rcx],esi
    3b05:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3b08:	72 5f                	jb     3b69 <__GNU_EH_FRAME_HDR+0x1b35>
    3b0a:	74 72                	je     3b7e <__GNU_EH_FRAME_HDR+0x1b4a>
    3b0c:	61                   	(bad)
    3b0d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3b14:	61 
    3b15:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3b19:	31 37                	xor    DWORD PTR [rdi],esi
    3b1b:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    3b21:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
    3b28:	74 5f                	je     3b89 <__GNU_EH_FRAME_HDR+0x1b55>
    3b2a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3b2b:	66 45 52             	rex.RB push r10w
    3b2e:	4b 53                	rex.WXB push r11
    3b30:	34 5f                	xor    al,0x5f
    3b32:	6d                   	ins    DWORD PTR es:[rdi],dx
    3b33:	00 76 66             	add    BYTE PTR [rsi+0x66],dh
    3b36:	77 70                	ja     3ba8 <__GNU_EH_FRAME_HDR+0x1b74>
    3b38:	72 69                	jb     3ba3 <__GNU_EH_FRAME_HDR+0x1b6f>
    3b3a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3b3b:	74 66                	je     3ba3 <__GNU_EH_FRAME_HDR+0x1b6f>
    3b3d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3b40:	4e                   	rex.WRX
    3b41:	4b 53                	rex.WXB push r11
    3b43:	74 37                	je     3b7c <__GNU_EH_FRAME_HDR+0x1b48>
    3b45:	5f                   	pop    rdi
    3b46:	5f                   	pop    rdi
    3b47:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3b4a:	31 31                	xor    DWORD PTR [rcx],esi
    3b4c:	31 32                	xor    DWORD PTR [rdx],esi
    3b4e:	62 61 73 69 63       	(bad)
    3b53:	5f                   	pop    rdi
    3b54:	73 74                	jae    3bca <__GNU_EH_FRAME_HDR+0x1b96>
    3b56:	72 69                	jb     3bc1 <__GNU_EH_FRAME_HDR+0x1b8d>
    3b58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3b59:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3b5e:	31 31                	xor    DWORD PTR [rcx],esi
    3b60:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3b63:	72 5f                	jb     3bc4 <__GNU_EH_FRAME_HDR+0x1b90>
    3b65:	74 72                	je     3bd9 <__GNU_EH_FRAME_HDR+0x1ba5>
    3b67:	61                   	(bad)
    3b68:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3b6f:	61 
    3b70:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3b74:	34 73                	xor    al,0x73
    3b76:	69 7a 65 45 76 00 74 	imul   edi,DWORD PTR [rdx+0x65],0x74007645
    3b7d:	65 78 74             	gs js  3bf4 <__GNU_EH_FRAME_HDR+0x1bc0>
    3b80:	00 70 61             	add    BYTE PTR [rax+0x61],dh
    3b83:	69 72 00 5f 5a 53 74 	imul   esi,DWORD PTR [rdx+0x0],0x74535a5f
    3b8a:	38 74 6f 5f          	cmp    BYTE PTR [rdi+rbp*2+0x5f],dh
    3b8e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3b91:	72 73                	jb     3c06 <__GNU_EH_FRAME_HDR+0x1bd2>
    3b93:	50                   	push   rax
    3b94:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    3b97:	44                   	rex.R
    3b98:	46                   	rex.RX
    3b99:	36 34 5f             	ss xor al,0x5f
    3b9c:	53                   	push   rbx
    3b9d:	74 31                	je     3bd0 <__GNU_EH_FRAME_HDR+0x1b9c>
    3b9f:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    3ba2:	61                   	(bad)
    3ba3:	72 73                	jb     3c18 <__GNU_EH_FRAME_HDR+0x1be4>
    3ba5:	5f                   	pop    rdi
    3ba6:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    3ba8:	72 6d                	jb     3c17 <__GNU_EH_FRAME_HDR+0x1be3>
    3baa:	61                   	(bad)
    3bab:	74 69                	je     3c16 <__GNU_EH_FRAME_HDR+0x1be2>
    3bad:	00 66 66             	add    BYTE PTR [rsi+0x66],ah
    3bb0:	6c                   	ins    BYTE PTR es:[rdi],dx
    3bb1:	75 73                	jne    3c26 <__GNU_EH_FRAME_HDR+0x1bf2>
    3bb3:	68 00 77 6d 65       	push   0x656d7700
    3bb8:	6d                   	ins    DWORD PTR es:[rdi],dx
    3bb9:	6d                   	ins    DWORD PTR es:[rdi],dx
    3bba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3bbb:	76 65                	jbe    3c22 <__GNU_EH_FRAME_HDR+0x1bee>
    3bbd:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
    3bc0:	75 74                	jne    3c36 <__GNU_EH_FRAME_HDR+0x1c02>
    3bc2:	77 63                	ja     3c27 <__GNU_EH_FRAME_HDR+0x1bf3>
    3bc4:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3bc7:	4e 53                	rex.WRX push rbx
    3bc9:	74 37                	je     3c02 <__GNU_EH_FRAME_HDR+0x1bce>
    3bcb:	5f                   	pop    rdi
    3bcc:	5f                   	pop    rdi
    3bcd:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3bd0:	31 31                	xor    DWORD PTR [rcx],esi
    3bd2:	31 32                	xor    DWORD PTR [rdx],esi
    3bd4:	62 61 73 69 63       	(bad)
    3bd9:	5f                   	pop    rdi
    3bda:	73 74                	jae    3c50 <__GNU_EH_FRAME_HDR+0x1c1c>
    3bdc:	72 69                	jb     3c47 <__GNU_EH_FRAME_HDR+0x1c13>
    3bde:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3bdf:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3be4:	31 31                	xor    DWORD PTR [rcx],esi
    3be6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3be9:	72 5f                	jb     3c4a <__GNU_EH_FRAME_HDR+0x1c16>
    3beb:	74 72                	je     3c5f <__GNU_EH_FRAME_HDR+0x1c2b>
    3bed:	61                   	(bad)
    3bee:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3bf5:	61 
    3bf6:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3bfa:	39 70 75             	cmp    DWORD PTR [rax+0x75],esi
    3bfd:	73 68                	jae    3c67 <__GNU_EH_FRAME_HDR+0x1c33>
    3bff:	5f                   	pop    rdi
    3c00:	62 61 63 6b 45       	(bad)
    3c05:	63 00                	movsxd eax,DWORD PTR [rax]
    3c07:	5f                   	pop    rdi
    3c08:	5f                   	pop    rdi
    3c09:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3c0a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c0b:	72 6d                	jb     3c7a <__GNU_EH_FRAME_HDR+0x1c46>
    3c0d:	61                   	(bad)
    3c0e:	6c                   	ins    BYTE PTR es:[rdi],dx
    3c0f:	5f                   	pop    rdi
    3c10:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3c17:	72 
    3c18:	3c 63                	cmp    al,0x63
    3c1a:	68 61 72 2a 2c       	push   0x2c2a7261
    3c1f:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    3c22:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3c25:	5f                   	pop    rdi
    3c26:	5f                   	pop    rdi
    3c27:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3c2a:	31 31                	xor    DWORD PTR [rcx],esi
    3c2c:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    3c2e:	62 61 73 69 63       	(bad)
    3c33:	5f                   	pop    rdi
    3c34:	73 74                	jae    3caa <__GNU_EH_FRAME_HDR+0x1c76>
    3c36:	72 69                	jb     3ca1 <__GNU_EH_FRAME_HDR+0x1c6d>
    3c38:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3c39:	67 3c 63             	addr32 cmp al,0x63
    3c3c:	68 61 72 2c 20       	push   0x202c7261
    3c41:	73 74                	jae    3cb7 <__GNU_EH_FRAME_HDR+0x1c83>
    3c43:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3c46:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3c49:	72 5f                	jb     3caa <__GNU_EH_FRAME_HDR+0x1c76>
    3c4b:	74 72                	je     3cbf <__GNU_EH_FRAME_HDR+0x1c8b>
    3c4d:	61                   	(bad)
    3c4e:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    3c55:	72 
    3c56:	3e 2c 20             	ds sub al,0x20
    3c59:	73 74                	jae    3ccf <__GNU_EH_FRAME_HDR+0x1c9b>
    3c5b:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3c5e:	61                   	(bad)
    3c5f:	6c                   	ins    BYTE PTR es:[rdi],dx
    3c60:	6c                   	ins    BYTE PTR es:[rdi],dx
    3c61:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c62:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    3c65:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c66:	72 3c                	jb     3ca4 <__GNU_EH_FRAME_HDR+0x1c70>
    3c68:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3c6b:	72 3e                	jb     3cab <__GNU_EH_FRAME_HDR+0x1c77>
    3c6d:	20 3e                	and    BYTE PTR [rsi],bh
    3c6f:	20 3e                	and    BYTE PTR [rsi],bh
    3c71:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    3c74:	5f                   	pop    rdi
    3c75:	73 74                	jae    3ceb <__GNU_EH_FRAME_HDR+0x1cb7>
    3c77:	72 69                	jb     3ce2 <__GNU_EH_FRAME_HDR+0x1cae>
    3c79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3c7a:	67 5f                	addr32 pop rdi
    3c7c:	6c                   	ins    BYTE PTR es:[rdi],dx
    3c7d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3c7f:	67 74 68             	addr32 je 3cea <__GNU_EH_FRAME_HDR+0x1cb6>
    3c82:	00 5f 46             	add    BYTE PTR [rdi+0x46],bl
    3c85:	6c                   	ins    BYTE PTR es:[rdi],dx
    3c86:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3c87:	61                   	(bad)
    3c88:	74 36                	je     3cc0 <__GNU_EH_FRAME_HDR+0x1c8c>
    3c8a:	34 00                	xor    al,0x0
    3c8c:	5f                   	pop    rdi
    3c8d:	43 70 6f             	rex.XB jo 3cff <__GNU_EH_FRAME_HDR+0x1ccb>
    3c90:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
    3c93:	75 74                	jne    3d09 <__GNU_EH_FRAME_HDR+0x1cd5>
    3c95:	77 73                	ja     3d0a <__GNU_EH_FRAME_HDR+0x1cd6>
    3c97:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3c9a:	4e                   	rex.WRX
    3c9b:	4b 53                	rex.WXB push r11
    3c9d:	74 37                	je     3cd6 <__GNU_EH_FRAME_HDR+0x1ca2>
    3c9f:	5f                   	pop    rdi
    3ca0:	5f                   	pop    rdi
    3ca1:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3ca4:	31 31                	xor    DWORD PTR [rcx],esi
    3ca6:	31 32                	xor    DWORD PTR [rdx],esi
    3ca8:	62 61 73 69 63       	(bad)
    3cad:	5f                   	pop    rdi
    3cae:	73 74                	jae    3d24 <__GNU_EH_FRAME_HDR+0x1cf0>
    3cb0:	72 69                	jb     3d1b <__GNU_EH_FRAME_HDR+0x1ce7>
    3cb2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3cb3:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3cb8:	31 31                	xor    DWORD PTR [rcx],esi
    3cba:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3cbd:	72 5f                	jb     3d1e <__GNU_EH_FRAME_HDR+0x1cea>
    3cbf:	74 72                	je     3d33 <__GNU_EH_FRAME_HDR+0x1cff>
    3cc1:	61                   	(bad)
    3cc2:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3cc9:	61 
    3cca:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3cce:	38 63 61             	cmp    BYTE PTR [rbx+0x61],ah
    3cd1:	70 61                	jo     3d34 <__GNU_EH_FRAME_HDR+0x1d00>
    3cd3:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
    3cd6:	79 45                	jns    3d1d <__GNU_EH_FRAME_HDR+0x1ce9>
    3cd8:	76 00                	jbe    3cda <__GNU_EH_FRAME_HDR+0x1ca6>
    3cda:	5f                   	pop    rdi
    3cdb:	5a                   	pop    rdx
    3cdc:	4e                   	rex.WRX
    3cdd:	4b 53                	rex.WXB push r11
    3cdf:	74 34                	je     3d15 <__GNU_EH_FRAME_HDR+0x1ce1>
    3ce1:	73 70                	jae    3d53 <__GNU_EH_FRAME_HDR+0x1d1f>
    3ce3:	61                   	(bad)
    3ce4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ce5:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    3cea:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    3ced:	36 37                	ss (bad)
    3cef:	34 34                	xor    al,0x34
    3cf1:	30 37                	xor    BYTE PTR [rdi],dh
    3cf3:	33 37                	xor    esi,DWORD PTR [rdi]
    3cf5:	30 39                	xor    BYTE PTR [rcx],bh
    3cf7:	35 35 31 36 31       	xor    eax,0x31363135
    3cfc:	35 45 45 36 63       	xor    eax,0x63364545
    3d01:	62 65 67 69 6e       	(bad)
    3d06:	45 76 00             	rex.RB jbe 3d09 <__GNU_EH_FRAME_HDR+0x1cd5>
    3d09:	5f                   	pop    rdi
    3d0a:	5a                   	pop    rdx
    3d0b:	4e                   	rex.WRX
    3d0c:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    3d10:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3d12:	75 5f                	jne    3d73 <__GNU_EH_FRAME_HDR+0x1d3f>
    3d14:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3d17:	31 37                	xor    DWORD PTR [rdi],esi
    3d19:	5f                   	pop    rdi
    3d1a:	5f                   	pop    rdi
    3d1b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3d1c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3d1d:	72 6d                	jb     3d8c <__GNU_EH_FRAME_HDR+0x1d58>
    3d1f:	61                   	(bad)
    3d20:	6c                   	ins    BYTE PTR es:[rdi],dx
    3d21:	5f                   	pop    rdi
    3d22:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3d29:	72 
    3d2a:	49 50                	rex.WB push r8
    3d2c:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    3d2f:	74 37                	je     3d68 <__GNU_EH_FRAME_HDR+0x1d34>
    3d31:	5f                   	pop    rdi
    3d32:	5f                   	pop    rdi
    3d33:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3d36:	31 31                	xor    DWORD PTR [rcx],esi
    3d38:	31 32                	xor    DWORD PTR [rdx],esi
    3d3a:	62 61 73 69 63       	(bad)
    3d3f:	5f                   	pop    rdi
    3d40:	73 74                	jae    3db6 <__GNU_EH_FRAME_HDR+0x1d82>
    3d42:	72 69                	jb     3dad <__GNU_EH_FRAME_HDR+0x1d79>
    3d44:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3d45:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3d4a:	31 31                	xor    DWORD PTR [rcx],esi
    3d4c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3d4f:	72 5f                	jb     3db0 <__GNU_EH_FRAME_HDR+0x1d7c>
    3d51:	74 72                	je     3dc5 <__GNU_EH_FRAME_HDR+0x1d91>
    3d53:	61                   	(bad)
    3d54:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3d5b:	61 
    3d5c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3d60:	45                   	rex.RB
    3d61:	45 70 74             	rex.RB jo 3dd8 <_DYNAMIC>
    3d64:	45 76 00             	rex.RB jbe 3d67 <__GNU_EH_FRAME_HDR+0x1d33>
    3d67:	69 6c 6c 65 67 61 6c 	imul   ebp,DWORD PTR [rsp+rbp*2+0x65],0x5f6c6167
    3d6e:	5f 
    3d6f:	62 79 74 65 5f       	(bad)
    3d74:	73 65                	jae    3ddb <_DYNAMIC+0x3>
    3d76:	71 75                	jno    3ded <_DYNAMIC+0x15>
    3d78:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3d7a:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    3d7d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3d84:	72 
    3d85:	3c 73                	cmp    al,0x73
    3d87:	74 64                	je     3ded <_DYNAMIC+0x15>
    3d89:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    3d8b:	72 61                	jb     3dee <_DYNAMIC+0x16>
    3d8d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3d8e:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    3d90:	6d                   	ins    DWORD PTR es:[rdi],dx
    3d91:	5f                   	pop    rdi
    3d92:	61                   	(bad)
    3d93:	63 63 65             	movsxd esp,DWORD PTR [rbx+0x65]
    3d96:	73 73                	jae    3e0b <_DYNAMIC+0x33>
    3d98:	5f                   	pop    rdi
    3d99:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3da0:	72 
    3da1:	5f                   	pop    rdi
    3da2:	74 61                	je     3e05 <_DYNAMIC+0x2d>
    3da4:	67 2c 20             	addr32 sub al,0x20
    3da7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3daa:	72 2c                	jb     3dd8 <_DYNAMIC>
    3dac:	20 6c 6f 6e          	and    BYTE PTR [rdi+rbp*2+0x6e],ch
    3db0:	67 20 69 6e          	and    BYTE PTR [ecx+0x6e],ch
    3db4:	74 2c                	je     3de2 <_DYNAMIC+0xa>
    3db6:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    3db9:	61                   	(bad)
    3dba:	72 2a                	jb     3de6 <_DYNAMIC+0xe>
    3dbc:	2c 20                	sub    al,0x20
    3dbe:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3dc1:	72 26                	jb     3de9 <_DYNAMIC+0x11>
    3dc3:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    3dc7:	4e                   	rex.WRX
    3dc8:	4b 53                	rex.WXB push r11
    3dca:	74 37                	je     3e03 <_DYNAMIC+0x2b>
    3dcc:	5f                   	pop    rdi
    3dcd:	5f                   	pop    rdi
    3dce:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3dd1:	31 31                	xor    DWORD PTR [rcx],esi
    3dd3:	31 32                	xor    DWORD PTR [rdx],esi
    3dd5:	62 61 73 69 63       	(bad)
    3dda:	5f                   	pop    rdi
    3ddb:	73 74                	jae    3e51 <_DYNAMIC+0x79>
    3ddd:	72 69                	jb     3e48 <_DYNAMIC+0x70>
    3ddf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3de0:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3de5:	31 31                	xor    DWORD PTR [rcx],esi
    3de7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3dea:	72 5f                	jb     3e4b <_DYNAMIC+0x73>
    3dec:	74 72                	je     3e60 <_DYNAMIC+0x88>
    3dee:	61                   	(bad)
    3def:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3df6:	61 
    3df7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3dfb:	31 32                	xor    DWORD PTR [rdx],esi
    3dfd:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    3e03:	61                   	(bad)
    3e04:	73 74                	jae    3e7a <_DYNAMIC+0xa2>
    3e06:	5f                   	pop    rdi
    3e07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3e08:	66 45 50             	rex.RB push r8w
    3e0b:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    3e0f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3e12:	4e                   	rex.WRX
    3e13:	4b 53                	rex.WXB push r11
    3e15:	74 31                	je     3e48 <_DYNAMIC+0x70>
    3e17:	37                   	(bad)
    3e18:	62 61 73 69 63       	(bad)
    3e1d:	5f                   	pop    rdi
    3e1e:	73 74                	jae    3e94 <_DYNAMIC+0xbc>
    3e20:	72 69                	jb     3e8b <_DYNAMIC+0xb3>
    3e22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e23:	67 5f                	addr32 pop rdi
    3e25:	76 69                	jbe    3e90 <_DYNAMIC+0xb8>
    3e27:	65 77 49             	gs ja  3e73 <_DYNAMIC+0x9b>
    3e2a:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    3e2d:	31 31                	xor    DWORD PTR [rcx],esi
    3e2f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3e32:	72 5f                	jb     3e93 <_DYNAMIC+0xbb>
    3e34:	74 72                	je     3ea8 <_DYNAMIC+0xd0>
    3e36:	61                   	(bad)
    3e37:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x38454563
    3e3e:	38 
    3e3f:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    3e42:	74 61                	je     3ea5 <_DYNAMIC+0xcd>
    3e44:	69 6e 73 45 50 4b 63 	imul   ebp,DWORD PTR [rsi+0x73],0x634b5045
    3e4b:	00 5f 43             	add    BYTE PTR [rdi+0x43],bl
    3e4e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3e4f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e50:	74 61                	je     3eb3 <_DYNAMIC+0xdb>
    3e52:	69 6e 65 72 00 5f 5f 	imul   ebp,DWORD PTR [rsi+0x65],0x5f5f0072
    3e59:	69 6e 74 36 34 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3436
    3e60:	00 74 6f 6f          	add    BYTE PTR [rdi+rbp*2+0x6f],dh
    3e64:	5f                   	pop    rdi
    3e65:	6d                   	ins    DWORD PTR es:[rdi],dx
    3e66:	61                   	(bad)
    3e67:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e68:	79 5f                	jns    3ec9 <_DYNAMIC+0xf1>
    3e6a:	66 69 6c 65 73 5f 6f 	imul   bp,WORD PTR [rbp+riz*2+0x73],0x6f5f
    3e71:	70 65                	jo     3ed8 <_DYNAMIC+0x100>
    3e73:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e74:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    3e77:	75 69                	jne    3ee2 <_DYNAMIC+0x10a>
    3e79:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e7a:	74 36                	je     3eb2 <_DYNAMIC+0xda>
    3e7c:	34 5f                	xor    al,0x5f
    3e7e:	74 00                	je     3e80 <_DYNAMIC+0xa8>
    3e80:	77 63                	ja     3ee5 <_DYNAMIC+0x10d>
    3e82:	73 63                	jae    3ee7 <_DYNAMIC+0x10f>
    3e84:	68 72 00 5f 5a       	push   0x5a5f0072
    3e89:	4e                   	rex.WRX
    3e8a:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    3e8e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    3e90:	75 5f                	jne    3ef1 <_DYNAMIC+0x119>
    3e92:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3e95:	31 37                	xor    DWORD PTR [rdi],esi
    3e97:	5f                   	pop    rdi
    3e98:	5f                   	pop    rdi
    3e99:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3e9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3e9b:	72 6d                	jb     3f0a <_DYNAMIC+0x132>
    3e9d:	61                   	(bad)
    3e9e:	6c                   	ins    BYTE PTR es:[rdi],dx
    3e9f:	5f                   	pop    rdi
    3ea0:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3ea7:	72 
    3ea8:	49 50                	rex.WB push r8
    3eaa:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    3ead:	74 37                	je     3ee6 <_DYNAMIC+0x10e>
    3eaf:	5f                   	pop    rdi
    3eb0:	5f                   	pop    rdi
    3eb1:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3eb4:	31 31                	xor    DWORD PTR [rcx],esi
    3eb6:	31 32                	xor    DWORD PTR [rdx],esi
    3eb8:	62 61 73 69 63       	(bad)
    3ebd:	5f                   	pop    rdi
    3ebe:	73 74                	jae    3f34 <_DYNAMIC+0x15c>
    3ec0:	72 69                	jb     3f2b <_DYNAMIC+0x153>
    3ec2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3ec3:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3ec8:	31 31                	xor    DWORD PTR [rcx],esi
    3eca:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3ecd:	72 5f                	jb     3f2e <_DYNAMIC+0x156>
    3ecf:	74 72                	je     3f43 <_DYNAMIC+0x16b>
    3ed1:	61                   	(bad)
    3ed2:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3ed9:	61 
    3eda:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3ede:	45                   	rex.RB
    3edf:	45 69 78 45 6c 00 63 	imul   r15d,DWORD PTR [r8+0x45],0x6263006c
    3ee6:	62 
    3ee7:	65 67 69 6e 00 5f 4d 	imul   ebp,DWORD PTR gs:[esi+0x0],0x6c5f4d5f
    3eee:	5f 6c 
    3ef0:	69 6d 69 74 00 5f 5a 	imul   ebp,DWORD PTR [rbp+0x69],0x5a5f0074
    3ef7:	4e 53                	rex.WRX push rbx
    3ef9:	74 31                	je     3f2c <_DYNAMIC+0x154>
    3efb:	37                   	(bad)
    3efc:	62 61 73 69 63       	(bad)
    3f01:	5f                   	pop    rdi
    3f02:	73 74                	jae    3f78 <_DYNAMIC+0x1a0>
    3f04:	72 69                	jb     3f6f <_DYNAMIC+0x197>
    3f06:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3f07:	67 5f                	addr32 pop rdi
    3f09:	76 69                	jbe    3f74 <_DYNAMIC+0x19c>
    3f0b:	65 77 49             	gs ja  3f57 <_DYNAMIC+0x17f>
    3f0e:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    3f11:	31 31                	xor    DWORD PTR [rcx],esi
    3f13:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3f16:	72 5f                	jb     3f77 <_DYNAMIC+0x19f>
    3f18:	74 72                	je     3f8c <_DYNAMIC+0x1b4>
    3f1a:	61                   	(bad)
    3f1b:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x43454563
    3f22:	43 
    3f23:	34 45                	xor    al,0x45
    3f25:	52                   	push   rdx
    3f26:	4b 53                	rex.WXB push r11
    3f28:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    3f2b:	5f                   	pop    rdi
    3f2c:	5f                   	pop    rdi
    3f2d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3f2e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    3f2f:	72 6d                	jb     3f9e <_DYNAMIC+0x1c6>
    3f31:	61                   	(bad)
    3f32:	6c                   	ins    BYTE PTR es:[rdi],dx
    3f33:	5f                   	pop    rdi
    3f34:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    3f3b:	72 
    3f3c:	3c 63                	cmp    al,0x63
    3f3e:	68 61 72 2a 2c       	push   0x2c2a7261
    3f43:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    3f46:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    3f49:	73 70                	jae    3fbb <_DYNAMIC+0x1e3>
    3f4b:	61                   	(bad)
    3f4c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3f4d:	3c 63                	cmp    al,0x63
    3f4f:	68 61 72 2c 20       	push   0x202c7261
    3f54:	31 38                	xor    DWORD PTR [rax],edi
    3f56:	34 34                	xor    al,0x34
    3f58:	36 37                	ss (bad)
    3f5a:	34 34                	xor    al,0x34
    3f5c:	30 37                	xor    BYTE PTR [rdi],dh
    3f5e:	33 37                	xor    esi,DWORD PTR [rdi]
    3f60:	30 39                	xor    BYTE PTR [rcx],bh
    3f62:	35 35 31 36 31       	xor    eax,0x31363135
    3f67:	35 3e 20 3e 00       	xor    eax,0x3e203e
    3f6c:	5f                   	pop    rdi
    3f6d:	5a                   	pop    rdx
    3f6e:	4e 53                	rex.WRX push rbx
    3f70:	74 37                	je     3fa9 <_DYNAMIC+0x1d1>
    3f72:	5f                   	pop    rdi
    3f73:	5f                   	pop    rdi
    3f74:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3f77:	31 31                	xor    DWORD PTR [rcx],esi
    3f79:	31 32                	xor    DWORD PTR [rdx],esi
    3f7b:	62 61 73 69 63       	(bad)
    3f80:	5f                   	pop    rdi
    3f81:	73 74                	jae    3ff7 <_GLOBAL_OFFSET_TABLE_+0xf>
    3f83:	72 69                	jb     3fee <_GLOBAL_OFFSET_TABLE_+0x6>
    3f85:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3f86:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3f8b:	31 31                	xor    DWORD PTR [rcx],esi
    3f8d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3f90:	72 5f                	jb     3ff1 <_GLOBAL_OFFSET_TABLE_+0x9>
    3f92:	74 72                	je     4006 <_GLOBAL_OFFSET_TABLE_+0x1e>
    3f94:	61                   	(bad)
    3f95:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3f9c:	61 
    3f9d:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3fa1:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
    3fa8:	45 
    3fa9:	6d                   	ins    DWORD PTR es:[rdi],dx
    3faa:	52                   	push   rdx
    3fab:	4b 53                	rex.WXB push r11
    3fad:	34 5f                	xor    al,0x5f
    3faf:	6d                   	ins    DWORD PTR es:[rdi],dx
    3fb0:	6d                   	ins    DWORD PTR es:[rdi],dx
    3fb1:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3fb4:	4e 53                	rex.WRX push rbx
    3fb6:	74 37                	je     3fef <_GLOBAL_OFFSET_TABLE_+0x7>
    3fb8:	5f                   	pop    rdi
    3fb9:	5f                   	pop    rdi
    3fba:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    3fbd:	31 31                	xor    DWORD PTR [rcx],esi
    3fbf:	31 32                	xor    DWORD PTR [rdx],esi
    3fc1:	62 61 73 69 63       	(bad)
    3fc6:	5f                   	pop    rdi
    3fc7:	73 74                	jae    403d <__TMC_END__+0x25>
    3fc9:	72 69                	jb     4034 <__TMC_END__+0x1c>
    3fcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    3fcc:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    3fd1:	31 31                	xor    DWORD PTR [rcx],esi
    3fd3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    3fd6:	72 5f                	jb     4037 <__TMC_END__+0x1f>
    3fd8:	74 72                	je     404c <__TMC_END__+0x34>
    3fda:	61                   	(bad)
    3fdb:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    3fe2:	61 
    3fe3:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    3fe7:	31 33                	xor    DWORD PTR [rbx],esi
    3fe9:	5f                   	pop    rdi
    3fea:	4d 5f                	rex.WRB pop r15
    3fec:	73 65                	jae    4053 <__TMC_END__+0x3b>
    3fee:	74 5f                	je     404f <__TMC_END__+0x37>
    3ff0:	6c                   	ins    BYTE PTR es:[rdi],dx
    3ff1:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    3ff3:	67 74 68             	addr32 je 405e <__TMC_END__+0x46>
    3ff6:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    3ff8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    3ffb:	4e 53                	rex.WRX push rbx
    3ffd:	74 34                	je     4033 <__TMC_END__+0x1b>
    3fff:	70 61                	jo     4062 <__TMC_END__+0x4a>
    4001:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    4008:	45 61                	rex.RB (bad)
    400a:	53                   	push   rbx
    400b:	45 52                	rex.RB push r10
    400d:	4b 53                	rex.WXB push r11
    400f:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    4012:	64 65 63 6c 74 79    	fs movsxd ebp,DWORD PTR gs:[rsp+rsi*2+0x79]
    4018:	70 65                	jo     407f <__TMC_END__+0x67>
    401a:	28 6e 75             	sub    BYTE PTR [rsi+0x75],ch
    401d:	6c                   	ins    BYTE PTR es:[rdi],dx
    401e:	6c                   	ins    BYTE PTR es:[rdi],dx
    401f:	70 74                	jo     4095 <__TMC_END__+0x7d>
    4021:	72 29                	jb     404c <__TMC_END__+0x34>
    4023:	00 63 72             	add    BYTE PTR [rbx+0x72],ah
    4026:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4028:	64 00 5f 4d          	add    BYTE PTR fs:[rdi+0x4d],bl
    402c:	5f                   	pop    rdi
    402d:	77 72                	ja     40a1 <__TMC_END__+0x89>
    402f:	69 74 65 00 5f 5a 4e 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x4b4e5a5f
    4036:	4b 
    4037:	39 5f 5f             	cmp    DWORD PTR [rdi+0x5f],ebx
    403a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    403c:	75 5f                	jne    409d <__TMC_END__+0x85>
    403e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4041:	31 37                	xor    DWORD PTR [rdi],esi
    4043:	5f                   	pop    rdi
    4044:	5f                   	pop    rdi
    4045:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4046:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4047:	72 6d                	jb     40b6 <__TMC_END__+0x9e>
    4049:	61                   	(bad)
    404a:	6c                   	ins    BYTE PTR es:[rdi],dx
    404b:	5f                   	pop    rdi
    404c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4053:	72 
    4054:	49 50                	rex.WB push r8
    4056:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    4059:	74 37                	je     4092 <__TMC_END__+0x7a>
    405b:	5f                   	pop    rdi
    405c:	5f                   	pop    rdi
    405d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4060:	31 31                	xor    DWORD PTR [rcx],esi
    4062:	31 32                	xor    DWORD PTR [rdx],esi
    4064:	62 61 73 69 63       	(bad)
    4069:	5f                   	pop    rdi
    406a:	73 74                	jae    40e0 <__TMC_END__+0xc8>
    406c:	72 69                	jb     40d7 <__TMC_END__+0xbf>
    406e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    406f:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4074:	31 31                	xor    DWORD PTR [rcx],esi
    4076:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4079:	72 5f                	jb     40da <__TMC_END__+0xc2>
    407b:	74 72                	je     40ef <__TMC_END__+0xd7>
    407d:	61                   	(bad)
    407e:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4085:	61 
    4086:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    408a:	45                   	rex.RB
    408b:	45 34 62             	rex.RB xor al,0x62
    408e:	61                   	(bad)
    408f:	73 65                	jae    40f6 <__TMC_END__+0xde>
    4091:	45 76 00             	rex.RB jbe 4094 <__TMC_END__+0x7c>
    4094:	5f                   	pop    rdi
    4095:	5a                   	pop    rdx
    4096:	4e 53                	rex.WRX push rbx
    4098:	74 34                	je     40ce <__TMC_END__+0xb6>
    409a:	70 61                	jo     40fd <__TMC_END__+0xe5>
    409c:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    40a3:	45                   	rex.RB
    40a4:	43 34 45             	rex.XB xor al,0x45
    40a7:	52                   	push   rdx
    40a8:	4b 74 52             	rex.WXB je 40fd <__TMC_END__+0xe5>
    40ab:	4b 53                	rex.WXB push r11
    40ad:	31 5f 51             	xor    DWORD PTR [rdi+0x51],ebx
    40b0:	63 6c 31 36          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x36]
    40b4:	5f                   	pop    rdi
    40b5:	53                   	push   rbx
    40b6:	5f                   	pop    rdi
    40b7:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    40ba:	73 74                	jae    4130 <__TMC_END__+0x118>
    40bc:	72 75                	jb     4133 <__TMC_END__+0x11b>
    40be:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
    40c2:	6c                   	ins    BYTE PTR es:[rdi],dx
    40c3:	65 49 52             	gs rex.WB push r10
    40c6:	4b 54                	rex.WXB push r12
    40c8:	5f                   	pop    rdi
    40c9:	52                   	push   rdx
    40ca:	4b 54                	rex.WXB push r12
    40cc:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    40cf:	45 00 66 63          	add    BYTE PTR [r14+0x63],r12b
    40d3:	6c                   	ins    BYTE PTR es:[rdi],dx
    40d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    40d5:	73 65                	jae    413c <__TMC_END__+0x124>
    40d7:	00 70 61             	add    BYTE PTR [rax+0x61],dh
    40da:	69 72 3c 73 68 6f 72 	imul   esi,DWORD PTR [rdx+0x3c],0x726f6873
    40e1:	74 20                	je     4103 <__TMC_END__+0xeb>
    40e3:	75 6e                	jne    4153 <__TMC_END__+0x13b>
    40e5:	73 69                	jae    4150 <__TMC_END__+0x138>
    40e7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    40e9:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    40ee:	74 2c                	je     411c <__TMC_END__+0x104>
    40f0:	20 77 63             	and    BYTE PTR [rdi+0x63],dh
    40f3:	68 61 72 5f 74       	push   0x745f7261
    40f8:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    40fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    40fc:	73 74                	jae    4172 <__TMC_END__+0x15a>
    40fe:	2a 3e                	sub    bh,BYTE PTR [rsi]
    4100:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    4103:	5f                   	pop    rdi
    4104:	62 75 6d 70 00       	(bad)
    4109:	5f                   	pop    rdi
    410a:	5a                   	pop    rdx
    410b:	4e 53                	rex.WRX push rbx
    410d:	74 31                	je     4140 <__TMC_END__+0x128>
    410f:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    4112:	61                   	(bad)
    4113:	72 5f                	jb     4174 <__TMC_END__+0x15c>
    4115:	74 72                	je     4189 <__TMC_END__+0x171>
    4117:	61                   	(bad)
    4118:	69 74 73 49 63 45 36 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x6c364563
    411f:	6c 
    4120:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4122:	67 74 68             	addr32 je 418d <__TMC_END__+0x175>
    4125:	45 50                	rex.RB push r8
    4127:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    412a:	5f                   	pop    rdi
    412b:	5a                   	pop    rdx
    412c:	4e 53                	rex.WRX push rbx
    412e:	74 31                	je     4161 <__TMC_END__+0x149>
    4130:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    4133:	61                   	(bad)
    4134:	72 5f                	jb     4195 <__TMC_END__+0x17d>
    4136:	74 72                	je     41aa <__TMC_END__+0x192>
    4138:	61                   	(bad)
    4139:	69 74 73 49 63 45 31 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x32314563
    4140:	32 
    4141:	74 6f                	je     41b2 <__TMC_END__+0x19a>
    4143:	5f                   	pop    rdi
    4144:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4147:	72 5f                	jb     41a8 <__TMC_END__+0x190>
    4149:	74 79                	je     41c4 <__TMC_END__+0x1ac>
    414b:	70 65                	jo     41b2 <__TMC_END__+0x19a>
    414d:	45 52                	rex.RB push r10
    414f:	4b 69 00 5f 5a 4e 4b 	rex.WXB imul rax,QWORD PTR [r8],0x4b4e5a5f
    4156:	53                   	push   rbx
    4157:	74 31                	je     418a <__TMC_END__+0x172>
    4159:	35 5f 5f 6e 65       	xor    eax,0x656e5f5f
    415e:	77 5f                	ja     41bf <__TMC_END__+0x1a7>
    4160:	61                   	(bad)
    4161:	6c                   	ins    BYTE PTR es:[rdi],dx
    4162:	6c                   	ins    BYTE PTR es:[rdi],dx
    4163:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4164:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    4167:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4168:	72 49                	jb     41b3 <__TMC_END__+0x19b>
    416a:	63 45 31             	movsxd eax,DWORD PTR [rbp+0x31]
    416d:	31 5f 4d             	xor    DWORD PTR [rdi+0x4d],ebx
    4170:	5f                   	pop    rdi
    4171:	6d                   	ins    DWORD PTR es:[rdi],dx
    4172:	61                   	(bad)
    4173:	78 5f                	js     41d4 <__TMC_END__+0x1bc>
    4175:	73 69                	jae    41e0 <__TMC_END__+0x1c8>
    4177:	7a 65                	jp     41de <__TMC_END__+0x1c6>
    4179:	45 76 00             	rex.RB jbe 417c <__TMC_END__+0x164>
    417c:	62 61 73 69 63       	(bad)
    4181:	5f                   	pop    rdi
    4182:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    4185:	73 74                	jae    41fb <__TMC_END__+0x1e3>
    4187:	5f                   	pop    rdi
    4188:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    418f:	72 
    4190:	3c 5f                	cmp    al,0x5f
    4192:	5f                   	pop    rdi
    4193:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4195:	75 5f                	jne    41f6 <__TMC_END__+0x1de>
    4197:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    419a:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    419c:	5f                   	pop    rdi
    419d:	5f                   	pop    rdi
    419e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    419f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    41a0:	72 6d                	jb     420f <__TMC_END__+0x1f7>
    41a2:	61                   	(bad)
    41a3:	6c                   	ins    BYTE PTR es:[rdi],dx
    41a4:	5f                   	pop    rdi
    41a5:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    41ac:	72 
    41ad:	3c 63                	cmp    al,0x63
    41af:	68 61 72 2a 2c       	push   0x2c2a7261
    41b4:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    41b7:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    41ba:	73 70                	jae    422c <__TMC_END__+0x214>
    41bc:	61                   	(bad)
    41bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    41be:	3c 63                	cmp    al,0x63
    41c0:	68 61 72 2c 20       	push   0x202c7261
    41c5:	31 38                	xor    DWORD PTR [rax],edi
    41c7:	34 34                	xor    al,0x34
    41c9:	36 37                	ss (bad)
    41cb:	34 34                	xor    al,0x34
    41cd:	30 37                	xor    BYTE PTR [rdi],dh
    41cf:	33 37                	xor    esi,DWORD PTR [rdi]
    41d1:	30 39                	xor    BYTE PTR [rcx],bh
    41d3:	35 35 31 36 31       	xor    eax,0x31363135
    41d8:	35 3e 20 3e 20       	xor    eax,0x203e203e
    41dd:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    41e1:	4e                   	rex.WRX
    41e2:	4b 53                	rex.WXB push r11
    41e4:	74 31                	je     4217 <__TMC_END__+0x1ff>
    41e6:	37                   	(bad)
    41e7:	62 61 73 69 63       	(bad)
    41ec:	5f                   	pop    rdi
    41ed:	73 74                	jae    4263 <__TMC_END__+0x24b>
    41ef:	72 69                	jb     425a <__TMC_END__+0x242>
    41f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    41f2:	67 5f                	addr32 pop rdi
    41f4:	76 69                	jbe    425f <__TMC_END__+0x247>
    41f6:	65 77 49             	gs ja  4242 <__TMC_END__+0x22a>
    41f9:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    41fc:	31 31                	xor    DWORD PTR [rcx],esi
    41fe:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4201:	72 5f                	jb     4262 <__TMC_END__+0x24a>
    4203:	74 72                	je     4277 <__TMC_END__+0x25f>
    4205:	61                   	(bad)
    4206:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    420d:	35 
    420e:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    4211:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4212:	64 45 76 00          	fs rex.RB jbe 4216 <__TMC_END__+0x1fe>
    4216:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    421d:	72 
    421e:	5f                   	pop    rdi
    421f:	74 72                	je     4293 <__TMC_END__+0x27b>
    4221:	61                   	(bad)
    4222:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    4229:	72 
    422a:	2a 3e                	sub    bh,BYTE PTR [rsi]
    422c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    422f:	4e                   	rex.WRX
    4230:	4b 53                	rex.WXB push r11
    4232:	74 37                	je     426b <__TMC_END__+0x253>
    4234:	5f                   	pop    rdi
    4235:	5f                   	pop    rdi
    4236:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4239:	31 31                	xor    DWORD PTR [rcx],esi
    423b:	31 32                	xor    DWORD PTR [rdx],esi
    423d:	62 61 73 69 63       	(bad)
    4242:	5f                   	pop    rdi
    4243:	73 74                	jae    42b9 <__TMC_END__+0x2a1>
    4245:	72 69                	jb     42b0 <__TMC_END__+0x298>
    4247:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4248:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    424d:	31 31                	xor    DWORD PTR [rcx],esi
    424f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4252:	72 5f                	jb     42b3 <__TMC_END__+0x29b>
    4254:	74 72                	je     42c8 <__TMC_END__+0x2b0>
    4256:	61                   	(bad)
    4257:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    425e:	61 
    425f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4263:	35 72 66 69 6e       	xor    eax,0x6e696672
    4268:	64 45 52             	fs rex.RB push r10
    426b:	4b 53                	rex.WXB push r11
    426d:	34 5f                	xor    al,0x5f
    426f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4270:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    4274:	65 73 70             	gs jae 42e7 <__TMC_END__+0x2cf>
    4277:	65 63 00             	movsxd eax,DWORD PTR gs:[rax]
    427a:	5f                   	pop    rdi
    427b:	5a                   	pop    rdx
    427c:	4e                   	rex.WRX
    427d:	4b 53                	rex.WXB push r11
    427f:	74 37                	je     42b8 <__TMC_END__+0x2a0>
    4281:	5f                   	pop    rdi
    4282:	5f                   	pop    rdi
    4283:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4286:	31 31                	xor    DWORD PTR [rcx],esi
    4288:	31 32                	xor    DWORD PTR [rdx],esi
    428a:	62 61 73 69 63       	(bad)
    428f:	5f                   	pop    rdi
    4290:	73 74                	jae    4306 <__TMC_END__+0x2ee>
    4292:	72 69                	jb     42fd <__TMC_END__+0x2e5>
    4294:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4295:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    429a:	31 31                	xor    DWORD PTR [rcx],esi
    429c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    429f:	72 5f                	jb     4300 <__TMC_END__+0x2e8>
    42a1:	74 72                	je     4315 <__TMC_END__+0x2fd>
    42a3:	61                   	(bad)
    42a4:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    42ab:	61 
    42ac:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    42b0:	31 31                	xor    DWORD PTR [rcx],esi
    42b2:	73 74                	jae    4328 <__TMC_END__+0x310>
    42b4:	61                   	(bad)
    42b5:	72 74                	jb     432b <__TMC_END__+0x313>
    42b7:	73 5f                	jae    4318 <__TMC_END__+0x300>
    42b9:	77 69                	ja     4324 <__TMC_END__+0x30c>
    42bb:	74 68                	je     4325 <__TMC_END__+0x30d>
    42bd:	45 50                	rex.RB push r8
    42bf:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    42c2:	74 65                	je     4329 <__TMC_END__+0x311>
    42c4:	78 74                	js     433a <__TMC_END__+0x322>
    42c6:	5f                   	pop    rdi
    42c7:	66 69 6c 65 5f 62 75 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x7562
    42ce:	73 79                	jae    4349 <__TMC_END__+0x331>
    42d0:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    42d3:	65 72 61             	gs jb  4337 <__TMC_END__+0x31f>
    42d6:	74 6f                	je     4347 <__TMC_END__+0x32f>
    42d8:	72 5b                	jb     4335 <__TMC_END__+0x31d>
    42da:	5d                   	pop    rbp
    42db:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    42de:	64 65 74 61          	fs gs je 4343 <__TMC_END__+0x32b>
    42e2:	69 6c 00 5f 5a 4e 53 	imul   ebp,DWORD PTR [rax+rax*1+0x5f],0x74534e5a
    42e9:	74 
    42ea:	31 31                	xor    DWORD PTR [rcx],esi
    42ec:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    42ef:	72 5f                	jb     4350 <__TMC_END__+0x338>
    42f1:	74 72                	je     4365 <__TMC_END__+0x34d>
    42f3:	61                   	(bad)
    42f4:	69 74 73 49 63 45 33 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x65334563
    42fb:	65 
    42fc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    42fd:	66 45 76 00          	data16 rex.RB jbe 4301 <__TMC_END__+0x2e9>
    4301:	5f                   	pop    rdi
    4302:	76 70                	jbe    4374 <__TMC_END__+0x35c>
    4304:	74 72                	je     4378 <__TMC_END__+0x360>
    4306:	2e 5f                	cs pop rdi
    4308:	53                   	push   rbx
    4309:	69 6e 6b 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x6b],0x4e5a5f00
    4310:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    4314:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4316:	75 5f                	jne    4377 <__TMC_END__+0x35f>
    4318:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    431b:	31 37                	xor    DWORD PTR [rdi],esi
    431d:	5f                   	pop    rdi
    431e:	5f                   	pop    rdi
    431f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4320:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4321:	72 6d                	jb     4390 <__TMC_END__+0x378>
    4323:	61                   	(bad)
    4324:	6c                   	ins    BYTE PTR es:[rdi],dx
    4325:	5f                   	pop    rdi
    4326:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    432d:	72 
    432e:	49 50                	rex.WB push r8
    4330:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    4333:	34 73                	xor    al,0x73
    4335:	70 61                	jo     4398 <__TMC_END__+0x380>
    4337:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4338:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    433d:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    4340:	36 37                	ss (bad)
    4342:	34 34                	xor    al,0x34
    4344:	30 37                	xor    BYTE PTR [rdi],dh
    4346:	33 37                	xor    esi,DWORD PTR [rdi]
    4348:	30 39                	xor    BYTE PTR [rcx],bh
    434a:	35 35 31 36 31       	xor    eax,0x31363135
    434f:	35 45 45 45 64       	xor    eax,0x64454545
    4354:	65 45 76 00          	gs rex.RB jbe 4358 <__TMC_END__+0x340>
    4358:	5f                   	pop    rdi
    4359:	5a                   	pop    rdx
    435a:	4e 53                	rex.WRX push rbx
    435c:	74 38                	je     4396 <__TMC_END__+0x37e>
    435e:	5f                   	pop    rdi
    435f:	5f                   	pop    rdi
    4360:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    4362:	72 6d                	jb     43d1 <__TMC_END__+0x3b9>
    4364:	61                   	(bad)
    4365:	74 35                	je     439c <__TMC_END__+0x384>
    4367:	5f                   	pop    rdi
    4368:	53                   	push   rbx
    4369:	69 6e 6b 49 63 45 31 	imul   ebp,DWORD PTR [rsi+0x6b],0x31456349
    4370:	32 5f 52             	xor    bl,BYTE PTR [rdi+0x52]
    4373:	65 73 65             	gs jae 43db <__TMC_END__+0x3c3>
    4376:	72 76                	jb     43ee <__TMC_END__+0x3d6>
    4378:	61                   	(bad)
    4379:	74 69                	je     43e4 <__TMC_END__+0x3cc>
    437b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    437c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    437d:	37                   	(bad)
    437e:	5f                   	pop    rdi
    437f:	4d 5f                	rex.WRB pop r15
    4381:	62 75 6d 70 45       	(bad)
    4386:	6d                   	ins    DWORD PTR es:[rdi],dx
    4387:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    438a:	4e 53                	rex.WRX push rbx
    438c:	74 37                	je     43c5 <__TMC_END__+0x3ad>
    438e:	5f                   	pop    rdi
    438f:	5f                   	pop    rdi
    4390:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4393:	31 31                	xor    DWORD PTR [rcx],esi
    4395:	31 32                	xor    DWORD PTR [rdx],esi
    4397:	62 61 73 69 63       	(bad)
    439c:	5f                   	pop    rdi
    439d:	73 74                	jae    4413 <__TMC_END__+0x3fb>
    439f:	72 69                	jb     440a <__TMC_END__+0x3f2>
    43a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    43a2:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    43a7:	31 31                	xor    DWORD PTR [rcx],esi
    43a9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    43ac:	72 5f                	jb     440d <__TMC_END__+0x3f5>
    43ae:	74 72                	je     4422 <__TMC_END__+0x40a>
    43b0:	61                   	(bad)
    43b1:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    43b8:	61 
    43b9:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    43bd:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
    43c0:	4d 5f                	rex.WRB pop r15
    43c2:	72 65                	jb     4429 <__TMC_END__+0x411>
    43c4:	70 6c                	jo     4432 <__TMC_END__+0x41a>
    43c6:	61                   	(bad)
    43c7:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    43ca:	61                   	(bad)
    43cb:	75 78                	jne    4445 <__TMC_END__+0x42d>
    43cd:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    43cf:	6d                   	ins    DWORD PTR es:[rdi],dx
    43d0:	6d                   	ins    DWORD PTR es:[rdi],dx
    43d1:	63 00                	movsxd eax,DWORD PTR [rax]
    43d3:	5f                   	pop    rdi
    43d4:	5f                   	pop    rdi
    43d5:	75 6e                	jne    4445 <__TMC_END__+0x42d>
    43d7:	69 63 6f 64 65 00 5f 	imul   esp,DWORD PTR [rbx+0x6f],0x5f006564
    43de:	5a                   	pop    rdx
    43df:	4e 53                	rex.WRX push rbx
    43e1:	74 37                	je     441a <__TMC_END__+0x402>
    43e3:	5f                   	pop    rdi
    43e4:	5f                   	pop    rdi
    43e5:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    43e8:	31 31                	xor    DWORD PTR [rcx],esi
    43ea:	31 32                	xor    DWORD PTR [rdx],esi
    43ec:	62 61 73 69 63       	(bad)
    43f1:	5f                   	pop    rdi
    43f2:	73 74                	jae    4468 <__TMC_END__+0x450>
    43f4:	72 69                	jb     445f <__TMC_END__+0x447>
    43f6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    43f7:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    43fc:	31 31                	xor    DWORD PTR [rcx],esi
    43fe:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4401:	72 5f                	jb     4462 <__TMC_END__+0x44a>
    4403:	74 72                	je     4477 <__TMC_END__+0x45f>
    4405:	61                   	(bad)
    4406:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    440d:	61 
    440e:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4412:	37                   	(bad)
    4413:	72 65                	jb     447a <__TMC_END__+0x462>
    4415:	70 6c                	jo     4483 <__TMC_END__+0x46b>
    4417:	61                   	(bad)
    4418:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    441b:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    441f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4421:	75 5f                	jne    4482 <__TMC_END__+0x46a>
    4423:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4426:	31 37                	xor    DWORD PTR [rdi],esi
    4428:	5f                   	pop    rdi
    4429:	5f                   	pop    rdi
    442a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    442b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    442c:	72 6d                	jb     449b <__TMC_END__+0x483>
    442e:	61                   	(bad)
    442f:	6c                   	ins    BYTE PTR es:[rdi],dx
    4430:	5f                   	pop    rdi
    4431:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4438:	72 
    4439:	49 50                	rex.WB push r8
    443b:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    443f:	5f                   	pop    rdi
    4440:	45                   	rex.RB
    4441:	45 53                	rex.RB push r11
    4443:	39 5f 53             	cmp    DWORD PTR [rdi+0x53],ebx
    4446:	38 5f 6d             	cmp    BYTE PTR [rdi+0x6d],bl
    4449:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    444c:	4e                   	rex.WRX
    444d:	4b 53                	rex.WXB push r11
    444f:	74 34                	je     4485 <__TMC_END__+0x46d>
    4451:	73 70                	jae    44c3 <__TMC_END__+0x4ab>
    4453:	61                   	(bad)
    4454:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4455:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    445a:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    445d:	36 37                	ss (bad)
    445f:	34 34                	xor    al,0x34
    4461:	30 37                	xor    BYTE PTR [rdi],dh
    4463:	33 37                	xor    esi,DWORD PTR [rdi]
    4465:	30 39                	xor    BYTE PTR [rcx],bh
    4467:	35 35 31 36 31       	xor    eax,0x31363135
    446c:	35 45 45 34 6c       	xor    eax,0x6c344545
    4471:	61                   	(bad)
    4472:	73 74                	jae    44e8 <__TMC_END__+0x4d0>
    4474:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    4476:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    4479:	6c                   	ins    BYTE PTR es:[rdi],dx
    447a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    447c:	61                   	(bad)
    447d:	6d                   	ins    DWORD PTR es:[rdi],dx
    447e:	65 5f                	gs pop rdi
    4480:	74 6f                	je     44f1 <__TMC_END__+0x4d9>
    4482:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4483:	5f                   	pop    rdi
    4484:	6c                   	ins    BYTE PTR es:[rdi],dx
    4485:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4486:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4487:	67 00 5f 5a          	add    BYTE PTR [edi+0x5a],bl
    448b:	4e                   	rex.WRX
    448c:	4b 53                	rex.WXB push r11
    448e:	74 34                	je     44c4 <__TMC_END__+0x4ac>
    4490:	70 61                	jo     44f3 <__TMC_END__+0x4db>
    4492:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    4499:	45 34 73             	rex.RB xor al,0x73
    449c:	77 61                	ja     44ff <__TMC_END__+0x4e7>
    449e:	70 45                	jo     44e5 <__TMC_END__+0x4cd>
    44a0:	52                   	push   rdx
    44a1:	4b 53                	rex.WXB push r11
    44a3:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    44a6:	61                   	(bad)
    44a7:	61                   	(bad)
    44a8:	31 34 69             	xor    DWORD PTR [rcx+rbp*2],esi
    44ab:	73 5f                	jae    450c <__TMC_END__+0x4f4>
    44ad:	73 77                	jae    4526 <__TMC_END__+0x50e>
    44af:	61                   	(bad)
    44b0:	70 70                	jo     4522 <__TMC_END__+0x50a>
    44b2:	61                   	(bad)
    44b3:	62 6c 65 5f 76       	(bad)
    44b8:	49                   	rex.WB
    44b9:	4b 54                	rex.WXB push r12
    44bb:	5f                   	pop    rdi
    44bc:	45 31 34 69          	xor    DWORD PTR [r9+rbp*2],r14d
    44c0:	73 5f                	jae    4521 <__TMC_END__+0x509>
    44c2:	73 77                	jae    453b <__TMC_END__+0x523>
    44c4:	61                   	(bad)
    44c5:	70 70                	jo     4537 <__TMC_END__+0x51f>
    44c7:	61                   	(bad)
    44c8:	62 6c 65 5f 76       	(bad)
    44cd:	49                   	rex.WB
    44ce:	4b 54                	rex.WXB push r12
    44d0:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    44d3:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    44d6:	73 74                	jae    454c <__TMC_END__+0x534>
    44d8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    44d9:	6d                   	ins    DWORD PTR es:[rdi],dx
    44da:	62 73 00 5f 5a       	(bad)
    44df:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    44e3:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    44e5:	75 5f                	jne    4546 <__TMC_END__+0x52e>
    44e7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    44ea:	31 37                	xor    DWORD PTR [rdi],esi
    44ec:	5f                   	pop    rdi
    44ed:	5f                   	pop    rdi
    44ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    44ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    44f0:	72 6d                	jb     455f <__TMC_END__+0x547>
    44f2:	61                   	(bad)
    44f3:	6c                   	ins    BYTE PTR es:[rdi],dx
    44f4:	5f                   	pop    rdi
    44f5:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    44fc:	72 
    44fd:	49 50                	rex.WB push r8
    44ff:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    4503:	74 37                	je     453c <__TMC_END__+0x524>
    4505:	5f                   	pop    rdi
    4506:	5f                   	pop    rdi
    4507:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    450a:	31 31                	xor    DWORD PTR [rcx],esi
    450c:	31 32                	xor    DWORD PTR [rdx],esi
    450e:	62 61 73 69 63       	(bad)
    4513:	5f                   	pop    rdi
    4514:	73 74                	jae    458a <__TMC_END__+0x572>
    4516:	72 69                	jb     4581 <__TMC_END__+0x569>
    4518:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4519:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    451e:	31 31                	xor    DWORD PTR [rcx],esi
    4520:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4523:	72 5f                	jb     4584 <__TMC_END__+0x56c>
    4525:	74 72                	je     4599 <__TMC_END__+0x581>
    4527:	61                   	(bad)
    4528:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    452f:	61 
    4530:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4534:	45                   	rex.RB
    4535:	45                   	rex.RB
    4536:	43 34 45             	rex.XB xor al,0x45
    4539:	52                   	push   rdx
    453a:	4b 53                	rex.WXB push r11
    453c:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    453f:	5f                   	pop    rdi
    4540:	5a                   	pop    rdx
    4541:	4e                   	rex.WRX
    4542:	4b 53                	rex.WXB push r11
    4544:	74 37                	je     457d <__TMC_END__+0x565>
    4546:	5f                   	pop    rdi
    4547:	5f                   	pop    rdi
    4548:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    454b:	31 31                	xor    DWORD PTR [rcx],esi
    454d:	31 32                	xor    DWORD PTR [rdx],esi
    454f:	62 61 73 69 63       	(bad)
    4554:	5f                   	pop    rdi
    4555:	73 74                	jae    45cb <__TMC_END__+0x5b3>
    4557:	72 69                	jb     45c2 <__TMC_END__+0x5aa>
    4559:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    455a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    455f:	31 31                	xor    DWORD PTR [rcx],esi
    4561:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4564:	72 5f                	jb     45c5 <__TMC_END__+0x5ad>
    4566:	74 72                	je     45da <__TMC_END__+0x5c2>
    4568:	61                   	(bad)
    4569:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4570:	61 
    4571:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4575:	38 63 6f             	cmp    BYTE PTR [rbx+0x6f],ah
    4578:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4579:	74 61                	je     45dc <__TMC_END__+0x5c4>
    457b:	69 6e 73 45 50 4b 63 	imul   ebp,DWORD PTR [rsi+0x73],0x634b5045
    4582:	00 63 72             	add    BYTE PTR [rbx+0x72],ah
    4585:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4586:	73 73                	jae    45fb <__TMC_END__+0x5e3>
    4588:	5f                   	pop    rdi
    4589:	64 65 76 69          	fs gs jbe 45f6 <__TMC_END__+0x5de>
    458d:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    4590:	6c                   	ins    BYTE PTR es:[rdi],dx
    4591:	69 6e 6b 00 6e 6f 5f 	imul   ebp,DWORD PTR [rsi+0x6b],0x5f6f6e00
    4598:	73 74                	jae    460e <__TMC_END__+0x5f6>
    459a:	72 65                	jb     4601 <__TMC_END__+0x5e9>
    459c:	61                   	(bad)
    459d:	6d                   	ins    DWORD PTR es:[rdi],dx
    459e:	5f                   	pop    rdi
    459f:	72 65                	jb     4606 <__TMC_END__+0x5ee>
    45a1:	73 6f                	jae    4612 <__TMC_END__+0x5fa>
    45a3:	75 72                	jne    4617 <__TMC_END__+0x5ff>
    45a5:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    45a8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    45ab:	4e                   	rex.WRX
    45ac:	4b 53                	rex.WXB push r11
    45ae:	74 38                	je     45e8 <__TMC_END__+0x5d0>
    45b0:	5f                   	pop    rdi
    45b1:	5f                   	pop    rdi
    45b2:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    45b4:	72 6d                	jb     4623 <__TMC_END__+0x60b>
    45b6:	61                   	(bad)
    45b7:	74 35                	je     45ee <__TMC_END__+0x5d6>
    45b9:	5f                   	pop    rdi
    45ba:	53                   	push   rbx
    45bb:	69 6e 6b 49 63 45 31 	imul   ebp,DWORD PTR [rsi+0x6b],0x31456349
    45c2:	32 5f 52             	xor    bl,BYTE PTR [rdi+0x52]
    45c5:	65 73 65             	gs jae 462d <__TMC_END__+0x615>
    45c8:	72 76                	jb     4640 <__TMC_END__+0x628>
    45ca:	61                   	(bad)
    45cb:	74 69                	je     4636 <__TMC_END__+0x61e>
    45cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45ce:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    45cf:	63 76 62             	movsxd esi,DWORD PTR [rsi+0x62]
    45d2:	45 76 00             	rex.RB jbe 45d5 <__TMC_END__+0x5bd>
    45d5:	5f                   	pop    rdi
    45d6:	4d 5f                	rex.WRB pop r15
    45d8:	72 65                	jb     463f <__TMC_END__+0x627>
    45da:	73 65                	jae    4641 <__TMC_END__+0x629>
    45dc:	72 76                	jb     4654 <__TMC_END__+0x63c>
    45de:	65 00 64 65 73       	add    BYTE PTR gs:[rbp+riz*2+0x73],ah
    45e3:	74 69                	je     464e <__TMC_END__+0x636>
    45e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    45e6:	61                   	(bad)
    45e7:	74 69                	je     4652 <__TMC_END__+0x63a>
    45e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    45ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    45eb:	5f                   	pop    rdi
    45ec:	61                   	(bad)
    45ed:	64 64 72 65          	fs fs jb 4656 <__TMC_END__+0x63e>
    45f1:	73 73                	jae    4666 <__TMC_END__+0x64e>
    45f3:	5f                   	pop    rdi
    45f4:	72 65                	jb     465b <__TMC_END__+0x643>
    45f6:	71 75                	jno    466d <__TMC_END__+0x655>
    45f8:	69 72 65 64 00 61 6c 	imul   esi,DWORD PTR [rdx+0x65],0x6c610064
    45ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    4600:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4601:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    4604:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4605:	72 5f                	jb     4666 <__TMC_END__+0x64e>
    4607:	74 79                	je     4682 <__TMC_END__+0x66a>
    4609:	70 65                	jo     4670 <__TMC_END__+0x658>
    460b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    460e:	66 70 6f             	data16 jo 4680 <__TMC_END__+0x668>
    4611:	73 5f                	jae    4672 <__TMC_END__+0x65a>
    4613:	74 00                	je     4615 <__TMC_END__+0x5fd>
    4615:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4616:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4617:	5f                   	pop    rdi
    4618:	63 68 69             	movsxd ebp,DWORD PTR [rax+0x69]
    461b:	6c                   	ins    BYTE PTR es:[rdi],dx
    461c:	64 5f                	fs pop rdi
    461e:	70 72                	jo     4692 <__TMC_END__+0x67a>
    4620:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4621:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    4624:	73 00                	jae    4626 <__TMC_END__+0x60e>
    4626:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4627:	76 65                	jbe    468e <__TMC_END__+0x676>
    4629:	72 66                	jb     4691 <__TMC_END__+0x679>
    462b:	6c                   	ins    BYTE PTR es:[rdi],dx
    462c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    462d:	77 5f                	ja     468e <__TMC_END__+0x676>
    462f:	61                   	(bad)
    4630:	72 67                	jb     4699 <__TMC_END__+0x681>
    4632:	5f                   	pop    rdi
    4633:	61                   	(bad)
    4634:	72 65                	jb     469b <__TMC_END__+0x683>
    4636:	61                   	(bad)
    4637:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    463a:	53                   	push   rbx
    463b:	74 38                	je     4675 <__TMC_END__+0x65d>
    463d:	74 6f                	je     46ae <__TMC_END__+0x696>
    463f:	5f                   	pop    rdi
    4640:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4643:	72 73                	jb     46b8 <__TMC_END__+0x6a0>
    4645:	50                   	push   rax
    4646:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    4649:	44                   	rex.R
    464a:	46 31 36             	rex.RX xor DWORD PTR [rsi],r14d
    464d:	5f                   	pop    rdi
    464e:	53                   	push   rbx
    464f:	74 31                	je     4682 <__TMC_END__+0x66a>
    4651:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    4654:	61                   	(bad)
    4655:	72 73                	jb     46ca <__TMC_END__+0x6b2>
    4657:	5f                   	pop    rdi
    4658:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    465a:	72 6d                	jb     46c9 <__TMC_END__+0x6b1>
    465c:	61                   	(bad)
    465d:	74 00                	je     465f <__TMC_END__+0x647>
    465f:	36 6c                	ss ins BYTE PTR es:[rdi],dx
    4661:	64 69 76 5f 74 00 6e 	imul   esi,DWORD PTR fs:[rsi+0x5f],0x6f6e0074
    4668:	6f 
    4669:	5f                   	pop    rdi
    466a:	62 75 66 66 65       	(bad)
    466f:	72 5f                	jb     46d0 <__TMC_END__+0x6b8>
    4671:	73 70                	jae    46e3 <__TMC_END__+0x6cb>
    4673:	61                   	(bad)
    4674:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    4677:	5f                   	pop    rdi
    4678:	5f                   	pop    rdi
    4679:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    467a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    467b:	72 6d                	jb     46ea <__TMC_END__+0x6d2>
    467d:	61                   	(bad)
    467e:	6c                   	ins    BYTE PTR es:[rdi],dx
    467f:	5f                   	pop    rdi
    4680:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4687:	72 
    4688:	3c 63                	cmp    al,0x63
    468a:	68 61 72 20 63       	push   0x63207261
    468f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4690:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4691:	73 74                	jae    4707 <__TMC_END__+0x6ef>
    4693:	2a 2c 20             	sub    ch,BYTE PTR [rax+riz*1]
    4696:	73 74                	jae    470c <__TMC_END__+0x6f4>
    4698:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    469b:	5f                   	pop    rdi
    469c:	5f                   	pop    rdi
    469d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    46a0:	31 31                	xor    DWORD PTR [rcx],esi
    46a2:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    46a4:	62 61 73 69 63       	(bad)
    46a9:	5f                   	pop    rdi
    46aa:	73 74                	jae    4720 <__TMC_END__+0x708>
    46ac:	72 69                	jb     4717 <__TMC_END__+0x6ff>
    46ae:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    46af:	67 3c 63             	addr32 cmp al,0x63
    46b2:	68 61 72 2c 20       	push   0x202c7261
    46b7:	73 74                	jae    472d <__TMC_END__+0x715>
    46b9:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    46bc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    46bf:	72 5f                	jb     4720 <__TMC_END__+0x708>
    46c1:	74 72                	je     4735 <__TMC_END__+0x71d>
    46c3:	61                   	(bad)
    46c4:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    46cb:	72 
    46cc:	3e 2c 20             	ds sub al,0x20
    46cf:	73 74                	jae    4745 <__TMC_END__+0x72d>
    46d1:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    46d4:	61                   	(bad)
    46d5:	6c                   	ins    BYTE PTR es:[rdi],dx
    46d6:	6c                   	ins    BYTE PTR es:[rdi],dx
    46d7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46d8:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    46db:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    46dc:	72 3c                	jb     471a <__TMC_END__+0x702>
    46de:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    46e1:	72 3e                	jb     4721 <__TMC_END__+0x709>
    46e3:	20 3e                	and    BYTE PTR [rsi],bh
    46e5:	20 3e                	and    BYTE PTR [rsi],bh
    46e7:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    46ea:	5f                   	pop    rdi
    46eb:	64 69 73 70 6f 73 65 	imul   esi,DWORD PTR fs:[rbx+0x70],0x65736f
    46f2:	00 
    46f3:	72 65                	jb     475a <__TMC_END__+0x742>
    46f5:	76 65                	jbe    475c <__TMC_END__+0x744>
    46f7:	72 73                	jb     476c <__TMC_END__+0x754>
    46f9:	65 5f                	gs pop rdi
    46fb:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4702:	72 
    4703:	3c 63                	cmp    al,0x63
    4705:	68 61 72 20 63       	push   0x63207261
    470a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    470b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    470c:	73 74                	jae    4782 <__TMC_END__+0x76a>
    470e:	2a 3e                	sub    bh,BYTE PTR [rsi]
    4710:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    4713:	76 61                	jbe    4776 <__TMC_END__+0x75e>
    4715:	6c                   	ins    BYTE PTR es:[rdi],dx
    4716:	69 64 5f 73 65 65 6b 	imul   esp,DWORD PTR [rdi+rbx*2+0x73],0x6b6565
    471d:	00 
    471e:	5f                   	pop    rdi
    471f:	5a                   	pop    rdx
    4720:	4e                   	rex.WRX
    4721:	4b 53                	rex.WXB push r11
    4723:	74 37                	je     475c <__TMC_END__+0x744>
    4725:	5f                   	pop    rdi
    4726:	5f                   	pop    rdi
    4727:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    472a:	31 31                	xor    DWORD PTR [rcx],esi
    472c:	31 32                	xor    DWORD PTR [rdx],esi
    472e:	62 61 73 69 63       	(bad)
    4733:	5f                   	pop    rdi
    4734:	73 74                	jae    47aa <__TMC_END__+0x792>
    4736:	72 69                	jb     47a1 <__TMC_END__+0x789>
    4738:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4739:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    473e:	31 31                	xor    DWORD PTR [rcx],esi
    4740:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4743:	72 5f                	jb     47a4 <__TMC_END__+0x78c>
    4745:	74 72                	je     47b9 <__TMC_END__+0x7a1>
    4747:	61                   	(bad)
    4748:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    474f:	61 
    4750:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4754:	37                   	(bad)
    4755:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    4758:	70 61                	jo     47bb <__TMC_END__+0x7a3>
    475a:	72 65                	jb     47c1 <__TMC_END__+0x7a9>
    475c:	45 50                	rex.RB push r8
    475e:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    4761:	62 72 6f 6b 65       	(bad)
    4766:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4767:	5f                   	pop    rdi
    4768:	70 69                	jo     47d3 <__TMC_END__+0x7bb>
    476a:	70 65                	jo     47d1 <__TMC_END__+0x7b9>
    476c:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    476f:	63 6f 75             	movsxd ebp,DWORD PTR [rdi+0x75]
    4772:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4773:	74 00                	je     4775 <__TMC_END__+0x75d>
    4775:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4776:	70 65                	jo     47dd <__TMC_END__+0x7c5>
    4778:	72 61                	jb     47db <__TMC_END__+0x7c3>
    477a:	74 6f                	je     47eb <__TMC_END__+0x7d3>
    477c:	72 20                	jb     479e <__TMC_END__+0x786>
    477e:	73 74                	jae    47f4 <__TMC_END__+0x7dc>
    4780:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    4783:	5f                   	pop    rdi
    4784:	5f                   	pop    rdi
    4785:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4788:	31 31                	xor    DWORD PTR [rcx],esi
    478a:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    478c:	62 61 73 69 63       	(bad)
    4791:	5f                   	pop    rdi
    4792:	73 74                	jae    4808 <__TMC_END__+0x7f0>
    4794:	72 69                	jb     47ff <__TMC_END__+0x7e7>
    4796:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4797:	67 3c 63             	addr32 cmp al,0x63
    479a:	68 61 72 3e 3a       	push   0x3a3e7261
    479f:	3a 5f 5f             	cmp    bl,BYTE PTR [rdi+0x5f]
    47a2:	73 76                	jae    481a <__TMC_END__+0x802>
    47a4:	5f                   	pop    rdi
    47a5:	74 79                	je     4820 <__TMC_END__+0x808>
    47a7:	70 65                	jo     480e <__TMC_END__+0x7f6>
    47a9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    47ac:	4e                   	rex.WRX
    47ad:	4b 53                	rex.WXB push r11
    47af:	74 37                	je     47e8 <__TMC_END__+0x7d0>
    47b1:	5f                   	pop    rdi
    47b2:	5f                   	pop    rdi
    47b3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    47b6:	31 31                	xor    DWORD PTR [rcx],esi
    47b8:	31 32                	xor    DWORD PTR [rdx],esi
    47ba:	62 61 73 69 63       	(bad)
    47bf:	5f                   	pop    rdi
    47c0:	73 74                	jae    4836 <__TMC_END__+0x81e>
    47c2:	72 69                	jb     482d <__TMC_END__+0x815>
    47c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    47c5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    47ca:	31 31                	xor    DWORD PTR [rcx],esi
    47cc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    47cf:	72 5f                	jb     4830 <__TMC_END__+0x818>
    47d1:	74 72                	je     4845 <__TMC_END__+0x82d>
    47d3:	61                   	(bad)
    47d4:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    47db:	61 
    47dc:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    47e0:	31 36                	xor    DWORD PTR [rsi],esi
    47e2:	5f                   	pop    rdi
    47e3:	4d 5f                	rex.WRB pop r15
    47e5:	67 65 74 5f          	addr32 gs je 4848 <__TMC_END__+0x830>
    47e9:	61                   	(bad)
    47ea:	6c                   	ins    BYTE PTR es:[rdi],dx
    47eb:	6c                   	ins    BYTE PTR es:[rdi],dx
    47ec:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    47ed:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    47f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    47f1:	72 45                	jb     4838 <__TMC_END__+0x820>
    47f3:	76 00                	jbe    47f5 <__TMC_END__+0x7dd>
    47f5:	5f                   	pop    rdi
    47f6:	5a                   	pop    rdx
    47f7:	4e 53                	rex.WRX push rbx
    47f9:	74 31                	je     482c <__TMC_END__+0x814>
    47fb:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    47fe:	61                   	(bad)
    47ff:	72 5f                	jb     4860 <__TMC_END__+0x848>
    4801:	74 72                	je     4875 <__TMC_END__+0x85d>
    4803:	61                   	(bad)
    4804:	69 74 73 49 63 45 36 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61364563
    480b:	61 
    480c:	73 73                	jae    4881 <__TMC_END__+0x869>
    480e:	69 67 6e 45 50 63 6d 	imul   esp,DWORD PTR [rdi+0x6e],0x6d635045
    4815:	63 00                	movsxd eax,DWORD PTR [rax]
    4817:	5f                   	pop    rdi
    4818:	5a                   	pop    rdx
    4819:	4e                   	rex.WRX
    481a:	4b 53                	rex.WXB push r11
    481c:	74 31                	je     484f <__TMC_END__+0x837>
    481e:	37                   	(bad)
    481f:	62 61 73 69 63       	(bad)
    4824:	5f                   	pop    rdi
    4825:	73 74                	jae    489b <__TMC_END__+0x883>
    4827:	72 69                	jb     4892 <__TMC_END__+0x87a>
    4829:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    482a:	67 5f                	addr32 pop rdi
    482c:	76 69                	jbe    4897 <__TMC_END__+0x87f>
    482e:	65 77 49             	gs ja  487a <__TMC_END__+0x862>
    4831:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    4834:	31 31                	xor    DWORD PTR [rcx],esi
    4836:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4839:	72 5f                	jb     489a <__TMC_END__+0x882>
    483b:	74 72                	je     48af <__TMC_END__+0x897>
    483d:	61                   	(bad)
    483e:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    4845:	31 
    4846:	31 73 74             	xor    DWORD PTR [rbx+0x74],esi
    4849:	61                   	(bad)
    484a:	72 74                	jb     48c0 <__TMC_END__+0x8a8>
    484c:	73 5f                	jae    48ad <__TMC_END__+0x895>
    484e:	77 69                	ja     48b9 <__TMC_END__+0x8a1>
    4850:	74 68                	je     48ba <__TMC_END__+0x8a2>
    4852:	45 50                	rex.RB push r8
    4854:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    4857:	70 6f                	jo     48c8 <__TMC_END__+0x8b0>
    4859:	70 5f                	jo     48ba <__TMC_END__+0x8a2>
    485b:	62 61 63 6b 00       	(bad)
    4860:	5f                   	pop    rdi
    4861:	5a                   	pop    rdx
    4862:	4e 53                	rex.WRX push rbx
    4864:	74 37                	je     489d <__TMC_END__+0x885>
    4866:	5f                   	pop    rdi
    4867:	5f                   	pop    rdi
    4868:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    486b:	31 31                	xor    DWORD PTR [rcx],esi
    486d:	31 32                	xor    DWORD PTR [rdx],esi
    486f:	62 61 73 69 63       	(bad)
    4874:	5f                   	pop    rdi
    4875:	73 74                	jae    48eb <__TMC_END__+0x8d3>
    4877:	72 69                	jb     48e2 <__TMC_END__+0x8ca>
    4879:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    487a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    487f:	31 31                	xor    DWORD PTR [rcx],esi
    4881:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4884:	72 5f                	jb     48e5 <__TMC_END__+0x8cd>
    4886:	74 72                	je     48fa <__TMC_END__+0x8e2>
    4888:	61                   	(bad)
    4889:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4890:	61 
    4891:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4895:	31 33                	xor    DWORD PTR [rbx],esi
    4897:	5f                   	pop    rdi
    4898:	53                   	push   rbx
    4899:	5f                   	pop    rdi
    489a:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    489d:	79 5f                	jns    48fe <__TMC_END__+0x8e6>
    489f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    48a2:	72 73                	jb     4917 <__TMC_END__+0x8ff>
    48a4:	45 50                	rex.RB push r8
    48a6:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
    48a9:	63 53 37             	movsxd edx,DWORD PTR [rbx+0x37]
    48ac:	5f                   	pop    rdi
    48ad:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    48b0:	67 65 74 63          	addr32 gs je 4917 <__TMC_END__+0x8ff>
    48b4:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    48b7:	5f                   	pop    rdi
    48b8:	6d                   	ins    DWORD PTR es:[rdi],dx
    48b9:	75 74                	jne    492f <__TMC_END__+0x917>
    48bb:	61                   	(bad)
    48bc:	74 65                	je     4923 <__TMC_END__+0x90b>
    48be:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    48c1:	5f                   	pop    rdi
    48c2:	73 69                	jae    492d <__TMC_END__+0x915>
    48c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    48c5:	6b 00 5f             	imul   eax,DWORD PTR [rax],0x5f
    48c8:	4d 5f                	rex.WRB pop r15
    48ca:	69 73 5f 6c 6f 63 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61636f6c
    48d1:	6c                   	ins    BYTE PTR es:[rdi],dx
    48d2:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    48d5:	76 31                	jbe    4908 <__TMC_END__+0x8f0>
    48d7:	35 5f 31 5f 30       	xor    eax,0x305f315f
    48dc:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    48df:	5f                   	pop    rdi
    48e0:	70 72                	jo     4954 <__TMC_END__+0x93c>
    48e2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    48e3:	70 61                	jo     4946 <__TMC_END__+0x92e>
    48e5:	67 61                	addr32 (bad)
    48e7:	74 65                	je     494e <__TMC_END__+0x936>
    48e9:	5f                   	pop    rdi
    48ea:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    48eb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    48ec:	5f                   	pop    rdi
    48ed:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    48f0:	79 5f                	jns    4951 <__TMC_END__+0x939>
    48f2:	61                   	(bad)
    48f3:	73 73                	jae    4968 <__TMC_END__+0x950>
    48f5:	69 67 6e 00 62 61 64 	imul   esp,DWORD PTR [rdi+0x6e],0x64616200
    48fc:	5f                   	pop    rdi
    48fd:	66 69 6c 65 5f 64 65 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6564
    4904:	73 63                	jae    4969 <__TMC_END__+0x951>
    4906:	72 69                	jb     4971 <__TMC_END__+0x959>
    4908:	70 74                	jo     497e <__TMC_END__+0x966>
    490a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    490b:	72 00                	jb     490d <__TMC_END__+0x8f5>
    490d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4910:	72 5f                	jb     4971 <__TMC_END__+0x959>
    4912:	74 72                	je     4986 <__TMC_END__+0x96e>
    4914:	61                   	(bad)
    4915:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    491c:	72 
    491d:	3e 00 75 69          	ds add BYTE PTR [rbp+0x69],dh
    4921:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4922:	74 5f                	je     4983 <__TMC_END__+0x96b>
    4924:	66 61                	data16 (bad)
    4926:	73 74                	jae    499c <__TMC_END__+0x984>
    4928:	31 36                	xor    DWORD PTR [rsi],esi
    492a:	5f                   	pop    rdi
    492b:	74 00                	je     492d <__TMC_END__+0x915>
    492d:	73 72                	jae    49a1 <__TMC_END__+0x989>
    492f:	61                   	(bad)
    4930:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4931:	64 00 77 63          	add    BYTE PTR fs:[rdi+0x63],dh
    4935:	73 63                	jae    499a <__TMC_END__+0x982>
    4937:	6d                   	ins    DWORD PTR es:[rdi],dx
    4938:	70 00                	jo     493a <__TMC_END__+0x922>
    493a:	5f                   	pop    rdi
    493b:	5a                   	pop    rdx
    493c:	4e 53                	rex.WRX push rbx
    493e:	74 37                	je     4977 <__TMC_END__+0x95f>
    4940:	5f                   	pop    rdi
    4941:	5f                   	pop    rdi
    4942:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4945:	31 31                	xor    DWORD PTR [rcx],esi
    4947:	31 32                	xor    DWORD PTR [rdx],esi
    4949:	62 61 73 69 63       	(bad)
    494e:	5f                   	pop    rdi
    494f:	73 74                	jae    49c5 <__TMC_END__+0x9ad>
    4951:	72 69                	jb     49bc <__TMC_END__+0x9a4>
    4953:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4954:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4959:	31 31                	xor    DWORD PTR [rcx],esi
    495b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    495e:	72 5f                	jb     49bf <__TMC_END__+0x9a7>
    4960:	74 72                	je     49d4 <__TMC_END__+0x9bc>
    4962:	61                   	(bad)
    4963:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    496a:	61 
    496b:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    496f:	37                   	(bad)
    4970:	72 65                	jb     49d7 <__TMC_END__+0x9bf>
    4972:	70 6c                	jo     49e0 <__TMC_END__+0x9c8>
    4974:	61                   	(bad)
    4975:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    4978:	6d                   	ins    DWORD PTR es:[rdi],dx
    4979:	6d                   	ins    DWORD PTR es:[rdi],dx
    497a:	52                   	push   rdx
    497b:	4b 53                	rex.WXB push r11
    497d:	34 5f                	xor    al,0x5f
    497f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4980:	6d                   	ins    DWORD PTR es:[rdi],dx
    4981:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4984:	53                   	push   rbx
    4985:	74 38                	je     49bf <__TMC_END__+0x9a7>
    4987:	74 6f                	je     49f8 <__TMC_END__+0x9e0>
    4989:	5f                   	pop    rdi
    498a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    498d:	72 73                	jb     4a02 <__TMC_END__+0x9ea>
    498f:	50                   	push   rax
    4990:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    4993:	44                   	rex.R
    4994:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    4997:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    499a:	74 31                	je     49cd <__TMC_END__+0x9b5>
    499c:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    499f:	61                   	(bad)
    49a0:	72 73                	jb     4a15 <__TMC_END__+0x9fd>
    49a2:	5f                   	pop    rdi
    49a3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    49a5:	72 6d                	jb     4a14 <__TMC_END__+0x9fc>
    49a7:	61                   	(bad)
    49a8:	74 69                	je     4a13 <__TMC_END__+0x9fb>
    49aa:	00 66 70             	add    BYTE PTR [rsi+0x70],ah
    49ad:	5f                   	pop    rdi
    49ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    49af:	66 66 73 65          	data16 data16 jae 4a18 <__TMC_END__+0xa00>
    49b3:	74 00                	je     49b5 <__TMC_END__+0x99d>
    49b5:	5f                   	pop    rdi
    49b6:	5a                   	pop    rdx
    49b7:	4e 53                	rex.WRX push rbx
    49b9:	74 38                	je     49f3 <__TMC_END__+0x9db>
    49bb:	5f                   	pop    rdi
    49bc:	5f                   	pop    rdi
    49bd:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    49bf:	72 6d                	jb     4a2e <__TMC_END__+0xa16>
    49c1:	61                   	(bad)
    49c2:	74 35                	je     49f9 <__TMC_END__+0x9e1>
    49c4:	5f                   	pop    rdi
    49c5:	53                   	push   rbx
    49c6:	69 6e 6b 49 63 45 38 	imul   ebp,DWORD PTR [rsi+0x6b],0x38456349
    49cd:	5f                   	pop    rdi
    49ce:	4d 5f                	rex.WRB pop r15
    49d0:	77 72                	ja     4a44 <__TMC_END__+0xa2c>
    49d2:	69 74 65 45 53 74 31 	imul   esi,DWORD PTR [rbp+riz*2+0x45],0x37317453
    49d9:	37 
    49da:	62 61 73 69 63       	(bad)
    49df:	5f                   	pop    rdi
    49e0:	73 74                	jae    4a56 <__TMC_END__+0xa3e>
    49e2:	72 69                	jb     4a4d <__TMC_END__+0xa35>
    49e4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    49e5:	67 5f                	addr32 pop rdi
    49e7:	76 69                	jbe    4a52 <__TMC_END__+0xa3a>
    49e9:	65 77 49             	gs ja  4a35 <__TMC_END__+0xa1d>
    49ec:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    49ef:	31 31                	xor    DWORD PTR [rcx],esi
    49f1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    49f4:	72 5f                	jb     4a55 <__TMC_END__+0xa3d>
    49f6:	74 72                	je     4a6a <__TMC_END__+0xa52>
    49f8:	61                   	(bad)
    49f9:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x454563
    4a00:	00 
    4a01:	5f                   	pop    rdi
    4a02:	5f                   	pop    rdi
    4a03:	74 69                	je     4a6e <__TMC_END__+0xa56>
    4a05:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a06:	65 5f                	gs pop rdi
    4a08:	74 00                	je     4a0a <__TMC_END__+0x9f2>
    4a0a:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a0b:	62 73 72 74 6f       	(bad)
    4a10:	77 63                	ja     4a75 <__TMC_END__+0xa5d>
    4a12:	73 00                	jae    4a14 <__TMC_END__+0x9fc>
    4a14:	5f                   	pop    rdi
    4a15:	53                   	push   rbx
    4a16:	5f                   	pop    rdi
    4a17:	74 6f                	je     4a88 <__TMC_END__+0xa70>
    4a19:	5f                   	pop    rdi
    4a1a:	73 74                	jae    4a90 <__TMC_END__+0xa78>
    4a1c:	72 69                	jb     4a87 <__TMC_END__+0xa6f>
    4a1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4a1f:	67 5f                	addr32 pop rdi
    4a21:	76 69                	jbe    4a8c <__TMC_END__+0xa74>
    4a23:	65 77 00             	gs ja  4a26 <__TMC_END__+0xa0e>
    4a26:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a27:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4a28:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4a29:	5f                   	pop    rdi
    4a2a:	67 72 6f             	addr32 jb 4a9c <__TMC_END__+0xa84>
    4a2d:	75 70                	jne    4a9f <__TMC_END__+0xa87>
    4a2f:	69 6e 67 00 67 70 5f 	imul   ebp,DWORD PTR [rsi+0x67],0x5f706700
    4a36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4a37:	66 66 73 65          	data16 data16 jae 4aa0 <__TMC_END__+0xa88>
    4a3b:	74 00                	je     4a3d <__TMC_END__+0xa25>
    4a3d:	74 6d                	je     4aac <__TMC_END__+0xa94>
    4a3f:	5f                   	pop    rdi
    4a40:	6d                   	ins    DWORD PTR es:[rdi],dx
    4a41:	69 6e 00 5f 52 65 73 	imul   ebp,DWORD PTR [rsi+0x0],0x7365525f
    4a48:	65 72 76             	gs jb  4ac1 <__TMC_END__+0xaa9>
    4a4b:	61                   	(bad)
    4a4c:	74 69                	je     4ab7 <__TMC_END__+0xa9f>
    4a4e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4a4f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4a50:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4a53:	4e 53                	rex.WRX push rbx
    4a55:	74 37                	je     4a8e <__TMC_END__+0xa76>
    4a57:	5f                   	pop    rdi
    4a58:	5f                   	pop    rdi
    4a59:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4a5c:	31 31                	xor    DWORD PTR [rcx],esi
    4a5e:	31 32                	xor    DWORD PTR [rdx],esi
    4a60:	62 61 73 69 63       	(bad)
    4a65:	5f                   	pop    rdi
    4a66:	73 74                	jae    4adc <__TMC_END__+0xac4>
    4a68:	72 69                	jb     4ad3 <__TMC_END__+0xabb>
    4a6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4a6b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4a70:	31 31                	xor    DWORD PTR [rcx],esi
    4a72:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4a75:	72 5f                	jb     4ad6 <__TMC_END__+0xabe>
    4a77:	74 72                	je     4aeb <__TMC_END__+0xad3>
    4a79:	61                   	(bad)
    4a7a:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4a81:	61 
    4a82:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4a86:	39 5f 4d             	cmp    DWORD PTR [rdi+0x4d],ebx
    4a89:	5f                   	pop    rdi
    4a8a:	61                   	(bad)
    4a8b:	70 70                	jo     4afd <__TMC_END__+0xae5>
    4a8d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4a8f:	64 45 50             	fs rex.RB push r8
    4a92:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    4a96:	5f                   	pop    rdi
    4a97:	5f                   	pop    rdi
    4a98:	69 6e 74 31 32 38 00 	imul   ebp,DWORD PTR [rsi+0x74],0x383231
    4a9f:	72 65                	jb     4b06 <__TMC_END__+0xaee>
    4aa1:	76 65                	jbe    4b08 <__TMC_END__+0xaf0>
    4aa3:	72 73                	jb     4b18 <__TMC_END__+0xb00>
    4aa5:	65 5f                	gs pop rdi
    4aa7:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4aae:	72 
    4aaf:	3c 5f                	cmp    al,0x5f
    4ab1:	5f                   	pop    rdi
    4ab2:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4ab4:	75 5f                	jne    4b15 <__TMC_END__+0xafd>
    4ab6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4ab9:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    4abb:	5f                   	pop    rdi
    4abc:	5f                   	pop    rdi
    4abd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4abe:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4abf:	72 6d                	jb     4b2e <__TMC_END__+0xb16>
    4ac1:	61                   	(bad)
    4ac2:	6c                   	ins    BYTE PTR es:[rdi],dx
    4ac3:	5f                   	pop    rdi
    4ac4:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4acb:	72 
    4acc:	3c 63                	cmp    al,0x63
    4ace:	68 61 72 2a 2c       	push   0x2c2a7261
    4ad3:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    4ad6:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    4ad9:	73 70                	jae    4b4b <__TMC_END__+0xb33>
    4adb:	61                   	(bad)
    4adc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4add:	3c 63                	cmp    al,0x63
    4adf:	68 61 72 2c 20       	push   0x202c7261
    4ae4:	31 38                	xor    DWORD PTR [rax],edi
    4ae6:	34 34                	xor    al,0x34
    4ae8:	36 37                	ss (bad)
    4aea:	34 34                	xor    al,0x34
    4aec:	30 37                	xor    BYTE PTR [rdi],dh
    4aee:	33 37                	xor    esi,DWORD PTR [rdi]
    4af0:	30 39                	xor    BYTE PTR [rcx],bh
    4af2:	35 35 31 36 31       	xor    eax,0x31363135
    4af7:	35 3e 20 3e 20       	xor    eax,0x203e203e
    4afc:	3e 00 63 68          	ds add BYTE PTR [rbx+0x68],ah
    4b00:	61                   	(bad)
    4b01:	72 33                	jb     4b36 <__TMC_END__+0xb1e>
    4b03:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    4b06:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    4b0a:	79 64                	jns    4b70 <__TMC_END__+0xb58>
    4b0c:	61                   	(bad)
    4b0d:	79 00                	jns    4b0f <__TMC_END__+0xaf7>
    4b0f:	6d                   	ins    DWORD PTR es:[rdi],dx
    4b10:	62 73 69 6e 69       	(bad)
    4b15:	74 00                	je     4b17 <__TMC_END__+0xaff>
    4b17:	66 67 65 74 73       	data16 addr32 gs je 4b8f <__TMC_END__+0xb77>
    4b1c:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    4b1f:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    4b22:	6d                   	ins    DWORD PTR es:[rdi],dx
    4b23:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4b25:	74 61                	je     4b88 <__TMC_END__+0xb70>
    4b27:	62 6c 65 5f 74       	(bad)
    4b2c:	72 61                	jb     4b8f <__TMC_END__+0xb77>
    4b2e:	69 74 73 3c 5f 5f 67 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x6e675f5f
    4b35:	6e 
    4b36:	75 5f                	jne    4b97 <__TMC_END__+0xb7f>
    4b38:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4b3b:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    4b3d:	5f                   	pop    rdi
    4b3e:	5f                   	pop    rdi
    4b3f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4b40:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4b41:	72 6d                	jb     4bb0 <__TMC_END__+0xb98>
    4b43:	61                   	(bad)
    4b44:	6c                   	ins    BYTE PTR es:[rdi],dx
    4b45:	5f                   	pop    rdi
    4b46:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4b4d:	72 
    4b4e:	3c 63                	cmp    al,0x63
    4b50:	68 61 72 2a 2c       	push   0x2c2a7261
    4b55:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    4b58:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    4b5b:	73 70                	jae    4bcd <__TMC_END__+0xbb5>
    4b5d:	61                   	(bad)
    4b5e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4b5f:	3c 63                	cmp    al,0x63
    4b61:	68 61 72 2c 20       	push   0x202c7261
    4b66:	31 38                	xor    DWORD PTR [rax],edi
    4b68:	34 34                	xor    al,0x34
    4b6a:	36 37                	ss (bad)
    4b6c:	34 34                	xor    al,0x34
    4b6e:	30 37                	xor    BYTE PTR [rdi],dh
    4b70:	33 37                	xor    esi,DWORD PTR [rdi]
    4b72:	30 39                	xor    BYTE PTR [rcx],bh
    4b74:	35 35 31 36 31       	xor    eax,0x31363135
    4b79:	35 3e 20 3e 20       	xor    eax,0x203e203e
    4b7e:	3e 00 7e 65          	ds add BYTE PTR [rsi+0x65],bh
    4b82:	78 63                	js     4be7 <__TMC_END__+0xbcf>
    4b84:	65 70 74             	gs jo  4bfb <__TMC_END__+0xbe3>
    4b87:	69 6f 6e 5f 70 74 72 	imul   ebp,DWORD PTR [rdi+0x6e],0x7274705f
    4b8e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4b91:	4e 53                	rex.WRX push rbx
    4b93:	74 37                	je     4bcc <__TMC_END__+0xbb4>
    4b95:	5f                   	pop    rdi
    4b96:	5f                   	pop    rdi
    4b97:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4b9a:	31 31                	xor    DWORD PTR [rcx],esi
    4b9c:	31 32                	xor    DWORD PTR [rdx],esi
    4b9e:	62 61 73 69 63       	(bad)
    4ba3:	5f                   	pop    rdi
    4ba4:	73 74                	jae    4c1a <__TMC_END__+0xc02>
    4ba6:	72 69                	jb     4c11 <__TMC_END__+0xbf9>
    4ba8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4ba9:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4bae:	31 31                	xor    DWORD PTR [rcx],esi
    4bb0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4bb3:	72 5f                	jb     4c14 <__TMC_END__+0xbfc>
    4bb5:	74 72                	je     4c29 <__TMC_END__+0xc11>
    4bb7:	61                   	(bad)
    4bb8:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4bbf:	61 
    4bc0:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4bc4:	61                   	(bad)
    4bc5:	53                   	push   rbx
    4bc6:	45 52                	rex.RB push r10
    4bc8:	4b 53                	rex.WXB push r11
    4bca:	34 5f                	xor    al,0x5f
    4bcc:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4bcf:	4e 53                	rex.WRX push rbx
    4bd1:	74 38                	je     4c0b <__TMC_END__+0xbf3>
    4bd3:	5f                   	pop    rdi
    4bd4:	5f                   	pop    rdi
    4bd5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    4bd7:	72 6d                	jb     4c46 <__TMC_END__+0xc2e>
    4bd9:	61                   	(bad)
    4bda:	74 35                	je     4c11 <__TMC_END__+0xbf9>
    4bdc:	5f                   	pop    rdi
    4bdd:	53                   	push   rbx
    4bde:	69 6e 6b 49 63 45 31 	imul   ebp,DWORD PTR [rsi+0x6b],0x31456349
    4be5:	30 5f 4d             	xor    BYTE PTR [rdi+0x4d],bl
    4be8:	5f                   	pop    rdi
    4be9:	72 65                	jb     4c50 <__TMC_END__+0xc38>
    4beb:	73 65                	jae    4c52 <__TMC_END__+0xc3a>
    4bed:	72 76                	jb     4c65 <__TMC_END__+0xc4d>
    4bef:	65 45 6d             	gs rex.RB ins DWORD PTR es:[rdi],dx
    4bf2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4bf5:	4e                   	rex.WRX
    4bf6:	4b 53                	rex.WXB push r11
    4bf8:	74 37                	je     4c31 <__TMC_END__+0xc19>
    4bfa:	5f                   	pop    rdi
    4bfb:	5f                   	pop    rdi
    4bfc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4bff:	31 31                	xor    DWORD PTR [rcx],esi
    4c01:	31 32                	xor    DWORD PTR [rdx],esi
    4c03:	62 61 73 69 63       	(bad)
    4c08:	5f                   	pop    rdi
    4c09:	73 74                	jae    4c7f <__TMC_END__+0xc67>
    4c0b:	72 69                	jb     4c76 <__TMC_END__+0xc5e>
    4c0d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4c0e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4c13:	31 31                	xor    DWORD PTR [rcx],esi
    4c15:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4c18:	72 5f                	jb     4c79 <__TMC_END__+0xc61>
    4c1a:	74 72                	je     4c8e <__TMC_END__+0xc76>
    4c1c:	61                   	(bad)
    4c1d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4c24:	61 
    4c25:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4c29:	63 76 53             	movsxd esi,DWORD PTR [rsi+0x53]
    4c2c:	74 31                	je     4c5f <__TMC_END__+0xc47>
    4c2e:	37                   	(bad)
    4c2f:	62 61 73 69 63       	(bad)
    4c34:	5f                   	pop    rdi
    4c35:	73 74                	jae    4cab <__TMC_END__+0xc93>
    4c37:	72 69                	jb     4ca2 <__TMC_END__+0xc8a>
    4c39:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4c3a:	67 5f                	addr32 pop rdi
    4c3c:	76 69                	jbe    4ca7 <__TMC_END__+0xc8f>
    4c3e:	65 77 49             	gs ja  4c8a <__TMC_END__+0xc72>
    4c41:	63 53 32             	movsxd edx,DWORD PTR [rbx+0x32]
    4c44:	5f                   	pop    rdi
    4c45:	45                   	rex.RB
    4c46:	45 76 00             	rex.RB jbe 4c49 <__TMC_END__+0xc31>
    4c49:	5f                   	pop    rdi
    4c4a:	5f                   	pop    rdi
    4c4b:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    4c52:	77 63                	ja     4cb7 <__TMC_END__+0xc9f>
    4c54:	73 74                	jae    4cca <__TMC_END__+0xcb2>
    4c56:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4c57:	75 6c                	jne    4cc5 <__TMC_END__+0xcad>
    4c59:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4c5c:	4e 53                	rex.WRX push rbx
    4c5e:	61                   	(bad)
    4c5f:	49 63 45 31          	movsxd rax,DWORD PTR [r13+0x31]
    4c63:	30 64 65 61          	xor    BYTE PTR [rbp+riz*2+0x61],ah
    4c67:	6c                   	ins    BYTE PTR es:[rdi],dx
    4c68:	6c                   	ins    BYTE PTR es:[rdi],dx
    4c69:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4c6a:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    4c6d:	65 45 50             	gs rex.RB push r8
    4c70:	63 6d 00             	movsxd ebp,DWORD PTR [rbp+0x0]
    4c73:	5f                   	pop    rdi
    4c74:	5a                   	pop    rdx
    4c75:	4e                   	rex.WRX
    4c76:	4b 53                	rex.WXB push r11
    4c78:	74 38                	je     4cb2 <__TMC_END__+0xc9a>
    4c7a:	5f                   	pop    rdi
    4c7b:	5f                   	pop    rdi
    4c7c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    4c7e:	72 6d                	jb     4ced <__TMC_END__+0xcd5>
    4c80:	61                   	(bad)
    4c81:	74 35                	je     4cb8 <__TMC_END__+0xca0>
    4c83:	5f                   	pop    rdi
    4c84:	53                   	push   rbx
    4c85:	69 6e 6b 49 63 45 39 	imul   ebp,DWORD PTR [rsi+0x6b],0x39456349
    4c8c:	5f                   	pop    rdi
    4c8d:	4d 5f                	rex.WRB pop r15
    4c8f:	75 6e                	jne    4cff <__TMC_END__+0xce7>
    4c91:	75 73                	jne    4d06 <__TMC_END__+0xcee>
    4c93:	65 64 45 76 00       	gs fs rex.RB jbe 4c98 <__TMC_END__+0xc80>
    4c98:	5f                   	pop    rdi
    4c99:	5a                   	pop    rdx
    4c9a:	4e 53                	rex.WRX push rbx
    4c9c:	74 37                	je     4cd5 <__TMC_END__+0xcbd>
    4c9e:	5f                   	pop    rdi
    4c9f:	5f                   	pop    rdi
    4ca0:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4ca3:	31 31                	xor    DWORD PTR [rcx],esi
    4ca5:	31 32                	xor    DWORD PTR [rdx],esi
    4ca7:	62 61 73 69 63       	(bad)
    4cac:	5f                   	pop    rdi
    4cad:	73 74                	jae    4d23 <__TMC_END__+0xd0b>
    4caf:	72 69                	jb     4d1a <__TMC_END__+0xd02>
    4cb1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4cb2:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4cb7:	31 31                	xor    DWORD PTR [rcx],esi
    4cb9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4cbc:	72 5f                	jb     4d1d <__TMC_END__+0xd05>
    4cbe:	74 72                	je     4d32 <__TMC_END__+0xd1a>
    4cc0:	61                   	(bad)
    4cc1:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4cc8:	61 
    4cc9:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4ccd:	37                   	(bad)
    4cce:	72 65                	jb     4d35 <__TMC_END__+0xd1d>
    4cd0:	73 65                	jae    4d37 <__TMC_END__+0xd1f>
    4cd2:	72 76                	jb     4d4a <__TMC_END__+0xd32>
    4cd4:	65 45 6d             	gs rex.RB ins DWORD PTR es:[rdi],dx
    4cd7:	00 63 5f             	add    BYTE PTR [rbx+0x5f],ah
    4cda:	73 74                	jae    4d50 <__TMC_END__+0xd38>
    4cdc:	72 00                	jb     4cde <__TMC_END__+0xcc6>
    4cde:	73 68                	jae    4d48 <__TMC_END__+0xd30>
    4ce0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4ce1:	72 74                	jb     4d57 <__TMC_END__+0xd3f>
    4ce3:	20 75 6e             	and    BYTE PTR [rbp+0x6e],dh
    4ce6:	73 69                	jae    4d51 <__TMC_END__+0xd39>
    4ce8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4cea:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    4cef:	74 00                	je     4cf1 <__TMC_END__+0xcd9>
    4cf1:	5f                   	pop    rdi
    4cf2:	5a                   	pop    rdx
    4cf3:	4e                   	rex.WRX
    4cf4:	4b 53                	rex.WXB push r11
    4cf6:	74 31                	je     4d29 <__TMC_END__+0xd11>
    4cf8:	37                   	(bad)
    4cf9:	62 61 73 69 63       	(bad)
    4cfe:	5f                   	pop    rdi
    4cff:	73 74                	jae    4d75 <__TMC_END__+0xd5d>
    4d01:	72 69                	jb     4d6c <__TMC_END__+0xd54>
    4d03:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d04:	67 5f                	addr32 pop rdi
    4d06:	76 69                	jbe    4d71 <__TMC_END__+0xd59>
    4d08:	65 77 49             	gs ja  4d54 <__TMC_END__+0xd3c>
    4d0b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    4d0e:	31 31                	xor    DWORD PTR [rcx],esi
    4d10:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4d13:	72 5f                	jb     4d74 <__TMC_END__+0xd5c>
    4d15:	74 72                	je     4d89 <__TMC_END__+0xd71>
    4d17:	61                   	(bad)
    4d18:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    4d1f:	31 
    4d20:	33 66 69             	xor    esp,DWORD PTR [rsi+0x69]
    4d23:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d24:	64 5f                	fs pop rdi
    4d26:	66 69 72 73 74 5f    	imul   si,WORD PTR [rdx+0x73],0x5f74
    4d2c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4d2d:	66 45 53             	rex.RB push r11w
    4d30:	32 5f 6d             	xor    bl,BYTE PTR [rdi+0x6d]
    4d33:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4d36:	4e 53                	rex.WRX push rbx
    4d38:	74 37                	je     4d71 <__TMC_END__+0xd59>
    4d3a:	5f                   	pop    rdi
    4d3b:	5f                   	pop    rdi
    4d3c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4d3f:	31 31                	xor    DWORD PTR [rcx],esi
    4d41:	31 32                	xor    DWORD PTR [rdx],esi
    4d43:	62 61 73 69 63       	(bad)
    4d48:	5f                   	pop    rdi
    4d49:	73 74                	jae    4dbf <__TMC_END__+0xda7>
    4d4b:	72 69                	jb     4db6 <__TMC_END__+0xd9e>
    4d4d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d4e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4d53:	31 31                	xor    DWORD PTR [rcx],esi
    4d55:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4d58:	72 5f                	jb     4db9 <__TMC_END__+0xda1>
    4d5a:	74 72                	je     4dce <__TMC_END__+0xdb6>
    4d5c:	61                   	(bad)
    4d5d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4d64:	61 
    4d65:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4d69:	37                   	(bad)
    4d6a:	72 65                	jb     4dd1 <__TMC_END__+0xdb9>
    4d6c:	73 65                	jae    4dd3 <__TMC_END__+0xdbb>
    4d6e:	72 76                	jb     4de6 <__TMC_END__+0xdce>
    4d70:	65 45 76 00          	gs rex.RB jbe 4d74 <__TMC_END__+0xd5c>
    4d74:	5f                   	pop    rdi
    4d75:	4d 5f                	rex.WRB pop r15
    4d77:	65 78 74             	gs js  4dee <__TMC_END__+0xdd6>
    4d7a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4d7c:	74 00                	je     4d7e <__TMC_END__+0xd66>
    4d7e:	5f                   	pop    rdi
    4d7f:	5a                   	pop    rdx
    4d80:	4e                   	rex.WRX
    4d81:	4b 53                	rex.WXB push r11
    4d83:	74 31                	je     4db6 <__TMC_END__+0xd9e>
    4d85:	37                   	(bad)
    4d86:	62 61 73 69 63       	(bad)
    4d8b:	5f                   	pop    rdi
    4d8c:	73 74                	jae    4e02 <__TMC_END__+0xdea>
    4d8e:	72 69                	jb     4df9 <__TMC_END__+0xde1>
    4d90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4d91:	67 5f                	addr32 pop rdi
    4d93:	76 69                	jbe    4dfe <__TMC_END__+0xde6>
    4d95:	65 77 49             	gs ja  4de1 <__TMC_END__+0xdc9>
    4d98:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    4d9b:	31 31                	xor    DWORD PTR [rcx],esi
    4d9d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4da0:	72 5f                	jb     4e01 <__TMC_END__+0xde9>
    4da2:	74 72                	je     4e16 <__TMC_END__+0xdfe>
    4da4:	61                   	(bad)
    4da5:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    4dac:	31 
    4dad:	32 66 69             	xor    ah,BYTE PTR [rsi+0x69]
    4db0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4db1:	64 5f                	fs pop rdi
    4db3:	6c                   	ins    BYTE PTR es:[rdi],dx
    4db4:	61                   	(bad)
    4db5:	73 74                	jae    4e2b <__TMC_END__+0xe13>
    4db7:	5f                   	pop    rdi
    4db8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4db9:	66 45 53             	rex.RB push r11w
    4dbc:	32 5f 6d             	xor    bl,BYTE PTR [rdi+0x6d]
    4dbf:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4dc2:	4e 53                	rex.WRX push rbx
    4dc4:	74 37                	je     4dfd <__TMC_END__+0xde5>
    4dc6:	5f                   	pop    rdi
    4dc7:	5f                   	pop    rdi
    4dc8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4dcb:	31 31                	xor    DWORD PTR [rcx],esi
    4dcd:	31 32                	xor    DWORD PTR [rdx],esi
    4dcf:	62 61 73 69 63       	(bad)
    4dd4:	5f                   	pop    rdi
    4dd5:	73 74                	jae    4e4b <__TMC_END__+0xe33>
    4dd7:	72 69                	jb     4e42 <__TMC_END__+0xe2a>
    4dd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4dda:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4ddf:	31 31                	xor    DWORD PTR [rcx],esi
    4de1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4de4:	72 5f                	jb     4e45 <__TMC_END__+0xe2d>
    4de6:	74 72                	je     4e5a <__TMC_END__+0xe42>
    4de8:	61                   	(bad)
    4de9:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4df0:	61 
    4df1:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4df5:	39 5f 4d             	cmp    DWORD PTR [rdi+0x4d],ebx
    4df8:	5f                   	pop    rdi
    4df9:	6d                   	ins    DWORD PTR es:[rdi],dx
    4dfa:	75 74                	jne    4e70 <__TMC_END__+0xe58>
    4dfc:	61                   	(bad)
    4dfd:	74 65                	je     4e64 <__TMC_END__+0xe4c>
    4dff:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    4e01:	6d                   	ins    DWORD PTR es:[rdi],dx
    4e02:	50                   	push   rax
    4e03:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    4e07:	5f                   	pop    rdi
    4e08:	5a                   	pop    rdx
    4e09:	4e                   	rex.WRX
    4e0a:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    4e0e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4e10:	75 5f                	jne    4e71 <__TMC_END__+0xe59>
    4e12:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4e15:	31 37                	xor    DWORD PTR [rdi],esi
    4e17:	5f                   	pop    rdi
    4e18:	5f                   	pop    rdi
    4e19:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4e1a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4e1b:	72 6d                	jb     4e8a <__TMC_END__+0xe72>
    4e1d:	61                   	(bad)
    4e1e:	6c                   	ins    BYTE PTR es:[rdi],dx
    4e1f:	5f                   	pop    rdi
    4e20:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4e27:	72 
    4e28:	49 50                	rex.WB push r8
    4e2a:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    4e2e:	74 37                	je     4e67 <__TMC_END__+0xe4f>
    4e30:	5f                   	pop    rdi
    4e31:	5f                   	pop    rdi
    4e32:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4e35:	31 31                	xor    DWORD PTR [rcx],esi
    4e37:	31 32                	xor    DWORD PTR [rdx],esi
    4e39:	62 61 73 69 63       	(bad)
    4e3e:	5f                   	pop    rdi
    4e3f:	73 74                	jae    4eb5 <__TMC_END__+0xe9d>
    4e41:	72 69                	jb     4eac <__TMC_END__+0xe94>
    4e43:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4e44:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4e49:	31 31                	xor    DWORD PTR [rcx],esi
    4e4b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4e4e:	72 5f                	jb     4eaf <__TMC_END__+0xe97>
    4e50:	74 72                	je     4ec4 <__TMC_END__+0xeac>
    4e52:	61                   	(bad)
    4e53:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4e5a:	61 
    4e5b:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4e5f:	45                   	rex.RB
    4e60:	45                   	rex.RB
    4e61:	64 65 45 76 00       	fs gs rex.RB jbe 4e66 <__TMC_END__+0xe4e>
    4e66:	64 69 66 66 65 72 65 	imul   esp,DWORD PTR fs:[rsi+0x66],0x6e657265
    4e6d:	6e 
    4e6e:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    4e71:	74 79                	je     4eec <__TMC_END__+0xed4>
    4e73:	70 65                	jo     4eda <__TMC_END__+0xec2>
    4e75:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    4e78:	4e 53                	rex.WRX push rbx
    4e7a:	74 37                	je     4eb3 <__TMC_END__+0xe9b>
    4e7c:	5f                   	pop    rdi
    4e7d:	5f                   	pop    rdi
    4e7e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4e81:	31 31                	xor    DWORD PTR [rcx],esi
    4e83:	31 32                	xor    DWORD PTR [rdx],esi
    4e85:	62 61 73 69 63       	(bad)
    4e8a:	5f                   	pop    rdi
    4e8b:	73 74                	jae    4f01 <__TMC_END__+0xee9>
    4e8d:	72 69                	jb     4ef8 <__TMC_END__+0xee0>
    4e8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4e90:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4e95:	31 31                	xor    DWORD PTR [rcx],esi
    4e97:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4e9a:	72 5f                	jb     4efb <__TMC_END__+0xee3>
    4e9c:	74 72                	je     4f10 <__TMC_END__+0xef8>
    4e9e:	61                   	(bad)
    4e9f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4ea6:	61 
    4ea7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4eab:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
    4eb2:	45 
    4eb3:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    4eb7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4eb9:	75 5f                	jne    4f1a <__TMC_END__+0xf02>
    4ebb:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4ebe:	31 37                	xor    DWORD PTR [rdi],esi
    4ec0:	5f                   	pop    rdi
    4ec1:	5f                   	pop    rdi
    4ec2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4ec3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4ec4:	72 6d                	jb     4f33 <__TMC_END__+0xf1b>
    4ec6:	61                   	(bad)
    4ec7:	6c                   	ins    BYTE PTR es:[rdi],dx
    4ec8:	5f                   	pop    rdi
    4ec9:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4ed0:	72 
    4ed1:	49 50                	rex.WB push r8
    4ed3:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    4ed7:	5f                   	pop    rdi
    4ed8:	45                   	rex.RB
    4ed9:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    4edb:	63 00                	movsxd eax,DWORD PTR [rax]
    4edd:	70 74                	jo     4f53 <__TMC_END__+0xf3b>
    4edf:	72 64                	jb     4f45 <__TMC_END__+0xf2d>
    4ee1:	69 66 66 5f 74 00 5f 	imul   esp,DWORD PTR [rsi+0x66],0x5f00745f
    4ee8:	5a                   	pop    rdx
    4ee9:	4e                   	rex.WRX
    4eea:	4b 53                	rex.WXB push r11
    4eec:	74 34                	je     4f22 <__TMC_END__+0xf0a>
    4eee:	73 70                	jae    4f60 <__TMC_END__+0xf48>
    4ef0:	61                   	(bad)
    4ef1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4ef2:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    4ef7:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    4efa:	36 37                	ss (bad)
    4efc:	34 34                	xor    al,0x34
    4efe:	30 37                	xor    BYTE PTR [rdi],dh
    4f00:	33 37                	xor    esi,DWORD PTR [rdi]
    4f02:	30 39                	xor    BYTE PTR [rcx],bh
    4f04:	35 35 31 36 31       	xor    eax,0x31363135
    4f09:	35 45 45 34 72       	xor    eax,0x72344545
    4f0e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    4f10:	64 45 76 00          	fs rex.RB jbe 4f14 <__TMC_END__+0xefc>
    4f14:	5f                   	pop    rdi
    4f15:	5a                   	pop    rdx
    4f16:	4e 53                	rex.WRX push rbx
    4f18:	74 31                	je     4f4b <__TMC_END__+0xf33>
    4f1a:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    4f1f:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    4f22:	74 69                	je     4f8d <__TMC_END__+0xf75>
    4f24:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4f25:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4f26:	5f                   	pop    rdi
    4f27:	70 74                	jo     4f9d <__TMC_END__+0xf85>
    4f29:	72 31                	jb     4f5c <__TMC_END__+0xf44>
    4f2b:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    4f2e:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    4f31:	74 69                	je     4f9c <__TMC_END__+0xf84>
    4f33:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4f34:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4f35:	5f                   	pop    rdi
    4f36:	70 74                	jo     4fac <__TMC_END__+0xf94>
    4f38:	72 43                	jb     4f7d <__TMC_END__+0xf65>
    4f3a:	34 45                	xor    al,0x45
    4f3c:	44 6e                	rex.R outs dx,BYTE PTR ds:[rsi]
    4f3e:	00 5f 50             	add    BYTE PTR [rdi+0x50],bl
    4f41:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4f42:	69 6e 74 65 72 00 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f007265
    4f49:	5a                   	pop    rdx
    4f4a:	4e                   	rex.WRX
    4f4b:	4b 53                	rex.WXB push r11
    4f4d:	74 37                	je     4f86 <__TMC_END__+0xf6e>
    4f4f:	5f                   	pop    rdi
    4f50:	5f                   	pop    rdi
    4f51:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4f54:	31 31                	xor    DWORD PTR [rcx],esi
    4f56:	31 32                	xor    DWORD PTR [rdx],esi
    4f58:	62 61 73 69 63       	(bad)
    4f5d:	5f                   	pop    rdi
    4f5e:	73 74                	jae    4fd4 <__TMC_END__+0xfbc>
    4f60:	72 69                	jb     4fcb <__TMC_END__+0xfb3>
    4f62:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4f63:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    4f68:	31 31                	xor    DWORD PTR [rcx],esi
    4f6a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    4f6d:	72 5f                	jb     4fce <__TMC_END__+0xfb6>
    4f6f:	74 72                	je     4fe3 <__TMC_END__+0xfcb>
    4f71:	61                   	(bad)
    4f72:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    4f79:	61 
    4f7a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    4f7e:	34 66                	xor    al,0x66
    4f80:	69 6e 64 45 63 6d 00 	imul   ebp,DWORD PTR [rsi+0x64],0x6d6345
    4f87:	5f                   	pop    rdi
    4f88:	5a                   	pop    rdx
    4f89:	4e 53                	rex.WRX push rbx
    4f8b:	74 31                	je     4fbe <__TMC_END__+0xfa6>
    4f8d:	36 61                	ss (bad)
    4f8f:	6c                   	ins    BYTE PTR es:[rdi],dx
    4f90:	6c                   	ins    BYTE PTR es:[rdi],dx
    4f91:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4f92:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    4f95:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4f96:	72 5f                	jb     4ff7 <__TMC_END__+0xfdf>
    4f98:	74 72                	je     500c <__TMC_END__+0xff4>
    4f9a:	61                   	(bad)
    4f9b:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    4fa2:	63 
    4fa3:	45                   	rex.RB
    4fa4:	45 33 37             	xor    r14d,DWORD PTR [r15]
    4fa7:	73 65                	jae    500e <__TMC_END__+0xff6>
    4fa9:	6c                   	ins    BYTE PTR es:[rdi],dx
    4faa:	65 63 74 5f 6f       	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x6f]
    4faf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4fb0:	5f                   	pop    rdi
    4fb1:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    4fb4:	74 61                	je     5017 <__TMC_END__+0xfff>
    4fb6:	69 6e 65 72 5f 63 6f 	imul   ebp,DWORD PTR [rsi+0x65],0x6f635f72
    4fbd:	70 79                	jo     5038 <__TMC_END__+0x1020>
    4fbf:	5f                   	pop    rdi
    4fc0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    4fc3:	73 74                	jae    5039 <__TMC_END__+0x1021>
    4fc5:	72 75                	jb     503c <__TMC_END__+0x1024>
    4fc7:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    4fcb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4fcc:	45 52                	rex.RB push r10
    4fce:	4b 53                	rex.WXB push r11
    4fd0:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    4fd3:	5f                   	pop    rdi
    4fd4:	5a                   	pop    rdx
    4fd5:	4e                   	rex.WRX
    4fd6:	4b 53                	rex.WXB push r11
    4fd8:	74 31                	je     500b <__TMC_END__+0xff3>
    4fda:	36 72 65             	ss jb  5042 <__TMC_END__+0x102a>
    4fdd:	76 65                	jbe    5044 <__TMC_END__+0x102c>
    4fdf:	72 73                	jb     5054 <__TMC_END__+0x103c>
    4fe1:	65 5f                	gs pop rdi
    4fe3:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    4fea:	72 
    4feb:	49                   	rex.WB
    4fec:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    4ff0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    4ff2:	75 5f                	jne    5053 <__TMC_END__+0x103b>
    4ff4:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    4ff7:	31 37                	xor    DWORD PTR [rdi],esi
    4ff9:	5f                   	pop    rdi
    4ffa:	5f                   	pop    rdi
    4ffb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    4ffc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    4ffd:	72 6d                	jb     506c <__TMC_END__+0x1054>
    4fff:	61                   	(bad)
    5000:	6c                   	ins    BYTE PTR es:[rdi],dx
    5001:	5f                   	pop    rdi
    5002:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    5009:	72 
    500a:	49 50                	rex.WB push r8
    500c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    500f:	34 73                	xor    al,0x73
    5011:	70 61                	jo     5074 <__TMC_END__+0x105c>
    5013:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5014:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    5019:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    501c:	36 37                	ss (bad)
    501e:	34 34                	xor    al,0x34
    5020:	30 37                	xor    BYTE PTR [rdi],dh
    5022:	33 37                	xor    esi,DWORD PTR [rdi]
    5024:	30 39                	xor    BYTE PTR [rcx],bh
    5026:	35 35 31 36 31       	xor    eax,0x31363135
    502b:	35 45 45 45 45       	xor    eax,0x45454545
    5030:	45                   	rex.RB
    5031:	64 65 45 76 00       	fs gs rex.RB jbe 5036 <__TMC_END__+0x101e>
    5036:	5f                   	pop    rdi
    5037:	5f                   	pop    rdi
    5038:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    503f:	77 73                	ja     50b4 <__TMC_END__+0x109c>
    5041:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    5044:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    5048:	4e 53                	rex.WRX push rbx
    504a:	74 37                	je     5083 <__TMC_END__+0x106b>
    504c:	5f                   	pop    rdi
    504d:	5f                   	pop    rdi
    504e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5051:	31 31                	xor    DWORD PTR [rcx],esi
    5053:	31 32                	xor    DWORD PTR [rdx],esi
    5055:	62 61 73 69 63       	(bad)
    505a:	5f                   	pop    rdi
    505b:	73 74                	jae    50d1 <__TMC_END__+0x10b9>
    505d:	72 69                	jb     50c8 <__TMC_END__+0x10b0>
    505f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5060:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5065:	31 31                	xor    DWORD PTR [rcx],esi
    5067:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    506a:	72 5f                	jb     50cb <__TMC_END__+0x10b3>
    506c:	74 72                	je     50e0 <__TMC_END__+0x10c8>
    506e:	61                   	(bad)
    506f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5076:	61 
    5077:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    507b:	37                   	(bad)
    507c:	72 65                	jb     50e3 <__TMC_END__+0x10cb>
    507e:	70 6c                	jo     50ec <__TMC_END__+0x10d4>
    5080:	61                   	(bad)
    5081:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    5084:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    5088:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    508a:	75 5f                	jne    50eb <__TMC_END__+0x10d3>
    508c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    508f:	31 37                	xor    DWORD PTR [rdi],esi
    5091:	5f                   	pop    rdi
    5092:	5f                   	pop    rdi
    5093:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5094:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5095:	72 6d                	jb     5104 <__TMC_END__+0x10ec>
    5097:	61                   	(bad)
    5098:	6c                   	ins    BYTE PTR es:[rdi],dx
    5099:	5f                   	pop    rdi
    509a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    50a1:	72 
    50a2:	49 50                	rex.WB push r8
    50a4:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    50a8:	5f                   	pop    rdi
    50a9:	45                   	rex.RB
    50aa:	45 53                	rex.RB push r11
    50ac:	39 5f 53             	cmp    DWORD PTR [rdi+0x53],ebx
    50af:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    50b2:	38 5f 00             	cmp    BYTE PTR [rdi+0x0],bl
    50b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    50b6:	65 74 77             	gs je  5130 <__TMC_END__+0x1118>
    50b9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    50ba:	72 6b                	jb     5127 <__TMC_END__+0x110f>
    50bc:	5f                   	pop    rdi
    50bd:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    50bf:	77 6e                	ja     512f <__TMC_END__+0x1117>
    50c1:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    50c5:	77 64                	ja     512b <__TMC_END__+0x1113>
    50c7:	61                   	(bad)
    50c8:	79 00                	jns    50ca <__TMC_END__+0x10b2>
    50ca:	5f                   	pop    rdi
    50cb:	5f                   	pop    rdi
    50cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    50cd:	66 66 36 34 5f       	data16 data16 ss xor al,0x5f
    50d2:	74 00                	je     50d4 <__TMC_END__+0x10bc>
    50d4:	77 63                	ja     5139 <__TMC_END__+0x1121>
    50d6:	73 63                	jae    513b <__TMC_END__+0x1123>
    50d8:	70 79                	jo     5153 <__TMC_END__+0x113b>
    50da:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    50dd:	6d                   	ins    DWORD PTR es:[rdi],dx
    50de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    50df:	76 65                	jbe    5146 <__TMC_END__+0x112e>
    50e1:	5f                   	pop    rdi
    50e2:	73 75                	jae    5159 <__TMC_END__+0x1141>
    50e4:	66 66 69 78 00 77 63 	data16 imul di,WORD PTR [rax+0x0],0x6377
    50eb:	68 61 72 5f 74       	push   0x745f7261
    50f0:	00 76 73             	add    BYTE PTR [rsi+0x73],dh
    50f3:	77 70                	ja     5165 <__TMC_END__+0x114d>
    50f5:	72 69                	jb     5160 <__TMC_END__+0x1148>
    50f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    50f8:	74 66                	je     5160 <__TMC_END__+0x1148>
    50fa:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    50fd:	4e 53                	rex.WRX push rbx
    50ff:	74 37                	je     5138 <__TMC_END__+0x1120>
    5101:	5f                   	pop    rdi
    5102:	5f                   	pop    rdi
    5103:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5106:	31 31                	xor    DWORD PTR [rcx],esi
    5108:	31 32                	xor    DWORD PTR [rdx],esi
    510a:	62 61 73 69 63       	(bad)
    510f:	5f                   	pop    rdi
    5110:	73 74                	jae    5186 <__TMC_END__+0x116e>
    5112:	72 69                	jb     517d <__TMC_END__+0x1165>
    5114:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5115:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    511a:	31 31                	xor    DWORD PTR [rcx],esi
    511c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    511f:	72 5f                	jb     5180 <__TMC_END__+0x1168>
    5121:	74 72                	je     5195 <__TMC_END__+0x117d>
    5123:	61                   	(bad)
    5124:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    512b:	61 
    512c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5130:	43 34 45             	rex.XB xor al,0x45
    5133:	52                   	push   rdx
    5134:	4b 53                	rex.WXB push r11
    5136:	34 5f                	xor    al,0x5f
    5138:	6d                   	ins    DWORD PTR es:[rdi],dx
    5139:	6d                   	ins    DWORD PTR es:[rdi],dx
    513a:	52                   	push   rdx
    513b:	4b 53                	rex.WXB push r11
    513d:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    5140:	5f                   	pop    rdi
    5141:	5a                   	pop    rdx
    5142:	4e 53                	rex.WRX push rbx
    5144:	74 37                	je     517d <__TMC_END__+0x1165>
    5146:	5f                   	pop    rdi
    5147:	5f                   	pop    rdi
    5148:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    514b:	31 31                	xor    DWORD PTR [rcx],esi
    514d:	31 32                	xor    DWORD PTR [rdx],esi
    514f:	62 61 73 69 63       	(bad)
    5154:	5f                   	pop    rdi
    5155:	73 74                	jae    51cb <__TMC_END__+0x11b3>
    5157:	72 69                	jb     51c2 <__TMC_END__+0x11aa>
    5159:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    515a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    515f:	31 31                	xor    DWORD PTR [rcx],esi
    5161:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5164:	72 5f                	jb     51c5 <__TMC_END__+0x11ad>
    5166:	74 72                	je     51da <__TMC_END__+0x11c2>
    5168:	61                   	(bad)
    5169:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5170:	61 
    5171:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5175:	31 33                	xor    DWORD PTR [rbx],esi
    5177:	5f                   	pop    rdi
    5178:	4d 5f                	rex.WRB pop r15
    517a:	6c                   	ins    BYTE PTR es:[rdi],dx
    517b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    517c:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    517f:	5f                   	pop    rdi
    5180:	64 61                	fs (bad)
    5182:	74 61                	je     51e5 <__TMC_END__+0x11cd>
    5184:	45 76 00             	rex.RB jbe 5187 <__TMC_END__+0x116f>
    5187:	5f                   	pop    rdi
    5188:	49                   	rex.WB
    5189:	4f 5f                	rex.WRXB pop r15
    518b:	72 65                	jb     51f2 <__TMC_END__+0x11da>
    518d:	61                   	(bad)
    518e:	64 5f                	fs pop rdi
    5190:	62 61 73 65 00       	(bad)
    5195:	74 6f                	je     5206 <__TMC_END__+0x11ee>
    5197:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5198:	5f                   	pop    rdi
    5199:	6d                   	ins    DWORD PTR es:[rdi],dx
    519a:	61                   	(bad)
    519b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    519c:	79 5f                	jns    51fd <__TMC_END__+0x11e5>
    519e:	73 79                	jae    5219 <__TMC_END__+0x1201>
    51a0:	6d                   	ins    DWORD PTR es:[rdi],dx
    51a1:	62 6f 6c 69 63       	(bad)
    51a6:	5f                   	pop    rdi
    51a7:	6c                   	ins    BYTE PTR es:[rdi],dx
    51a8:	69 6e 6b 5f 6c 65 76 	imul   ebp,DWORD PTR [rsi+0x6b],0x76656c5f
    51af:	65 6c                	gs ins BYTE PTR es:[rdi],dx
    51b1:	73 00                	jae    51b3 <__TMC_END__+0x119b>
    51b3:	77 63                	ja     5218 <__TMC_END__+0x1200>
    51b5:	73 63                	jae    521a <__TMC_END__+0x1202>
    51b7:	61                   	(bad)
    51b8:	74 00                	je     51ba <__TMC_END__+0x11a2>
    51ba:	72 65                	jb     5221 <__TMC_END__+0x1209>
    51bc:	73 69                	jae    5227 <__TMC_END__+0x120f>
    51be:	7a 65                	jp     5225 <__TMC_END__+0x120d>
    51c0:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    51c3:	4f 5f                	rex.WRXB pop r15
    51c5:	62 75 66 5f 65       	(bad)
    51ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    51cb:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    51cf:	4e                   	rex.WRX
    51d0:	4b 53                	rex.WXB push r11
    51d2:	74 37                	je     520b <__TMC_END__+0x11f3>
    51d4:	5f                   	pop    rdi
    51d5:	5f                   	pop    rdi
    51d6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    51d9:	31 31                	xor    DWORD PTR [rcx],esi
    51db:	31 32                	xor    DWORD PTR [rdx],esi
    51dd:	62 61 73 69 63       	(bad)
    51e2:	5f                   	pop    rdi
    51e3:	73 74                	jae    5259 <__TMC_END__+0x1241>
    51e5:	72 69                	jb     5250 <__TMC_END__+0x1238>
    51e7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    51e8:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    51ed:	31 31                	xor    DWORD PTR [rcx],esi
    51ef:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    51f2:	72 5f                	jb     5253 <__TMC_END__+0x123b>
    51f4:	74 72                	je     5268 <__TMC_END__+0x1250>
    51f6:	61                   	(bad)
    51f7:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    51fe:	61 
    51ff:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5203:	31 37                	xor    DWORD PTR [rdi],esi
    5205:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    520b:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
    5212:	74 5f                	je     5273 <__TMC_END__+0x125b>
    5214:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5215:	66 45 63 6d 00       	movsxd r13w,DWORD PTR [r13+0x0]
    521a:	5f                   	pop    rdi
    521b:	5f                   	pop    rdi
    521c:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    521f:	70 61                	jo     5282 <__TMC_END__+0x126a>
    5221:	72 65                	jb     5288 <__TMC_END__+0x1270>
    5223:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5226:	4e 53                	rex.WRX push rbx
    5228:	74 31                	je     525b <__TMC_END__+0x1243>
    522a:	37                   	(bad)
    522b:	62 61 73 69 63       	(bad)
    5230:	5f                   	pop    rdi
    5231:	73 74                	jae    52a7 <__TMC_END__+0x128f>
    5233:	72 69                	jb     529e <__TMC_END__+0x1286>
    5235:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5236:	67 5f                	addr32 pop rdi
    5238:	76 69                	jbe    52a3 <__TMC_END__+0x128b>
    523a:	65 77 49             	gs ja  5286 <__TMC_END__+0x126e>
    523d:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    5240:	31 31                	xor    DWORD PTR [rcx],esi
    5242:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5245:	72 5f                	jb     52a6 <__TMC_END__+0x128e>
    5247:	74 72                	je     52bb <__TMC_END__+0x12a3>
    5249:	61                   	(bad)
    524a:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    5251:	31 
    5252:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    5255:	5f                   	pop    rdi
    5256:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    5259:	70 61                	jo     52bc <__TMC_END__+0x12a4>
    525b:	72 65                	jb     52c2 <__TMC_END__+0x12aa>
    525d:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    525f:	6d                   	ins    DWORD PTR es:[rdi],dx
    5260:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5263:	4e                   	rex.WRX
    5264:	4b 53                	rex.WXB push r11
    5266:	74 31                	je     5299 <__TMC_END__+0x1281>
    5268:	37                   	(bad)
    5269:	62 61 73 69 63       	(bad)
    526e:	5f                   	pop    rdi
    526f:	73 74                	jae    52e5 <__TMC_END__+0x12cd>
    5271:	72 69                	jb     52dc <__TMC_END__+0x12c4>
    5273:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5274:	67 5f                	addr32 pop rdi
    5276:	76 69                	jbe    52e1 <__TMC_END__+0x12c9>
    5278:	65 77 49             	gs ja  52c4 <__TMC_END__+0x12ac>
    527b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    527e:	31 31                	xor    DWORD PTR [rcx],esi
    5280:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5283:	72 5f                	jb     52e4 <__TMC_END__+0x12cc>
    5285:	74 72                	je     52f9 <__TMC_END__+0x12e1>
    5287:	61                   	(bad)
    5288:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    528f:	31 
    5290:	33 66 69             	xor    esp,DWORD PTR [rsi+0x69]
    5293:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5294:	64 5f                	fs pop rdi
    5296:	66 69 72 73 74 5f    	imul   si,WORD PTR [rdx+0x73],0x5f74
    529c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    529d:	66 45 50             	rex.RB push r8w
    52a0:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    52a4:	5f                   	pop    rdi
    52a5:	5a                   	pop    rdx
    52a6:	4e                   	rex.WRX
    52a7:	4b 53                	rex.WXB push r11
    52a9:	74 37                	je     52e2 <__TMC_END__+0x12ca>
    52ab:	5f                   	pop    rdi
    52ac:	5f                   	pop    rdi
    52ad:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    52b0:	31 31                	xor    DWORD PTR [rcx],esi
    52b2:	31 32                	xor    DWORD PTR [rdx],esi
    52b4:	62 61 73 69 63       	(bad)
    52b9:	5f                   	pop    rdi
    52ba:	73 74                	jae    5330 <__TMC_END__+0x1318>
    52bc:	72 69                	jb     5327 <__TMC_END__+0x130f>
    52be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    52bf:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    52c4:	31 31                	xor    DWORD PTR [rcx],esi
    52c6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    52c9:	72 5f                	jb     532a <__TMC_END__+0x1312>
    52cb:	74 72                	je     533f <__TMC_END__+0x1327>
    52cd:	61                   	(bad)
    52ce:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    52d5:	61 
    52d6:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    52da:	38 5f 4d             	cmp    BYTE PTR [rdi+0x4d],bl
    52dd:	5f                   	pop    rdi
    52de:	63 68 65             	movsxd ebp,DWORD PTR [rax+0x65]
    52e1:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
    52e4:	6d                   	ins    DWORD PTR es:[rdi],dx
    52e5:	50                   	push   rax
    52e6:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    52e9:	5f                   	pop    rdi
    52ea:	5a                   	pop    rdx
    52eb:	4e                   	rex.WRX
    52ec:	4b 53                	rex.WXB push r11
    52ee:	74 31                	je     5321 <__TMC_END__+0x1309>
    52f0:	37                   	(bad)
    52f1:	62 61 73 69 63       	(bad)
    52f6:	5f                   	pop    rdi
    52f7:	73 74                	jae    536d <__TMC_END__+0x1355>
    52f9:	72 69                	jb     5364 <__TMC_END__+0x134c>
    52fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    52fc:	67 5f                	addr32 pop rdi
    52fe:	76 69                	jbe    5369 <__TMC_END__+0x1351>
    5300:	65 77 49             	gs ja  534c <__TMC_END__+0x1334>
    5303:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    5306:	31 31                	xor    DWORD PTR [rcx],esi
    5308:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    530b:	72 5f                	jb     536c <__TMC_END__+0x1354>
    530d:	74 72                	je     5381 <__TMC_END__+0x1369>
    530f:	61                   	(bad)
    5310:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    5317:	31 
    5318:	32 66 69             	xor    ah,BYTE PTR [rsi+0x69]
    531b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    531c:	64 5f                	fs pop rdi
    531e:	6c                   	ins    BYTE PTR es:[rdi],dx
    531f:	61                   	(bad)
    5320:	73 74                	jae    5396 <__TMC_END__+0x137e>
    5322:	5f                   	pop    rdi
    5323:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5324:	66 45 50             	rex.RB push r8w
    5327:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    532b:	5f                   	pop    rdi
    532c:	5a                   	pop    rdx
    532d:	4e                   	rex.WRX
    532e:	4b 53                	rex.WXB push r11
    5330:	74 37                	je     5369 <__TMC_END__+0x1351>
    5332:	5f                   	pop    rdi
    5333:	5f                   	pop    rdi
    5334:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5337:	31 31                	xor    DWORD PTR [rcx],esi
    5339:	31 32                	xor    DWORD PTR [rdx],esi
    533b:	62 61 73 69 63       	(bad)
    5340:	5f                   	pop    rdi
    5341:	73 74                	jae    53b7 <__TMC_END__+0x139f>
    5343:	72 69                	jb     53ae <__TMC_END__+0x1396>
    5345:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5346:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    534b:	31 31                	xor    DWORD PTR [rcx],esi
    534d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5350:	72 5f                	jb     53b1 <__TMC_END__+0x1399>
    5352:	74 72                	je     53c6 <__TMC_END__+0x13ae>
    5354:	61                   	(bad)
    5355:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    535c:	61 
    535d:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5361:	31 35 5f 4d 5f 63    	xor    DWORD PTR [rip+0x635f4d5f],esi        # 635fa0c6 <__TMC_END__+0x635f60ae>
    5367:	68 65 63 6b 5f       	push   0x5f6b6365
    536c:	6c                   	ins    BYTE PTR es:[rdi],dx
    536d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    536f:	67 74 68             	addr32 je 53da <__TMC_END__+0x13c2>
    5372:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    5374:	6d                   	ins    DWORD PTR es:[rdi],dx
    5375:	50                   	push   rax
    5376:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    5379:	69 6e 69 74 69 61 6c 	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
    5380:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    5387:	73 74                	jae    53fd <__TMC_END__+0x13e5>
    5389:	3c 63                	cmp    al,0x63
    538b:	68 61 72 3e 00       	push   0x3e7261
    5390:	5f                   	pop    rdi
    5391:	5a                   	pop    rdx
    5392:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    5396:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    5398:	75 5f                	jne    53f9 <__TMC_END__+0x13e1>
    539a:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    539d:	31 37                	xor    DWORD PTR [rdi],esi
    539f:	5f                   	pop    rdi
    53a0:	5f                   	pop    rdi
    53a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    53a2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    53a3:	72 6d                	jb     5412 <__TMC_END__+0x13fa>
    53a5:	61                   	(bad)
    53a6:	6c                   	ins    BYTE PTR es:[rdi],dx
    53a7:	5f                   	pop    rdi
    53a8:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    53af:	72 
    53b0:	49 50                	rex.WB push r8
    53b2:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    53b5:	74 37                	je     53ee <__TMC_END__+0x13d6>
    53b7:	5f                   	pop    rdi
    53b8:	5f                   	pop    rdi
    53b9:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    53bc:	31 31                	xor    DWORD PTR [rcx],esi
    53be:	31 32                	xor    DWORD PTR [rdx],esi
    53c0:	62 61 73 69 63       	(bad)
    53c5:	5f                   	pop    rdi
    53c6:	73 74                	jae    543c <__TMC_END__+0x1424>
    53c8:	72 69                	jb     5433 <__TMC_END__+0x141b>
    53ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    53cb:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    53d0:	31 31                	xor    DWORD PTR [rcx],esi
    53d2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    53d5:	72 5f                	jb     5436 <__TMC_END__+0x141e>
    53d7:	74 72                	je     544b <__TMC_END__+0x1433>
    53d9:	61                   	(bad)
    53da:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    53e1:	61 
    53e2:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    53e6:	45                   	rex.RB
    53e7:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    53e9:	49                   	rex.WB
    53ea:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    53ec:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    53ef:	4e 53                	rex.WRX push rbx
    53f1:	74 31                	je     5424 <__TMC_END__+0x140c>
    53f3:	37                   	(bad)
    53f4:	62 61 73 69 63       	(bad)
    53f9:	5f                   	pop    rdi
    53fa:	73 74                	jae    5470 <__TMC_END__+0x1458>
    53fc:	72 69                	jb     5467 <__TMC_END__+0x144f>
    53fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    53ff:	67 5f                	addr32 pop rdi
    5401:	76 69                	jbe    546c <__TMC_END__+0x1454>
    5403:	65 77 49             	gs ja  544f <__TMC_END__+0x1437>
    5406:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    5409:	31 31                	xor    DWORD PTR [rcx],esi
    540b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    540e:	72 5f                	jb     546f <__TMC_END__+0x1457>
    5410:	74 72                	je     5484 <__TMC_END__+0x146c>
    5412:	61                   	(bad)
    5413:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    541a:	34 
    541b:	73 77                	jae    5494 <__TMC_END__+0x147c>
    541d:	61                   	(bad)
    541e:	70 45                	jo     5465 <__TMC_END__+0x144d>
    5420:	52                   	push   rdx
    5421:	53                   	push   rbx
    5422:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    5425:	5f                   	pop    rdi
    5426:	5a                   	pop    rdx
    5427:	4e 53                	rex.WRX push rbx
    5429:	74 34                	je     545f <__TMC_END__+0x1447>
    542b:	70 61                	jo     548e <__TMC_END__+0x1476>
    542d:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    5434:	45 61                	rex.RB (bad)
    5436:	53                   	push   rbx
    5437:	45                   	rex.RB
    5438:	4f 53                	rex.WRXB push r11
    543a:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    543d:	63 6c 31 33          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x33]
    5441:	5f                   	pop    rdi
    5442:	53                   	push   rbx
    5443:	5f                   	pop    rdi
    5444:	61                   	(bad)
    5445:	73 73                	jae    54ba <__TMC_END__+0x14a2>
    5447:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    544e:	49 54                	rex.WB push r12
    5450:	5f                   	pop    rdi
    5451:	54                   	push   rsp
    5452:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    5455:	45 00 77 63          	add    BYTE PTR [r15+0x63],r14b
    5459:	73 72                	jae    54cd <__TMC_END__+0x14b5>
    545b:	74 6f                	je     54cc <__TMC_END__+0x14b4>
    545d:	6d                   	ins    DWORD PTR es:[rdi],dx
    545e:	62 73 00 5f 47       	(bad)
    5463:	5f                   	pop    rdi
    5464:	66 70 6f             	data16 jo 54d6 <__TMC_END__+0x14be>
    5467:	73 5f                	jae    54c8 <__TMC_END__+0x14b0>
    5469:	74 00                	je     546b <__TMC_END__+0x1453>
    546b:	5f                   	pop    rdi
    546c:	4d 5f                	rex.WRB pop r15
    546e:	65 72 61             	gs jb  54d2 <__TMC_END__+0x14ba>
    5471:	73 65                	jae    54d8 <__TMC_END__+0x14c0>
    5473:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5476:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    547a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    547c:	75 5f                	jne    54dd <__TMC_END__+0x14c5>
    547e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5481:	31 37                	xor    DWORD PTR [rdi],esi
    5483:	5f                   	pop    rdi
    5484:	5f                   	pop    rdi
    5485:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5486:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5487:	72 6d                	jb     54f6 <__TMC_END__+0x14de>
    5489:	61                   	(bad)
    548a:	6c                   	ins    BYTE PTR es:[rdi],dx
    548b:	5f                   	pop    rdi
    548c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    5493:	72 
    5494:	49 50                	rex.WB push r8
    5496:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    5499:	34 73                	xor    al,0x73
    549b:	70 61                	jo     54fe <__TMC_END__+0x14e6>
    549d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    549e:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    54a3:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    54a6:	36 37                	ss (bad)
    54a8:	34 34                	xor    al,0x34
    54aa:	30 37                	xor    BYTE PTR [rdi],dh
    54ac:	33 37                	xor    esi,DWORD PTR [rdi]
    54ae:	30 39                	xor    BYTE PTR [rcx],bh
    54b0:	35 35 31 36 31       	xor    eax,0x31363135
    54b5:	35 45 45 45 43       	xor    eax,0x43454545
    54ba:	34 45                	xor    al,0x45
    54bc:	76 00                	jbe    54be <__TMC_END__+0x14a6>
    54be:	77 6d                	ja     552d <__TMC_END__+0x1515>
    54c0:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    54c2:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    54c5:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    54c8:	73 63                	jae    552d <__TMC_END__+0x1515>
    54ca:	73 70                	jae    553c <__TMC_END__+0x1524>
    54cc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    54cd:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    54d0:	4e 53                	rex.WRX push rbx
    54d2:	74 31                	je     5505 <__TMC_END__+0x14ed>
    54d4:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    54d7:	61                   	(bad)
    54d8:	72 5f                	jb     5539 <__TMC_END__+0x1521>
    54da:	74 72                	je     554e <__TMC_END__+0x1536>
    54dc:	61                   	(bad)
    54dd:	69 74 73 49 63 45 34 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x6d344563
    54e4:	6d 
    54e5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    54e6:	76 65                	jbe    554d <__TMC_END__+0x1535>
    54e8:	45 50                	rex.RB push r8
    54ea:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
    54ed:	63 6d 00             	movsxd ebp,DWORD PTR [rbp+0x0]
    54f0:	5f                   	pop    rdi
    54f1:	5a                   	pop    rdx
    54f2:	4e 53                	rex.WRX push rbx
    54f4:	74 37                	je     552d <__TMC_END__+0x1515>
    54f6:	5f                   	pop    rdi
    54f7:	5f                   	pop    rdi
    54f8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    54fb:	31 31                	xor    DWORD PTR [rcx],esi
    54fd:	31 32                	xor    DWORD PTR [rdx],esi
    54ff:	62 61 73 69 63       	(bad)
    5504:	5f                   	pop    rdi
    5505:	73 74                	jae    557b <__TMC_END__+0x1563>
    5507:	72 69                	jb     5572 <__TMC_END__+0x155a>
    5509:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    550a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    550f:	31 31                	xor    DWORD PTR [rcx],esi
    5511:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5514:	72 5f                	jb     5575 <__TMC_END__+0x155d>
    5516:	74 72                	je     558a <__TMC_END__+0x1572>
    5518:	61                   	(bad)
    5519:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5520:	61 
    5521:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5525:	43 34 45             	rex.XB xor al,0x45
    5528:	44 6e                	rex.R outs dx,BYTE PTR ds:[rsi]
    552a:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    552d:	5f                   	pop    rdi
    552e:	72 65                	jb     5595 <__TMC_END__+0x157d>
    5530:	6c                   	ins    BYTE PTR es:[rdi],dx
    5531:	65 61                	gs (bad)
    5533:	73 65                	jae    559a <__TMC_END__+0x1582>
    5535:	00 5f 6d             	add    BYTE PTR [rdi+0x6d],bl
    5538:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5539:	64 65 00 69 6e       	fs add BYTE PTR gs:[rcx+0x6e],ch
    553e:	61                   	(bad)
    553f:	70 70                	jo     55b1 <__TMC_END__+0x1599>
    5541:	72 6f                	jb     55b2 <__TMC_END__+0x159a>
    5543:	70 72                	jo     55b7 <__TMC_END__+0x159f>
    5545:	69 61 74 65 5f 69 6f 	imul   esp,DWORD PTR [rcx+0x74],0x6f695f65
    554c:	5f                   	pop    rdi
    554d:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    5550:	74 72                	je     55c4 <__TMC_END__+0x15ac>
    5552:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5553:	6c                   	ins    BYTE PTR es:[rdi],dx
    5554:	5f                   	pop    rdi
    5555:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5556:	70 65                	jo     55bd <__TMC_END__+0x15a5>
    5558:	72 61                	jb     55bb <__TMC_END__+0x15a3>
    555a:	74 69                	je     55c5 <__TMC_END__+0x15ad>
    555c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    555d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    555e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5561:	4e 53                	rex.WRX push rbx
    5563:	74 37                	je     559c <__TMC_END__+0x1584>
    5565:	5f                   	pop    rdi
    5566:	5f                   	pop    rdi
    5567:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    556a:	31 31                	xor    DWORD PTR [rcx],esi
    556c:	31 32                	xor    DWORD PTR [rdx],esi
    556e:	62 61 73 69 63       	(bad)
    5573:	5f                   	pop    rdi
    5574:	73 74                	jae    55ea <__TMC_END__+0x15d2>
    5576:	72 69                	jb     55e1 <__TMC_END__+0x15c9>
    5578:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5579:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    557e:	31 31                	xor    DWORD PTR [rcx],esi
    5580:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5583:	72 5f                	jb     55e4 <__TMC_END__+0x15cc>
    5585:	74 72                	je     55f9 <__TMC_END__+0x15e1>
    5587:	61                   	(bad)
    5588:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    558f:	61 
    5590:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5594:	31 30                	xor    DWORD PTR [rax],esi
    5596:	5f                   	pop    rdi
    5597:	4d 5f                	rex.WRB pop r15
    5599:	72 65                	jb     5600 <__TMC_END__+0x15e8>
    559b:	70 6c                	jo     5609 <__TMC_END__+0x15f1>
    559d:	61                   	(bad)
    559e:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    55a1:	6d                   	ins    DWORD PTR es:[rdi],dx
    55a2:	6d                   	ins    DWORD PTR es:[rdi],dx
    55a3:	50                   	push   rax
    55a4:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    55a8:	5f                   	pop    rdi
    55a9:	49                   	rex.WB
    55aa:	4f 5f                	rex.WRXB pop r15
    55ac:	77 72                	ja     5620 <__TMC_END__+0x1608>
    55ae:	69 74 65 5f 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x5f],0x65736162
    55b5:	65 
    55b6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    55b9:	70 74                	jo     562f <__TMC_END__+0x1617>
    55bb:	72 3c                	jb     55f9 <__TMC_END__+0x15e1>
    55bd:	5f                   	pop    rdi
    55be:	5f                   	pop    rdi
    55bf:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    55c1:	75 5f                	jne    5622 <__TMC_END__+0x160a>
    55c3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    55c6:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    55c8:	5f                   	pop    rdi
    55c9:	5f                   	pop    rdi
    55ca:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    55cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    55cc:	72 6d                	jb     563b <__TMC_END__+0x1623>
    55ce:	61                   	(bad)
    55cf:	6c                   	ins    BYTE PTR es:[rdi],dx
    55d0:	5f                   	pop    rdi
    55d1:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    55d8:	72 
    55d9:	3c 63                	cmp    al,0x63
    55db:	68 61 72 2a 2c       	push   0x2c2a7261
    55e0:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    55e3:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    55e6:	73 70                	jae    5658 <__TMC_END__+0x1640>
    55e8:	61                   	(bad)
    55e9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    55ea:	3c 63                	cmp    al,0x63
    55ec:	68 61 72 2c 20       	push   0x202c7261
    55f1:	31 38                	xor    DWORD PTR [rax],edi
    55f3:	34 34                	xor    al,0x34
    55f5:	36 37                	ss (bad)
    55f7:	34 34                	xor    al,0x34
    55f9:	30 37                	xor    BYTE PTR [rdi],dh
    55fb:	33 37                	xor    esi,DWORD PTR [rdi]
    55fd:	30 39                	xor    BYTE PTR [rcx],bh
    55ff:	35 35 31 36 31       	xor    eax,0x31363135
    5604:	35 3e 20 3e 20       	xor    eax,0x203e203e
    5609:	3e 00 65 78          	ds add BYTE PTR [rbp+0x78],ah
    560d:	65 63 75 74          	movsxd esi,DWORD PTR gs:[rbp+0x74]
    5611:	61                   	(bad)
    5612:	62 6c 65 5f 66       	(bad)
    5617:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5618:	72 6d                	jb     5687 <__TMC_END__+0x166f>
    561a:	61                   	(bad)
    561b:	74 5f                	je     567c <__TMC_END__+0x1664>
    561d:	65 72 72             	gs jb  5692 <__TMC_END__+0x167a>
    5620:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5621:	72 00                	jb     5623 <__TMC_END__+0x160b>
    5623:	5f                   	pop    rdi
    5624:	5a                   	pop    rdx
    5625:	4e 53                	rex.WRX push rbx
    5627:	74 37                	je     5660 <__TMC_END__+0x1648>
    5629:	5f                   	pop    rdi
    562a:	5f                   	pop    rdi
    562b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    562e:	31 31                	xor    DWORD PTR [rcx],esi
    5630:	31 32                	xor    DWORD PTR [rdx],esi
    5632:	62 61 73 69 63       	(bad)
    5637:	5f                   	pop    rdi
    5638:	73 74                	jae    56ae <__TMC_END__+0x1696>
    563a:	72 69                	jb     56a5 <__TMC_END__+0x168d>
    563c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    563d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5642:	31 31                	xor    DWORD PTR [rcx],esi
    5644:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5647:	72 5f                	jb     56a8 <__TMC_END__+0x1690>
    5649:	74 72                	je     56bd <__TMC_END__+0x16a5>
    564b:	61                   	(bad)
    564c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5653:	61 
    5654:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5658:	37                   	(bad)
    5659:	72 65                	jb     56c0 <__TMC_END__+0x16a8>
    565b:	70 6c                	jo     56c9 <__TMC_END__+0x16b1>
    565d:	61                   	(bad)
    565e:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    5661:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    5665:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    5667:	75 5f                	jne    56c8 <__TMC_END__+0x16b0>
    5669:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    566c:	31 37                	xor    DWORD PTR [rdi],esi
    566e:	5f                   	pop    rdi
    566f:	5f                   	pop    rdi
    5670:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5671:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5672:	72 6d                	jb     56e1 <__TMC_END__+0x16c9>
    5674:	61                   	(bad)
    5675:	6c                   	ins    BYTE PTR es:[rdi],dx
    5676:	5f                   	pop    rdi
    5677:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    567e:	72 
    567f:	49 50                	rex.WB push r8
    5681:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    5685:	5f                   	pop    rdi
    5686:	45                   	rex.RB
    5687:	45 53                	rex.RB push r11
    5689:	39 5f 53             	cmp    DWORD PTR [rdi+0x53],ebx
    568c:	38 5f 00             	cmp    BYTE PTR [rdi+0x0],bl
    568f:	5f                   	pop    rdi
    5690:	5a                   	pop    rdx
    5691:	4e                   	rex.WRX
    5692:	4b 53                	rex.WXB push r11
    5694:	74 37                	je     56cd <__TMC_END__+0x16b5>
    5696:	5f                   	pop    rdi
    5697:	5f                   	pop    rdi
    5698:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    569b:	31 31                	xor    DWORD PTR [rcx],esi
    569d:	31 32                	xor    DWORD PTR [rdx],esi
    569f:	62 61 73 69 63       	(bad)
    56a4:	5f                   	pop    rdi
    56a5:	73 74                	jae    571b <__TMC_END__+0x1703>
    56a7:	72 69                	jb     5712 <__TMC_END__+0x16fa>
    56a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    56aa:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    56af:	31 31                	xor    DWORD PTR [rcx],esi
    56b1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    56b4:	72 5f                	jb     5715 <__TMC_END__+0x16fd>
    56b6:	74 72                	je     572a <__TMC_END__+0x1712>
    56b8:	61                   	(bad)
    56b9:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    56c0:	61 
    56c1:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    56c5:	31 33                	xor    DWORD PTR [rbx],esi
    56c7:	5f                   	pop    rdi
    56c8:	4d 5f                	rex.WRB pop r15
    56ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    56cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    56cc:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    56cf:	5f                   	pop    rdi
    56d0:	64 61                	fs (bad)
    56d2:	74 61                	je     5735 <__TMC_END__+0x171d>
    56d4:	45 76 00             	rex.RB jbe 56d7 <__TMC_END__+0x16bf>
    56d7:	5f                   	pop    rdi
    56d8:	4d 5f                	rex.WRB pop r15
    56da:	64 61                	fs (bad)
    56dc:	74 61                	je     573f <__TMC_END__+0x1727>
    56de:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    56e1:	77 63                	ja     5746 <__TMC_END__+0x172e>
    56e3:	68 00 5f 5a 4e       	push   0x4e5a5f00
    56e8:	53                   	push   rbx
    56e9:	74 38                	je     5723 <__TMC_END__+0x170b>
    56eb:	5f                   	pop    rdi
    56ec:	5f                   	pop    rdi
    56ed:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    56ef:	72 6d                	jb     575e <__TMC_END__+0x1746>
    56f1:	61                   	(bad)
    56f2:	74 31                	je     5725 <__TMC_END__+0x170d>
    56f4:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    56f7:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    56fe:	72 49                	jb     5749 <__TMC_END__+0x1731>
    5700:	63 45 61             	movsxd eax,DWORD PTR [rbp+0x61]
    5703:	53                   	push   rbx
    5704:	45 53                	rex.RB push r11
    5706:	74 31                	je     5739 <__TMC_END__+0x1721>
    5708:	37                   	(bad)
    5709:	62 61 73 69 63       	(bad)
    570e:	5f                   	pop    rdi
    570f:	73 74                	jae    5785 <__TMC_END__+0x176d>
    5711:	72 69                	jb     577c <__TMC_END__+0x1764>
    5713:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5714:	67 5f                	addr32 pop rdi
    5716:	76 69                	jbe    5781 <__TMC_END__+0x1769>
    5718:	65 77 49             	gs ja  5764 <__TMC_END__+0x174c>
    571b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    571e:	31 31                	xor    DWORD PTR [rcx],esi
    5720:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5723:	72 5f                	jb     5784 <__TMC_END__+0x176c>
    5725:	74 72                	je     5799 <__TMC_END__+0x1781>
    5727:	61                   	(bad)
    5728:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x454563
    572f:	00 
    5730:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5731:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5732:	74 5f                	je     5793 <__TMC_END__+0x177b>
    5734:	61                   	(bad)
    5735:	5f                   	pop    rdi
    5736:	73 6f                	jae    57a7 <__TMC_END__+0x178f>
    5738:	63 6b 65             	movsxd ebp,DWORD PTR [rbx+0x65]
    573b:	74 00                	je     573d <__TMC_END__+0x1725>
    573d:	5f                   	pop    rdi
    573e:	5a                   	pop    rdx
    573f:	4e                   	rex.WRX
    5740:	4b 53                	rex.WXB push r11
    5742:	74 37                	je     577b <__TMC_END__+0x1763>
    5744:	5f                   	pop    rdi
    5745:	5f                   	pop    rdi
    5746:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5749:	31 31                	xor    DWORD PTR [rcx],esi
    574b:	31 32                	xor    DWORD PTR [rdx],esi
    574d:	62 61 73 69 63       	(bad)
    5752:	5f                   	pop    rdi
    5753:	73 74                	jae    57c9 <__TMC_END__+0x17b1>
    5755:	72 69                	jb     57c0 <__TMC_END__+0x17a8>
    5757:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5758:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    575d:	31 31                	xor    DWORD PTR [rcx],esi
    575f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5762:	72 5f                	jb     57c3 <__TMC_END__+0x17ab>
    5764:	74 72                	je     57d8 <__TMC_END__+0x17c0>
    5766:	61                   	(bad)
    5767:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    576e:	61 
    576f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5773:	35 72 66 69 6e       	xor    eax,0x6e696672
    5778:	64 45 50             	fs rex.RB push r8
    577b:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    577f:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    5782:	5f                   	pop    rdi
    5783:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    5786:	73 74                	jae    57fc <__TMC_END__+0x17e4>
    5788:	72 75                	jb     57ff <__TMC_END__+0x17e7>
    578a:	63 74 00 63          	movsxd esi,DWORD PTR [rax+rax*1+0x63]
    578e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    5790:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    5794:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    5798:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    579a:	75 5f                	jne    57fb <__TMC_END__+0x17e3>
    579c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    579f:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
    57a2:	5f                   	pop    rdi
    57a3:	61                   	(bad)
    57a4:	6c                   	ins    BYTE PTR es:[rdi],dx
    57a5:	6c                   	ins    BYTE PTR es:[rdi],dx
    57a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    57a7:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
    57aa:	72 61                	jb     580d <__TMC_END__+0x17f5>
    57ac:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    57b3:	63 
    57b4:	45 63 45 31          	movsxd r8d,DWORD PTR [r13+0x31]
    57b8:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    57bb:	5f                   	pop    rdi
    57bc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    57bd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    57be:	5f                   	pop    rdi
    57bf:	73 77                	jae    5838 <__TMC_END__+0x1820>
    57c1:	61                   	(bad)
    57c2:	70 45                	jo     5809 <__TMC_END__+0x17f1>
    57c4:	52                   	push   rdx
    57c5:	53                   	push   rbx
    57c6:	31 5f 53             	xor    DWORD PTR [rdi+0x53],ebx
    57c9:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    57cc:	5f                   	pop    rdi
    57cd:	5a                   	pop    rdx
    57ce:	4e 53                	rex.WRX push rbx
    57d0:	74 37                	je     5809 <__TMC_END__+0x17f1>
    57d2:	5f                   	pop    rdi
    57d3:	5f                   	pop    rdi
    57d4:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    57d7:	31 31                	xor    DWORD PTR [rcx],esi
    57d9:	31 32                	xor    DWORD PTR [rdx],esi
    57db:	62 61 73 69 63       	(bad)
    57e0:	5f                   	pop    rdi
    57e1:	73 74                	jae    5857 <__TMC_END__+0x183f>
    57e3:	72 69                	jb     584e <__TMC_END__+0x1836>
    57e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    57e6:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    57eb:	31 31                	xor    DWORD PTR [rcx],esi
    57ed:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    57f0:	72 5f                	jb     5851 <__TMC_END__+0x1839>
    57f2:	74 72                	je     5866 <__TMC_END__+0x184e>
    57f4:	61                   	(bad)
    57f5:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    57fc:	61 
    57fd:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5801:	36 72 65             	ss jb  5869 <__TMC_END__+0x1851>
    5804:	73 69                	jae    586f <__TMC_END__+0x1857>
    5806:	7a 65                	jp     586d <__TMC_END__+0x1855>
    5808:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    580a:	63 00                	movsxd eax,DWORD PTR [rax]
    580c:	5f                   	pop    rdi
    580d:	5a                   	pop    rdx
    580e:	4e                   	rex.WRX
    580f:	4b 53                	rex.WXB push r11
    5811:	74 37                	je     584a <__TMC_END__+0x1832>
    5813:	5f                   	pop    rdi
    5814:	5f                   	pop    rdi
    5815:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5818:	31 31                	xor    DWORD PTR [rcx],esi
    581a:	31 32                	xor    DWORD PTR [rdx],esi
    581c:	62 61 73 69 63       	(bad)
    5821:	5f                   	pop    rdi
    5822:	73 74                	jae    5898 <__TMC_END__+0x1880>
    5824:	72 69                	jb     588f <__TMC_END__+0x1877>
    5826:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5827:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    582c:	31 31                	xor    DWORD PTR [rcx],esi
    582e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5831:	72 5f                	jb     5892 <__TMC_END__+0x187a>
    5833:	74 72                	je     58a7 <__TMC_END__+0x188f>
    5835:	61                   	(bad)
    5836:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    583d:	61 
    583e:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5842:	31 33                	xor    DWORD PTR [rbx],esi
    5844:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    584a:	69 72 73 74 5f 6f 66 	imul   esi,DWORD PTR [rdx+0x73],0x666f5f74
    5851:	45 52                	rex.RB push r10
    5853:	4b 53                	rex.WXB push r11
    5855:	34 5f                	xor    al,0x5f
    5857:	6d                   	ins    DWORD PTR es:[rdi],dx
    5858:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
    585b:	61                   	(bad)
    585c:	74 65                	je     58c3 <__TMC_END__+0x18ab>
    585e:	5f                   	pop    rdi
    585f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5860:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5861:	74 5f                	je     58c2 <__TMC_END__+0x18aa>
    5863:	72 65                	jb     58ca <__TMC_END__+0x18b2>
    5865:	63 6f 76             	movsxd ebp,DWORD PTR [rdi+0x76]
    5868:	65 72 61             	gs jb  58cc <__TMC_END__+0x18b4>
    586b:	62 6c 65 00 74       	(bad)
    5870:	6d                   	ins    DWORD PTR es:[rdi],dx
    5871:	5f                   	pop    rdi
    5872:	6d                   	ins    DWORD PTR es:[rdi],dx
    5873:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5874:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5875:	00 65 71             	add    BYTE PTR [rbp+0x71],ah
    5878:	5f                   	pop    rdi
    5879:	69 6e 74 5f 74 79 70 	imul   ebp,DWORD PTR [rsi+0x74],0x7079745f
    5880:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    5884:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    5888:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    588a:	75 5f                	jne    58eb <__TMC_END__+0x18d3>
    588c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    588f:	31 37                	xor    DWORD PTR [rdi],esi
    5891:	5f                   	pop    rdi
    5892:	5f                   	pop    rdi
    5893:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5894:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5895:	72 6d                	jb     5904 <__TMC_END__+0x18ec>
    5897:	61                   	(bad)
    5898:	6c                   	ins    BYTE PTR es:[rdi],dx
    5899:	5f                   	pop    rdi
    589a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    58a1:	72 
    58a2:	49 50                	rex.WB push r8
    58a4:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    58a7:	34 73                	xor    al,0x73
    58a9:	70 61                	jo     590c <__TMC_END__+0x18f4>
    58ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    58ac:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    58b1:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    58b4:	36 37                	ss (bad)
    58b6:	34 34                	xor    al,0x34
    58b8:	30 37                	xor    BYTE PTR [rdi],dh
    58ba:	33 37                	xor    esi,DWORD PTR [rdi]
    58bc:	30 39                	xor    BYTE PTR [rcx],bh
    58be:	35 35 31 36 31       	xor    eax,0x31363135
    58c3:	35 45 45 45 70       	xor    eax,0x70454545
    58c8:	4c                   	rex.WR
    58c9:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    58cb:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    58ce:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    58d5:	73 74                	jae    594b <__TMC_END__+0x1933>
    58d7:	72 74                	jb     594d <__TMC_END__+0x1935>
    58d9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    58da:	75 6c                	jne    5948 <__TMC_END__+0x1930>
    58dc:	6c                   	ins    BYTE PTR es:[rdi],dx
    58dd:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    58e0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    58e1:	74 70                	je     5953 <__TMC_END__+0x193b>
    58e3:	74 72                	je     5957 <__TMC_END__+0x193f>
    58e5:	5f                   	pop    rdi
    58e6:	74 00                	je     58e8 <__TMC_END__+0x18d0>
    58e8:	5f                   	pop    rdi
    58e9:	5f                   	pop    rdi
    58ea:	63 78 61             	movsxd edi,DWORD PTR [rax+0x61]
    58ed:	5f                   	pop    rdi
    58ee:	65 78 63             	gs js  5954 <__TMC_END__+0x193c>
    58f1:	65 70 74             	gs jo  5968 <__TMC_END__+0x1950>
    58f4:	69 6f 6e 5f 74 79 70 	imul   ebp,DWORD PTR [rdi+0x6e],0x7079745f
    58fb:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    58ff:	4e 53                	rex.WRX push rbx
    5901:	74 37                	je     593a <__TMC_END__+0x1922>
    5903:	5f                   	pop    rdi
    5904:	5f                   	pop    rdi
    5905:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5908:	31 31                	xor    DWORD PTR [rcx],esi
    590a:	31 32                	xor    DWORD PTR [rdx],esi
    590c:	62 61 73 69 63       	(bad)
    5911:	5f                   	pop    rdi
    5912:	73 74                	jae    5988 <__TMC_END__+0x1970>
    5914:	72 69                	jb     597f <__TMC_END__+0x1967>
    5916:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5917:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    591c:	31 31                	xor    DWORD PTR [rcx],esi
    591e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5921:	72 5f                	jb     5982 <__TMC_END__+0x196a>
    5923:	74 72                	je     5997 <__TMC_END__+0x197f>
    5925:	61                   	(bad)
    5926:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    592d:	61 
    592e:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5932:	31 31                	xor    DWORD PTR [rcx],esi
    5934:	5f                   	pop    rdi
    5935:	53                   	push   rbx
    5936:	5f                   	pop    rdi
    5937:	61                   	(bad)
    5938:	6c                   	ins    BYTE PTR es:[rdi],dx
    5939:	6c                   	ins    BYTE PTR es:[rdi],dx
    593a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    593b:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    593e:	65 45 52             	gs rex.RB push r10
    5941:	53                   	push   rbx
    5942:	33 5f 6d             	xor    ebx,DWORD PTR [rdi+0x6d]
    5945:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    5948:	65 72 61             	gs jb  59ac <__TMC_END__+0x1994>
    594b:	74 69                	je     59b6 <__TMC_END__+0x199e>
    594d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    594e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    594f:	5f                   	pop    rdi
    5950:	69 6e 5f 70 72 6f 67 	imul   ebp,DWORD PTR [rsi+0x5f],0x676f7270
    5957:	72 65                	jb     59be <__TMC_END__+0x19a6>
    5959:	73 73                	jae    59ce <__TMC_END__+0x19b6>
    595b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    595e:	4e 53                	rex.WRX push rbx
    5960:	74 34                	je     5996 <__TMC_END__+0x197e>
    5962:	70 61                	jo     59c5 <__TMC_END__+0x19ad>
    5964:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    596b:	45 61                	rex.RB (bad)
    596d:	53                   	push   rbx
    596e:	45 52                	rex.RB push r10
    5970:	4b 53                	rex.WXB push r11
    5972:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    5975:	66 67 65 74 70       	data16 addr32 gs je 59ea <__TMC_END__+0x19d2>
    597a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    597b:	73 00                	jae    597d <__TMC_END__+0x1965>
    597d:	73 65                	jae    59e4 <__TMC_END__+0x19cc>
    597f:	6c                   	ins    BYTE PTR es:[rdi],dx
    5980:	65 63 74 5f 6f       	movsxd esi,DWORD PTR gs:[rdi+rbx*2+0x6f]
    5985:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5986:	5f                   	pop    rdi
    5987:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    598a:	74 61                	je     59ed <__TMC_END__+0x19d5>
    598c:	69 6e 65 72 5f 63 6f 	imul   ebp,DWORD PTR [rsi+0x65],0x6f635f72
    5993:	70 79                	jo     5a0e <__TMC_END__+0x19f6>
    5995:	5f                   	pop    rdi
    5996:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    5999:	73 74                	jae    5a0f <__TMC_END__+0x19f7>
    599b:	72 75                	jb     5a12 <__TMC_END__+0x19fa>
    599d:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    59a1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    59a2:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    59a5:	4e 53                	rex.WRX push rbx
    59a7:	74 34                	je     59dd <__TMC_END__+0x19c5>
    59a9:	70 61                	jo     5a0c <__TMC_END__+0x19f4>
    59ab:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    59b2:	45 61                	rex.RB (bad)
    59b4:	53                   	push   rbx
    59b5:	45                   	rex.RB
    59b6:	4f 53                	rex.WRXB push r11
    59b8:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    59bb:	63 6c 31 33          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x33]
    59bf:	5f                   	pop    rdi
    59c0:	53                   	push   rbx
    59c1:	5f                   	pop    rdi
    59c2:	61                   	(bad)
    59c3:	73 73                	jae    5a38 <__TMC_END__+0x1a20>
    59c5:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    59cc:	49 54                	rex.WB push r12
    59ce:	5f                   	pop    rdi
    59cf:	54                   	push   rsp
    59d0:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    59d3:	45 00 76 77          	add    BYTE PTR [r14+0x77],r14b
    59d7:	70 72                	jo     5a4b <__TMC_END__+0x1a33>
    59d9:	69 6e 74 66 00 5f 5a 	imul   ebp,DWORD PTR [rsi+0x74],0x5a5f0066
    59e0:	4e 53                	rex.WRX push rbx
    59e2:	74 37                	je     5a1b <__TMC_END__+0x1a03>
    59e4:	5f                   	pop    rdi
    59e5:	5f                   	pop    rdi
    59e6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    59e9:	31 31                	xor    DWORD PTR [rcx],esi
    59eb:	31 32                	xor    DWORD PTR [rdx],esi
    59ed:	62 61 73 69 63       	(bad)
    59f2:	5f                   	pop    rdi
    59f3:	73 74                	jae    5a69 <__TMC_END__+0x1a51>
    59f5:	72 69                	jb     5a60 <__TMC_END__+0x1a48>
    59f7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    59f8:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    59fd:	31 31                	xor    DWORD PTR [rcx],esi
    59ff:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5a02:	72 5f                	jb     5a63 <__TMC_END__+0x1a4b>
    5a04:	74 72                	je     5a78 <__TMC_END__+0x1a60>
    5a06:	61                   	(bad)
    5a07:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5a0e:	61 
    5a0f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5a13:	31 37                	xor    DWORD PTR [rdi],esi
    5a15:	5f                   	pop    rdi
    5a16:	53                   	push   rbx
    5a17:	5f                   	pop    rdi
    5a18:	74 6f                	je     5a89 <__TMC_END__+0x1a71>
    5a1a:	5f                   	pop    rdi
    5a1b:	73 74                	jae    5a91 <__TMC_END__+0x1a79>
    5a1d:	72 69                	jb     5a88 <__TMC_END__+0x1a70>
    5a1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5a20:	67 5f                	addr32 pop rdi
    5a22:	76 69                	jbe    5a8d <__TMC_END__+0x1a75>
    5a24:	65 77 45             	gs ja  5a6c <__TMC_END__+0x1a54>
    5a27:	53                   	push   rbx
    5a28:	74 31                	je     5a5b <__TMC_END__+0x1a43>
    5a2a:	37                   	(bad)
    5a2b:	62 61 73 69 63       	(bad)
    5a30:	5f                   	pop    rdi
    5a31:	73 74                	jae    5aa7 <__TMC_END__+0x1a8f>
    5a33:	72 69                	jb     5a9e <__TMC_END__+0x1a86>
    5a35:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5a36:	67 5f                	addr32 pop rdi
    5a38:	76 69                	jbe    5aa3 <__TMC_END__+0x1a8b>
    5a3a:	65 77 49             	gs ja  5a86 <__TMC_END__+0x1a6e>
    5a3d:	63 53 32             	movsxd edx,DWORD PTR [rbx+0x32]
    5a40:	5f                   	pop    rdi
    5a41:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    5a45:	4e                   	rex.WRX
    5a46:	4b 53                	rex.WXB push r11
    5a48:	74 34                	je     5a7e <__TMC_END__+0x1a66>
    5a4a:	70 61                	jo     5aad <__TMC_END__+0x1a95>
    5a4c:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    5a53:	45 34 73             	rex.RB xor al,0x73
    5a56:	77 61                	ja     5ab9 <__TMC_END__+0x1aa1>
    5a58:	70 45                	jo     5a9f <__TMC_END__+0x1a87>
    5a5a:	52                   	push   rdx
    5a5b:	4b 53                	rex.WXB push r11
    5a5d:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    5a60:	61                   	(bad)
    5a61:	61                   	(bad)
    5a62:	31 34 69             	xor    DWORD PTR [rcx+rbp*2],esi
    5a65:	73 5f                	jae    5ac6 <__TMC_END__+0x1aae>
    5a67:	73 77                	jae    5ae0 <__TMC_END__+0x1ac8>
    5a69:	61                   	(bad)
    5a6a:	70 70                	jo     5adc <__TMC_END__+0x1ac4>
    5a6c:	61                   	(bad)
    5a6d:	62 6c 65 5f 76       	(bad)
    5a72:	49                   	rex.WB
    5a73:	4b 54                	rex.WXB push r12
    5a75:	5f                   	pop    rdi
    5a76:	45 31 34 69          	xor    DWORD PTR [r9+rbp*2],r14d
    5a7a:	73 5f                	jae    5adb <__TMC_END__+0x1ac3>
    5a7c:	73 77                	jae    5af5 <__TMC_END__+0x1add>
    5a7e:	61                   	(bad)
    5a7f:	70 70                	jo     5af1 <__TMC_END__+0x1ad9>
    5a81:	61                   	(bad)
    5a82:	62 6c 65 5f 76       	(bad)
    5a87:	49                   	rex.WB
    5a88:	4b 54                	rex.WXB push r12
    5a8a:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    5a8d:	00 74 6f 5f          	add    BYTE PTR [rdi+rbp*2+0x5f],dh
    5a91:	69 6e 74 5f 74 79 70 	imul   ebp,DWORD PTR [rsi+0x74],0x7079745f
    5a98:	65 00 5f 49          	add    BYTE PTR gs:[rdi+0x49],bl
    5a9c:	4f 5f                	rex.WRXB pop r15
    5a9e:	6d                   	ins    DWORD PTR es:[rdi],dx
    5a9f:	61                   	(bad)
    5aa0:	72 6b                	jb     5b0d <__TMC_END__+0x1af5>
    5aa2:	65 72 00             	gs jb  5aa5 <__TMC_END__+0x1a8d>
    5aa5:	5f                   	pop    rdi
    5aa6:	70 72                	jo     5b1a <__TMC_END__+0x1b02>
    5aa8:	65 76 63             	gs jbe 5b0e <__TMC_END__+0x1af6>
    5aab:	68 61 69 6e 00       	push   0x6e6961
    5ab0:	5f                   	pop    rdi
    5ab1:	5a                   	pop    rdx
    5ab2:	4e 53                	rex.WRX push rbx
    5ab4:	74 31                	je     5ae7 <__TMC_END__+0x1acf>
    5ab6:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    5abb:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    5abe:	74 69                	je     5b29 <__TMC_END__+0x1b11>
    5ac0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5ac1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5ac2:	5f                   	pop    rdi
    5ac3:	70 74                	jo     5b39 <__TMC_END__+0x1b21>
    5ac5:	72 31                	jb     5af8 <__TMC_END__+0x1ae0>
    5ac7:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    5aca:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    5acd:	74 69                	je     5b38 <__TMC_END__+0x1b20>
    5acf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5ad0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5ad1:	5f                   	pop    rdi
    5ad2:	70 74                	jo     5b48 <__TMC_END__+0x1b30>
    5ad4:	72 43                	jb     5b19 <__TMC_END__+0x1b01>
    5ad6:	34 45                	xor    al,0x45
    5ad8:	50                   	push   rax
    5ad9:	76 00                	jbe    5adb <__TMC_END__+0x1ac3>
    5adb:	70 72                	jo     5b4f <__TMC_END__+0x1b37>
    5add:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5ade:	74 6f                	je     5b4f <__TMC_END__+0x1b37>
    5ae0:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    5ae3:	5f                   	pop    rdi
    5ae4:	65 72 72             	gs jb  5b59 <__TMC_END__+0x1b41>
    5ae7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5ae8:	72 00                	jb     5aea <__TMC_END__+0x1ad2>
    5aea:	74 6d                	je     5b59 <__TMC_END__+0x1b41>
    5aec:	5f                   	pop    rdi
    5aed:	79 65                	jns    5b54 <__TMC_END__+0x1b3c>
    5aef:	61                   	(bad)
    5af0:	72 00                	jb     5af2 <__TMC_END__+0x1ada>
    5af2:	61                   	(bad)
    5af3:	6c                   	ins    BYTE PTR es:[rdi],dx
    5af4:	6c                   	ins    BYTE PTR es:[rdi],dx
    5af5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5af6:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    5af9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5afa:	72 5f                	jb     5b5b <__TMC_END__+0x1b43>
    5afc:	74 72                	je     5b70 <__TMC_END__+0x1b58>
    5afe:	61                   	(bad)
    5aff:	69 74 73 3c 73 74 64 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x3a647473
    5b06:	3a 
    5b07:	3a 61 6c             	cmp    ah,BYTE PTR [rcx+0x6c]
    5b0a:	6c                   	ins    BYTE PTR es:[rdi],dx
    5b0b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5b0c:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    5b0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5b10:	72 3c                	jb     5b4e <__TMC_END__+0x1b36>
    5b12:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5b15:	72 3e                	jb     5b55 <__TMC_END__+0x1b3d>
    5b17:	20 3e                	and    BYTE PTR [rsi],bh
    5b19:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    5b1c:	75 69                	jne    5b87 <__TMC_END__+0x1b6f>
    5b1e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5b1f:	74 5f                	je     5b80 <__TMC_END__+0x1b68>
    5b21:	6c                   	ins    BYTE PTR es:[rdi],dx
    5b22:	65 61                	gs (bad)
    5b24:	73 74                	jae    5b9a <__TMC_END__+0x1b82>
    5b26:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    5b29:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5b2c:	53                   	push   rbx
    5b2d:	74 38                	je     5b67 <__TMC_END__+0x1b4f>
    5b2f:	74 6f                	je     5ba0 <__TMC_END__+0x1b88>
    5b31:	5f                   	pop    rdi
    5b32:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5b35:	72 73                	jb     5baa <__TMC_END__+0x1b92>
    5b37:	50                   	push   rax
    5b38:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    5b3b:	61                   	(bad)
    5b3c:	69 00 5f 5a 4e 4b    	imul   eax,DWORD PTR [rax],0x4b4e5a5f
    5b42:	53                   	push   rbx
    5b43:	74 37                	je     5b7c <__TMC_END__+0x1b64>
    5b45:	5f                   	pop    rdi
    5b46:	5f                   	pop    rdi
    5b47:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5b4a:	31 31                	xor    DWORD PTR [rcx],esi
    5b4c:	31 32                	xor    DWORD PTR [rdx],esi
    5b4e:	62 61 73 69 63       	(bad)
    5b53:	5f                   	pop    rdi
    5b54:	73 74                	jae    5bca <__TMC_END__+0x1bb2>
    5b56:	72 69                	jb     5bc1 <__TMC_END__+0x1ba9>
    5b58:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5b59:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5b5e:	31 31                	xor    DWORD PTR [rcx],esi
    5b60:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5b63:	72 5f                	jb     5bc4 <__TMC_END__+0x1bac>
    5b65:	74 72                	je     5bd9 <__TMC_END__+0x1bc1>
    5b67:	61                   	(bad)
    5b68:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5b6f:	61 
    5b70:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5b74:	35 65 6d 70 74       	xor    eax,0x74706d65
    5b79:	79 45                	jns    5bc0 <__TMC_END__+0x1ba8>
    5b7b:	76 00                	jbe    5b7d <__TMC_END__+0x1b65>
    5b7d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5b7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5b7f:	5f                   	pop    rdi
    5b80:	6d                   	ins    DWORD PTR es:[rdi],dx
    5b81:	65 73 73             	gs jae 5bf7 <__TMC_END__+0x1bdf>
    5b84:	61                   	(bad)
    5b85:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    5b8a:	4e                   	rex.WRX
    5b8b:	4b 53                	rex.WXB push r11
    5b8d:	74 37                	je     5bc6 <__TMC_END__+0x1bae>
    5b8f:	5f                   	pop    rdi
    5b90:	5f                   	pop    rdi
    5b91:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5b94:	31 31                	xor    DWORD PTR [rcx],esi
    5b96:	31 32                	xor    DWORD PTR [rdx],esi
    5b98:	62 61 73 69 63       	(bad)
    5b9d:	5f                   	pop    rdi
    5b9e:	73 74                	jae    5c14 <__TMC_END__+0x1bfc>
    5ba0:	72 69                	jb     5c0b <__TMC_END__+0x1bf3>
    5ba2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5ba3:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5ba8:	31 31                	xor    DWORD PTR [rcx],esi
    5baa:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5bad:	72 5f                	jb     5c0e <__TMC_END__+0x1bf6>
    5baf:	74 72                	je     5c23 <__TMC_END__+0x1c0b>
    5bb1:	61                   	(bad)
    5bb2:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5bb9:	61 
    5bba:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5bbe:	31 33                	xor    DWORD PTR [rbx],esi
    5bc0:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    5bc6:	69 72 73 74 5f 6f 66 	imul   esi,DWORD PTR [rdx+0x73],0x666f5f74
    5bcd:	45 50                	rex.RB push r8
    5bcf:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    5bd3:	5f                   	pop    rdi
    5bd4:	5a                   	pop    rdx
    5bd5:	4e 53                	rex.WRX push rbx
    5bd7:	74 37                	je     5c10 <__TMC_END__+0x1bf8>
    5bd9:	5f                   	pop    rdi
    5bda:	5f                   	pop    rdi
    5bdb:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5bde:	31 31                	xor    DWORD PTR [rcx],esi
    5be0:	31 32                	xor    DWORD PTR [rdx],esi
    5be2:	62 61 73 69 63       	(bad)
    5be7:	5f                   	pop    rdi
    5be8:	73 74                	jae    5c5e <__TMC_END__+0x1c46>
    5bea:	72 69                	jb     5c55 <__TMC_END__+0x1c3d>
    5bec:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5bed:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5bf2:	31 31                	xor    DWORD PTR [rcx],esi
    5bf4:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5bf7:	72 5f                	jb     5c58 <__TMC_END__+0x1c40>
    5bf9:	74 72                	je     5c6d <__TMC_END__+0x1c55>
    5bfb:	61                   	(bad)
    5bfc:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5c03:	61 
    5c04:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5c08:	34 64                	xor    al,0x64
    5c0a:	61                   	(bad)
    5c0b:	74 61                	je     5c6e <__TMC_END__+0x1c56>
    5c0d:	45 76 00             	rex.RB jbe 5c10 <__TMC_END__+0x1bf8>
    5c10:	5f                   	pop    rdi
    5c11:	5a                   	pop    rdx
    5c12:	4e                   	rex.WRX
    5c13:	4b 53                	rex.WXB push r11
    5c15:	74 31                	je     5c48 <__TMC_END__+0x1c30>
    5c17:	37                   	(bad)
    5c18:	62 61 73 69 63       	(bad)
    5c1d:	5f                   	pop    rdi
    5c1e:	73 74                	jae    5c94 <__TMC_END__+0x1c7c>
    5c20:	72 69                	jb     5c8b <__TMC_END__+0x1c73>
    5c22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5c23:	67 5f                	addr32 pop rdi
    5c25:	76 69                	jbe    5c90 <__TMC_END__+0x1c78>
    5c27:	65 77 49             	gs ja  5c73 <__TMC_END__+0x1c5b>
    5c2a:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    5c2d:	31 31                	xor    DWORD PTR [rcx],esi
    5c2f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5c32:	72 5f                	jb     5c93 <__TMC_END__+0x1c7b>
    5c34:	74 72                	je     5ca8 <__TMC_END__+0x1c90>
    5c36:	61                   	(bad)
    5c37:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x37454563
    5c3e:	37 
    5c3f:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    5c42:	70 61                	jo     5ca5 <__TMC_END__+0x1c8d>
    5c44:	72 65                	jb     5cab <__TMC_END__+0x1c93>
    5c46:	45 53                	rex.RB push r11
    5c48:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    5c4b:	5f                   	pop    rdi
    5c4c:	5a                   	pop    rdx
    5c4d:	4e                   	rex.WRX
    5c4e:	4b 53                	rex.WXB push r11
    5c50:	74 31                	je     5c83 <__TMC_END__+0x1c6b>
    5c52:	37                   	(bad)
    5c53:	62 61 73 69 63       	(bad)
    5c58:	5f                   	pop    rdi
    5c59:	73 74                	jae    5ccf <__TMC_END__+0x1cb7>
    5c5b:	72 69                	jb     5cc6 <__TMC_END__+0x1cae>
    5c5d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5c5e:	67 5f                	addr32 pop rdi
    5c60:	76 69                	jbe    5ccb <__TMC_END__+0x1cb3>
    5c62:	65 77 49             	gs ja  5cae <__TMC_END__+0x1c96>
    5c65:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    5c68:	31 31                	xor    DWORD PTR [rcx],esi
    5c6a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5c6d:	72 5f                	jb     5cce <__TMC_END__+0x1cb6>
    5c6f:	74 72                	je     5ce3 <__TMC_END__+0x1ccb>
    5c71:	61                   	(bad)
    5c72:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    5c79:	31 
    5c7a:	36 66 69 6e 64 5f 6c 	ss imul bp,WORD PTR [rsi+0x64],0x6c5f
    5c81:	61                   	(bad)
    5c82:	73 74                	jae    5cf8 <__TMC_END__+0x1ce0>
    5c84:	5f                   	pop    rdi
    5c85:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5c86:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5c87:	74 5f                	je     5ce8 <__TMC_END__+0x1cd0>
    5c89:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5c8a:	66 45 50             	rex.RB push r8w
    5c8d:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    5c91:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5c94:	4e                   	rex.WRX
    5c95:	4b 53                	rex.WXB push r11
    5c97:	74 34                	je     5ccd <__TMC_END__+0x1cb5>
    5c99:	73 70                	jae    5d0b <__TMC_END__+0x1cf3>
    5c9b:	61                   	(bad)
    5c9c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5c9d:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    5ca2:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    5ca5:	36 37                	ss (bad)
    5ca7:	34 34                	xor    al,0x34
    5ca9:	30 37                	xor    BYTE PTR [rdi],dh
    5cab:	33 37                	xor    esi,DWORD PTR [rdi]
    5cad:	30 39                	xor    BYTE PTR [rcx],bh
    5caf:	35 35 31 36 31       	xor    eax,0x31363135
    5cb4:	35 45 45 36 72       	xor    eax,0x72364545
    5cb9:	62 65 67 69 6e       	(bad)
    5cbe:	45 76 00             	rex.RB jbe 5cc1 <__TMC_END__+0x1ca9>
    5cc1:	5f                   	pop    rdi
    5cc2:	5a                   	pop    rdx
    5cc3:	4e                   	rex.WRX
    5cc4:	4b 53                	rex.WXB push r11
    5cc6:	74 37                	je     5cff <__TMC_END__+0x1ce7>
    5cc8:	5f                   	pop    rdi
    5cc9:	5f                   	pop    rdi
    5cca:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5ccd:	31 31                	xor    DWORD PTR [rcx],esi
    5ccf:	31 32                	xor    DWORD PTR [rdx],esi
    5cd1:	62 61 73 69 63       	(bad)
    5cd6:	5f                   	pop    rdi
    5cd7:	73 74                	jae    5d4d <__TMC_END__+0x1d35>
    5cd9:	72 69                	jb     5d44 <__TMC_END__+0x1d2c>
    5cdb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5cdc:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5ce1:	31 31                	xor    DWORD PTR [rcx],esi
    5ce3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5ce6:	72 5f                	jb     5d47 <__TMC_END__+0x1d2f>
    5ce8:	74 72                	je     5d5c <__TMC_END__+0x1d44>
    5cea:	61                   	(bad)
    5ceb:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5cf2:	61 
    5cf3:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5cf7:	35 63 72 65 6e       	xor    eax,0x6e657263
    5cfc:	64 45 76 00          	fs rex.RB jbe 5d00 <__TMC_END__+0x1ce8>
    5d00:	61                   	(bad)
    5d01:	74 6f                	je     5d72 <__TMC_END__+0x1d5a>
    5d03:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    5d07:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    5d0b:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    5d0d:	75 5f                	jne    5d6e <__TMC_END__+0x1d56>
    5d0f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5d12:	31 37                	xor    DWORD PTR [rdi],esi
    5d14:	5f                   	pop    rdi
    5d15:	5f                   	pop    rdi
    5d16:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5d17:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5d18:	72 6d                	jb     5d87 <__TMC_END__+0x1d6f>
    5d1a:	61                   	(bad)
    5d1b:	6c                   	ins    BYTE PTR es:[rdi],dx
    5d1c:	5f                   	pop    rdi
    5d1d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    5d24:	72 
    5d25:	49 50                	rex.WB push r8
    5d27:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    5d2a:	74 37                	je     5d63 <__TMC_END__+0x1d4b>
    5d2c:	5f                   	pop    rdi
    5d2d:	5f                   	pop    rdi
    5d2e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5d31:	31 31                	xor    DWORD PTR [rcx],esi
    5d33:	31 32                	xor    DWORD PTR [rdx],esi
    5d35:	62 61 73 69 63       	(bad)
    5d3a:	5f                   	pop    rdi
    5d3b:	73 74                	jae    5db1 <__TMC_END__+0x1d99>
    5d3d:	72 69                	jb     5da8 <__TMC_END__+0x1d90>
    5d3f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5d40:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5d45:	31 31                	xor    DWORD PTR [rcx],esi
    5d47:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5d4a:	72 5f                	jb     5dab <__TMC_END__+0x1d93>
    5d4c:	74 72                	je     5dc0 <__TMC_END__+0x1da8>
    5d4e:	61                   	(bad)
    5d4f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5d56:	61 
    5d57:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5d5b:	45                   	rex.RB
    5d5c:	45 70 70             	rex.RB jo 5dcf <__TMC_END__+0x1db7>
    5d5f:	45 76 00             	rex.RB jbe 5d62 <__TMC_END__+0x1d4a>
    5d62:	61                   	(bad)
    5d63:	64 64 72 65          	fs fs jb 5dcc <__TMC_END__+0x1db4>
    5d67:	73 73                	jae    5ddc <__TMC_END__+0x1dc4>
    5d69:	5f                   	pop    rdi
    5d6a:	66 61                	data16 (bad)
    5d6c:	6d                   	ins    DWORD PTR es:[rdi],dx
    5d6d:	69 6c 79 5f 6e 6f 74 	imul   ebp,DWORD PTR [rcx+rdi*2+0x5f],0x5f746f6e
    5d74:	5f 
    5d75:	73 75                	jae    5dec <__TMC_END__+0x1dd4>
    5d77:	70 70                	jo     5de9 <__TMC_END__+0x1dd1>
    5d79:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5d7a:	72 74                	jb     5df0 <__TMC_END__+0x1dd8>
    5d7c:	65 64 00 5f 4d       	gs add BYTE PTR fs:[rdi+0x4d],bl
    5d81:	5f                   	pop    rdi
    5d82:	70 74                	jo     5df8 <__TMC_END__+0x1de0>
    5d84:	72 00                	jb     5d86 <__TMC_END__+0x1d6e>
    5d86:	5f                   	pop    rdi
    5d87:	5a                   	pop    rdx
    5d88:	4e 53                	rex.WRX push rbx
    5d8a:	74 34                	je     5dc0 <__TMC_END__+0x1da8>
    5d8c:	70 61                	jo     5def <__TMC_END__+0x1dd7>
    5d8e:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    5d95:	45 34 73             	rex.RB xor al,0x73
    5d98:	77 61                	ja     5dfb <__TMC_END__+0x1de3>
    5d9a:	70 45                	jo     5de1 <__TMC_END__+0x1dc9>
    5d9c:	52                   	push   rdx
    5d9d:	53                   	push   rbx
    5d9e:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    5da1:	61                   	(bad)
    5da2:	72 67                	jb     5e0b <__TMC_END__+0x1df3>
    5da4:	75 6d                	jne    5e13 <__TMC_END__+0x1dfb>
    5da6:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    5da8:	74 5f                	je     5e09 <__TMC_END__+0x1df1>
    5daa:	6c                   	ins    BYTE PTR es:[rdi],dx
    5dab:	69 73 74 5f 74 6f 6f 	imul   esi,DWORD PTR [rbx+0x74],0x6f6f745f
    5db2:	5f                   	pop    rdi
    5db3:	6c                   	ins    BYTE PTR es:[rdi],dx
    5db4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5db5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5db6:	67 00 5f 5a          	add    BYTE PTR [edi+0x5a],bl
    5dba:	4e 53                	rex.WRX push rbx
    5dbc:	74 34                	je     5df2 <__TMC_END__+0x1dda>
    5dbe:	70 61                	jo     5e21 <__TMC_END__+0x1e09>
    5dc0:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    5dc7:	45                   	rex.RB
    5dc8:	43 34 45             	rex.XB xor al,0x45
    5dcb:	52                   	push   rdx
    5dcc:	4b 74 52             	rex.WXB je 5e21 <__TMC_END__+0x1e09>
    5dcf:	4b 53                	rex.WXB push r11
    5dd1:	31 5f 51             	xor    DWORD PTR [rdi+0x51],ebx
    5dd4:	63 6c 31 36          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x36]
    5dd8:	5f                   	pop    rdi
    5dd9:	53                   	push   rbx
    5dda:	5f                   	pop    rdi
    5ddb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    5dde:	73 74                	jae    5e54 <__TMC_END__+0x1e3c>
    5de0:	72 75                	jb     5e57 <__TMC_END__+0x1e3f>
    5de2:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
    5de6:	6c                   	ins    BYTE PTR es:[rdi],dx
    5de7:	65 49 52             	gs rex.WB push r10
    5dea:	4b 54                	rex.WXB push r12
    5dec:	5f                   	pop    rdi
    5ded:	52                   	push   rdx
    5dee:	4b 54                	rex.WXB push r12
    5df0:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    5df3:	45 00 68 6f          	add    BYTE PTR [r8+0x6f],r13b
    5df7:	73 74                	jae    5e6d <__TMC_END__+0x1e55>
    5df9:	5f                   	pop    rdi
    5dfa:	75 6e                	jne    5e6a <__TMC_END__+0x1e52>
    5dfc:	72 65                	jb     5e63 <__TMC_END__+0x1e4b>
    5dfe:	61                   	(bad)
    5dff:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5e02:	62 6c 65 00 6e       	(bad)
    5e07:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5e08:	5f                   	pop    rdi
    5e09:	73 75                	jae    5e80 <__TMC_END__+0x1e68>
    5e0b:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
    5e0e:	64 65 76 69          	fs gs jbe 5e7b <__TMC_END__+0x1e63>
    5e12:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    5e15:	6c                   	ins    BYTE PTR es:[rdi],dx
    5e16:	61                   	(bad)
    5e17:	73 74                	jae    5e8d <__TMC_END__+0x1e75>
    5e19:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5e1c:	53                   	push   rbx
    5e1d:	74 38                	je     5e57 <__TMC_END__+0x1e3f>
    5e1f:	74 6f                	je     5e90 <__TMC_END__+0x1e78>
    5e21:	5f                   	pop    rdi
    5e22:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5e25:	72 73                	jb     5e9a <__TMC_END__+0x1e82>
    5e27:	50                   	push   rax
    5e28:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    5e2b:	44                   	rex.R
    5e2c:	46                   	rex.RX
    5e2d:	36 34 5f             	ss xor al,0x5f
    5e30:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5e33:	4e 53                	rex.WRX push rbx
    5e35:	74 37                	je     5e6e <__TMC_END__+0x1e56>
    5e37:	5f                   	pop    rdi
    5e38:	5f                   	pop    rdi
    5e39:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5e3c:	31 31                	xor    DWORD PTR [rcx],esi
    5e3e:	31 32                	xor    DWORD PTR [rdx],esi
    5e40:	62 61 73 69 63       	(bad)
    5e45:	5f                   	pop    rdi
    5e46:	73 74                	jae    5ebc <__TMC_END__+0x1ea4>
    5e48:	72 69                	jb     5eb3 <__TMC_END__+0x1e9b>
    5e4a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5e4b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5e50:	31 31                	xor    DWORD PTR [rcx],esi
    5e52:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5e55:	72 5f                	jb     5eb6 <__TMC_END__+0x1e9e>
    5e57:	74 72                	je     5ecb <__TMC_END__+0x1eb3>
    5e59:	61                   	(bad)
    5e5a:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5e61:	61 
    5e62:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5e66:	36 61                	ss (bad)
    5e68:	73 73                	jae    5edd <__TMC_END__+0x1ec5>
    5e6a:	69 67 6e 45 4f 53 34 	imul   esp,DWORD PTR [rdi+0x6e],0x34534f45
    5e71:	5f                   	pop    rdi
    5e72:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5e75:	53                   	push   rbx
    5e76:	74 38                	je     5eb0 <__TMC_END__+0x1e98>
    5e78:	74 6f                	je     5ee9 <__TMC_END__+0x1ed1>
    5e7a:	5f                   	pop    rdi
    5e7b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5e7e:	72 73                	jb     5ef3 <__TMC_END__+0x1edb>
    5e80:	50                   	push   rax
    5e81:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    5e84:	62 69 00 5f 5f 62 66 	vmaxps zmm28{k7},zmm15,DWORD BCST [r18+0x198]
    5e8b:	31 36                	xor    DWORD PTR [rsi],esi
    5e8d:	00 6d 6f             	add    BYTE PTR [rbp+0x6f],ch
    5e90:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5e91:	5f                   	pop    rdi
    5e92:	64 65 63 69 6d       	fs movsxd ebp,DWORD PTR gs:[rcx+0x6d]
    5e97:	61                   	(bad)
    5e98:	6c                   	ins    BYTE PTR es:[rdi],dx
    5e99:	5f                   	pop    rdi
    5e9a:	70 6f                	jo     5f0b <__TMC_END__+0x1ef3>
    5e9c:	69 6e 74 00 5f 5a 4e 	imul   ebp,DWORD PTR [rsi+0x74],0x4e5a5f00
    5ea3:	53                   	push   rbx
    5ea4:	74 37                	je     5edd <__TMC_END__+0x1ec5>
    5ea6:	5f                   	pop    rdi
    5ea7:	5f                   	pop    rdi
    5ea8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5eab:	31 31                	xor    DWORD PTR [rcx],esi
    5ead:	31 32                	xor    DWORD PTR [rdx],esi
    5eaf:	62 61 73 69 63       	(bad)
    5eb4:	5f                   	pop    rdi
    5eb5:	73 74                	jae    5f2b <__TMC_END__+0x1f13>
    5eb7:	72 69                	jb     5f22 <__TMC_END__+0x1f0a>
    5eb9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5eba:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5ebf:	31 31                	xor    DWORD PTR [rcx],esi
    5ec1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5ec4:	72 5f                	jb     5f25 <__TMC_END__+0x1f0d>
    5ec6:	74 72                	je     5f3a <__TMC_END__+0x1f22>
    5ec8:	61                   	(bad)
    5ec9:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5ed0:	61 
    5ed1:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5ed5:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
    5edc:	45 
    5edd:	6d                   	ins    DWORD PTR es:[rdi],dx
    5ede:	6d                   	ins    DWORD PTR es:[rdi],dx
    5edf:	63 00                	movsxd eax,DWORD PTR [rax]
    5ee1:	5f                   	pop    rdi
    5ee2:	5a                   	pop    rdx
    5ee3:	4e 53                	rex.WRX push rbx
    5ee5:	74 38                	je     5f1f <__TMC_END__+0x1f07>
    5ee7:	5f                   	pop    rdi
    5ee8:	5f                   	pop    rdi
    5ee9:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    5eeb:	72 6d                	jb     5f5a <__TMC_END__+0x1f42>
    5eed:	61                   	(bad)
    5eee:	74 31                	je     5f21 <__TMC_END__+0x1f09>
    5ef0:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    5ef3:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    5efa:	72 49                	jb     5f45 <__TMC_END__+0x1f2d>
    5efc:	63 45 61             	movsxd eax,DWORD PTR [rbp+0x61]
    5eff:	53                   	push   rbx
    5f00:	45 52                	rex.RB push r10
    5f02:	4b 53                	rex.WXB push r11
    5f04:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
    5f07:	5f                   	pop    rdi
    5f08:	4d 5f                	rex.WRB pop r15
    5f0a:	61                   	(bad)
    5f0b:	73 73                	jae    5f80 <__TMC_END__+0x1f68>
    5f0d:	69 67 6e 00 5f 5f 70 	imul   esp,DWORD PTR [rdi+0x6e],0x705f5f00
    5f14:	69 64 5f 74 00 5f 49 	imul   esp,DWORD PTR [rdi+rbx*2+0x74],0x4f495f00
    5f1b:	4f 
    5f1c:	5f                   	pop    rdi
    5f1d:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
    5f20:	65 63 76 74          	movsxd esi,DWORD PTR gs:[rsi+0x74]
    5f24:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5f27:	4e                   	rex.WRX
    5f28:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    5f2c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    5f2e:	75 5f                	jne    5f8f <__TMC_END__+0x1f77>
    5f30:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5f33:	31 37                	xor    DWORD PTR [rdi],esi
    5f35:	5f                   	pop    rdi
    5f36:	5f                   	pop    rdi
    5f37:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5f38:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5f39:	72 6d                	jb     5fa8 <__TMC_END__+0x1f90>
    5f3b:	61                   	(bad)
    5f3c:	6c                   	ins    BYTE PTR es:[rdi],dx
    5f3d:	5f                   	pop    rdi
    5f3e:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    5f45:	72 
    5f46:	49 50                	rex.WB push r8
    5f48:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    5f4b:	74 37                	je     5f84 <__TMC_END__+0x1f6c>
    5f4d:	5f                   	pop    rdi
    5f4e:	5f                   	pop    rdi
    5f4f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5f52:	31 31                	xor    DWORD PTR [rcx],esi
    5f54:	31 32                	xor    DWORD PTR [rdx],esi
    5f56:	62 61 73 69 63       	(bad)
    5f5b:	5f                   	pop    rdi
    5f5c:	73 74                	jae    5fd2 <__TMC_END__+0x1fba>
    5f5e:	72 69                	jb     5fc9 <__TMC_END__+0x1fb1>
    5f60:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5f61:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5f66:	31 31                	xor    DWORD PTR [rcx],esi
    5f68:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5f6b:	72 5f                	jb     5fcc <__TMC_END__+0x1fb4>
    5f6d:	74 72                	je     5fe1 <__TMC_END__+0x1fc9>
    5f6f:	61                   	(bad)
    5f70:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5f77:	61 
    5f78:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5f7c:	45                   	rex.RB
    5f7d:	45 70 6c             	rex.RB jo 5fec <__TMC_END__+0x1fd4>
    5f80:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    5f82:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5f85:	4e                   	rex.WRX
    5f86:	4b 53                	rex.WXB push r11
    5f88:	74 37                	je     5fc1 <__TMC_END__+0x1fa9>
    5f8a:	5f                   	pop    rdi
    5f8b:	5f                   	pop    rdi
    5f8c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    5f8f:	31 31                	xor    DWORD PTR [rcx],esi
    5f91:	31 32                	xor    DWORD PTR [rdx],esi
    5f93:	62 61 73 69 63       	(bad)
    5f98:	5f                   	pop    rdi
    5f99:	73 74                	jae    600f <__TMC_END__+0x1ff7>
    5f9b:	72 69                	jb     6006 <__TMC_END__+0x1fee>
    5f9d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    5f9e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    5fa3:	31 31                	xor    DWORD PTR [rcx],esi
    5fa5:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    5fa8:	72 5f                	jb     6009 <__TMC_END__+0x1ff1>
    5faa:	74 72                	je     601e <__TMC_END__+0x2006>
    5fac:	61                   	(bad)
    5fad:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    5fb4:	61 
    5fb5:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    5fb9:	34 64                	xor    al,0x64
    5fbb:	61                   	(bad)
    5fbc:	74 61                	je     601f <__TMC_END__+0x2007>
    5fbe:	45 76 00             	rex.RB jbe 5fc1 <__TMC_END__+0x1fa9>
    5fc1:	74 69                	je     602c <__TMC_END__+0x2014>
    5fc3:	6d                   	ins    DWORD PTR es:[rdi],dx
    5fc4:	65 64 5f             	gs fs pop rdi
    5fc7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5fc8:	75 74                	jne    603e <__TMC_END__+0x2026>
    5fca:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    5fcd:	4e 53                	rex.WRX push rbx
    5fcf:	74 38                	je     6009 <__TMC_END__+0x1ff1>
    5fd1:	5f                   	pop    rdi
    5fd2:	5f                   	pop    rdi
    5fd3:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    5fd5:	72 6d                	jb     6044 <__TMC_END__+0x202c>
    5fd7:	61                   	(bad)
    5fd8:	74 35                	je     600f <__TMC_END__+0x1ff7>
    5fda:	5f                   	pop    rdi
    5fdb:	53                   	push   rbx
    5fdc:	69 6e 6b 49 63 45 38 	imul   ebp,DWORD PTR [rsi+0x6b],0x38456349
    5fe3:	5f                   	pop    rdi
    5fe4:	4d 5f                	rex.WRB pop r15
    5fe6:	77 72                	ja     605a <__TMC_END__+0x2042>
    5fe8:	69 74 65 45 63 00 73 	imul   esi,DWORD PTR [rbp+riz*2+0x45],0x74730063
    5fef:	74 
    5ff0:	72 74                	jb     6066 <__TMC_END__+0x204e>
    5ff2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5ff3:	64 00 73 74          	add    BYTE PTR fs:[rbx+0x74],dh
    5ff7:	72 74                	jb     606d <__TMC_END__+0x2055>
    5ff9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    5ffa:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    5ffe:	4e 53                	rex.WRX push rbx
    6000:	74 37                	je     6039 <__TMC_END__+0x2021>
    6002:	5f                   	pop    rdi
    6003:	5f                   	pop    rdi
    6004:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6007:	31 31                	xor    DWORD PTR [rcx],esi
    6009:	31 32                	xor    DWORD PTR [rdx],esi
    600b:	62 61 73 69 63       	(bad)
    6010:	5f                   	pop    rdi
    6011:	73 74                	jae    6087 <__TMC_END__+0x206f>
    6013:	72 69                	jb     607e <__TMC_END__+0x2066>
    6015:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6016:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    601b:	31 31                	xor    DWORD PTR [rcx],esi
    601d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6020:	72 5f                	jb     6081 <__TMC_END__+0x2069>
    6022:	74 72                	je     6096 <__TMC_END__+0x207e>
    6024:	61                   	(bad)
    6025:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    602c:	61 
    602d:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6031:	36 61                	ss (bad)
    6033:	70 70                	jo     60a5 <__TMC_END__+0x208d>
    6035:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    6037:	64 45 52             	fs rex.RB push r10
    603a:	4b 53                	rex.WXB push r11
    603c:	34 5f                	xor    al,0x5f
    603e:	6d                   	ins    DWORD PTR es:[rdi],dx
    603f:	6d                   	ins    DWORD PTR es:[rdi],dx
    6040:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6043:	4e 53                	rex.WRX push rbx
    6045:	74 37                	je     607e <__TMC_END__+0x2066>
    6047:	5f                   	pop    rdi
    6048:	5f                   	pop    rdi
    6049:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    604c:	31 31                	xor    DWORD PTR [rcx],esi
    604e:	31 32                	xor    DWORD PTR [rdx],esi
    6050:	62 61 73 69 63       	(bad)
    6055:	5f                   	pop    rdi
    6056:	73 74                	jae    60cc <__TMC_END__+0x20b4>
    6058:	72 69                	jb     60c3 <__TMC_END__+0x20ab>
    605a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    605b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6060:	31 31                	xor    DWORD PTR [rcx],esi
    6062:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6065:	72 5f                	jb     60c6 <__TMC_END__+0x20ae>
    6067:	74 72                	je     60db <__TMC_END__+0x20c3>
    6069:	61                   	(bad)
    606a:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6071:	61 
    6072:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6076:	37                   	(bad)
    6077:	72 65                	jb     60de <__TMC_END__+0x20c6>
    6079:	70 6c                	jo     60e7 <__TMC_END__+0x20cf>
    607b:	61                   	(bad)
    607c:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    607f:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    6083:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    6085:	75 5f                	jne    60e6 <__TMC_END__+0x20ce>
    6087:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    608a:	31 37                	xor    DWORD PTR [rdi],esi
    608c:	5f                   	pop    rdi
    608d:	5f                   	pop    rdi
    608e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    608f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6090:	72 6d                	jb     60ff <__TMC_END__+0x20e7>
    6092:	61                   	(bad)
    6093:	6c                   	ins    BYTE PTR es:[rdi],dx
    6094:	5f                   	pop    rdi
    6095:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    609c:	72 
    609d:	49 50                	rex.WB push r8
    609f:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    60a3:	5f                   	pop    rdi
    60a4:	45                   	rex.RB
    60a5:	45 53                	rex.RB push r11
    60a7:	39 5f 53             	cmp    DWORD PTR [rdi+0x53],ebx
    60aa:	39 5f 53             	cmp    DWORD PTR [rdi+0x53],ebx
    60ad:	39 5f 00             	cmp    DWORD PTR [rdi+0x0],ebx
    60b0:	6c                   	ins    BYTE PTR es:[rdi],dx
    60b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    60b2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    60b3:	67 20 64 6f 75       	and    BYTE PTR [edi+ebp*2+0x75],ah
    60b8:	62 6c 65 00 5f       	(bad)
    60bd:	5a                   	pop    rdx
    60be:	4e 53                	rex.WRX push rbx
    60c0:	74 31                	je     60f3 <__TMC_END__+0x20db>
    60c2:	36 72 65             	ss jb  612a <__TMC_END__+0x2112>
    60c5:	76 65                	jbe    612c <__TMC_END__+0x2114>
    60c7:	72 73                	jb     613c <__TMC_END__+0x2124>
    60c9:	65 5f                	gs pop rdi
    60cb:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    60d2:	72 
    60d3:	49                   	rex.WB
    60d4:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    60d8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    60da:	75 5f                	jne    613b <__TMC_END__+0x2123>
    60dc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    60df:	31 37                	xor    DWORD PTR [rdi],esi
    60e1:	5f                   	pop    rdi
    60e2:	5f                   	pop    rdi
    60e3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    60e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    60e5:	72 6d                	jb     6154 <__TMC_END__+0x213c>
    60e7:	61                   	(bad)
    60e8:	6c                   	ins    BYTE PTR es:[rdi],dx
    60e9:	5f                   	pop    rdi
    60ea:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    60f1:	72 
    60f2:	49 50                	rex.WB push r8
    60f4:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    60f7:	34 73                	xor    al,0x73
    60f9:	70 61                	jo     615c <__TMC_END__+0x2144>
    60fb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    60fc:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    6101:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    6104:	36 37                	ss (bad)
    6106:	34 34                	xor    al,0x34
    6108:	30 37                	xor    BYTE PTR [rdi],dh
    610a:	33 37                	xor    esi,DWORD PTR [rdi]
    610c:	30 39                	xor    BYTE PTR [rcx],bh
    610e:	35 35 31 36 31       	xor    eax,0x31363135
    6113:	35 45 45 45 45       	xor    eax,0x45454545
    6118:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    611a:	6d                   	ins    DWORD PTR es:[rdi],dx
    611b:	45 69 00 5f 5a 53 74 	imul   r8d,DWORD PTR [r8],0x74535a5f
    6122:	38 74 6f 5f          	cmp    BYTE PTR [rdi+rbp*2+0x5f],dh
    6126:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6129:	72 73                	jb     619e <__TMC_END__+0x2186>
    612b:	50                   	push   rax
    612c:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    612f:	63 69 00             	movsxd ebp,DWORD PTR [rcx+0x0]
    6132:	69 6e 76 61 6c 69 64 	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
    6139:	5f                   	pop    rdi
    613a:	61                   	(bad)
    613b:	72 67                	jb     61a4 <__TMC_END__+0x218c>
    613d:	75 6d                	jne    61ac <__TMC_END__+0x2194>
    613f:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    6141:	74 00                	je     6143 <__TMC_END__+0x212b>
    6143:	5f                   	pop    rdi
    6144:	5a                   	pop    rdx
    6145:	4e                   	rex.WRX
    6146:	4b 53                	rex.WXB push r11
    6148:	74 37                	je     6181 <__TMC_END__+0x2169>
    614a:	5f                   	pop    rdi
    614b:	5f                   	pop    rdi
    614c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    614f:	31 31                	xor    DWORD PTR [rcx],esi
    6151:	31 32                	xor    DWORD PTR [rdx],esi
    6153:	62 61 73 69 63       	(bad)
    6158:	5f                   	pop    rdi
    6159:	73 74                	jae    61cf <__TMC_END__+0x21b7>
    615b:	72 69                	jb     61c6 <__TMC_END__+0x21ae>
    615d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    615e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6163:	31 31                	xor    DWORD PTR [rcx],esi
    6165:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6168:	72 5f                	jb     61c9 <__TMC_END__+0x21b1>
    616a:	74 72                	je     61de <__TMC_END__+0x21c6>
    616c:	61                   	(bad)
    616d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6174:	61 
    6175:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6179:	31 32                	xor    DWORD PTR [rdx],esi
    617b:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    6181:	61                   	(bad)
    6182:	73 74                	jae    61f8 <__TMC_END__+0x21e0>
    6184:	5f                   	pop    rdi
    6185:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6186:	66 45 52             	rex.RB push r10w
    6189:	4b 53                	rex.WXB push r11
    618b:	34 5f                	xor    al,0x5f
    618d:	6d                   	ins    DWORD PTR es:[rdi],dx
    618e:	00 47 4e             	add    BYTE PTR [rdi+0x4e],al
    6191:	55                   	push   rbp
    6192:	20 43 2b             	and    BYTE PTR [rbx+0x2b],al
    6195:	2b 32                	sub    esi,DWORD PTR [rdx]
    6197:	33 20                	xor    esp,DWORD PTR [rax]
    6199:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
    619c:	32 2e                	xor    ch,BYTE PTR [rsi]
    619e:	31 20                	xor    DWORD PTR [rax],esp
    61a0:	32 30                	xor    dh,BYTE PTR [rax]
    61a2:	32 34 30             	xor    dh,BYTE PTR [rax+rsi*1]
    61a5:	38 30                	cmp    BYTE PTR [rax],dh
    61a7:	35 20 2d 6d 74       	xor    eax,0x746d2d20
    61ac:	75 6e                	jne    621c <__TMC_END__+0x2204>
    61ae:	65 3d 67 65 6e 65    	gs cmp eax,0x656e6567
    61b4:	72 69                	jb     621f <__TMC_END__+0x2207>
    61b6:	63 20                	movsxd esp,DWORD PTR [rax]
    61b8:	2d 6d 61 72 63       	sub    eax,0x6372616d
    61bd:	68 3d 78 38 36       	push   0x3638783d
    61c2:	2d 36 34 20 2d       	sub    eax,0x2d203436
    61c7:	67 20 2d 73 74 64 3d 	and    BYTE PTR [eip+0x3d647473],ch        # 3d64d641 <__TMC_END__+0x3d649629>
    61ce:	63 2b                	movsxd ebp,DWORD PTR [rbx]
    61d0:	2b 32                	sub    esi,DWORD PTR [rdx]
    61d2:	33 20                	xor    esp,DWORD PTR [rax]
    61d4:	2d 66 50 49 43       	sub    eax,0x43495066
    61d9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    61dc:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    61e0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    61e2:	75 5f                	jne    6243 <__TMC_END__+0x222b>
    61e4:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    61e7:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
    61ea:	5f                   	pop    rdi
    61eb:	61                   	(bad)
    61ec:	6c                   	ins    BYTE PTR es:[rdi],dx
    61ed:	6c                   	ins    BYTE PTR es:[rdi],dx
    61ee:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    61ef:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
    61f2:	72 61                	jb     6255 <__TMC_END__+0x223d>
    61f4:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    61fb:	63 
    61fc:	45 63 45 32          	movsxd r8d,DWORD PTR [r13+0x32]
    6200:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    6203:	5f                   	pop    rdi
    6204:	70 72                	jo     6278 <__TMC_END__+0x2260>
    6206:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6207:	70 61                	jo     626a <__TMC_END__+0x2252>
    6209:	67 61                	addr32 (bad)
    620b:	74 65                	je     6272 <__TMC_END__+0x225a>
    620d:	5f                   	pop    rdi
    620e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    620f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6210:	5f                   	pop    rdi
    6211:	73 77                	jae    628a <__TMC_END__+0x2272>
    6213:	61                   	(bad)
    6214:	70 45                	jo     625b <__TMC_END__+0x2243>
    6216:	76 00                	jbe    6218 <__TMC_END__+0x2200>
    6218:	5f                   	pop    rdi
    6219:	5a                   	pop    rdx
    621a:	4e                   	rex.WRX
    621b:	4b 53                	rex.WXB push r11
    621d:	74 37                	je     6256 <__TMC_END__+0x223e>
    621f:	5f                   	pop    rdi
    6220:	5f                   	pop    rdi
    6221:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6224:	31 31                	xor    DWORD PTR [rcx],esi
    6226:	31 32                	xor    DWORD PTR [rdx],esi
    6228:	62 61 73 69 63       	(bad)
    622d:	5f                   	pop    rdi
    622e:	73 74                	jae    62a4 <__TMC_END__+0x228c>
    6230:	72 69                	jb     629b <__TMC_END__+0x2283>
    6232:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6233:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6238:	31 31                	xor    DWORD PTR [rcx],esi
    623a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    623d:	72 5f                	jb     629e <__TMC_END__+0x2286>
    623f:	74 72                	je     62b3 <__TMC_END__+0x229b>
    6241:	61                   	(bad)
    6242:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6249:	61 
    624a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    624e:	31 31                	xor    DWORD PTR [rcx],esi
    6250:	73 74                	jae    62c6 <__TMC_END__+0x22ae>
    6252:	61                   	(bad)
    6253:	72 74                	jb     62c9 <__TMC_END__+0x22b1>
    6255:	73 5f                	jae    62b6 <__TMC_END__+0x229e>
    6257:	77 69                	ja     62c2 <__TMC_END__+0x22aa>
    6259:	74 68                	je     62c3 <__TMC_END__+0x22ab>
    625b:	45 53                	rex.RB push r11
    625d:	74 31                	je     6290 <__TMC_END__+0x2278>
    625f:	37                   	(bad)
    6260:	62 61 73 69 63       	(bad)
    6265:	5f                   	pop    rdi
    6266:	73 74                	jae    62dc <__TMC_END__+0x22c4>
    6268:	72 69                	jb     62d3 <__TMC_END__+0x22bb>
    626a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    626b:	67 5f                	addr32 pop rdi
    626d:	76 69                	jbe    62d8 <__TMC_END__+0x22c0>
    626f:	65 77 49             	gs ja  62bb <__TMC_END__+0x22a3>
    6272:	63 53 32             	movsxd edx,DWORD PTR [rbx+0x32]
    6275:	5f                   	pop    rdi
    6276:	45 00 5f 53          	add    BYTE PTR [r15+0x53],r11b
    627a:	5f                   	pop    rdi
    627b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    627c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    627d:	5f                   	pop    rdi
    627e:	73 77                	jae    62f7 <__TMC_END__+0x22df>
    6280:	61                   	(bad)
    6281:	70 00                	jo     6283 <__TMC_END__+0x226b>
    6283:	5f                   	pop    rdi
    6284:	5a                   	pop    rdx
    6285:	4e 53                	rex.WRX push rbx
    6287:	74 31                	je     62ba <__TMC_END__+0x22a2>
    6289:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    628c:	61                   	(bad)
    628d:	72 5f                	jb     62ee <__TMC_END__+0x22d6>
    628f:	74 72                	je     6303 <__TMC_END__+0x22eb>
    6291:	61                   	(bad)
    6292:	69 74 73 49 63 45 37 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63374563
    6299:	63 
    629a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    629b:	6d                   	ins    DWORD PTR es:[rdi],dx
    629c:	70 61                	jo     62ff <__TMC_END__+0x22e7>
    629e:	72 65                	jb     6305 <__TMC_END__+0x22ed>
    62a0:	45 50                	rex.RB push r8
    62a2:	4b 63 53 32          	rex.WXB movsxd rdx,DWORD PTR [r11+0x32]
    62a6:	5f                   	pop    rdi
    62a7:	6d                   	ins    DWORD PTR es:[rdi],dx
    62a8:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    62ab:	53                   	push   rbx
    62ac:	74 38                	je     62e6 <__TMC_END__+0x22ce>
    62ae:	74 6f                	je     631f <__TMC_END__+0x2307>
    62b0:	5f                   	pop    rdi
    62b1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    62b4:	72 73                	jb     6329 <__TMC_END__+0x2311>
    62b6:	50                   	push   rax
    62b7:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    62ba:	44                   	rex.R
    62bb:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    62be:	5f                   	pop    rdi
    62bf:	53                   	push   rbx
    62c0:	74 31                	je     62f3 <__TMC_END__+0x22db>
    62c2:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    62c5:	61                   	(bad)
    62c6:	72 73                	jb     633b <__TMC_END__+0x2323>
    62c8:	5f                   	pop    rdi
    62c9:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    62cb:	72 6d                	jb     633a <__TMC_END__+0x2322>
    62cd:	61                   	(bad)
    62ce:	74 00                	je     62d0 <__TMC_END__+0x22b8>
    62d0:	5f                   	pop    rdi
    62d1:	5a                   	pop    rdx
    62d2:	4e 53                	rex.WRX push rbx
    62d4:	74 31                	je     6307 <__TMC_END__+0x22ef>
    62d6:	36 61                	ss (bad)
    62d8:	6c                   	ins    BYTE PTR es:[rdi],dx
    62d9:	6c                   	ins    BYTE PTR es:[rdi],dx
    62da:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    62db:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    62de:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    62df:	72 5f                	jb     6340 <__TMC_END__+0x2328>
    62e1:	74 72                	je     6355 <__TMC_END__+0x233d>
    62e3:	61                   	(bad)
    62e4:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    62eb:	63 
    62ec:	45                   	rex.RB
    62ed:	45 31 30             	xor    DWORD PTR [r8],r14d
    62f0:	64 65 61             	fs gs (bad)
    62f3:	6c                   	ins    BYTE PTR es:[rdi],dx
    62f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    62f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    62f6:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    62f9:	65 45 52             	gs rex.RB push r10
    62fc:	53                   	push   rbx
    62fd:	30 5f 50             	xor    BYTE PTR [rdi+0x50],bl
    6300:	63 6d 00             	movsxd ebp,DWORD PTR [rbp+0x0]
    6303:	5f                   	pop    rdi
    6304:	5a                   	pop    rdx
    6305:	4e                   	rex.WRX
    6306:	4b 53                	rex.WXB push r11
    6308:	74 34                	je     633e <__TMC_END__+0x2326>
    630a:	73 70                	jae    637c <__TMC_END__+0x2364>
    630c:	61                   	(bad)
    630d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    630e:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    6313:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    6316:	36 37                	ss (bad)
    6318:	34 34                	xor    al,0x34
    631a:	30 37                	xor    BYTE PTR [rdi],dh
    631c:	33 37                	xor    esi,DWORD PTR [rdi]
    631e:	30 39                	xor    BYTE PTR [rcx],bh
    6320:	35 35 31 36 31       	xor    eax,0x31363135
    6325:	35 45 45 34 73       	xor    eax,0x73344545
    632a:	69 7a 65 45 76 00 6f 	imul   edi,DWORD PTR [rdx+0x65],0x6f007645
    6331:	70 65                	jo     6398 <__TMC_END__+0x2380>
    6333:	72 61                	jb     6396 <__TMC_END__+0x237e>
    6335:	74 6f                	je     63a6 <__TMC_END__+0x238e>
    6337:	72 2b                	jb     6364 <__TMC_END__+0x234c>
    6339:	3d 00 73 74 72       	cmp    eax,0x72747300
    633e:	65 61                	gs (bad)
    6340:	6d                   	ins    DWORD PTR es:[rdi],dx
    6341:	5f                   	pop    rdi
    6342:	74 69                	je     63ad <__TMC_END__+0x2395>
    6344:	6d                   	ins    DWORD PTR es:[rdi],dx
    6345:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
    6347:	75 74                	jne    63bd <__TMC_END__+0x23a5>
    6349:	00 74 6d 70          	add    BYTE PTR [rbp+rbp*2+0x70],dh
    634d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    634e:	61                   	(bad)
    634f:	6d                   	ins    DWORD PTR es:[rdi],dx
    6350:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    6353:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    635a:	72 00                	jb     635c <__TMC_END__+0x2344>
    635c:	5f                   	pop    rdi
    635d:	5a                   	pop    rdx
    635e:	53                   	push   rbx
    635f:	74 31                	je     6392 <__TMC_END__+0x237a>
    6361:	37                   	(bad)
    6362:	72 65                	jb     63c9 <__TMC_END__+0x23b1>
    6364:	74 68                	je     63ce <__TMC_END__+0x23b6>
    6366:	72 6f                	jb     63d7 <__TMC_END__+0x23bf>
    6368:	77 5f                	ja     63c9 <__TMC_END__+0x23b1>
    636a:	65 78 63             	gs js  63d0 <__TMC_END__+0x23b8>
    636d:	65 70 74             	gs jo  63e4 <__TMC_END__+0x23cc>
    6370:	69 6f 6e 4e 53 74 31 	imul   ebp,DWORD PTR [rdi+0x6e],0x3174534e
    6377:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    637c:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    637f:	74 69                	je     63ea <__TMC_END__+0x23d2>
    6381:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6382:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6383:	5f                   	pop    rdi
    6384:	70 74                	jo     63fa <__TMC_END__+0x23e2>
    6386:	72 31                	jb     63b9 <__TMC_END__+0x23a1>
    6388:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    638b:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    638e:	74 69                	je     63f9 <__TMC_END__+0x23e1>
    6390:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6391:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6392:	5f                   	pop    rdi
    6393:	70 74                	jo     6409 <__TMC_END__+0x23f1>
    6395:	72 45                	jb     63dc <__TMC_END__+0x23c4>
    6397:	00 66 65             	add    BYTE PTR [rsi+0x65],ah
    639a:	72 72                	jb     640e <__TMC_END__+0x23f6>
    639c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    639d:	72 00                	jb     639f <__TMC_END__+0x2387>
    639f:	5f                   	pop    rdi
    63a0:	41 6c                	rex.B ins BYTE PTR es:[rdi],dx
    63a2:	6c                   	ins    BYTE PTR es:[rdi],dx
    63a3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    63a4:	63 00                	movsxd eax,DWORD PTR [rax]
    63a6:	5f                   	pop    rdi
    63a7:	5a                   	pop    rdx
    63a8:	4e                   	rex.WRX
    63a9:	4b 53                	rex.WXB push r11
    63ab:	74 37                	je     63e4 <__TMC_END__+0x23cc>
    63ad:	5f                   	pop    rdi
    63ae:	5f                   	pop    rdi
    63af:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    63b2:	31 31                	xor    DWORD PTR [rcx],esi
    63b4:	31 32                	xor    DWORD PTR [rdx],esi
    63b6:	62 61 73 69 63       	(bad)
    63bb:	5f                   	pop    rdi
    63bc:	73 74                	jae    6432 <__TMC_END__+0x241a>
    63be:	72 69                	jb     6429 <__TMC_END__+0x2411>
    63c0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    63c1:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    63c6:	31 31                	xor    DWORD PTR [rcx],esi
    63c8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    63cb:	72 5f                	jb     642c <__TMC_END__+0x2414>
    63cd:	74 72                	je     6441 <__TMC_END__+0x2429>
    63cf:	61                   	(bad)
    63d0:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    63d7:	61 
    63d8:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    63dc:	37                   	(bad)
    63dd:	5f                   	pop    rdi
    63de:	4d 5f                	rex.WRB pop r15
    63e0:	64 61                	fs (bad)
    63e2:	74 61                	je     6445 <__TMC_END__+0x242d>
    63e4:	45 76 00             	rex.RB jbe 63e7 <__TMC_END__+0x23cf>
    63e7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    63e8:	70 65                	jo     644f <__TMC_END__+0x2437>
    63ea:	72 61                	jb     644d <__TMC_END__+0x2435>
    63ec:	74 6f                	je     645d <__TMC_END__+0x2445>
    63ee:	72 2b                	jb     641b <__TMC_END__+0x2403>
    63f0:	2b 00                	sub    eax,DWORD PTR [rax]
    63f2:	5f                   	pop    rdi
    63f3:	45 78 74             	rex.RB js 646a <__TMC_END__+0x2452>
    63f6:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    63f8:	74 00                	je     63fa <__TMC_END__+0x23e2>
    63fa:	5f                   	pop    rdi
    63fb:	5a                   	pop    rdx
    63fc:	4e 53                	rex.WRX push rbx
    63fe:	74 38                	je     6438 <__TMC_END__+0x2420>
    6400:	5f                   	pop    rdi
    6401:	5f                   	pop    rdi
    6402:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    6404:	72 6d                	jb     6473 <__TMC_END__+0x245b>
    6406:	61                   	(bad)
    6407:	74 31                	je     643a <__TMC_END__+0x2422>
    6409:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    640c:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    6413:	72 49                	jb     645e <__TMC_END__+0x2446>
    6415:	63 45 61             	movsxd eax,DWORD PTR [rbp+0x61]
    6418:	53                   	push   rbx
    6419:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    641c:	62 61 73 69 63       	(bad)
    6421:	5f                   	pop    rdi
    6422:	73 74                	jae    6498 <__TMC_END__+0x2480>
    6424:	72 69                	jb     648f <__TMC_END__+0x2477>
    6426:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6427:	67 5f                	addr32 pop rdi
    6429:	76 69                	jbe    6494 <__TMC_END__+0x247c>
    642b:	65 77 00             	gs ja  642e <__TMC_END__+0x2416>
    642e:	5f                   	pop    rdi
    642f:	4d 5f                	rex.WRB pop r15
    6431:	64 61                	fs (bad)
    6433:	74 61                	je     6496 <__TMC_END__+0x247e>
    6435:	70 6c                	jo     64a3 <__TMC_END__+0x248b>
    6437:	75 73                	jne    64ac <__TMC_END__+0x2494>
    6439:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    643c:	74 79                	je     64b7 <__TMC_END__+0x249f>
    643e:	70 65                	jo     64a5 <__TMC_END__+0x248d>
    6440:	5f                   	pop    rdi
    6441:	74 00                	je     6443 <__TMC_END__+0x242b>
    6443:	5f                   	pop    rdi
    6444:	5a                   	pop    rdx
    6445:	4e 53                	rex.WRX push rbx
    6447:	74 37                	je     6480 <__TMC_END__+0x2468>
    6449:	5f                   	pop    rdi
    644a:	5f                   	pop    rdi
    644b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    644e:	31 31                	xor    DWORD PTR [rcx],esi
    6450:	31 32                	xor    DWORD PTR [rdx],esi
    6452:	62 61 73 69 63       	(bad)
    6457:	5f                   	pop    rdi
    6458:	73 74                	jae    64ce <__TMC_END__+0x24b6>
    645a:	72 69                	jb     64c5 <__TMC_END__+0x24ad>
    645c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    645d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6462:	31 31                	xor    DWORD PTR [rcx],esi
    6464:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6467:	72 5f                	jb     64c8 <__TMC_END__+0x24b0>
    6469:	74 72                	je     64dd <__TMC_END__+0x24c5>
    646b:	61                   	(bad)
    646c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6473:	61 
    6474:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6478:	34 73                	xor    al,0x73
    647a:	77 61                	ja     64dd <__TMC_END__+0x24c5>
    647c:	70 45                	jo     64c3 <__TMC_END__+0x24ab>
    647e:	52                   	push   rdx
    647f:	53                   	push   rbx
    6480:	34 5f                	xor    al,0x5f
    6482:	00 61 6c             	add    BYTE PTR [rcx+0x6c],ah
    6485:	72 65                	jb     64ec <__TMC_END__+0x24d4>
    6487:	61                   	(bad)
    6488:	64 79 5f             	fs jns 64ea <__TMC_END__+0x24d2>
    648b:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    648e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    648f:	65 63 74 65 64       	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
    6494:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6497:	4e 53                	rex.WRX push rbx
    6499:	74 31                	je     64cc <__TMC_END__+0x24b4>
    649b:	37                   	(bad)
    649c:	62 61 73 69 63       	(bad)
    64a1:	5f                   	pop    rdi
    64a2:	73 74                	jae    6518 <__TMC_END__+0x2500>
    64a4:	72 69                	jb     650f <__TMC_END__+0x24f7>
    64a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    64a7:	67 5f                	addr32 pop rdi
    64a9:	76 69                	jbe    6514 <__TMC_END__+0x24fc>
    64ab:	65 77 49             	gs ja  64f7 <__TMC_END__+0x24df>
    64ae:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    64b1:	31 31                	xor    DWORD PTR [rcx],esi
    64b3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    64b6:	72 5f                	jb     6517 <__TMC_END__+0x24ff>
    64b8:	74 72                	je     652c <__TMC_END__+0x2514>
    64ba:	61                   	(bad)
    64bb:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x43454563
    64c2:	43 
    64c3:	34 45                	xor    al,0x45
    64c5:	50                   	push   rax
    64c6:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    64c9:	5f                   	pop    rdi
    64ca:	5f                   	pop    rdi
    64cb:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    64d2:	77 63                	ja     6537 <__TMC_END__+0x251f>
    64d4:	73 74                	jae    654a <__TMC_END__+0x2532>
    64d6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    64d7:	6c                   	ins    BYTE PTR es:[rdi],dx
    64d8:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
    64db:	73 69                	jae    6546 <__TMC_END__+0x252e>
    64dd:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    64e0:	74 72                	je     6554 <__TMC_END__+0x253c>
    64e2:	69 6e 67 5f 76 69 65 	imul   ebp,DWORD PTR [rsi+0x67],0x6569765f
    64e9:	77 3c                	ja     6527 <__TMC_END__+0x250f>
    64eb:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    64ee:	72 2c                	jb     651c <__TMC_END__+0x2504>
    64f0:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    64f3:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    64f6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    64f9:	72 5f                	jb     655a <__TMC_END__+0x2542>
    64fb:	74 72                	je     656f <__TMC_END__+0x2557>
    64fd:	61                   	(bad)
    64fe:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    6505:	72 
    6506:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    6509:	00 70 75             	add    BYTE PTR [rax+0x75],dh
    650c:	73 68                	jae    6576 <__TMC_END__+0x255e>
    650e:	5f                   	pop    rdi
    650f:	62 61 63 6b 00       	(bad)
    6514:	77 63                	ja     6579 <__TMC_END__+0x2561>
    6516:	73 74                	jae    658c <__TMC_END__+0x2574>
    6518:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6519:	6c                   	ins    BYTE PTR es:[rdi],dx
    651a:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    651e:	4e 53                	rex.WRX push rbx
    6520:	74 31                	je     6553 <__TMC_END__+0x253b>
    6522:	37                   	(bad)
    6523:	62 61 73 69 63       	(bad)
    6528:	5f                   	pop    rdi
    6529:	73 74                	jae    659f <__TMC_END__+0x2587>
    652b:	72 69                	jb     6596 <__TMC_END__+0x257e>
    652d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    652e:	67 5f                	addr32 pop rdi
    6530:	76 69                	jbe    659b <__TMC_END__+0x2583>
    6532:	65 77 49             	gs ja  657e <__TMC_END__+0x2566>
    6535:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    6538:	31 31                	xor    DWORD PTR [rcx],esi
    653a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    653d:	72 5f                	jb     659e <__TMC_END__+0x2586>
    653f:	74 72                	je     65b3 <__TMC_END__+0x259b>
    6541:	61                   	(bad)
    6542:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x43454563
    6549:	43 
    654a:	34 45                	xor    al,0x45
    654c:	50                   	push   rax
    654d:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    6551:	5f                   	pop    rdi
    6552:	5a                   	pop    rdx
    6553:	4e                   	rex.WRX
    6554:	4b 53                	rex.WXB push r11
    6556:	74 31                	je     6589 <__TMC_END__+0x2571>
    6558:	37                   	(bad)
    6559:	62 61 73 69 63       	(bad)
    655e:	5f                   	pop    rdi
    655f:	73 74                	jae    65d5 <__TMC_END__+0x25bd>
    6561:	72 69                	jb     65cc <__TMC_END__+0x25b4>
    6563:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6564:	67 5f                	addr32 pop rdi
    6566:	76 69                	jbe    65d1 <__TMC_END__+0x25b9>
    6568:	65 77 49             	gs ja  65b4 <__TMC_END__+0x259c>
    656b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    656e:	31 31                	xor    DWORD PTR [rcx],esi
    6570:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6573:	72 5f                	jb     65d4 <__TMC_END__+0x25bc>
    6575:	74 72                	je     65e9 <__TMC_END__+0x25d1>
    6577:	61                   	(bad)
    6578:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    657f:	34 
    6580:	73 69                	jae    65eb <__TMC_END__+0x25d3>
    6582:	7a 65                	jp     65e9 <__TMC_END__+0x25d1>
    6584:	45 76 00             	rex.RB jbe 6587 <__TMC_END__+0x256f>
    6587:	5f                   	pop    rdi
    6588:	4d 5f                	rex.WRB pop r15
    658a:	61                   	(bad)
    658b:	72 72                	jb     65ff <__TMC_END__+0x25e7>
    658d:	61                   	(bad)
    658e:	79 00                	jns    6590 <__TMC_END__+0x2578>
    6590:	69 6e 73 65 72 74 00 	imul   ebp,DWORD PTR [rsi+0x73],0x747265
    6597:	69 73 5f 61 5f 64 69 	imul   esi,DWORD PTR [rbx+0x5f],0x69645f61
    659e:	72 65                	jb     6605 <__TMC_END__+0x25ed>
    65a0:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    65a4:	79 00                	jns    65a6 <__TMC_END__+0x258e>
    65a6:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    65a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    65aa:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    65af:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    65b0:	5f                   	pop    rdi
    65b1:	72 65                	jb     6618 <__TMC_END__+0x2600>
    65b3:	73 65                	jae    661a <__TMC_END__+0x2602>
    65b5:	74 00                	je     65b7 <__TMC_END__+0x259f>
    65b7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    65ba:	72 38                	jb     65f4 <__TMC_END__+0x25dc>
    65bc:	5f                   	pop    rdi
    65bd:	74 00                	je     65bf <__TMC_END__+0x25a7>
    65bf:	5f                   	pop    rdi
    65c0:	49                   	rex.WB
    65c1:	4f 5f                	rex.WRXB pop r15
    65c3:	62 75 66 5f 62       	(bad)
    65c8:	61                   	(bad)
    65c9:	73 65                	jae    6630 <__TMC_END__+0x2618>
    65cb:	00 77 72             	add    BYTE PTR [rdi+0x72],dh
    65ce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    65cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    65d0:	67 5f                	addr32 pop rdi
    65d2:	70 72                	jo     6646 <__TMC_END__+0x262e>
    65d4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    65d5:	74 6f                	je     6646 <__TMC_END__+0x262e>
    65d7:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    65da:	5f                   	pop    rdi
    65db:	74 79                	je     6656 <__TMC_END__+0x263e>
    65dd:	70 65                	jo     6644 <__TMC_END__+0x262c>
    65df:	00 5f 54             	add    BYTE PTR [rdi+0x54],bl
    65e2:	79 70                	jns    6654 <__TMC_END__+0x263c>
    65e4:	65 00 6f 70          	add    BYTE PTR gs:[rdi+0x70],ch
    65e8:	65 72 61             	gs jb  664c <__TMC_END__+0x2634>
    65eb:	74 6f                	je     665c <__TMC_END__+0x2644>
    65ed:	72 2d                	jb     661c <__TMC_END__+0x2604>
    65ef:	2d 00 5f 75 6e       	sub    eax,0x6e755f00
    65f4:	75 73                	jne    6669 <__TMC_END__+0x2651>
    65f6:	65 64 32 00          	gs xor al,BYTE PTR fs:[rax]
    65fa:	5f                   	pop    rdi
    65fb:	4d 5f                	rex.WRB pop r15
    65fd:	75 73                	jne    6672 <__TMC_END__+0x265a>
    65ff:	65 5f                	gs pop rdi
    6601:	6c                   	ins    BYTE PTR es:[rdi],dx
    6602:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6603:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    6606:	5f                   	pop    rdi
    6607:	64 61                	fs (bad)
    6609:	74 61                	je     666c <__TMC_END__+0x2654>
    660b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    660e:	4e 53                	rex.WRX push rbx
    6610:	74 37                	je     6649 <__TMC_END__+0x2631>
    6612:	5f                   	pop    rdi
    6613:	5f                   	pop    rdi
    6614:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6617:	31 31                	xor    DWORD PTR [rcx],esi
    6619:	31 32                	xor    DWORD PTR [rdx],esi
    661b:	62 61 73 69 63       	(bad)
    6620:	5f                   	pop    rdi
    6621:	73 74                	jae    6697 <__TMC_END__+0x267f>
    6623:	72 69                	jb     668e <__TMC_END__+0x2676>
    6625:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6626:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    662b:	31 31                	xor    DWORD PTR [rcx],esi
    662d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6630:	72 5f                	jb     6691 <__TMC_END__+0x2679>
    6632:	74 72                	je     66a6 <__TMC_END__+0x268e>
    6634:	61                   	(bad)
    6635:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    663c:	61 
    663d:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6641:	43 34 45             	rex.XB xor al,0x45
    6644:	52                   	push   rdx
    6645:	4b 53                	rex.WXB push r11
    6647:	34 5f                	xor    al,0x5f
    6649:	6d                   	ins    DWORD PTR es:[rdi],dx
    664a:	6d                   	ins    DWORD PTR es:[rdi],dx
    664b:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    664e:	65 72 61             	gs jb  66b2 <__TMC_END__+0x269a>
    6651:	74 6f                	je     66c2 <__TMC_END__+0x26aa>
    6653:	72 2d                	jb     6682 <__TMC_END__+0x266a>
    6655:	3d 00 6f 70 65       	cmp    eax,0x65706f00
    665a:	72 61                	jb     66bd <__TMC_END__+0x26a5>
    665c:	74 6f                	je     66cd <__TMC_END__+0x26b5>
    665e:	72 2d                	jb     668d <__TMC_END__+0x2675>
    6660:	3e 00 5f 5a          	ds add BYTE PTR [rdi+0x5a],bl
    6664:	4e                   	rex.WRX
    6665:	4b 53                	rex.WXB push r11
    6667:	74 37                	je     66a0 <__TMC_END__+0x2688>
    6669:	5f                   	pop    rdi
    666a:	5f                   	pop    rdi
    666b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    666e:	31 31                	xor    DWORD PTR [rcx],esi
    6670:	31 32                	xor    DWORD PTR [rdx],esi
    6672:	62 61 73 69 63       	(bad)
    6677:	5f                   	pop    rdi
    6678:	73 74                	jae    66ee <__TMC_END__+0x26d6>
    667a:	72 69                	jb     66e5 <__TMC_END__+0x26cd>
    667c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    667d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6682:	31 31                	xor    DWORD PTR [rcx],esi
    6684:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6687:	72 5f                	jb     66e8 <__TMC_END__+0x26d0>
    6689:	74 72                	je     66fd <__TMC_END__+0x26e5>
    668b:	61                   	(bad)
    668c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6693:	61 
    6694:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6698:	34 66                	xor    al,0x66
    669a:	69 6e 64 45 52 4b 53 	imul   ebp,DWORD PTR [rsi+0x64],0x534b5245
    66a1:	34 5f                	xor    al,0x5f
    66a3:	6d                   	ins    DWORD PTR es:[rdi],dx
    66a4:	00 64 69 66          	add    BYTE PTR [rcx+rbp*2+0x66],ah
    66a8:	66 74 69             	data16 je 6714 <__TMC_END__+0x26fc>
    66ab:	6d                   	ins    DWORD PTR es:[rdi],dx
    66ac:	65 00 5f 5f          	add    BYTE PTR gs:[rdi+0x5f],bl
    66b0:	69 6e 74 6d 61 78 5f 	imul   ebp,DWORD PTR [rsi+0x74],0x5f78616d
    66b7:	74 00                	je     66b9 <__TMC_END__+0x26a1>
    66b9:	5f                   	pop    rdi
    66ba:	5a                   	pop    rdx
    66bb:	4e                   	rex.WRX
    66bc:	4b 53                	rex.WXB push r11
    66be:	74 37                	je     66f7 <__TMC_END__+0x26df>
    66c0:	5f                   	pop    rdi
    66c1:	5f                   	pop    rdi
    66c2:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    66c5:	31 31                	xor    DWORD PTR [rcx],esi
    66c7:	31 32                	xor    DWORD PTR [rdx],esi
    66c9:	62 61 73 69 63       	(bad)
    66ce:	5f                   	pop    rdi
    66cf:	73 74                	jae    6745 <__TMC_END__+0x272d>
    66d1:	72 69                	jb     673c <__TMC_END__+0x2724>
    66d3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    66d4:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    66d9:	31 31                	xor    DWORD PTR [rcx],esi
    66db:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    66de:	72 5f                	jb     673f <__TMC_END__+0x2727>
    66e0:	74 72                	je     6754 <__TMC_END__+0x273c>
    66e2:	61                   	(bad)
    66e3:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    66ea:	61 
    66eb:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    66ef:	35 72 66 69 6e       	xor    eax,0x6e696672
    66f4:	64 45 50             	fs rex.RB push r8
    66f7:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    66fb:	5f                   	pop    rdi
    66fc:	4d 5f                	rex.WRB pop r15
    66fe:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    6701:	61                   	(bad)
    6702:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
    6705:	79 00                	jns    6707 <__TMC_END__+0x26ef>
    6707:	5f                   	pop    rdi
    6708:	5a                   	pop    rdx
    6709:	4e                   	rex.WRX
    670a:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    670e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    6710:	75 5f                	jne    6771 <__TMC_END__+0x2759>
    6712:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6715:	31 37                	xor    DWORD PTR [rdi],esi
    6717:	5f                   	pop    rdi
    6718:	5f                   	pop    rdi
    6719:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    671a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    671b:	72 6d                	jb     678a <__TMC_END__+0x2772>
    671d:	61                   	(bad)
    671e:	6c                   	ins    BYTE PTR es:[rdi],dx
    671f:	5f                   	pop    rdi
    6720:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6727:	72 
    6728:	49 50                	rex.WB push r8
    672a:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    672d:	34 73                	xor    al,0x73
    672f:	70 61                	jo     6792 <__TMC_END__+0x277a>
    6731:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6732:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    6737:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    673a:	36 37                	ss (bad)
    673c:	34 34                	xor    al,0x34
    673e:	30 37                	xor    BYTE PTR [rdi],dh
    6740:	33 37                	xor    esi,DWORD PTR [rdi]
    6742:	30 39                	xor    BYTE PTR [rcx],bh
    6744:	35 35 31 36 31       	xor    eax,0x31363135
    6749:	35 45 45 45 70       	xor    eax,0x70454545
    674e:	74 45                	je     6795 <__TMC_END__+0x277d>
    6750:	76 00                	jbe    6752 <__TMC_END__+0x273a>
    6752:	5f                   	pop    rdi
    6753:	5a                   	pop    rdx
    6754:	4e 53                	rex.WRX push rbx
    6756:	74 31                	je     6789 <__TMC_END__+0x2771>
    6758:	37                   	(bad)
    6759:	62 61 73 69 63       	(bad)
    675e:	5f                   	pop    rdi
    675f:	73 74                	jae    67d5 <__TMC_END__+0x27bd>
    6761:	72 69                	jb     67cc <__TMC_END__+0x27b4>
    6763:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6764:	67 5f                	addr32 pop rdi
    6766:	76 69                	jbe    67d1 <__TMC_END__+0x27b9>
    6768:	65 77 49             	gs ja  67b4 <__TMC_END__+0x279c>
    676b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    676e:	31 31                	xor    DWORD PTR [rcx],esi
    6770:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6773:	72 5f                	jb     67d4 <__TMC_END__+0x27bc>
    6775:	74 72                	je     67e9 <__TMC_END__+0x27d1>
    6777:	61                   	(bad)
    6778:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    677f:	31 
    6780:	33 72 65             	xor    esi,DWORD PTR [rdx+0x65]
    6783:	6d                   	ins    DWORD PTR es:[rdi],dx
    6784:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6785:	76 65                	jbe    67ec <__TMC_END__+0x27d4>
    6787:	5f                   	pop    rdi
    6788:	73 75                	jae    67ff <__TMC_END__+0x27e7>
    678a:	66 66 69 78 45 6d 00 	data16 imul di,WORD PTR [rax+0x45],0x6d
    6791:	5f                   	pop    rdi
    6792:	5a                   	pop    rdx
    6793:	4e 53                	rex.WRX push rbx
    6795:	74 34                	je     67cb <__TMC_END__+0x27b3>
    6797:	70 61                	jo     67fa <__TMC_END__+0x27e2>
    6799:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    67a0:	45                   	rex.RB
    67a1:	43 34 45             	rex.XB xor al,0x45
    67a4:	52                   	push   rdx
    67a5:	4b 53                	rex.WXB push r11
    67a7:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    67aa:	5f                   	pop    rdi
    67ab:	49                   	rex.WB
    67ac:	4f 5f                	rex.WRXB pop r15
    67ae:	46                   	rex.RX
    67af:	49                   	rex.WB
    67b0:	4c                   	rex.WR
    67b1:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    67b5:	4e                   	rex.WRX
    67b6:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    67ba:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    67bc:	75 5f                	jne    681d <__TMC_END__+0x2805>
    67be:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    67c1:	31 37                	xor    DWORD PTR [rdi],esi
    67c3:	5f                   	pop    rdi
    67c4:	5f                   	pop    rdi
    67c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    67c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    67c7:	72 6d                	jb     6836 <__TMC_END__+0x281e>
    67c9:	61                   	(bad)
    67ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    67cb:	5f                   	pop    rdi
    67cc:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    67d3:	72 
    67d4:	49 50                	rex.WB push r8
    67d6:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    67d9:	34 73                	xor    al,0x73
    67db:	70 61                	jo     683e <__TMC_END__+0x2826>
    67dd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    67de:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    67e3:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    67e6:	36 37                	ss (bad)
    67e8:	34 34                	xor    al,0x34
    67ea:	30 37                	xor    BYTE PTR [rdi],dh
    67ec:	33 37                	xor    esi,DWORD PTR [rdi]
    67ee:	30 39                	xor    BYTE PTR [rcx],bh
    67f0:	35 35 31 36 31       	xor    eax,0x31363135
    67f5:	35 45 45 45 69       	xor    eax,0x69454545
    67fa:	78 45                	js     6841 <__TMC_END__+0x2829>
    67fc:	6c                   	ins    BYTE PTR es:[rdi],dx
    67fd:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6800:	4e 53                	rex.WRX push rbx
    6802:	74 37                	je     683b <__TMC_END__+0x2823>
    6804:	5f                   	pop    rdi
    6805:	5f                   	pop    rdi
    6806:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6809:	31 31                	xor    DWORD PTR [rcx],esi
    680b:	31 32                	xor    DWORD PTR [rdx],esi
    680d:	62 61 73 69 63       	(bad)
    6812:	5f                   	pop    rdi
    6813:	73 74                	jae    6889 <__TMC_END__+0x2871>
    6815:	72 69                	jb     6880 <__TMC_END__+0x2868>
    6817:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6818:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    681d:	31 31                	xor    DWORD PTR [rcx],esi
    681f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6822:	72 5f                	jb     6883 <__TMC_END__+0x286b>
    6824:	74 72                	je     6898 <__TMC_END__+0x2880>
    6826:	61                   	(bad)
    6827:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    682e:	61 
    682f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6833:	36 61                	ss (bad)
    6835:	73 73                	jae    68aa <__TMC_END__+0x2892>
    6837:	69 67 6e 45 53 74 31 	imul   esp,DWORD PTR [rdi+0x6e],0x31745345
    683e:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    6845:	6c 
    6846:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    684d:	73 74                	jae    68c3 <__TMC_END__+0x28ab>
    684f:	49 63 45 00          	movsxd rax,DWORD PTR [r13+0x0]
    6853:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6854:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6855:	74 5f                	je     68b6 <__TMC_END__+0x289e>
    6857:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    6859:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    685a:	75 67                	jne    68c3 <__TMC_END__+0x28ab>
    685c:	68 5f 6d 65 6d       	push   0x6d656d5f
    6861:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6862:	72 79                	jb     68dd <__TMC_END__+0x28c5>
    6864:	00 5f 49             	add    BYTE PTR [rdi+0x49],bl
    6867:	4f 5f                	rex.WRXB pop r15
    6869:	77 69                	ja     68d4 <__TMC_END__+0x28bc>
    686b:	64 65 5f             	fs gs pop rdi
    686e:	64 61                	fs (bad)
    6870:	74 61                	je     68d3 <__TMC_END__+0x28bb>
    6872:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    6875:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    687c:	72 3c                	jb     68ba <__TMC_END__+0x28a2>
    687e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6881:	72 3e                	jb     68c1 <__TMC_END__+0x28a9>
    6883:	00 73 75             	add    BYTE PTR [rbx+0x75],dh
    6886:	62 73 70 61 6e       	(bad)
    688b:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    688e:	74 68                	je     68f8 <__TMC_END__+0x28e0>
    6890:	72 6f                	jb     6901 <__TMC_END__+0x28e9>
    6892:	77 5f                	ja     68f3 <__TMC_END__+0x28db>
    6894:	65 78 63             	gs js  68fa <__TMC_END__+0x28e2>
    6897:	65 70 74             	gs jo  690e <__TMC_END__+0x28f6>
    689a:	69 6f 6e 00 7e 73 70 	imul   ebp,DWORD PTR [rdi+0x6e],0x70737e00
    68a1:	61                   	(bad)
    68a2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    68a3:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    68a7:	68 6f 75 72 00       	push   0x72756f
    68ac:	5f                   	pop    rdi
    68ad:	5a                   	pop    rdx
    68ae:	4e 53                	rex.WRX push rbx
    68b0:	74 38                	je     68ea <__TMC_END__+0x28d2>
    68b2:	5f                   	pop    rdi
    68b3:	5f                   	pop    rdi
    68b4:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    68b6:	72 6d                	jb     6925 <__TMC_END__+0x290d>
    68b8:	61                   	(bad)
    68b9:	74 31                	je     68ec <__TMC_END__+0x28d4>
    68bb:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    68be:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    68c5:	72 49                	jb     6910 <__TMC_END__+0x28f8>
    68c7:	63 45 70             	movsxd eax,DWORD PTR [rbp+0x70]
    68ca:	70 45                	jo     6911 <__TMC_END__+0x28f9>
    68cc:	76 00                	jbe    68ce <__TMC_END__+0x28b6>
    68ce:	5f                   	pop    rdi
    68cf:	5a                   	pop    rdx
    68d0:	4e                   	rex.WRX
    68d1:	4b 53                	rex.WXB push r11
    68d3:	74 34                	je     6909 <__TMC_END__+0x28f1>
    68d5:	73 70                	jae    6947 <__TMC_END__+0x292f>
    68d7:	61                   	(bad)
    68d8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    68d9:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    68de:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    68e1:	36 37                	ss (bad)
    68e3:	34 34                	xor    al,0x34
    68e5:	30 37                	xor    BYTE PTR [rdi],dh
    68e7:	33 37                	xor    esi,DWORD PTR [rdi]
    68e9:	30 39                	xor    BYTE PTR [rcx],bh
    68eb:	35 35 31 36 31       	xor    eax,0x31363135
    68f0:	35 45 45 33 65       	xor    eax,0x65334545
    68f5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    68f6:	64 45 76 00          	fs rex.RB jbe 68fa <__TMC_END__+0x28e2>
    68fa:	5f                   	pop    rdi
    68fb:	5a                   	pop    rdx
    68fc:	4e 53                	rex.WRX push rbx
    68fe:	74 31                	je     6931 <__TMC_END__+0x2919>
    6900:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    6905:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6908:	74 69                	je     6973 <__TMC_END__+0x295b>
    690a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    690b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    690c:	5f                   	pop    rdi
    690d:	70 74                	jo     6983 <__TMC_END__+0x296b>
    690f:	72 31                	jb     6942 <__TMC_END__+0x292a>
    6911:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    6914:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6917:	74 69                	je     6982 <__TMC_END__+0x296a>
    6919:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    691a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    691b:	5f                   	pop    rdi
    691c:	70 74                	jo     6992 <__TMC_END__+0x297a>
    691e:	72 31                	jb     6951 <__TMC_END__+0x2939>
    6920:	30 5f 4d             	xor    BYTE PTR [rdi+0x4d],bl
    6923:	5f                   	pop    rdi
    6924:	72 65                	jb     698b <__TMC_END__+0x2973>
    6926:	6c                   	ins    BYTE PTR es:[rdi],dx
    6927:	65 61                	gs (bad)
    6929:	73 65                	jae    6990 <__TMC_END__+0x2978>
    692b:	45 76 00             	rex.RB jbe 692e <__TMC_END__+0x2916>
    692e:	5f                   	pop    rdi
    692f:	4d 5f                	rex.WRB pop r15
    6931:	61                   	(bad)
    6932:	70 70                	jo     69a4 <__TMC_END__+0x298c>
    6934:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    6936:	64 00 61 74          	add    BYTE PTR fs:[rcx+0x74],ah
    693a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    693b:	6c                   	ins    BYTE PTR es:[rdi],dx
    693c:	6c                   	ins    BYTE PTR es:[rdi],dx
    693d:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6940:	4e 53                	rex.WRX push rbx
    6942:	74 37                	je     697b <__TMC_END__+0x2963>
    6944:	5f                   	pop    rdi
    6945:	5f                   	pop    rdi
    6946:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6949:	31 31                	xor    DWORD PTR [rcx],esi
    694b:	31 32                	xor    DWORD PTR [rdx],esi
    694d:	62 61 73 69 63       	(bad)
    6952:	5f                   	pop    rdi
    6953:	73 74                	jae    69c9 <__TMC_END__+0x29b1>
    6955:	72 69                	jb     69c0 <__TMC_END__+0x29a8>
    6957:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6958:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    695d:	31 31                	xor    DWORD PTR [rcx],esi
    695f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6962:	72 5f                	jb     69c3 <__TMC_END__+0x29ab>
    6964:	74 72                	je     69d8 <__TMC_END__+0x29c0>
    6966:	61                   	(bad)
    6967:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    696e:	61 
    696f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6973:	38 70 6f             	cmp    BYTE PTR [rax+0x6f],dh
    6976:	70 5f                	jo     69d7 <__TMC_END__+0x29bf>
    6978:	62 61 63 6b 45       	(bad)
    697d:	76 00                	jbe    697f <__TMC_END__+0x2967>
    697f:	5f                   	pop    rdi
    6980:	5a                   	pop    rdx
    6981:	4e 53                	rex.WRX push rbx
    6983:	74 31                	je     69b6 <__TMC_END__+0x299e>
    6985:	36 61                	ss (bad)
    6987:	6c                   	ins    BYTE PTR es:[rdi],dx
    6988:	6c                   	ins    BYTE PTR es:[rdi],dx
    6989:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    698a:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    698d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    698e:	72 5f                	jb     69ef <__TMC_END__+0x29d7>
    6990:	74 72                	je     6a04 <__TMC_END__+0x29ec>
    6992:	61                   	(bad)
    6993:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    699a:	63 
    699b:	45                   	rex.RB
    699c:	45 38 6d 61          	cmp    BYTE PTR [r13+0x61],r13b
    69a0:	78 5f                	js     6a01 <__TMC_END__+0x29e9>
    69a2:	73 69                	jae    6a0d <__TMC_END__+0x29f5>
    69a4:	7a 65                	jp     6a0b <__TMC_END__+0x29f3>
    69a6:	45 52                	rex.RB push r10
    69a8:	4b 53                	rex.WXB push r11
    69aa:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    69ad:	5f                   	pop    rdi
    69ae:	5a                   	pop    rdx
    69af:	53                   	push   rbx
    69b0:	74 38                	je     69ea <__TMC_END__+0x29d2>
    69b2:	74 6f                	je     6a23 <__TMC_END__+0x2a0b>
    69b4:	5f                   	pop    rdi
    69b5:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    69b8:	72 73                	jb     6a2d <__TMC_END__+0x2a15>
    69ba:	50                   	push   rax
    69bb:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    69be:	44                   	rex.R
    69bf:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    69c2:	5f                   	pop    rdi
    69c3:	00 66 73             	add    BYTE PTR [rsi+0x73],ah
    69c6:	65 65 6b 00 5f       	gs imul eax,DWORD PTR gs:[rax],0x5f
    69cb:	5a                   	pop    rdx
    69cc:	53                   	push   rbx
    69cd:	74 38                	je     6a07 <__TMC_END__+0x29ef>
    69cf:	74 6f                	je     6a40 <__TMC_END__+0x2a28>
    69d1:	5f                   	pop    rdi
    69d2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    69d5:	72 73                	jb     6a4a <__TMC_END__+0x2a32>
    69d7:	50                   	push   rax
    69d8:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    69db:	44                   	rex.R
    69dc:	46 31 36             	rex.RX xor DWORD PTR [rsi],r14d
    69df:	5f                   	pop    rdi
    69e0:	53                   	push   rbx
    69e1:	74 31                	je     6a14 <__TMC_END__+0x29fc>
    69e3:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    69e6:	61                   	(bad)
    69e7:	72 73                	jb     6a5c <__TMC_END__+0x2a44>
    69e9:	5f                   	pop    rdi
    69ea:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    69ec:	72 6d                	jb     6a5b <__TMC_END__+0x2a43>
    69ee:	61                   	(bad)
    69ef:	74 69                	je     6a5a <__TMC_END__+0x2a42>
    69f1:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    69f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    69f5:	74 5f                	je     6a56 <__TMC_END__+0x2a3e>
    69f7:	66 61                	data16 (bad)
    69f9:	73 74                	jae    6a6f <__TMC_END__+0x2a57>
    69fb:	36 34 5f             	ss xor al,0x5f
    69fe:	74 00                	je     6a00 <__TMC_END__+0x29e8>
    6a00:	5f                   	pop    rdi
    6a01:	49 74 65             	rex.WB je 6a69 <__TMC_END__+0x2a51>
    6a04:	72 00                	jb     6a06 <__TMC_END__+0x29ee>
    6a06:	62 73 65 61 72       	(bad)
    6a0b:	63 68 00             	movsxd ebp,DWORD PTR [rax+0x0]
    6a0e:	5f                   	pop    rdi
    6a0f:	5a                   	pop    rdx
    6a10:	4e 53                	rex.WRX push rbx
    6a12:	74 37                	je     6a4b <__TMC_END__+0x2a33>
    6a14:	5f                   	pop    rdi
    6a15:	5f                   	pop    rdi
    6a16:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6a19:	31 31                	xor    DWORD PTR [rcx],esi
    6a1b:	31 32                	xor    DWORD PTR [rdx],esi
    6a1d:	62 61 73 69 63       	(bad)
    6a22:	5f                   	pop    rdi
    6a23:	73 74                	jae    6a99 <__TMC_END__+0x2a81>
    6a25:	72 69                	jb     6a90 <__TMC_END__+0x2a78>
    6a27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6a28:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6a2d:	31 31                	xor    DWORD PTR [rcx],esi
    6a2f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6a32:	72 5f                	jb     6a93 <__TMC_END__+0x2a7b>
    6a34:	74 72                	je     6aa8 <__TMC_END__+0x2a90>
    6a36:	61                   	(bad)
    6a37:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6a3e:	61 
    6a3f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6a43:	35 63 6c 65 61       	xor    eax,0x61656c63
    6a48:	72 45                	jb     6a8f <__TMC_END__+0x2a77>
    6a4a:	76 00                	jbe    6a4c <__TMC_END__+0x2a34>
    6a4c:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    6a4f:	73 74                	jae    6ac5 <__TMC_END__+0x2aad>
    6a51:	5f                   	pop    rdi
    6a52:	72 65                	jb     6ab9 <__TMC_END__+0x2aa1>
    6a54:	76 65                	jbe    6abb <__TMC_END__+0x2aa3>
    6a56:	72 73                	jb     6acb <__TMC_END__+0x2ab3>
    6a58:	65 5f                	gs pop rdi
    6a5a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6a61:	72 
    6a62:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
    6a65:	73 69                	jae    6ad0 <__TMC_END__+0x2ab8>
    6a67:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
    6a6a:	74 72                	je     6ade <__TMC_END__+0x2ac6>
    6a6c:	69 6e 67 3c 63 68 61 	imul   ebp,DWORD PTR [rsi+0x67],0x6168633c
    6a73:	72 2c                	jb     6aa1 <__TMC_END__+0x2a89>
    6a75:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    6a78:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    6a7b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6a7e:	72 5f                	jb     6adf <__TMC_END__+0x2ac7>
    6a80:	74 72                	je     6af4 <__TMC_END__+0x2adc>
    6a82:	61                   	(bad)
    6a83:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    6a8a:	72 
    6a8b:	3e 2c 20             	ds sub al,0x20
    6a8e:	73 74                	jae    6b04 <__TMC_END__+0x2aec>
    6a90:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    6a93:	61                   	(bad)
    6a94:	6c                   	ins    BYTE PTR es:[rdi],dx
    6a95:	6c                   	ins    BYTE PTR es:[rdi],dx
    6a96:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6a97:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    6a9a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6a9b:	72 3c                	jb     6ad9 <__TMC_END__+0x2ac1>
    6a9d:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6aa0:	72 3e                	jb     6ae0 <__TMC_END__+0x2ac8>
    6aa2:	20 3e                	and    BYTE PTR [rsi],bh
    6aa4:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
    6aa7:	74 77                	je     6b20 <__TMC_END__+0x2b08>
    6aa9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6aac:	72 00                	jb     6aae <__TMC_END__+0x2a96>
    6aae:	5f                   	pop    rdi
    6aaf:	5a                   	pop    rdx
    6ab0:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    6ab4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    6ab6:	75 5f                	jne    6b17 <__TMC_END__+0x2aff>
    6ab8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6abb:	31 37                	xor    DWORD PTR [rdi],esi
    6abd:	5f                   	pop    rdi
    6abe:	5f                   	pop    rdi
    6abf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6ac0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6ac1:	72 6d                	jb     6b30 <__TMC_END__+0x2b18>
    6ac3:	61                   	(bad)
    6ac4:	6c                   	ins    BYTE PTR es:[rdi],dx
    6ac5:	5f                   	pop    rdi
    6ac6:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6acd:	72 
    6ace:	49 50                	rex.WB push r8
    6ad0:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    6ad4:	74 37                	je     6b0d <__TMC_END__+0x2af5>
    6ad6:	5f                   	pop    rdi
    6ad7:	5f                   	pop    rdi
    6ad8:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6adb:	31 31                	xor    DWORD PTR [rcx],esi
    6add:	31 32                	xor    DWORD PTR [rdx],esi
    6adf:	62 61 73 69 63       	(bad)
    6ae4:	5f                   	pop    rdi
    6ae5:	73 74                	jae    6b5b <__TMC_END__+0x2b43>
    6ae7:	72 69                	jb     6b52 <__TMC_END__+0x2b3a>
    6ae9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6aea:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6aef:	31 31                	xor    DWORD PTR [rcx],esi
    6af1:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6af4:	72 5f                	jb     6b55 <__TMC_END__+0x2b3d>
    6af6:	74 72                	je     6b6a <__TMC_END__+0x2b52>
    6af8:	61                   	(bad)
    6af9:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6b00:	61 
    6b01:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6b05:	45                   	rex.RB
    6b06:	45 70 70             	rex.RB jo 6b79 <__TMC_END__+0x2b61>
    6b09:	45 76 00             	rex.RB jbe 6b0c <__TMC_END__+0x2af4>
    6b0c:	69 6e 74 5f 6e 5f 73 	imul   ebp,DWORD PTR [rsi+0x74],0x735f6e5f
    6b13:	69 67 6e 5f 70 6f 73 	imul   esp,DWORD PTR [rdi+0x6e],0x736f705f
    6b1a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6b1b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6b1e:	53                   	push   rbx
    6b1f:	74 38                	je     6b59 <__TMC_END__+0x2b41>
    6b21:	74 6f                	je     6b92 <__TMC_END__+0x2b7a>
    6b23:	5f                   	pop    rdi
    6b24:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6b27:	72 73                	jb     6b9c <__TMC_END__+0x2b84>
    6b29:	50                   	push   rax
    6b2a:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    6b2d:	68 69 00 66 69       	push   0x69660069
    6b32:	78 65                	js     6b99 <__TMC_END__+0x2b81>
    6b34:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    6b38:	4e 53                	rex.WRX push rbx
    6b3a:	74 31                	je     6b6d <__TMC_END__+0x2b55>
    6b3c:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    6b41:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6b44:	74 69                	je     6baf <__TMC_END__+0x2b97>
    6b46:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6b47:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6b48:	5f                   	pop    rdi
    6b49:	70 74                	jo     6bbf <__TMC_END__+0x2ba7>
    6b4b:	72 31                	jb     6b7e <__TMC_END__+0x2b66>
    6b4d:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    6b50:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6b53:	74 69                	je     6bbe <__TMC_END__+0x2ba6>
    6b55:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6b56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6b57:	5f                   	pop    rdi
    6b58:	70 74                	jo     6bce <__TMC_END__+0x2bb6>
    6b5a:	72 43                	jb     6b9f <__TMC_END__+0x2b87>
    6b5c:	34 45                	xor    al,0x45
    6b5e:	52                   	push   rdx
    6b5f:	4b 53                	rex.WXB push r11
    6b61:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    6b64:	5f                   	pop    rdi
    6b65:	5a                   	pop    rdx
    6b66:	4e 53                	rex.WRX push rbx
    6b68:	74 31                	je     6b9b <__TMC_END__+0x2b83>
    6b6a:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    6b6f:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6b72:	74 69                	je     6bdd <__TMC_END__+0x2bc5>
    6b74:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6b75:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6b76:	5f                   	pop    rdi
    6b77:	70 74                	jo     6bed <__TMC_END__+0x2bd5>
    6b79:	72 31                	jb     6bac <__TMC_END__+0x2b94>
    6b7b:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    6b7e:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6b81:	74 69                	je     6bec <__TMC_END__+0x2bd4>
    6b83:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6b84:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6b85:	5f                   	pop    rdi
    6b86:	70 74                	jo     6bfc <__TMC_END__+0x2be4>
    6b88:	72 39                	jb     6bc3 <__TMC_END__+0x2bab>
    6b8a:	5f                   	pop    rdi
    6b8b:	4d 5f                	rex.WRB pop r15
    6b8d:	61                   	(bad)
    6b8e:	64 64 72 65          	fs fs jb 6bf7 <__TMC_END__+0x2bdf>
    6b92:	66 45 76 00          	data16 rex.RB jbe 6b96 <__TMC_END__+0x2b7e>
    6b96:	5f                   	pop    rdi
    6b97:	5a                   	pop    rdx
    6b98:	4e 53                	rex.WRX push rbx
    6b9a:	74 37                	je     6bd3 <__TMC_END__+0x2bbb>
    6b9c:	5f                   	pop    rdi
    6b9d:	5f                   	pop    rdi
    6b9e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6ba1:	31 31                	xor    DWORD PTR [rcx],esi
    6ba3:	31 32                	xor    DWORD PTR [rdx],esi
    6ba5:	62 61 73 69 63       	(bad)
    6baa:	5f                   	pop    rdi
    6bab:	73 74                	jae    6c21 <__TMC_END__+0x2c09>
    6bad:	72 69                	jb     6c18 <__TMC_END__+0x2c00>
    6baf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6bb0:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6bb5:	31 31                	xor    DWORD PTR [rcx],esi
    6bb7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6bba:	72 5f                	jb     6c1b <__TMC_END__+0x2c03>
    6bbc:	74 72                	je     6c30 <__TMC_END__+0x2c18>
    6bbe:	61                   	(bad)
    6bbf:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6bc6:	61 
    6bc7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6bcb:	39 5f 4d             	cmp    DWORD PTR [rdi+0x4d],ebx
    6bce:	5f                   	pop    rdi
    6bcf:	61                   	(bad)
    6bd0:	73 73                	jae    6c45 <__TMC_END__+0x2c2d>
    6bd2:	69 67 6e 45 52 4b 53 	imul   esp,DWORD PTR [rdi+0x6e],0x534b5245
    6bd9:	34 5f                	xor    al,0x5f
    6bdb:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    6bdf:	6d                   	ins    DWORD PTR es:[rdi],dx
    6be0:	64 61                	fs (bad)
    6be2:	79 00                	jns    6be4 <__TMC_END__+0x2bcc>
    6be4:	5f                   	pop    rdi
    6be5:	5a                   	pop    rdx
    6be6:	4e 53                	rex.WRX push rbx
    6be8:	74 37                	je     6c21 <__TMC_END__+0x2c09>
    6bea:	5f                   	pop    rdi
    6beb:	5f                   	pop    rdi
    6bec:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6bef:	31 31                	xor    DWORD PTR [rcx],esi
    6bf1:	31 32                	xor    DWORD PTR [rdx],esi
    6bf3:	62 61 73 69 63       	(bad)
    6bf8:	5f                   	pop    rdi
    6bf9:	73 74                	jae    6c6f <__TMC_END__+0x2c57>
    6bfb:	72 69                	jb     6c66 <__TMC_END__+0x2c4e>
    6bfd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6bfe:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6c03:	31 31                	xor    DWORD PTR [rcx],esi
    6c05:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6c08:	72 5f                	jb     6c69 <__TMC_END__+0x2c51>
    6c0a:	74 72                	je     6c7e <__TMC_END__+0x2c66>
    6c0c:	61                   	(bad)
    6c0d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6c14:	61 
    6c15:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6c19:	43 34 45             	rex.XB xor al,0x45
    6c1c:	76 00                	jbe    6c1e <__TMC_END__+0x2c06>
    6c1e:	5f                   	pop    rdi
    6c1f:	53                   	push   rbx
    6c20:	5f                   	pop    rdi
    6c21:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    6c24:	70 61                	jo     6c87 <__TMC_END__+0x2c6f>
    6c26:	72 65                	jb     6c8d <__TMC_END__+0x2c75>
    6c28:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    6c2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6c2c:	73 74                	jae    6ca2 <__TMC_END__+0x2c8a>
    6c2e:	5f                   	pop    rdi
    6c2f:	76 6f                	jbe    6ca0 <__TMC_END__+0x2c88>
    6c31:	69 64 5f 70 6f 69 6e 	imul   esp,DWORD PTR [rdi+rbx*2+0x70],0x746e696f
    6c38:	74 
    6c39:	65 72 00             	gs jb  6c3c <__TMC_END__+0x2c24>
    6c3c:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    6c3f:	73 74                	jae    6cb5 <__TMC_END__+0x2c9d>
    6c41:	5f                   	pop    rdi
    6c42:	72 65                	jb     6ca9 <__TMC_END__+0x2c91>
    6c44:	66 65 72 65          	data16 gs jb 6cad <__TMC_END__+0x2c95>
    6c48:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6c49:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    6c4c:	5f                   	pop    rdi
    6c4d:	5a                   	pop    rdx
    6c4e:	4e 53                	rex.WRX push rbx
    6c50:	74 31                	je     6c83 <__TMC_END__+0x2c6b>
    6c52:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    6c59:	6c 
    6c5a:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    6c61:	73 74                	jae    6cd7 <__TMC_END__+0x2cbf>
    6c63:	49 63 45 43          	movsxd rax,DWORD PTR [r13+0x43]
    6c67:	34 45                	xor    al,0x45
    6c69:	76 00                	jbe    6c6b <__TMC_END__+0x2c53>
    6c6b:	5f                   	pop    rdi
    6c6c:	5a                   	pop    rdx
    6c6d:	4e                   	rex.WRX
    6c6e:	4b 53                	rex.WXB push r11
    6c70:	74 31                	je     6ca3 <__TMC_END__+0x2c8b>
    6c72:	36 72 65             	ss jb  6cda <__TMC_END__+0x2cc2>
    6c75:	76 65                	jbe    6cdc <__TMC_END__+0x2cc4>
    6c77:	72 73                	jb     6cec <__TMC_END__+0x2cd4>
    6c79:	65 5f                	gs pop rdi
    6c7b:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6c82:	72 
    6c83:	49                   	rex.WB
    6c84:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    6c88:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    6c8a:	75 5f                	jne    6ceb <__TMC_END__+0x2cd3>
    6c8c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6c8f:	31 37                	xor    DWORD PTR [rdi],esi
    6c91:	5f                   	pop    rdi
    6c92:	5f                   	pop    rdi
    6c93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6c94:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6c95:	72 6d                	jb     6d04 <__TMC_END__+0x2cec>
    6c97:	61                   	(bad)
    6c98:	6c                   	ins    BYTE PTR es:[rdi],dx
    6c99:	5f                   	pop    rdi
    6c9a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6ca1:	72 
    6ca2:	49 50                	rex.WB push r8
    6ca4:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    6ca7:	34 73                	xor    al,0x73
    6ca9:	70 61                	jo     6d0c <__TMC_END__+0x2cf4>
    6cab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6cac:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    6cb1:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    6cb4:	36 37                	ss (bad)
    6cb6:	34 34                	xor    al,0x34
    6cb8:	30 37                	xor    BYTE PTR [rdi],dh
    6cba:	33 37                	xor    esi,DWORD PTR [rdi]
    6cbc:	30 39                	xor    BYTE PTR [rcx],bh
    6cbe:	35 35 31 36 31       	xor    eax,0x31363135
    6cc3:	35 45 45 45 45       	xor    eax,0x45454545
    6cc8:	45 70 74             	rex.RB jo 6d3f <__TMC_END__+0x2d27>
    6ccb:	45 76 51             	rex.RB jbe 6d1f <__TMC_END__+0x2d07>
    6cce:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6ccf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6cd0:	31 32                	xor    DWORD PTR [rdx],esi
    6cd2:	69 73 5f 70 6f 69 6e 	imul   esi,DWORD PTR [rbx+0x5f],0x6e696f70
    6cd9:	74 65                	je     6d40 <__TMC_END__+0x2d28>
    6cdb:	72 5f                	jb     6d3c <__TMC_END__+0x2d24>
    6cdd:	76 49                	jbe    6d28 <__TMC_END__+0x2d10>
    6cdf:	54                   	push   rsp
    6ce0:	5f                   	pop    rdi
    6ce1:	45 72 51             	rex.RB jb 6d35 <__TMC_END__+0x2d1d>
    6ce4:	53                   	push   rbx
    6ce5:	37                   	(bad)
    6ce6:	5f                   	pop    rdi
    6ce7:	5f                   	pop    rdi
    6ce8:	58                   	pop    rax
    6ce9:	63 6c 64 74          	movsxd ebp,DWORD PTR [rsp+riz*2+0x74]
    6ced:	66 70 5f             	data16 jo 6d4f <__TMC_END__+0x2d37>
    6cf0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6cf1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6cf2:	70 74                	jo     6d68 <__TMC_END__+0x2d50>
    6cf4:	45                   	rex.RB
    6cf5:	45 00 5f 4d          	add    BYTE PTR [r15+0x4d],r11b
    6cf9:	5f                   	pop    rdi
    6cfa:	6d                   	ins    DWORD PTR es:[rdi],dx
    6cfb:	61                   	(bad)
    6cfc:	78 5f                	js     6d5d <__TMC_END__+0x2d45>
    6cfe:	73 69                	jae    6d69 <__TMC_END__+0x2d51>
    6d00:	7a 65                	jp     6d67 <__TMC_END__+0x2d4f>
    6d02:	00 74 69 6d          	add    BYTE PTR [rcx+rbp*2+0x6d],dh
    6d06:	65 73 70             	gs jae 6d79 <__TMC_END__+0x2d61>
    6d09:	65 63 5f 67          	movsxd ebx,DWORD PTR gs:[rdi+0x67]
    6d0d:	65 74 00             	gs je  6d10 <__TMC_END__+0x2cf8>
    6d10:	5f                   	pop    rdi
    6d11:	5a                   	pop    rdx
    6d12:	4e                   	rex.WRX
    6d13:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    6d17:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    6d19:	75 5f                	jne    6d7a <__TMC_END__+0x2d62>
    6d1b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6d1e:	31 37                	xor    DWORD PTR [rdi],esi
    6d20:	5f                   	pop    rdi
    6d21:	5f                   	pop    rdi
    6d22:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6d23:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6d24:	72 6d                	jb     6d93 <__TMC_END__+0x2d7b>
    6d26:	61                   	(bad)
    6d27:	6c                   	ins    BYTE PTR es:[rdi],dx
    6d28:	5f                   	pop    rdi
    6d29:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6d30:	72 
    6d31:	49 50                	rex.WB push r8
    6d33:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    6d37:	74 37                	je     6d70 <__TMC_END__+0x2d58>
    6d39:	5f                   	pop    rdi
    6d3a:	5f                   	pop    rdi
    6d3b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6d3e:	31 31                	xor    DWORD PTR [rcx],esi
    6d40:	31 32                	xor    DWORD PTR [rdx],esi
    6d42:	62 61 73 69 63       	(bad)
    6d47:	5f                   	pop    rdi
    6d48:	73 74                	jae    6dbe <__TMC_END__+0x2da6>
    6d4a:	72 69                	jb     6db5 <__TMC_END__+0x2d9d>
    6d4c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6d4d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6d52:	31 31                	xor    DWORD PTR [rcx],esi
    6d54:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6d57:	72 5f                	jb     6db8 <__TMC_END__+0x2da0>
    6d59:	74 72                	je     6dcd <__TMC_END__+0x2db5>
    6d5b:	61                   	(bad)
    6d5c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6d63:	61 
    6d64:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6d68:	45                   	rex.RB
    6d69:	45 34 62             	rex.RB xor al,0x62
    6d6c:	61                   	(bad)
    6d6d:	73 65                	jae    6dd4 <__TMC_END__+0x2dbc>
    6d6f:	45 76 00             	rex.RB jbe 6d72 <__TMC_END__+0x2d5a>
    6d72:	5f                   	pop    rdi
    6d73:	5a                   	pop    rdx
    6d74:	4e                   	rex.WRX
    6d75:	4b 53                	rex.WXB push r11
    6d77:	74 31                	je     6daa <__TMC_END__+0x2d92>
    6d79:	37                   	(bad)
    6d7a:	62 61 73 69 63       	(bad)
    6d7f:	5f                   	pop    rdi
    6d80:	73 74                	jae    6df6 <__TMC_END__+0x2dde>
    6d82:	72 69                	jb     6ded <__TMC_END__+0x2dd5>
    6d84:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6d85:	67 5f                	addr32 pop rdi
    6d87:	76 69                	jbe    6df2 <__TMC_END__+0x2dda>
    6d89:	65 77 49             	gs ja  6dd5 <__TMC_END__+0x2dbd>
    6d8c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    6d8f:	31 31                	xor    DWORD PTR [rcx],esi
    6d91:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6d94:	72 5f                	jb     6df5 <__TMC_END__+0x2ddd>
    6d96:	74 72                	je     6e0a <__TMC_END__+0x2df2>
    6d98:	61                   	(bad)
    6d99:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    6da0:	34 
    6da1:	66 69 6e 64 45 50    	imul   bp,WORD PTR [rsi+0x64],0x5045
    6da7:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    6dab:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6dae:	4e 53                	rex.WRX push rbx
    6db0:	74 37                	je     6de9 <__TMC_END__+0x2dd1>
    6db2:	5f                   	pop    rdi
    6db3:	5f                   	pop    rdi
    6db4:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6db7:	31 31                	xor    DWORD PTR [rcx],esi
    6db9:	31 32                	xor    DWORD PTR [rdx],esi
    6dbb:	62 61 73 69 63       	(bad)
    6dc0:	5f                   	pop    rdi
    6dc1:	73 74                	jae    6e37 <__TMC_END__+0x2e1f>
    6dc3:	72 69                	jb     6e2e <__TMC_END__+0x2e16>
    6dc5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6dc6:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6dcb:	31 31                	xor    DWORD PTR [rcx],esi
    6dcd:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6dd0:	72 5f                	jb     6e31 <__TMC_END__+0x2e19>
    6dd2:	74 72                	je     6e46 <__TMC_END__+0x2e2e>
    6dd4:	61                   	(bad)
    6dd5:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6ddc:	61 
    6ddd:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6de1:	36 61                	ss (bad)
    6de3:	73 73                	jae    6e58 <__TMC_END__+0x2e40>
    6de5:	69 67 6e 45 52 4b 53 	imul   esp,DWORD PTR [rdi+0x6e],0x534b5245
    6dec:	34 5f                	xor    al,0x5f
    6dee:	6d                   	ins    DWORD PTR es:[rdi],dx
    6def:	6d                   	ins    DWORD PTR es:[rdi],dx
    6df0:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
    6df3:	5f                   	pop    rdi
    6df4:	73 75                	jae    6e6b <__TMC_END__+0x2e53>
    6df6:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
    6df9:	66 69 6c 65 5f 6f 72 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x726f
    6e00:	5f                   	pop    rdi
    6e01:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
    6e08:	72 
    6e09:	79 00                	jns    6e0b <__TMC_END__+0x2df3>
    6e0b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e0c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6e0d:	74 5f                	je     6e6e <__TMC_END__+0x2e56>
    6e0f:	61                   	(bad)
    6e10:	5f                   	pop    rdi
    6e11:	73 74                	jae    6e87 <__TMC_END__+0x2e6f>
    6e13:	72 65                	jb     6e7a <__TMC_END__+0x2e62>
    6e15:	61                   	(bad)
    6e16:	6d                   	ins    DWORD PTR es:[rdi],dx
    6e17:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6e1a:	4e                   	rex.WRX
    6e1b:	4b 53                	rex.WXB push r11
    6e1d:	74 31                	je     6e50 <__TMC_END__+0x2e38>
    6e1f:	37                   	(bad)
    6e20:	62 61 73 69 63       	(bad)
    6e25:	5f                   	pop    rdi
    6e26:	73 74                	jae    6e9c <__TMC_END__+0x2e84>
    6e28:	72 69                	jb     6e93 <__TMC_END__+0x2e7b>
    6e2a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e2b:	67 5f                	addr32 pop rdi
    6e2d:	76 69                	jbe    6e98 <__TMC_END__+0x2e80>
    6e2f:	65 77 49             	gs ja  6e7b <__TMC_END__+0x2e63>
    6e32:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    6e35:	31 31                	xor    DWORD PTR [rcx],esi
    6e37:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6e3a:	72 5f                	jb     6e9b <__TMC_END__+0x2e83>
    6e3c:	74 72                	je     6eb0 <__TMC_END__+0x2e98>
    6e3e:	61                   	(bad)
    6e3f:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x37454563
    6e46:	37 
    6e47:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    6e4a:	70 61                	jo     6ead <__TMC_END__+0x2e95>
    6e4c:	72 65                	jb     6eb3 <__TMC_END__+0x2e9b>
    6e4e:	45 50                	rex.RB push r8
    6e50:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    6e53:	66 73 65             	data16 jae 6ebb <__TMC_END__+0x2ea3>
    6e56:	74 70                	je     6ec8 <__TMC_END__+0x2eb0>
    6e58:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6e59:	73 00                	jae    6e5b <__TMC_END__+0x2e43>
    6e5b:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    6e5e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e5f:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    6e64:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e65:	5f                   	pop    rdi
    6e66:	72 65                	jb     6ecd <__TMC_END__+0x2eb5>
    6e68:	66 75 73             	data16 jne 6ede <__TMC_END__+0x2ec6>
    6e6b:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
    6e70:	4e 53                	rex.WRX push rbx
    6e72:	74 31                	je     6ea5 <__TMC_END__+0x2e8d>
    6e74:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    6e79:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6e7c:	74 69                	je     6ee7 <__TMC_END__+0x2ecf>
    6e7e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6e7f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e80:	5f                   	pop    rdi
    6e81:	70 74                	jo     6ef7 <__TMC_END__+0x2edf>
    6e83:	72 31                	jb     6eb6 <__TMC_END__+0x2e9e>
    6e85:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    6e88:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    6e8b:	74 69                	je     6ef6 <__TMC_END__+0x2ede>
    6e8d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6e8e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6e8f:	5f                   	pop    rdi
    6e90:	70 74                	jo     6f06 <__TMC_END__+0x2eee>
    6e92:	72 34                	jb     6ec8 <__TMC_END__+0x2eb0>
    6e94:	73 77                	jae    6f0d <__TMC_END__+0x2ef5>
    6e96:	61                   	(bad)
    6e97:	70 45                	jo     6ede <__TMC_END__+0x2ec6>
    6e99:	52                   	push   rdx
    6e9a:	53                   	push   rbx
    6e9b:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    6e9e:	5f                   	pop    rdi
    6e9f:	6d                   	ins    DWORD PTR es:[rdi],dx
    6ea0:	61                   	(bad)
    6ea1:	72 6b                	jb     6f0e <__TMC_END__+0x2ef6>
    6ea3:	65 72 73             	gs jb  6f19 <__TMC_END__+0x2f01>
    6ea6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6ea9:	53                   	push   rbx
    6eaa:	74 38                	je     6ee4 <__TMC_END__+0x2ecc>
    6eac:	74 6f                	je     6f1d <__TMC_END__+0x2f05>
    6eae:	5f                   	pop    rdi
    6eaf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6eb2:	72 73                	jb     6f27 <__TMC_END__+0x2f0f>
    6eb4:	50                   	push   rax
    6eb5:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    6eb8:	69 69 00 64 69 72 65 	imul   ebp,DWORD PTR [rcx+0x0],0x65726964
    6ebf:	63 74 6f 72          	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
    6ec3:	79 5f                	jns    6f24 <__TMC_END__+0x2f0c>
    6ec5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6ec6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6ec7:	74 5f                	je     6f28 <__TMC_END__+0x2f10>
    6ec9:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    6ecb:	70 74                	jo     6f41 <__TMC_END__+0x2f29>
    6ecd:	79 00                	jns    6ecf <__TMC_END__+0x2eb7>
    6ecf:	5f                   	pop    rdi
    6ed0:	49                   	rex.WB
    6ed1:	4f 5f                	rex.WRXB pop r15
    6ed3:	73 61                	jae    6f36 <__TMC_END__+0x2f1e>
    6ed5:	76 65                	jbe    6f3c <__TMC_END__+0x2f24>
    6ed7:	5f                   	pop    rdi
    6ed8:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    6eda:	64 00 5f 4d          	add    BYTE PTR fs:[rdi+0x4d],bl
    6ede:	5f                   	pop    rdi
    6edf:	6c                   	ins    BYTE PTR es:[rdi],dx
    6ee0:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    6ee2:	67 74 68             	addr32 je 6f4d <__TMC_END__+0x2f35>
    6ee5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6ee8:	4e 53                	rex.WRX push rbx
    6eea:	74 37                	je     6f23 <__TMC_END__+0x2f0b>
    6eec:	5f                   	pop    rdi
    6eed:	5f                   	pop    rdi
    6eee:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6ef1:	31 31                	xor    DWORD PTR [rcx],esi
    6ef3:	31 32                	xor    DWORD PTR [rdx],esi
    6ef5:	62 61 73 69 63       	(bad)
    6efa:	5f                   	pop    rdi
    6efb:	73 74                	jae    6f71 <__TMC_END__+0x2f59>
    6efd:	72 69                	jb     6f68 <__TMC_END__+0x2f50>
    6eff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6f00:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    6f05:	31 31                	xor    DWORD PTR [rcx],esi
    6f07:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6f0a:	72 5f                	jb     6f6b <__TMC_END__+0x2f53>
    6f0c:	74 72                	je     6f80 <__TMC_END__+0x2f68>
    6f0e:	61                   	(bad)
    6f0f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    6f16:	61 
    6f17:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    6f1b:	70 4c                	jo     6f69 <__TMC_END__+0x2f51>
    6f1d:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    6f20:	5f                   	pop    rdi
    6f21:	5f                   	pop    rdi
    6f22:	76 74                	jbe    6f98 <__TMC_END__+0x2f80>
    6f24:	62 6c 5f 70 74       	(bad)
    6f29:	72 5f                	jb     6f8a <__TMC_END__+0x2f72>
    6f2b:	74 79                	je     6fa6 <__TMC_END__+0x2f8e>
    6f2d:	70 65                	jo     6f94 <__TMC_END__+0x2f7c>
    6f2f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    6f32:	4e                   	rex.WRX
    6f33:	4b 53                	rex.WXB push r11
    6f35:	74 31                	je     6f68 <__TMC_END__+0x2f50>
    6f37:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    6f3e:	6c 
    6f3f:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    6f46:	73 74                	jae    6fbc <__TMC_END__+0x2fa4>
    6f48:	49 63 45 33          	movsxd rax,DWORD PTR [r13+0x33]
    6f4c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    6f4e:	64 45 76 00          	fs rex.RB jbe 6f52 <__TMC_END__+0x2f3a>
    6f52:	5f                   	pop    rdi
    6f53:	5a                   	pop    rdx
    6f54:	4e                   	rex.WRX
    6f55:	4b 53                	rex.WXB push r11
    6f57:	74 31                	je     6f8a <__TMC_END__+0x2f72>
    6f59:	37                   	(bad)
    6f5a:	62 61 73 69 63       	(bad)
    6f5f:	5f                   	pop    rdi
    6f60:	73 74                	jae    6fd6 <__TMC_END__+0x2fbe>
    6f62:	72 69                	jb     6fcd <__TMC_END__+0x2fb5>
    6f64:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6f65:	67 5f                	addr32 pop rdi
    6f67:	76 69                	jbe    6fd2 <__TMC_END__+0x2fba>
    6f69:	65 77 49             	gs ja  6fb5 <__TMC_END__+0x2f9d>
    6f6c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    6f6f:	31 31                	xor    DWORD PTR [rcx],esi
    6f71:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6f74:	72 5f                	jb     6fd5 <__TMC_END__+0x2fbd>
    6f76:	74 72                	je     6fea <__TMC_END__+0x2fd2>
    6f78:	61                   	(bad)
    6f79:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x69454563
    6f80:	69 
    6f81:	78 45                	js     6fc8 <__TMC_END__+0x2fb0>
    6f83:	6d                   	ins    DWORD PTR es:[rdi],dx
    6f84:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    6f87:	76 65                	jbe    6fee <__TMC_END__+0x2fd6>
    6f89:	72 73                	jb     6ffe <__TMC_END__+0x2fe6>
    6f8b:	65 5f                	gs pop rdi
    6f8d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6f94:	72 
    6f95:	3c 5f                	cmp    al,0x5f
    6f97:	5f                   	pop    rdi
    6f98:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    6f9a:	75 5f                	jne    6ffb <__TMC_END__+0x2fe3>
    6f9c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6f9f:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    6fa1:	5f                   	pop    rdi
    6fa2:	5f                   	pop    rdi
    6fa3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6fa4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6fa5:	72 6d                	jb     7014 <__TMC_END__+0x2ffc>
    6fa7:	61                   	(bad)
    6fa8:	6c                   	ins    BYTE PTR es:[rdi],dx
    6fa9:	5f                   	pop    rdi
    6faa:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    6fb1:	72 
    6fb2:	3c 63                	cmp    al,0x63
    6fb4:	68 61 72 20 63       	push   0x63207261
    6fb9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    6fba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6fbb:	73 74                	jae    7031 <__TMC_END__+0x3019>
    6fbd:	2a 2c 20             	sub    ch,BYTE PTR [rax+riz*1]
    6fc0:	73 74                	jae    7036 <__TMC_END__+0x301e>
    6fc2:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    6fc5:	5f                   	pop    rdi
    6fc6:	5f                   	pop    rdi
    6fc7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    6fca:	31 31                	xor    DWORD PTR [rcx],esi
    6fcc:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    6fce:	62 61 73 69 63       	(bad)
    6fd3:	5f                   	pop    rdi
    6fd4:	73 74                	jae    704a <__TMC_END__+0x3032>
    6fd6:	72 69                	jb     7041 <__TMC_END__+0x3029>
    6fd8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    6fd9:	67 3c 63             	addr32 cmp al,0x63
    6fdc:	68 61 72 2c 20       	push   0x202c7261
    6fe1:	73 74                	jae    7057 <__TMC_END__+0x303f>
    6fe3:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    6fe6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    6fe9:	72 5f                	jb     704a <__TMC_END__+0x3032>
    6feb:	74 72                	je     705f <__TMC_END__+0x3047>
    6fed:	61                   	(bad)
    6fee:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    6ff5:	72 
    6ff6:	3e 2c 20             	ds sub al,0x20
    6ff9:	73 74                	jae    706f <__TMC_END__+0x3057>
    6ffb:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    6ffe:	61                   	(bad)
    6fff:	6c                   	ins    BYTE PTR es:[rdi],dx
    7000:	6c                   	ins    BYTE PTR es:[rdi],dx
    7001:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7002:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    7005:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7006:	72 3c                	jb     7044 <__TMC_END__+0x302c>
    7008:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    700b:	72 3e                	jb     704b <__TMC_END__+0x3033>
    700d:	20 3e                	and    BYTE PTR [rsi],bh
    700f:	20 3e                	and    BYTE PTR [rsi],bh
    7011:	20 3e                	and    BYTE PTR [rsi],bh
    7013:	00 63 6f             	add    BYTE PTR [rbx+0x6f],ah
    7016:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7017:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7018:	65 63 74 69 6f       	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
    701d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    701e:	5f                   	pop    rdi
    701f:	61                   	(bad)
    7020:	62 6f 72 74 65       	(bad)
    7025:	64 00 5f 5a          	add    BYTE PTR fs:[rdi+0x5a],bl
    7029:	53                   	push   rbx
    702a:	74 38                	je     7064 <__TMC_END__+0x304c>
    702c:	74 6f                	je     709d <__TMC_END__+0x3085>
    702e:	5f                   	pop    rdi
    702f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7032:	72 73                	jb     70a7 <__TMC_END__+0x308f>
    7034:	50                   	push   rax
    7035:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    7038:	6a 69                	push   0x69
    703a:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    703d:	73 77                	jae    70b6 <__TMC_END__+0x309e>
    703f:	61                   	(bad)
    7040:	70 70                	jo     70b2 <__TMC_END__+0x309a>
    7042:	61                   	(bad)
    7043:	62 6c 65 5f 77       	(bad)
    7048:	69 74 68 5f 64 65 74 	imul   esi,DWORD PTR [rax+rbp*2+0x5f],0x61746564
    704f:	61 
    7050:	69 6c 73 00 5f 5a 4e 	imul   ebp,DWORD PTR [rbx+rsi*2+0x0],0x534e5a5f
    7057:	53 
    7058:	74 31                	je     708b <__TMC_END__+0x3073>
    705a:	36 72 65             	ss jb  70c2 <__TMC_END__+0x30aa>
    705d:	76 65                	jbe    70c4 <__TMC_END__+0x30ac>
    705f:	72 73                	jb     70d4 <__TMC_END__+0x30bc>
    7061:	65 5f                	gs pop rdi
    7063:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    706a:	72 
    706b:	49                   	rex.WB
    706c:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    7070:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    7072:	75 5f                	jne    70d3 <__TMC_END__+0x30bb>
    7074:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7077:	31 37                	xor    DWORD PTR [rdi],esi
    7079:	5f                   	pop    rdi
    707a:	5f                   	pop    rdi
    707b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    707c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    707d:	72 6d                	jb     70ec <__TMC_END__+0x30d4>
    707f:	61                   	(bad)
    7080:	6c                   	ins    BYTE PTR es:[rdi],dx
    7081:	5f                   	pop    rdi
    7082:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7089:	72 
    708a:	49 50                	rex.WB push r8
    708c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    708f:	34 73                	xor    al,0x73
    7091:	70 61                	jo     70f4 <__TMC_END__+0x30dc>
    7093:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7094:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    7099:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    709c:	36 37                	ss (bad)
    709e:	34 34                	xor    al,0x34
    70a0:	30 37                	xor    BYTE PTR [rdi],dh
    70a2:	33 37                	xor    esi,DWORD PTR [rdi]
    70a4:	30 39                	xor    BYTE PTR [rcx],bh
    70a6:	35 35 31 36 31       	xor    eax,0x31363135
    70ab:	35 45 45 45 45       	xor    eax,0x45454545
    70b0:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    70b2:	6d                   	ins    DWORD PTR es:[rdi],dx
    70b3:	45 76 00             	rex.RB jbe 70b6 <__TMC_END__+0x309e>
    70b6:	5f                   	pop    rdi
    70b7:	5a                   	pop    rdx
    70b8:	4e                   	rex.WRX
    70b9:	4b 53                	rex.WXB push r11
    70bb:	74 31                	je     70ee <__TMC_END__+0x30d6>
    70bd:	37                   	(bad)
    70be:	62 61 73 69 63       	(bad)
    70c3:	5f                   	pop    rdi
    70c4:	73 74                	jae    713a <__TMC_END__+0x3122>
    70c6:	72 69                	jb     7131 <__TMC_END__+0x3119>
    70c8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    70c9:	67 5f                	addr32 pop rdi
    70cb:	76 69                	jbe    7136 <__TMC_END__+0x311e>
    70cd:	65 77 49             	gs ja  7119 <__TMC_END__+0x3101>
    70d0:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    70d3:	31 31                	xor    DWORD PTR [rcx],esi
    70d5:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    70d8:	72 5f                	jb     7139 <__TMC_END__+0x3121>
    70da:	74 72                	je     714e <__TMC_END__+0x3136>
    70dc:	61                   	(bad)
    70dd:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    70e4:	35 
    70e5:	66 72 6f             	data16 jb 7157 <__TMC_END__+0x313f>
    70e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    70e9:	74 45                	je     7130 <__TMC_END__+0x3118>
    70eb:	76 00                	jbe    70ed <__TMC_END__+0x30d5>
    70ed:	5f                   	pop    rdi
    70ee:	5f                   	pop    rdi
    70ef:	46                   	rex.RX
    70f0:	49                   	rex.WB
    70f1:	4c                   	rex.WR
    70f2:	45 00 5f 5a          	add    BYTE PTR [r15+0x5a],r11b
    70f6:	4e 53                	rex.WRX push rbx
    70f8:	74 37                	je     7131 <__TMC_END__+0x3119>
    70fa:	5f                   	pop    rdi
    70fb:	5f                   	pop    rdi
    70fc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    70ff:	31 31                	xor    DWORD PTR [rcx],esi
    7101:	31 32                	xor    DWORD PTR [rdx],esi
    7103:	62 61 73 69 63       	(bad)
    7108:	5f                   	pop    rdi
    7109:	73 74                	jae    717f <__TMC_END__+0x3167>
    710b:	72 69                	jb     7176 <__TMC_END__+0x315e>
    710d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    710e:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7113:	31 31                	xor    DWORD PTR [rcx],esi
    7115:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7118:	72 5f                	jb     7179 <__TMC_END__+0x3161>
    711a:	74 72                	je     718e <__TMC_END__+0x3176>
    711c:	61                   	(bad)
    711d:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7124:	61 
    7125:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7129:	61                   	(bad)
    712a:	53                   	push   rbx
    712b:	45                   	rex.RB
    712c:	44 6e                	rex.R outs dx,BYTE PTR ds:[rsi]
    712e:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    7131:	4e 53                	rex.WRX push rbx
    7133:	74 38                	je     716d <__TMC_END__+0x3155>
    7135:	5f                   	pop    rdi
    7136:	5f                   	pop    rdi
    7137:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    7139:	72 6d                	jb     71a8 <__TMC_END__+0x3190>
    713b:	61                   	(bad)
    713c:	74 35                	je     7173 <__TMC_END__+0x315b>
    713e:	5f                   	pop    rdi
    713f:	53                   	push   rbx
    7140:	69 6e 6b 49 63 45 44 	imul   ebp,DWORD PTR [rsi+0x6b],0x44456349
    7147:	34 45                	xor    al,0x45
    7149:	76 00                	jbe    714b <__TMC_END__+0x3133>
    714b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    714c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    714d:	5f                   	pop    rdi
    714e:	6d                   	ins    DWORD PTR es:[rdi],dx
    714f:	65 73 73             	gs jae 71c5 <__TMC_END__+0x31ad>
    7152:	61                   	(bad)
    7153:	67 65 5f             	addr32 gs pop rdi
    7156:	61                   	(bad)
    7157:	76 61                	jbe    71ba <__TMC_END__+0x31a2>
    7159:	69 6c 61 62 6c 65 00 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x7400656c
    7160:	74 
    7161:	79 70                	jns    71d3 <__TMC_END__+0x31bb>
    7163:	65 64 65 66 20 5f 5f 	gs fs data16 and BYTE PTR gs:[rdi+0x5f],bl
    716a:	76 61                	jbe    71cd <__TMC_END__+0x31b5>
    716c:	5f                   	pop    rdi
    716d:	6c                   	ins    BYTE PTR es:[rdi],dx
    716e:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    7175:	20 5f 5f             	and    BYTE PTR [rdi+0x5f],bl
    7178:	76 61                	jbe    71db <__TMC_END__+0x31c3>
    717a:	5f                   	pop    rdi
    717b:	6c                   	ins    BYTE PTR es:[rdi],dx
    717c:	69 73 74 5f 74 61 67 	imul   esi,DWORD PTR [rbx+0x74],0x6761745f
    7183:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    7186:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    7189:	64 69 74 69 6f 6e 61 	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x3c6c616e
    7190:	6c 3c 
    7192:	66 61                	data16 (bad)
    7194:	6c                   	ins    BYTE PTR es:[rdi],dx
    7195:	73 65                	jae    71fc <__TMC_END__+0x31e4>
    7197:	3e 00 5f 5f          	ds add BYTE PTR [rdi+0x5f],bl
    719b:	75 69                	jne    7206 <__TMC_END__+0x31ee>
    719d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    719e:	74 5f                	je     71ff <__TMC_END__+0x31e7>
    71a0:	6c                   	ins    BYTE PTR es:[rdi],dx
    71a1:	65 61                	gs (bad)
    71a3:	73 74                	jae    7219 <__TMC_END__+0x3201>
    71a5:	36 34 5f             	ss xor al,0x5f
    71a8:	74 00                	je     71aa <__TMC_END__+0x3192>
    71aa:	5f                   	pop    rdi
    71ab:	5a                   	pop    rdx
    71ac:	4e 53                	rex.WRX push rbx
    71ae:	74 37                	je     71e7 <__TMC_END__+0x31cf>
    71b0:	5f                   	pop    rdi
    71b1:	5f                   	pop    rdi
    71b2:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    71b5:	31 31                	xor    DWORD PTR [rcx],esi
    71b7:	31 32                	xor    DWORD PTR [rdx],esi
    71b9:	62 61 73 69 63       	(bad)
    71be:	5f                   	pop    rdi
    71bf:	73 74                	jae    7235 <__TMC_END__+0x321d>
    71c1:	72 69                	jb     722c <__TMC_END__+0x3214>
    71c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    71c4:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    71c9:	31 31                	xor    DWORD PTR [rcx],esi
    71cb:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    71ce:	72 5f                	jb     722f <__TMC_END__+0x3217>
    71d0:	74 72                	je     7244 <__TMC_END__+0x322c>
    71d2:	61                   	(bad)
    71d3:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    71da:	61 
    71db:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    71df:	31 33                	xor    DWORD PTR [rbx],esi
    71e1:	5f                   	pop    rdi
    71e2:	53                   	push   rbx
    71e3:	5f                   	pop    rdi
    71e4:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    71e7:	79 5f                	jns    7248 <__TMC_END__+0x3230>
    71e9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    71ec:	72 73                	jb     7261 <__TMC_END__+0x3249>
    71ee:	45 50                	rex.RB push r8
    71f0:	63 4e 39             	movsxd ecx,DWORD PTR [rsi+0x39]
    71f3:	5f                   	pop    rdi
    71f4:	5f                   	pop    rdi
    71f5:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    71f7:	75 5f                	jne    7258 <__TMC_END__+0x3240>
    71f9:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    71fc:	31 37                	xor    DWORD PTR [rdi],esi
    71fe:	5f                   	pop    rdi
    71ff:	5f                   	pop    rdi
    7200:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7201:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7202:	72 6d                	jb     7271 <__TMC_END__+0x3259>
    7204:	61                   	(bad)
    7205:	6c                   	ins    BYTE PTR es:[rdi],dx
    7206:	5f                   	pop    rdi
    7207:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    720e:	72 
    720f:	49 50                	rex.WB push r8
    7211:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    7215:	5f                   	pop    rdi
    7216:	45                   	rex.RB
    7217:	45 53                	rex.RB push r11
    7219:	41 5f                	pop    r15
    721b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    721e:	4e                   	rex.WRX
    721f:	4b 53                	rex.WXB push r11
    7221:	74 31                	je     7254 <__TMC_END__+0x323c>
    7223:	37                   	(bad)
    7224:	62 61 73 69 63       	(bad)
    7229:	5f                   	pop    rdi
    722a:	73 74                	jae    72a0 <__TMC_END__+0x3288>
    722c:	72 69                	jb     7297 <__TMC_END__+0x327f>
    722e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    722f:	67 5f                	addr32 pop rdi
    7231:	76 69                	jbe    729c <__TMC_END__+0x3284>
    7233:	65 77 49             	gs ja  727f <__TMC_END__+0x3267>
    7236:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7239:	31 31                	xor    DWORD PTR [rcx],esi
    723b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    723e:	72 5f                	jb     729f <__TMC_END__+0x3287>
    7240:	74 72                	je     72b4 <__TMC_END__+0x329c>
    7242:	61                   	(bad)
    7243:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    724a:	31 
    724b:	31 73 74             	xor    DWORD PTR [rbx+0x74],esi
    724e:	61                   	(bad)
    724f:	72 74                	jb     72c5 <__TMC_END__+0x32ad>
    7251:	73 5f                	jae    72b2 <__TMC_END__+0x329a>
    7253:	77 69                	ja     72be <__TMC_END__+0x32a6>
    7255:	74 68                	je     72bf <__TMC_END__+0x32a7>
    7257:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    725a:	5f                   	pop    rdi
    725b:	5a                   	pop    rdx
    725c:	4e                   	rex.WRX
    725d:	4b 53                	rex.WXB push r11
    725f:	74 31                	je     7292 <__TMC_END__+0x327a>
    7261:	37                   	(bad)
    7262:	62 61 73 69 63       	(bad)
    7267:	5f                   	pop    rdi
    7268:	73 74                	jae    72de <__TMC_END__+0x32c6>
    726a:	72 69                	jb     72d5 <__TMC_END__+0x32bd>
    726c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    726d:	67 5f                	addr32 pop rdi
    726f:	76 69                	jbe    72da <__TMC_END__+0x32c2>
    7271:	65 77 49             	gs ja  72bd <__TMC_END__+0x32a5>
    7274:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7277:	31 31                	xor    DWORD PTR [rcx],esi
    7279:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    727c:	72 5f                	jb     72dd <__TMC_END__+0x32c5>
    727e:	74 72                	je     72f2 <__TMC_END__+0x32da>
    7280:	61                   	(bad)
    7281:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x38454563
    7288:	38 
    7289:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    728c:	74 61                	je     72ef <__TMC_END__+0x32d7>
    728e:	69 6e 73 45 63 00 5f 	imul   ebp,DWORD PTR [rsi+0x73],0x5f006345
    7295:	5a                   	pop    rdx
    7296:	4e 53                	rex.WRX push rbx
    7298:	74 34                	je     72ce <__TMC_END__+0x32b6>
    729a:	70 61                	jo     72fd <__TMC_END__+0x32e5>
    729c:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    72a3:	45                   	rex.RB
    72a4:	43 34 45             	rex.XB xor al,0x45
    72a7:	4f 53                	rex.WRXB push r11
    72a9:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    72ac:	5f                   	pop    rdi
    72ad:	5a                   	pop    rdx
    72ae:	4e                   	rex.WRX
    72af:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    72b3:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    72b5:	75 5f                	jne    7316 <__TMC_END__+0x32fe>
    72b7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    72ba:	31 37                	xor    DWORD PTR [rdi],esi
    72bc:	5f                   	pop    rdi
    72bd:	5f                   	pop    rdi
    72be:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    72bf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    72c0:	72 6d                	jb     732f <__TMC_END__+0x3317>
    72c2:	61                   	(bad)
    72c3:	6c                   	ins    BYTE PTR es:[rdi],dx
    72c4:	5f                   	pop    rdi
    72c5:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    72cc:	72 
    72cd:	49 50                	rex.WB push r8
    72cf:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    72d3:	74 37                	je     730c <__TMC_END__+0x32f4>
    72d5:	5f                   	pop    rdi
    72d6:	5f                   	pop    rdi
    72d7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    72da:	31 31                	xor    DWORD PTR [rcx],esi
    72dc:	31 32                	xor    DWORD PTR [rdx],esi
    72de:	62 61 73 69 63       	(bad)
    72e3:	5f                   	pop    rdi
    72e4:	73 74                	jae    735a <__TMC_END__+0x3342>
    72e6:	72 69                	jb     7351 <__TMC_END__+0x3339>
    72e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    72e9:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    72ee:	31 31                	xor    DWORD PTR [rcx],esi
    72f0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    72f3:	72 5f                	jb     7354 <__TMC_END__+0x333c>
    72f5:	74 72                	je     7369 <__TMC_END__+0x3351>
    72f7:	61                   	(bad)
    72f8:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    72ff:	61 
    7300:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7304:	45                   	rex.RB
    7305:	45 70 74             	rex.RB jo 737c <__TMC_END__+0x3364>
    7308:	45 76 00             	rex.RB jbe 730b <__TMC_END__+0x32f3>
    730b:	5f                   	pop    rdi
    730c:	5a                   	pop    rdx
    730d:	4e 53                	rex.WRX push rbx
    730f:	74 37                	je     7348 <__TMC_END__+0x3330>
    7311:	5f                   	pop    rdi
    7312:	5f                   	pop    rdi
    7313:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7316:	31 31                	xor    DWORD PTR [rcx],esi
    7318:	31 32                	xor    DWORD PTR [rdx],esi
    731a:	62 61 73 69 63       	(bad)
    731f:	5f                   	pop    rdi
    7320:	73 74                	jae    7396 <__TMC_END__+0x337e>
    7322:	72 69                	jb     738d <__TMC_END__+0x3375>
    7324:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7325:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    732a:	31 31                	xor    DWORD PTR [rcx],esi
    732c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    732f:	72 5f                	jb     7390 <__TMC_END__+0x3378>
    7331:	74 72                	je     73a5 <__TMC_END__+0x338d>
    7333:	61                   	(bad)
    7334:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    733b:	61 
    733c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7340:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
    7347:	45 
    7348:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    734c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    734e:	75 5f                	jne    73af <__TMC_END__+0x3397>
    7350:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7353:	31 37                	xor    DWORD PTR [rdi],esi
    7355:	5f                   	pop    rdi
    7356:	5f                   	pop    rdi
    7357:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7358:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7359:	72 6d                	jb     73c8 <__TMC_END__+0x33b0>
    735b:	61                   	(bad)
    735c:	6c                   	ins    BYTE PTR es:[rdi],dx
    735d:	5f                   	pop    rdi
    735e:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7365:	72 
    7366:	49 50                	rex.WB push r8
    7368:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    736c:	5f                   	pop    rdi
    736d:	45                   	rex.RB
    736e:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    7371:	5f                   	pop    rdi
    7372:	49 74 65             	rex.WB je 73da <__TMC_END__+0x33c2>
    7375:	72 61                	jb     73d8 <__TMC_END__+0x33c0>
    7377:	74 6f                	je     73e8 <__TMC_END__+0x33d0>
    7379:	72 00                	jb     737b <__TMC_END__+0x3363>
    737b:	5f                   	pop    rdi
    737c:	5a                   	pop    rdx
    737d:	53                   	push   rbx
    737e:	74 38                	je     73b8 <__TMC_END__+0x33a0>
    7380:	74 6f                	je     73f1 <__TMC_END__+0x33d9>
    7382:	5f                   	pop    rdi
    7383:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7386:	72 73                	jb     73fb <__TMC_END__+0x33e3>
    7388:	50                   	push   rax
    7389:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    738c:	44                   	rex.R
    738d:	46 31 32             	rex.RX xor DWORD PTR [rdx],r14d
    7390:	38 5f 53             	cmp    BYTE PTR [rdi+0x53],bl
    7393:	74 31                	je     73c6 <__TMC_END__+0x33ae>
    7395:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    7398:	61                   	(bad)
    7399:	72 73                	jb     740e <__TMC_END__+0x33f6>
    739b:	5f                   	pop    rdi
    739c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    739e:	72 6d                	jb     740d <__TMC_END__+0x33f5>
    73a0:	61                   	(bad)
    73a1:	74 00                	je     73a3 <__TMC_END__+0x338b>
    73a3:	5f                   	pop    rdi
    73a4:	5f                   	pop    rdi
    73a5:	69 6e 74 33 32 5f 74 	imul   ebp,DWORD PTR [rsi+0x74],0x745f3233
    73ac:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    73af:	65 72 61             	gs jb  7413 <__TMC_END__+0x33fb>
    73b2:	74 69                	je     741d <__TMC_END__+0x3405>
    73b4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    73b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    73b6:	5f                   	pop    rdi
    73b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    73b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    73b9:	74 5f                	je     741a <__TMC_END__+0x3402>
    73bb:	70 65                	jo     7422 <__TMC_END__+0x340a>
    73bd:	72 6d                	jb     742c <__TMC_END__+0x3414>
    73bf:	69 74 74 65 64 00 5f 	imul   esi,DWORD PTR [rsp+rsi*2+0x65],0x5f5f0064
    73c6:	5f 
    73c7:	75 69                	jne    7432 <__TMC_END__+0x341a>
    73c9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    73ca:	74 33                	je     73ff <__TMC_END__+0x33e7>
    73cc:	32 5f 74             	xor    bl,BYTE PTR [rdi+0x74]
    73cf:	00 71 73             	add    BYTE PTR [rcx+0x73],dh
    73d2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    73d3:	72 74                	jb     7449 <__TMC_END__+0x3431>
    73d5:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    73d8:	69 6e 74 5f 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c5f
    73df:	73 74                	jae    7455 <__TMC_END__+0x343d>
    73e1:	31 36                	xor    DWORD PTR [rsi],esi
    73e3:	5f                   	pop    rdi
    73e4:	74 00                	je     73e6 <__TMC_END__+0x33ce>
    73e6:	77 6d                	ja     7455 <__TMC_END__+0x343d>
    73e8:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    73ea:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    73ed:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    73f0:	72 74                	jb     7466 <__TMC_END__+0x344e>
    73f2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    73f3:	6d                   	ins    DWORD PTR es:[rdi],dx
    73f4:	62                   	(bad)
    73f5:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    73f8:	4e                   	rex.WRX
    73f9:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    73fd:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    73ff:	75 5f                	jne    7460 <__TMC_END__+0x3448>
    7401:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7404:	31 37                	xor    DWORD PTR [rdi],esi
    7406:	5f                   	pop    rdi
    7407:	5f                   	pop    rdi
    7408:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7409:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    740a:	72 6d                	jb     7479 <__TMC_END__+0x3461>
    740c:	61                   	(bad)
    740d:	6c                   	ins    BYTE PTR es:[rdi],dx
    740e:	5f                   	pop    rdi
    740f:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7416:	72 
    7417:	49 50                	rex.WB push r8
    7419:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    741d:	74 37                	je     7456 <__TMC_END__+0x343e>
    741f:	5f                   	pop    rdi
    7420:	5f                   	pop    rdi
    7421:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7424:	31 31                	xor    DWORD PTR [rcx],esi
    7426:	31 32                	xor    DWORD PTR [rdx],esi
    7428:	62 61 73 69 63       	(bad)
    742d:	5f                   	pop    rdi
    742e:	73 74                	jae    74a4 <__TMC_END__+0x348c>
    7430:	72 69                	jb     749b <__TMC_END__+0x3483>
    7432:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7433:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7438:	31 31                	xor    DWORD PTR [rcx],esi
    743a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    743d:	72 5f                	jb     749e <__TMC_END__+0x3486>
    743f:	74 72                	je     74b3 <__TMC_END__+0x349b>
    7441:	61                   	(bad)
    7442:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7449:	61 
    744a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    744e:	45                   	rex.RB
    744f:	45 69 78 45 6c 00 5f 	imul   r15d,DWORD PTR [r8+0x45],0x5f5f006c
    7456:	5f 
    7457:	76 61                	jbe    74ba <__TMC_END__+0x34a2>
    7459:	6c                   	ins    BYTE PTR es:[rdi],dx
    745a:	75 65                	jne    74c1 <__TMC_END__+0x34a9>
    745c:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
    745f:	5f                   	pop    rdi
    7460:	73 70                	jae    74d2 <__TMC_END__+0x34ba>
    7462:	61                   	(bad)
    7463:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    7466:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7467:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7468:	5f                   	pop    rdi
    7469:	64 65 76 69          	fs gs jbe 74d6 <__TMC_END__+0x34be>
    746d:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    7470:	5f                   	pop    rdi
    7471:	54                   	push   rsp
    7472:	72 61                	jb     74d5 <__TMC_END__+0x34bd>
    7474:	69 74 73 00 5f 5a 4e 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x534e5a5f
    747b:	53 
    747c:	74 31                	je     74af <__TMC_END__+0x3497>
    747e:	35 5f 5f 65 78       	xor    eax,0x78655f5f
    7483:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    7486:	74 69                	je     74f1 <__TMC_END__+0x34d9>
    7488:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7489:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    748a:	5f                   	pop    rdi
    748b:	70 74                	jo     7501 <__TMC_END__+0x34e9>
    748d:	72 31                	jb     74c0 <__TMC_END__+0x34a8>
    748f:	33 65 78             	xor    esp,DWORD PTR [rbp+0x78]
    7492:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
    7495:	74 69                	je     7500 <__TMC_END__+0x34e8>
    7497:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7498:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7499:	5f                   	pop    rdi
    749a:	70 74                	jo     7510 <__TMC_END__+0x34f8>
    749c:	72 43                	jb     74e1 <__TMC_END__+0x34c9>
    749e:	34 45                	xor    al,0x45
    74a0:	76 00                	jbe    74a2 <__TMC_END__+0x348a>
    74a2:	5f                   	pop    rdi
    74a3:	5a                   	pop    rdx
    74a4:	4e 53                	rex.WRX push rbx
    74a6:	74 34                	je     74dc <__TMC_END__+0x34c4>
    74a8:	73 70                	jae    751a <__TMC_END__+0x3502>
    74aa:	61                   	(bad)
    74ab:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    74ac:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    74b1:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    74b4:	36 37                	ss (bad)
    74b6:	34 34                	xor    al,0x34
    74b8:	30 37                	xor    BYTE PTR [rdi],dh
    74ba:	33 37                	xor    esi,DWORD PTR [rdi]
    74bc:	30 39                	xor    BYTE PTR [rcx],bh
    74be:	35 35 31 36 31       	xor    eax,0x31363135
    74c3:	35 45 45 43 34       	xor    eax,0x34434545
    74c8:	45 76 51             	rex.RB jbe 751c <__TMC_END__+0x3504>
    74cb:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    74cc:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    74cd:	65 71 54             	gs jno 7524 <__TMC_END__+0x350c>
    74d0:	30 5f 4c             	xor    BYTE PTR [rdi+0x4c],bl
    74d3:	5f                   	pop    rdi
    74d4:	5a                   	pop    rdx
    74d5:	53                   	push   rbx
    74d6:	74 31                	je     7509 <__TMC_END__+0x34f1>
    74d8:	34 64                	xor    al,0x64
    74da:	79 6e                	jns    754a <__TMC_END__+0x3532>
    74dc:	61                   	(bad)
    74dd:	6d                   	ins    DWORD PTR es:[rdi],dx
    74de:	69 63 5f 65 78 74 65 	imul   esp,DWORD PTR [rbx+0x5f],0x65747865
    74e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    74e6:	74 45                	je     752d <__TMC_END__+0x3515>
    74e8:	65 71 54             	gs jno 753f <__TMC_END__+0x3527>
    74eb:	30 5f 4c             	xor    BYTE PTR [rdi+0x4c],bl
    74ee:	69 30 45 00 5f 5a    	imul   esi,DWORD PTR [rax],0x5a5f0045
    74f4:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    74f8:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    74fa:	75 5f                	jne    755b <__TMC_END__+0x3543>
    74fc:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    74ff:	31 37                	xor    DWORD PTR [rdi],esi
    7501:	5f                   	pop    rdi
    7502:	5f                   	pop    rdi
    7503:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7504:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7505:	72 6d                	jb     7574 <__TMC_END__+0x355c>
    7507:	61                   	(bad)
    7508:	6c                   	ins    BYTE PTR es:[rdi],dx
    7509:	5f                   	pop    rdi
    750a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7511:	72 
    7512:	49 50                	rex.WB push r8
    7514:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    7517:	74 37                	je     7550 <__TMC_END__+0x3538>
    7519:	5f                   	pop    rdi
    751a:	5f                   	pop    rdi
    751b:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    751e:	31 31                	xor    DWORD PTR [rcx],esi
    7520:	31 32                	xor    DWORD PTR [rdx],esi
    7522:	62 61 73 69 63       	(bad)
    7527:	5f                   	pop    rdi
    7528:	73 74                	jae    759e <__TMC_END__+0x3586>
    752a:	72 69                	jb     7595 <__TMC_END__+0x357d>
    752c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    752d:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7532:	31 31                	xor    DWORD PTR [rcx],esi
    7534:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7537:	72 5f                	jb     7598 <__TMC_END__+0x3580>
    7539:	74 72                	je     75ad <__TMC_END__+0x3595>
    753b:	61                   	(bad)
    753c:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7543:	61 
    7544:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7548:	45                   	rex.RB
    7549:	45 70 70             	rex.RB jo 75bc <__TMC_END__+0x35a4>
    754c:	45 69 00 5f 5a 4e 4b 	imul   r8d,DWORD PTR [r8],0x4b4e5a5f
    7553:	53                   	push   rbx
    7554:	74 31                	je     7587 <__TMC_END__+0x356f>
    7556:	36 72 65             	ss jb  75be <__TMC_END__+0x35a6>
    7559:	76 65                	jbe    75c0 <__TMC_END__+0x35a8>
    755b:	72 73                	jb     75d0 <__TMC_END__+0x35b8>
    755d:	65 5f                	gs pop rdi
    755f:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7566:	72 
    7567:	49                   	rex.WB
    7568:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    756c:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    756e:	75 5f                	jne    75cf <__TMC_END__+0x35b7>
    7570:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7573:	31 37                	xor    DWORD PTR [rdi],esi
    7575:	5f                   	pop    rdi
    7576:	5f                   	pop    rdi
    7577:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7578:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7579:	72 6d                	jb     75e8 <__TMC_END__+0x35d0>
    757b:	61                   	(bad)
    757c:	6c                   	ins    BYTE PTR es:[rdi],dx
    757d:	5f                   	pop    rdi
    757e:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7585:	72 
    7586:	49 50                	rex.WB push r8
    7588:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    758b:	34 73                	xor    al,0x73
    758d:	70 61                	jo     75f0 <__TMC_END__+0x35d8>
    758f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7590:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    7595:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    7598:	36 37                	ss (bad)
    759a:	34 34                	xor    al,0x34
    759c:	30 37                	xor    BYTE PTR [rdi],dh
    759e:	33 37                	xor    esi,DWORD PTR [rdi]
    75a0:	30 39                	xor    BYTE PTR [rcx],bh
    75a2:	35 35 31 36 31       	xor    eax,0x31363135
    75a7:	35 45 45 45 45       	xor    eax,0x45454545
    75ac:	45 69 78 45 6c 00 5f 	imul   r15d,DWORD PTR [r8+0x45],0x5a5f006c
    75b3:	5a 
    75b4:	37                   	(bad)
    75b5:	6d                   	ins    DWORD PTR es:[rdi],dx
    75b6:	79 5f                	jns    7617 <__TMC_END__+0x35ff>
    75b8:	65 78 69             	gs js  7624 <__TMC_END__+0x360c>
    75bb:	74 69                	je     7626 <__TMC_END__+0x360e>
    75bd:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    75c0:	70 61                	jo     7623 <__TMC_END__+0x360b>
    75c2:	69 72 5f 62 61 73 65 	imul   esi,DWORD PTR [rdx+0x5f],0x65736162
    75c9:	3c 73                	cmp    al,0x73
    75cb:	68 6f 72 74 20       	push   0x2074726f
    75d0:	75 6e                	jne    7640 <__TMC_END__+0x3628>
    75d2:	73 69                	jae    763d <__TMC_END__+0x3625>
    75d4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    75d6:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    75db:	74 2c                	je     7609 <__TMC_END__+0x35f1>
    75dd:	20 77 63             	and    BYTE PTR [rdi+0x63],dh
    75e0:	68 61 72 5f 74       	push   0x745f7261
    75e5:	20 63 6f             	and    BYTE PTR [rbx+0x6f],ah
    75e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    75e9:	73 74                	jae    765f <__TMC_END__+0x3647>
    75eb:	2a 3e                	sub    bh,BYTE PTR [rsi]
    75ed:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
    75f0:	61                   	(bad)
    75f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    75f2:	3c 63                	cmp    al,0x63
    75f4:	68 61 72 2c 20       	push   0x202c7261
    75f9:	31 38                	xor    DWORD PTR [rax],edi
    75fb:	34 34                	xor    al,0x34
    75fd:	36 37                	ss (bad)
    75ff:	34 34                	xor    al,0x34
    7601:	30 37                	xor    BYTE PTR [rdi],dh
    7603:	33 37                	xor    esi,DWORD PTR [rdi]
    7605:	30 39                	xor    BYTE PTR [rcx],bh
    7607:	35 35 31 36 31       	xor    eax,0x31363135
    760c:	35 3e 00 5f 5a       	xor    eax,0x5a5f003e
    7611:	53                   	push   rbx
    7612:	74 38                	je     764c <__TMC_END__+0x3634>
    7614:	74 6f                	je     7685 <__TMC_END__+0x366d>
    7616:	5f                   	pop    rdi
    7617:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    761a:	72 73                	jb     768f <__TMC_END__+0x3677>
    761c:	50                   	push   rax
    761d:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    7620:	6c                   	ins    BYTE PTR es:[rdi],dx
    7621:	69 00 5f 5a 4e 4b    	imul   eax,DWORD PTR [rax],0x4b4e5a5f
    7627:	53                   	push   rbx
    7628:	74 31                	je     765b <__TMC_END__+0x3643>
    762a:	37                   	(bad)
    762b:	62 61 73 69 63       	(bad)
    7630:	5f                   	pop    rdi
    7631:	73 74                	jae    76a7 <__TMC_END__+0x368f>
    7633:	72 69                	jb     769e <__TMC_END__+0x3686>
    7635:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7636:	67 5f                	addr32 pop rdi
    7638:	76 69                	jbe    76a3 <__TMC_END__+0x368b>
    763a:	65 77 49             	gs ja  7686 <__TMC_END__+0x366e>
    763d:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7640:	31 31                	xor    DWORD PTR [rcx],esi
    7642:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7645:	72 5f                	jb     76a6 <__TMC_END__+0x368e>
    7647:	74 72                	je     76bb <__TMC_END__+0x36a3>
    7649:	61                   	(bad)
    764a:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    7651:	31 
    7652:	33 66 69             	xor    esp,DWORD PTR [rsi+0x69]
    7655:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7656:	64 5f                	fs pop rdi
    7658:	66 69 72 73 74 5f    	imul   si,WORD PTR [rdx+0x73],0x5f74
    765e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    765f:	66 45 50             	rex.RB push r8w
    7662:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    7666:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    7669:	4e                   	rex.WRX
    766a:	4b 53                	rex.WXB push r11
    766c:	74 37                	je     76a5 <__TMC_END__+0x368d>
    766e:	5f                   	pop    rdi
    766f:	5f                   	pop    rdi
    7670:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7673:	31 31                	xor    DWORD PTR [rcx],esi
    7675:	31 32                	xor    DWORD PTR [rdx],esi
    7677:	62 61 73 69 63       	(bad)
    767c:	5f                   	pop    rdi
    767d:	73 74                	jae    76f3 <__TMC_END__+0x36db>
    767f:	72 69                	jb     76ea <__TMC_END__+0x36d2>
    7681:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7682:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7687:	31 31                	xor    DWORD PTR [rcx],esi
    7689:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    768c:	72 5f                	jb     76ed <__TMC_END__+0x36d5>
    768e:	74 72                	je     7702 <__TMC_END__+0x36ea>
    7690:	61                   	(bad)
    7691:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7698:	61 
    7699:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    769d:	31 36                	xor    DWORD PTR [rsi],esi
    769f:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    76a5:	61                   	(bad)
    76a6:	73 74                	jae    771c <__TMC_END__+0x3704>
    76a8:	5f                   	pop    rdi
    76a9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    76aa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    76ab:	74 5f                	je     770c <__TMC_END__+0x36f4>
    76ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    76ae:	66 45 63 6d 00       	movsxd r13w,DWORD PTR [r13+0x0]
    76b3:	5f                   	pop    rdi
    76b4:	5a                   	pop    rdx
    76b5:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    76b9:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    76bb:	75 5f                	jne    771c <__TMC_END__+0x3704>
    76bd:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    76c0:	31 37                	xor    DWORD PTR [rdi],esi
    76c2:	5f                   	pop    rdi
    76c3:	5f                   	pop    rdi
    76c4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    76c5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    76c6:	72 6d                	jb     7735 <__TMC_END__+0x371d>
    76c8:	61                   	(bad)
    76c9:	6c                   	ins    BYTE PTR es:[rdi],dx
    76ca:	5f                   	pop    rdi
    76cb:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    76d2:	72 
    76d3:	49 50                	rex.WB push r8
    76d5:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    76d9:	74 37                	je     7712 <__TMC_END__+0x36fa>
    76db:	5f                   	pop    rdi
    76dc:	5f                   	pop    rdi
    76dd:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    76e0:	31 31                	xor    DWORD PTR [rcx],esi
    76e2:	31 32                	xor    DWORD PTR [rdx],esi
    76e4:	62 61 73 69 63       	(bad)
    76e9:	5f                   	pop    rdi
    76ea:	73 74                	jae    7760 <__TMC_END__+0x3748>
    76ec:	72 69                	jb     7757 <__TMC_END__+0x373f>
    76ee:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    76ef:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    76f4:	31 31                	xor    DWORD PTR [rcx],esi
    76f6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    76f9:	72 5f                	jb     775a <__TMC_END__+0x3742>
    76fb:	74 72                	je     776f <__TMC_END__+0x3757>
    76fd:	61                   	(bad)
    76fe:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7705:	61 
    7706:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    770a:	45                   	rex.RB
    770b:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    770d:	6d                   	ins    DWORD PTR es:[rdi],dx
    770e:	45 69 00 5f 5a 4e 4b 	imul   r8d,DWORD PTR [r8],0x4b4e5a5f
    7715:	53                   	push   rbx
    7716:	74 31                	je     7749 <__TMC_END__+0x3731>
    7718:	37                   	(bad)
    7719:	62 61 73 69 63       	(bad)
    771e:	5f                   	pop    rdi
    771f:	73 74                	jae    7795 <__TMC_END__+0x377d>
    7721:	72 69                	jb     778c <__TMC_END__+0x3774>
    7723:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7724:	67 5f                	addr32 pop rdi
    7726:	76 69                	jbe    7791 <__TMC_END__+0x3779>
    7728:	65 77 49             	gs ja  7774 <__TMC_END__+0x375c>
    772b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    772e:	31 31                	xor    DWORD PTR [rcx],esi
    7730:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7733:	72 5f                	jb     7794 <__TMC_END__+0x377c>
    7735:	74 72                	je     77a9 <__TMC_END__+0x3791>
    7737:	61                   	(bad)
    7738:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    773f:	35 
    7740:	72 66                	jb     77a8 <__TMC_END__+0x3790>
    7742:	69 6e 64 45 63 6d 00 	imul   ebp,DWORD PTR [rsi+0x64],0x6d6345
    7749:	5f                   	pop    rdi
    774a:	5a                   	pop    rdx
    774b:	53                   	push   rbx
    774c:	74 38                	je     7786 <__TMC_END__+0x376e>
    774e:	74 6f                	je     77bf <__TMC_END__+0x37a7>
    7750:	5f                   	pop    rdi
    7751:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7754:	72 73                	jb     77c9 <__TMC_END__+0x37b1>
    7756:	50                   	push   rax
    7757:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    775a:	44                   	rex.R
    775b:	46                   	rex.RX
    775c:	36 34 5f             	ss xor al,0x5f
    775f:	53                   	push   rbx
    7760:	74 31                	je     7793 <__TMC_END__+0x377b>
    7762:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    7765:	61                   	(bad)
    7766:	72 73                	jb     77db <__TMC_END__+0x37c3>
    7768:	5f                   	pop    rdi
    7769:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    776b:	72 6d                	jb     77da <__TMC_END__+0x37c2>
    776d:	61                   	(bad)
    776e:	74 00                	je     7770 <__TMC_END__+0x3758>
    7770:	69 6e 70 75 74 5f 69 	imul   ebp,DWORD PTR [rsi+0x70],0x695f7475
    7777:	74 65                	je     77de <__TMC_END__+0x37c6>
    7779:	72 61                	jb     77dc <__TMC_END__+0x37c4>
    777b:	74 6f                	je     77ec <__TMC_END__+0x37d4>
    777d:	72 5f                	jb     77de <__TMC_END__+0x37c6>
    777f:	74 61                	je     77e2 <__TMC_END__+0x37ca>
    7781:	67 00 5f 4d          	add    BYTE PTR [edi+0x4d],bl
    7785:	5f                   	pop    rdi
    7786:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    7789:	61                   	(bad)
    778a:	74 65                	je     77f1 <__TMC_END__+0x37d9>
    778c:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    778f:	5f                   	pop    rdi
    7790:	61                   	(bad)
    7791:	6c                   	ins    BYTE PTR es:[rdi],dx
    7792:	6c                   	ins    BYTE PTR es:[rdi],dx
    7793:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7794:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    7797:	65 64 5f             	gs fs pop rdi
    779a:	63 61 70             	movsxd esp,DWORD PTR [rcx+0x70]
    779d:	61                   	(bad)
    779e:	63 69 74             	movsxd ebp,DWORD PTR [rcx+0x74]
    77a1:	79 00                	jns    77a3 <__TMC_END__+0x378b>
    77a3:	5f                   	pop    rdi
    77a4:	5a                   	pop    rdx
    77a5:	4e                   	rex.WRX
    77a6:	4b 53                	rex.WXB push r11
    77a8:	74 31                	je     77db <__TMC_END__+0x37c3>
    77aa:	37                   	(bad)
    77ab:	62 61 73 69 63       	(bad)
    77b0:	5f                   	pop    rdi
    77b1:	73 74                	jae    7827 <__TMC_END__+0x380f>
    77b3:	72 69                	jb     781e <__TMC_END__+0x3806>
    77b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    77b6:	67 5f                	addr32 pop rdi
    77b8:	76 69                	jbe    7823 <__TMC_END__+0x380b>
    77ba:	65 77 49             	gs ja  7806 <__TMC_END__+0x37ee>
    77bd:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    77c0:	31 31                	xor    DWORD PTR [rcx],esi
    77c2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    77c5:	72 5f                	jb     7826 <__TMC_END__+0x380e>
    77c7:	74 72                	je     783b <__TMC_END__+0x3823>
    77c9:	61                   	(bad)
    77ca:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x32454563
    77d1:	32 
    77d2:	61                   	(bad)
    77d3:	74 45                	je     781a <__TMC_END__+0x3802>
    77d5:	6d                   	ins    DWORD PTR es:[rdi],dx
    77d6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    77d9:	4e 53                	rex.WRX push rbx
    77db:	74 37                	je     7814 <__TMC_END__+0x37fc>
    77dd:	5f                   	pop    rdi
    77de:	5f                   	pop    rdi
    77df:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    77e2:	31 31                	xor    DWORD PTR [rcx],esi
    77e4:	31 32                	xor    DWORD PTR [rdx],esi
    77e6:	62 61 73 69 63       	(bad)
    77eb:	5f                   	pop    rdi
    77ec:	73 74                	jae    7862 <__TMC_END__+0x384a>
    77ee:	72 69                	jb     7859 <__TMC_END__+0x3841>
    77f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    77f1:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    77f6:	31 31                	xor    DWORD PTR [rcx],esi
    77f8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    77fb:	72 5f                	jb     785c <__TMC_END__+0x3844>
    77fd:	74 72                	je     7871 <__TMC_END__+0x3859>
    77ff:	61                   	(bad)
    7800:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7807:	61 
    7808:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    780c:	31 37                	xor    DWORD PTR [rdi],esi
    780e:	5f                   	pop    rdi
    780f:	4d 5f                	rex.WRB pop r15
    7811:	69 6e 69 74 5f 6c 6f 	imul   ebp,DWORD PTR [rsi+0x69],0x6f6c5f74
    7818:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    781b:	5f                   	pop    rdi
    781c:	62 75 66 45 76       	(bad)
    7821:	00 70 6f             	add    BYTE PTR [rax+0x6f],dh
    7824:	73 69                	jae    788f <__TMC_END__+0x3877>
    7826:	74 69                	je     7891 <__TMC_END__+0x3879>
    7828:	76 65                	jbe    788f <__TMC_END__+0x3877>
    782a:	5f                   	pop    rdi
    782b:	73 69                	jae    7896 <__TMC_END__+0x387e>
    782d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    782f:	00 73 65             	add    BYTE PTR [rbx+0x65],dh
    7832:	74 76                	je     78aa <__TMC_END__+0x3892>
    7834:	62 75 66 00 5f 5f 69 	vmaxsh xmm11,xmm19,WORD PTR [rdi+0xd2]
    783b:	6d                   	ins    DWORD PTR es:[rdi],dx
    783c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    783d:	76 65                	jbe    78a4 <__TMC_END__+0x388c>
    783f:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    7842:	53                   	push   rbx
    7843:	74 38                	je     787d <__TMC_END__+0x3865>
    7845:	74 6f                	je     78b6 <__TMC_END__+0x389e>
    7847:	5f                   	pop    rdi
    7848:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    784b:	72 73                	jb     78c0 <__TMC_END__+0x38a8>
    784d:	50                   	push   rax
    784e:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    7851:	6d                   	ins    DWORD PTR es:[rdi],dx
    7852:	69 00 35 64 69 76    	imul   eax,DWORD PTR [rax],0x76696435
    7858:	5f                   	pop    rdi
    7859:	74 00                	je     785b <__TMC_END__+0x3843>
    785b:	5f                   	pop    rdi
    785c:	5a                   	pop    rdx
    785d:	4e                   	rex.WRX
    785e:	4b 53                	rex.WXB push r11
    7860:	74 31                	je     7893 <__TMC_END__+0x387b>
    7862:	37                   	(bad)
    7863:	62 61 73 69 63       	(bad)
    7868:	5f                   	pop    rdi
    7869:	73 74                	jae    78df <__TMC_END__+0x38c7>
    786b:	72 69                	jb     78d6 <__TMC_END__+0x38be>
    786d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    786e:	67 5f                	addr32 pop rdi
    7870:	76 69                	jbe    78db <__TMC_END__+0x38c3>
    7872:	65 77 49             	gs ja  78be <__TMC_END__+0x38a6>
    7875:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7878:	31 31                	xor    DWORD PTR [rcx],esi
    787a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    787d:	72 5f                	jb     78de <__TMC_END__+0x38c6>
    787f:	74 72                	je     78f3 <__TMC_END__+0x38db>
    7881:	61                   	(bad)
    7882:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x37454563
    7889:	37 
    788a:	63 72 62             	movsxd esi,DWORD PTR [rdx+0x62]
    788d:	65 67 69 6e 45 76 00 	imul   ebp,DWORD PTR gs:[esi+0x45],0x5a5f0076
    7894:	5f 5a 
    7896:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    789a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    789c:	75 5f                	jne    78fd <__TMC_END__+0x38e5>
    789e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    78a1:	31 37                	xor    DWORD PTR [rdi],esi
    78a3:	5f                   	pop    rdi
    78a4:	5f                   	pop    rdi
    78a5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    78a6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    78a7:	72 6d                	jb     7916 <__TMC_END__+0x38fe>
    78a9:	61                   	(bad)
    78aa:	6c                   	ins    BYTE PTR es:[rdi],dx
    78ab:	5f                   	pop    rdi
    78ac:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    78b3:	72 
    78b4:	49 50                	rex.WB push r8
    78b6:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    78ba:	74 37                	je     78f3 <__TMC_END__+0x38db>
    78bc:	5f                   	pop    rdi
    78bd:	5f                   	pop    rdi
    78be:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    78c1:	31 31                	xor    DWORD PTR [rcx],esi
    78c3:	31 32                	xor    DWORD PTR [rdx],esi
    78c5:	62 61 73 69 63       	(bad)
    78ca:	5f                   	pop    rdi
    78cb:	73 74                	jae    7941 <__TMC_END__+0x3929>
    78cd:	72 69                	jb     7938 <__TMC_END__+0x3920>
    78cf:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    78d0:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    78d5:	31 31                	xor    DWORD PTR [rcx],esi
    78d7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    78da:	72 5f                	jb     793b <__TMC_END__+0x3923>
    78dc:	74 72                	je     7950 <__TMC_END__+0x3938>
    78de:	61                   	(bad)
    78df:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    78e6:	61 
    78e7:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    78eb:	45                   	rex.RB
    78ec:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    78ee:	49                   	rex.WB
    78ef:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    78f1:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    78f4:	4e 53                	rex.WRX push rbx
    78f6:	74 37                	je     792f <__TMC_END__+0x3917>
    78f8:	5f                   	pop    rdi
    78f9:	5f                   	pop    rdi
    78fa:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    78fd:	31 31                	xor    DWORD PTR [rcx],esi
    78ff:	31 32                	xor    DWORD PTR [rdx],esi
    7901:	62 61 73 69 63       	(bad)
    7906:	5f                   	pop    rdi
    7907:	73 74                	jae    797d <__TMC_END__+0x3965>
    7909:	72 69                	jb     7974 <__TMC_END__+0x395c>
    790b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    790c:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7911:	31 31                	xor    DWORD PTR [rcx],esi
    7913:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7916:	72 5f                	jb     7977 <__TMC_END__+0x395f>
    7918:	74 72                	je     798c <__TMC_END__+0x3974>
    791a:	61                   	(bad)
    791b:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7922:	61 
    7923:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7927:	36 69 6e 73 65 72 74 	ss imul ebp,DWORD PTR [rsi+0x73],0x45747265
    792e:	45 
    792f:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    7933:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    7935:	75 5f                	jne    7996 <__TMC_END__+0x397e>
    7937:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    793a:	31 37                	xor    DWORD PTR [rdi],esi
    793c:	5f                   	pop    rdi
    793d:	5f                   	pop    rdi
    793e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    793f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7940:	72 6d                	jb     79af <__TMC_END__+0x3997>
    7942:	61                   	(bad)
    7943:	6c                   	ins    BYTE PTR es:[rdi],dx
    7944:	5f                   	pop    rdi
    7945:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    794c:	72 
    794d:	49 50                	rex.WB push r8
    794f:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    7953:	5f                   	pop    rdi
    7954:	45                   	rex.RB
    7955:	45 53                	rex.RB push r11
    7957:	74 31                	je     798a <__TMC_END__+0x3972>
    7959:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    7960:	6c 
    7961:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    7968:	73 74                	jae    79de <__TMC_END__+0x39c6>
    796a:	49 63 45 00          	movsxd rax,DWORD PTR [r13+0x0]
    796e:	5f                   	pop    rdi
    796f:	5a                   	pop    rdx
    7970:	4e                   	rex.WRX
    7971:	4b 53                	rex.WXB push r11
    7973:	74 37                	je     79ac <__TMC_END__+0x3994>
    7975:	5f                   	pop    rdi
    7976:	5f                   	pop    rdi
    7977:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    797a:	31 31                	xor    DWORD PTR [rcx],esi
    797c:	31 32                	xor    DWORD PTR [rdx],esi
    797e:	62 61 73 69 63       	(bad)
    7983:	5f                   	pop    rdi
    7984:	73 74                	jae    79fa <__TMC_END__+0x39e2>
    7986:	72 69                	jb     79f1 <__TMC_END__+0x39d9>
    7988:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7989:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    798e:	31 31                	xor    DWORD PTR [rcx],esi
    7990:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7993:	72 5f                	jb     79f4 <__TMC_END__+0x39dc>
    7995:	74 72                	je     7a09 <__TMC_END__+0x39f1>
    7997:	61                   	(bad)
    7998:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    799f:	61 
    79a0:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    79a4:	31 33                	xor    DWORD PTR [rbx],esi
    79a6:	67 65 74 5f          	addr32 gs je 7a09 <__TMC_END__+0x39f1>
    79aa:	61                   	(bad)
    79ab:	6c                   	ins    BYTE PTR es:[rdi],dx
    79ac:	6c                   	ins    BYTE PTR es:[rdi],dx
    79ad:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    79ae:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    79b1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    79b2:	72 45                	jb     79f9 <__TMC_END__+0x39e1>
    79b4:	76 00                	jbe    79b6 <__TMC_END__+0x399e>
    79b6:	61                   	(bad)
    79b7:	74 5f                	je     7a18 <__TMC_END__+0x3a00>
    79b9:	71 75                	jno    7a30 <__TMC_END__+0x3a18>
    79bb:	69 63 6b 5f 65 78 69 	imul   esp,DWORD PTR [rbx+0x6b],0x6978655f
    79c2:	74 00                	je     79c4 <__TMC_END__+0x39ac>
    79c4:	5f                   	pop    rdi
    79c5:	5a                   	pop    rdx
    79c6:	4e 53                	rex.WRX push rbx
    79c8:	74 34                	je     79fe <__TMC_END__+0x39e6>
    79ca:	73 70                	jae    7a3c <__TMC_END__+0x3a24>
    79cc:	61                   	(bad)
    79cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    79ce:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    79d3:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    79d6:	36 37                	ss (bad)
    79d8:	34 34                	xor    al,0x34
    79da:	30 37                	xor    BYTE PTR [rdi],dh
    79dc:	33 37                	xor    esi,DWORD PTR [rdi]
    79de:	30 39                	xor    BYTE PTR [rcx],bh
    79e0:	35 35 31 36 31       	xor    eax,0x31363135
    79e5:	35 45 45 44 34       	xor    eax,0x34444545
    79ea:	45 76 00             	rex.RB jbe 79ed <__TMC_END__+0x39d5>
    79ed:	5f                   	pop    rdi
    79ee:	5f                   	pop    rdi
    79ef:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
    79f2:	5f                   	pop    rdi
    79f3:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    79f6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    79f9:	4e                   	rex.WRX
    79fa:	4b 53                	rex.WXB push r11
    79fc:	74 37                	je     7a35 <__TMC_END__+0x3a1d>
    79fe:	5f                   	pop    rdi
    79ff:	5f                   	pop    rdi
    7a00:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7a03:	31 31                	xor    DWORD PTR [rcx],esi
    7a05:	31 32                	xor    DWORD PTR [rdx],esi
    7a07:	62 61 73 69 63       	(bad)
    7a0c:	5f                   	pop    rdi
    7a0d:	73 74                	jae    7a83 <__TMC_END__+0x3a6b>
    7a0f:	72 69                	jb     7a7a <__TMC_END__+0x3a62>
    7a11:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7a12:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7a17:	31 31                	xor    DWORD PTR [rcx],esi
    7a19:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7a1c:	72 5f                	jb     7a7d <__TMC_END__+0x3a65>
    7a1e:	74 72                	je     7a92 <__TMC_END__+0x3a7a>
    7a20:	61                   	(bad)
    7a21:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7a28:	61 
    7a29:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7a2d:	37                   	(bad)
    7a2e:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    7a31:	70 61                	jo     7a94 <__TMC_END__+0x3a7c>
    7a33:	72 65                	jb     7a9a <__TMC_END__+0x3a82>
    7a35:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    7a37:	6d                   	ins    DWORD PTR es:[rdi],dx
    7a38:	50                   	push   rax
    7a39:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    7a3c:	5f                   	pop    rdi
    7a3d:	66 72 65             	data16 jb 7aa5 <__TMC_END__+0x3a8d>
    7a40:	65 72 65             	gs jb  7aa8 <__TMC_END__+0x3a90>
    7a43:	73 5f                	jae    7aa4 <__TMC_END__+0x3a8c>
    7a45:	62 75 66 00 5f 5a 4e 	vmaxsh xmm11,xmm19,WORD PTR [rdx+0x9c]
    7a4c:	4b 53                	rex.WXB push r11
    7a4e:	74 31                	je     7a81 <__TMC_END__+0x3a69>
    7a50:	37                   	(bad)
    7a51:	62 61 73 69 63       	(bad)
    7a56:	5f                   	pop    rdi
    7a57:	73 74                	jae    7acd <__TMC_END__+0x3ab5>
    7a59:	72 69                	jb     7ac4 <__TMC_END__+0x3aac>
    7a5b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7a5c:	67 5f                	addr32 pop rdi
    7a5e:	76 69                	jbe    7ac9 <__TMC_END__+0x3ab1>
    7a60:	65 77 49             	gs ja  7aac <__TMC_END__+0x3a94>
    7a63:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7a66:	31 31                	xor    DWORD PTR [rcx],esi
    7a68:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7a6b:	72 5f                	jb     7acc <__TMC_END__+0x3ab4>
    7a6d:	74 72                	je     7ae1 <__TMC_END__+0x3ac9>
    7a6f:	61                   	(bad)
    7a70:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x36454563
    7a77:	36 
    7a78:	73 75                	jae    7aef <__TMC_END__+0x3ad7>
    7a7a:	62 73 74 72 45       	(bad)
    7a7f:	6d                   	ins    DWORD PTR es:[rdi],dx
    7a80:	6d                   	ins    DWORD PTR es:[rdi],dx
    7a81:	00 6d 62             	add    BYTE PTR [rbp+0x62],ch
    7a84:	74 6f                	je     7af5 <__TMC_END__+0x3add>
    7a86:	77 63                	ja     7aeb <__TMC_END__+0x3ad3>
    7a88:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
    7a8b:	72 77                	jb     7b04 <__TMC_END__+0x3aec>
    7a8d:	61                   	(bad)
    7a8e:	72 64                	jb     7af4 <__TMC_END__+0x3adc>
    7a90:	5f                   	pop    rdi
    7a91:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7a98:	72 
    7a99:	5f                   	pop    rdi
    7a9a:	74 61                	je     7afd <__TMC_END__+0x3ae5>
    7a9c:	67 00 69 6e          	add    BYTE PTR [ecx+0x6e],ch
    7aa0:	74 5f                	je     7b01 <__TMC_END__+0x3ae9>
    7aa2:	70 5f                	jo     7b03 <__TMC_END__+0x3aeb>
    7aa4:	73 69                	jae    7b0f <__TMC_END__+0x3af7>
    7aa6:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    7aa8:	5f                   	pop    rdi
    7aa9:	70 6f                	jo     7b1a <__TMC_END__+0x3b02>
    7aab:	73 6e                	jae    7b1b <__TMC_END__+0x3b03>
    7aad:	00 74 76 5f          	add    BYTE PTR [rsi+rsi*2+0x5f],dh
    7ab1:	73 65                	jae    7b18 <__TMC_END__+0x3b00>
    7ab3:	63 00                	movsxd eax,DWORD PTR [rax]
    7ab5:	5f                   	pop    rdi
    7ab6:	53                   	push   rbx
    7ab7:	5f                   	pop    rdi
    7ab8:	70 72                	jo     7b2c <__TMC_END__+0x3b14>
    7aba:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7abb:	70 61                	jo     7b1e <__TMC_END__+0x3b06>
    7abd:	67 61                	addr32 (bad)
    7abf:	74 65                	je     7b26 <__TMC_END__+0x3b0e>
    7ac1:	5f                   	pop    rdi
    7ac2:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7ac3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7ac4:	5f                   	pop    rdi
    7ac5:	73 77                	jae    7b3e <__TMC_END__+0x3b26>
    7ac7:	61                   	(bad)
    7ac8:	70 00                	jo     7aca <__TMC_END__+0x3ab2>
    7aca:	5f                   	pop    rdi
    7acb:	5a                   	pop    rdx
    7acc:	4e 53                	rex.WRX push rbx
    7ace:	74 34                	je     7b04 <__TMC_END__+0x3aec>
    7ad0:	70 61                	jo     7b33 <__TMC_END__+0x3b1b>
    7ad2:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    7ad9:	45                   	rex.RB
    7ada:	43 34 45             	rex.XB xor al,0x45
    7add:	4f 53                	rex.WRXB push r11
    7adf:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    7ae2:	6c                   	ins    BYTE PTR es:[rdi],dx
    7ae3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7ae4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7ae5:	67 20 6c 6f 6e       	and    BYTE PTR [edi+ebp*2+0x6e],ch
    7aea:	67 20 75 6e          	and    BYTE PTR [ebp+0x6e],dh
    7aee:	73 69                	jae    7b59 <__TMC_END__+0x3b41>
    7af0:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    7af2:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    7af7:	74 00                	je     7af9 <__TMC_END__+0x3ae1>
    7af9:	6d                   	ins    DWORD PTR es:[rdi],dx
    7afa:	62 72 74 6f 77       	(bad)
    7aff:	63 00                	movsxd eax,DWORD PTR [rax]
    7b01:	5f                   	pop    rdi
    7b02:	63 75 72             	movsxd esi,DWORD PTR [rbp+0x72]
    7b05:	5f                   	pop    rdi
    7b06:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    7b09:	75 6d                	jne    7b78 <__TMC_END__+0x3b60>
    7b0b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7b0c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    7b0f:	4e                   	rex.WRX
    7b10:	4b 53                	rex.WXB push r11
    7b12:	74 37                	je     7b4b <__TMC_END__+0x3b33>
    7b14:	5f                   	pop    rdi
    7b15:	5f                   	pop    rdi
    7b16:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7b19:	31 31                	xor    DWORD PTR [rcx],esi
    7b1b:	31 32                	xor    DWORD PTR [rdx],esi
    7b1d:	62 61 73 69 63       	(bad)
    7b22:	5f                   	pop    rdi
    7b23:	73 74                	jae    7b99 <__TMC_END__+0x3b81>
    7b25:	72 69                	jb     7b90 <__TMC_END__+0x3b78>
    7b27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7b28:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7b2d:	31 31                	xor    DWORD PTR [rcx],esi
    7b2f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7b32:	72 5f                	jb     7b93 <__TMC_END__+0x3b7b>
    7b34:	74 72                	je     7ba8 <__TMC_END__+0x3b90>
    7b36:	61                   	(bad)
    7b37:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7b3e:	61 
    7b3f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7b43:	34 72                	xor    al,0x72
    7b45:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    7b47:	64 45 76 00          	fs rex.RB jbe 7b4b <__TMC_END__+0x3b33>
    7b4b:	5f                   	pop    rdi
    7b4c:	5a                   	pop    rdx
    7b4d:	4e 53                	rex.WRX push rbx
    7b4f:	74 37                	je     7b88 <__TMC_END__+0x3b70>
    7b51:	5f                   	pop    rdi
    7b52:	5f                   	pop    rdi
    7b53:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7b56:	31 31                	xor    DWORD PTR [rcx],esi
    7b58:	31 32                	xor    DWORD PTR [rdx],esi
    7b5a:	62 61 73 69 63       	(bad)
    7b5f:	5f                   	pop    rdi
    7b60:	73 74                	jae    7bd6 <__TMC_END__+0x3bbe>
    7b62:	72 69                	jb     7bcd <__TMC_END__+0x3bb5>
    7b64:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7b65:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7b6a:	31 31                	xor    DWORD PTR [rcx],esi
    7b6c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7b6f:	72 5f                	jb     7bd0 <__TMC_END__+0x3bb8>
    7b71:	74 72                	je     7be5 <__TMC_END__+0x3bcd>
    7b73:	61                   	(bad)
    7b74:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7b7b:	61 
    7b7c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7b80:	35 62 65 67 69       	xor    eax,0x69676562
    7b85:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7b86:	45 76 00             	rex.RB jbe 7b89 <__TMC_END__+0x3b71>
    7b89:	5f                   	pop    rdi
    7b8a:	5f                   	pop    rdi
    7b8b:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    7b8e:	70 61                	jo     7bf1 <__TMC_END__+0x3bd9>
    7b90:	72 5f                	jb     7bf1 <__TMC_END__+0x3bd9>
    7b92:	66 6e                	data16 outs dx,BYTE PTR ds:[rsi]
    7b94:	5f                   	pop    rdi
    7b95:	74 00                	je     7b97 <__TMC_END__+0x3b7f>
    7b97:	5f                   	pop    rdi
    7b98:	5a                   	pop    rdx
    7b99:	4e 53                	rex.WRX push rbx
    7b9b:	74 37                	je     7bd4 <__TMC_END__+0x3bbc>
    7b9d:	5f                   	pop    rdi
    7b9e:	5f                   	pop    rdi
    7b9f:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7ba2:	31 31                	xor    DWORD PTR [rcx],esi
    7ba4:	31 32                	xor    DWORD PTR [rdx],esi
    7ba6:	62 61 73 69 63       	(bad)
    7bab:	5f                   	pop    rdi
    7bac:	73 74                	jae    7c22 <__TMC_END__+0x3c0a>
    7bae:	72 69                	jb     7c19 <__TMC_END__+0x3c01>
    7bb0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7bb1:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7bb6:	31 31                	xor    DWORD PTR [rcx],esi
    7bb8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7bbb:	72 5f                	jb     7c1c <__TMC_END__+0x3c04>
    7bbd:	74 72                	je     7c31 <__TMC_END__+0x3c19>
    7bbf:	61                   	(bad)
    7bc0:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7bc7:	61 
    7bc8:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7bcc:	35 65 72 61 73       	xor    eax,0x73617265
    7bd1:	65 45                	gs rex.RB
    7bd3:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    7bd7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    7bd9:	75 5f                	jne    7c3a <__TMC_END__+0x3c22>
    7bdb:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7bde:	31 37                	xor    DWORD PTR [rdi],esi
    7be0:	5f                   	pop    rdi
    7be1:	5f                   	pop    rdi
    7be2:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7be3:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7be4:	72 6d                	jb     7c53 <__TMC_END__+0x3c3b>
    7be6:	61                   	(bad)
    7be7:	6c                   	ins    BYTE PTR es:[rdi],dx
    7be8:	5f                   	pop    rdi
    7be9:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7bf0:	72 
    7bf1:	49 50                	rex.WB push r8
    7bf3:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    7bf7:	5f                   	pop    rdi
    7bf8:	45                   	rex.RB
    7bf9:	45 53                	rex.RB push r11
    7bfb:	39 5f 00             	cmp    DWORD PTR [rdi+0x0],ebx
    7bfe:	5f                   	pop    rdi
    7bff:	5a                   	pop    rdx
    7c00:	53                   	push   rbx
    7c01:	74 38                	je     7c3b <__TMC_END__+0x3c23>
    7c03:	74 6f                	je     7c74 <__TMC_END__+0x3c5c>
    7c05:	5f                   	pop    rdi
    7c06:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7c09:	72 73                	jb     7c7e <__TMC_END__+0x3c66>
    7c0b:	50                   	push   rax
    7c0c:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    7c0f:	44                   	rex.R
    7c10:	46 31 36             	rex.RX xor DWORD PTR [rsi],r14d
    7c13:	62 53 74 31 32       	(bad)
    7c18:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7c1b:	72 73                	jb     7c90 <__TMC_END__+0x3c78>
    7c1d:	5f                   	pop    rdi
    7c1e:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    7c20:	72 6d                	jb     7c8f <__TMC_END__+0x3c77>
    7c22:	61                   	(bad)
    7c23:	74 00                	je     7c25 <__TMC_END__+0x3c0d>
    7c25:	76 61                	jbe    7c88 <__TMC_END__+0x3c70>
    7c27:	6c                   	ins    BYTE PTR es:[rdi],dx
    7c28:	75 65                	jne    7c8f <__TMC_END__+0x3c77>
    7c2a:	5f                   	pop    rdi
    7c2b:	74 6f                	je     7c9c <__TMC_END__+0x3c84>
    7c2d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7c2e:	5f                   	pop    rdi
    7c2f:	6c                   	ins    BYTE PTR es:[rdi],dx
    7c30:	61                   	(bad)
    7c31:	72 67                	jb     7c9a <__TMC_END__+0x3c82>
    7c33:	65 00 66 69          	add    BYTE PTR gs:[rsi+0x69],ah
    7c37:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7c38:	64 5f                	fs pop rdi
    7c3a:	66 69 72 73 74 5f    	imul   si,WORD PTR [rdx+0x73],0x5f74
    7c40:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7c41:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7c42:	74 5f                	je     7ca3 <__TMC_END__+0x3c8b>
    7c44:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7c45:	66 00 6e 6f          	data16 add BYTE PTR [rsi+0x6f],ch
    7c49:	5f                   	pop    rdi
    7c4a:	73 75                	jae    7cc1 <__TMC_END__+0x3ca9>
    7c4c:	63 68 5f             	movsxd ebp,DWORD PTR [rax+0x5f]
    7c4f:	70 72                	jo     7cc3 <__TMC_END__+0x3cab>
    7c51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7c52:	63 65 73             	movsxd esp,DWORD PTR [rbp+0x73]
    7c55:	73 00                	jae    7c57 <__TMC_END__+0x3c3f>
    7c57:	5f                   	pop    rdi
    7c58:	5a                   	pop    rdx
    7c59:	4e                   	rex.WRX
    7c5a:	4b 53                	rex.WXB push r11
    7c5c:	74 31                	je     7c8f <__TMC_END__+0x3c77>
    7c5e:	37                   	(bad)
    7c5f:	62 61 73 69 63       	(bad)
    7c64:	5f                   	pop    rdi
    7c65:	73 74                	jae    7cdb <__TMC_END__+0x3cc3>
    7c67:	72 69                	jb     7cd2 <__TMC_END__+0x3cba>
    7c69:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7c6a:	67 5f                	addr32 pop rdi
    7c6c:	76 69                	jbe    7cd7 <__TMC_END__+0x3cbf>
    7c6e:	65 77 49             	gs ja  7cba <__TMC_END__+0x3ca2>
    7c71:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7c74:	31 31                	xor    DWORD PTR [rcx],esi
    7c76:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7c79:	72 5f                	jb     7cda <__TMC_END__+0x3cc2>
    7c7b:	74 72                	je     7cef <__TMC_END__+0x3cd7>
    7c7d:	61                   	(bad)
    7c7e:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    7c85:	34 
    7c86:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    7c89:	79 45                	jns    7cd0 <__TMC_END__+0x3cb8>
    7c8b:	50                   	push   rax
    7c8c:	63 6d 6d             	movsxd ebp,DWORD PTR [rbp+0x6d]
    7c8f:	00 77 6d             	add    BYTE PTR [rdi+0x6d],dh
    7c92:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    7c94:	63 70 79             	movsxd esi,DWORD PTR [rax+0x79]
    7c97:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    7c9a:	4e 53                	rex.WRX push rbx
    7c9c:	74 31                	je     7ccf <__TMC_END__+0x3cb7>
    7c9e:	31 63 68             	xor    DWORD PTR [rbx+0x68],esp
    7ca1:	61                   	(bad)
    7ca2:	72 5f                	jb     7d03 <__TMC_END__+0x3ceb>
    7ca4:	74 72                	je     7d18 <__TMC_END__+0x3d00>
    7ca6:	61                   	(bad)
    7ca7:	69 74 73 49 63 45 31 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31314563
    7cae:	31 
    7caf:	74 6f                	je     7d20 <__TMC_END__+0x3d08>
    7cb1:	5f                   	pop    rdi
    7cb2:	69 6e 74 5f 74 79 70 	imul   ebp,DWORD PTR [rsi+0x74],0x7079745f
    7cb9:	65 45 52             	gs rex.RB push r10
    7cbc:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    7cbf:	5f                   	pop    rdi
    7cc0:	5a                   	pop    rdx
    7cc1:	4e                   	rex.WRX
    7cc2:	4b 53                	rex.WXB push r11
    7cc4:	74 31                	je     7cf7 <__TMC_END__+0x3cdf>
    7cc6:	37                   	(bad)
    7cc7:	62 61 73 69 63       	(bad)
    7ccc:	5f                   	pop    rdi
    7ccd:	73 74                	jae    7d43 <__TMC_END__+0x3d2b>
    7ccf:	72 69                	jb     7d3a <__TMC_END__+0x3d22>
    7cd1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7cd2:	67 5f                	addr32 pop rdi
    7cd4:	76 69                	jbe    7d3f <__TMC_END__+0x3d27>
    7cd6:	65 77 49             	gs ja  7d22 <__TMC_END__+0x3d0a>
    7cd9:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7cdc:	31 31                	xor    DWORD PTR [rcx],esi
    7cde:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7ce1:	72 5f                	jb     7d42 <__TMC_END__+0x3d2a>
    7ce3:	74 72                	je     7d57 <__TMC_END__+0x3d3f>
    7ce5:	61                   	(bad)
    7ce6:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    7ced:	34 
    7cee:	63 65 6e             	movsxd esp,DWORD PTR [rbp+0x6e]
    7cf1:	64 45 76 00          	fs rex.RB jbe 7cf5 <__TMC_END__+0x3cdd>
    7cf5:	5f                   	pop    rdi
    7cf6:	5a                   	pop    rdx
    7cf7:	4e 53                	rex.WRX push rbx
    7cf9:	74 37                	je     7d32 <__TMC_END__+0x3d1a>
    7cfb:	5f                   	pop    rdi
    7cfc:	5f                   	pop    rdi
    7cfd:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7d00:	31 31                	xor    DWORD PTR [rcx],esi
    7d02:	31 32                	xor    DWORD PTR [rdx],esi
    7d04:	62 61 73 69 63       	(bad)
    7d09:	5f                   	pop    rdi
    7d0a:	73 74                	jae    7d80 <__TMC_END__+0x3d68>
    7d0c:	72 69                	jb     7d77 <__TMC_END__+0x3d5f>
    7d0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7d0f:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7d14:	31 31                	xor    DWORD PTR [rcx],esi
    7d16:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7d19:	72 5f                	jb     7d7a <__TMC_END__+0x3d62>
    7d1b:	74 72                	je     7d8f <__TMC_END__+0x3d77>
    7d1d:	61                   	(bad)
    7d1e:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7d25:	61 
    7d26:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7d2a:	39 5f 4d             	cmp    DWORD PTR [rdi+0x4d],ebx
    7d2d:	5f                   	pop    rdi
    7d2e:	63 72 65             	movsxd esi,DWORD PTR [rdx+0x65]
    7d31:	61                   	(bad)
    7d32:	74 65                	je     7d99 <__TMC_END__+0x3d81>
    7d34:	45 52                	rex.RB push r10
    7d36:	6d                   	ins    DWORD PTR es:[rdi],dx
    7d37:	6d                   	ins    DWORD PTR es:[rdi],dx
    7d38:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    7d3b:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    7d3f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    7d41:	75 5f                	jne    7da2 <__TMC_END__+0x3d8a>
    7d43:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7d46:	31 37                	xor    DWORD PTR [rdi],esi
    7d48:	5f                   	pop    rdi
    7d49:	5f                   	pop    rdi
    7d4a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7d4b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7d4c:	72 6d                	jb     7dbb <__TMC_END__+0x3da3>
    7d4e:	61                   	(bad)
    7d4f:	6c                   	ins    BYTE PTR es:[rdi],dx
    7d50:	5f                   	pop    rdi
    7d51:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7d58:	72 
    7d59:	49 50                	rex.WB push r8
    7d5b:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7d5e:	34 73                	xor    al,0x73
    7d60:	70 61                	jo     7dc3 <__TMC_END__+0x3dab>
    7d62:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7d63:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    7d68:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    7d6b:	36 37                	ss (bad)
    7d6d:	34 34                	xor    al,0x34
    7d6f:	30 37                	xor    BYTE PTR [rdi],dh
    7d71:	33 37                	xor    esi,DWORD PTR [rdi]
    7d73:	30 39                	xor    BYTE PTR [rcx],bh
    7d75:	35 35 31 36 31       	xor    eax,0x31363135
    7d7a:	35 45 45 45 43       	xor    eax,0x43454545
    7d7f:	34 45                	xor    al,0x45
    7d81:	52                   	push   rdx
    7d82:	4b 53                	rex.WXB push r11
    7d84:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
    7d87:	5f                   	pop    rdi
    7d88:	4d 5f                	rex.WRB pop r15
    7d8a:	73 76                	jae    7e02 <__TMC_END__+0x3dea>
    7d8c:	00 66 75             	add    BYTE PTR [rsi+0x75],ah
    7d8f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7d90:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
    7d94:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7d95:	5f                   	pop    rdi
    7d96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7d97:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7d98:	74 5f                	je     7df9 <__TMC_END__+0x3de1>
    7d9a:	73 75                	jae    7e11 <__TMC_END__+0x3df9>
    7d9c:	70 70                	jo     7e0e <__TMC_END__+0x3df6>
    7d9e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7d9f:	72 74                	jb     7e15 <__TMC_END__+0x3dfd>
    7da1:	65 64 00 66 67       	gs add BYTE PTR fs:[rsi+0x67],ah
    7da6:	65 74 63             	gs je  7e0c <__TMC_END__+0x3df4>
    7da9:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    7dac:	73 6e                	jae    7e1c <__TMC_END__+0x3e04>
    7dae:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    7db1:	00 66 6f             	add    BYTE PTR [rsi+0x6f],ah
    7db4:	70 65                	jo     7e1b <__TMC_END__+0x3e03>
    7db6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7db7:	00 74 6d 5f          	add    BYTE PTR [rbp+rbp*2+0x5f],dh
    7dbb:	67 6d                	ins    DWORD PTR es:[edi],dx
    7dbd:	74 6f                	je     7e2e <__TMC_END__+0x3e16>
    7dbf:	66 66 00 5f 5a       	data16 data16 add BYTE PTR [rdi+0x5a],bl
    7dc4:	4e 53                	rex.WRX push rbx
    7dc6:	74 37                	je     7dff <__TMC_END__+0x3de7>
    7dc8:	5f                   	pop    rdi
    7dc9:	5f                   	pop    rdi
    7dca:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7dcd:	31 31                	xor    DWORD PTR [rcx],esi
    7dcf:	31 32                	xor    DWORD PTR [rdx],esi
    7dd1:	62 61 73 69 63       	(bad)
    7dd6:	5f                   	pop    rdi
    7dd7:	73 74                	jae    7e4d <__TMC_END__+0x3e35>
    7dd9:	72 69                	jb     7e44 <__TMC_END__+0x3e2c>
    7ddb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7ddc:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    7de1:	31 31                	xor    DWORD PTR [rcx],esi
    7de3:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7de6:	72 5f                	jb     7e47 <__TMC_END__+0x3e2f>
    7de8:	74 72                	je     7e5c <__TMC_END__+0x3e44>
    7dea:	61                   	(bad)
    7deb:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    7df2:	61 
    7df3:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    7df7:	36 72 65             	ss jb  7e5f <__TMC_END__+0x3e47>
    7dfa:	73 69                	jae    7e65 <__TMC_END__+0x3e4d>
    7dfc:	7a 65                	jp     7e63 <__TMC_END__+0x3e4b>
    7dfe:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    7e00:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    7e03:	4e 53                	rex.WRX push rbx
    7e05:	74 31                	je     7e38 <__TMC_END__+0x3e20>
    7e07:	35 5f 5f 6e 65       	xor    eax,0x656e5f5f
    7e0c:	77 5f                	ja     7e6d <__TMC_END__+0x3e55>
    7e0e:	61                   	(bad)
    7e0f:	6c                   	ins    BYTE PTR es:[rdi],dx
    7e10:	6c                   	ins    BYTE PTR es:[rdi],dx
    7e11:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7e12:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    7e15:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7e16:	72 49                	jb     7e61 <__TMC_END__+0x3e49>
    7e18:	63 45 61             	movsxd eax,DWORD PTR [rbp+0x61]
    7e1b:	53                   	push   rbx
    7e1c:	45 52                	rex.RB push r10
    7e1e:	4b 53                	rex.WXB push r11
    7e20:	30 5f 00             	xor    BYTE PTR [rdi+0x0],bl
    7e23:	5f                   	pop    rdi
    7e24:	5a                   	pop    rdx
    7e25:	4e                   	rex.WRX
    7e26:	4b 53                	rex.WXB push r11
    7e28:	74 31                	je     7e5b <__TMC_END__+0x3e43>
    7e2a:	37                   	(bad)
    7e2b:	62 61 73 69 63       	(bad)
    7e30:	5f                   	pop    rdi
    7e31:	73 74                	jae    7ea7 <__TMC_END__+0x3e8f>
    7e33:	72 69                	jb     7e9e <__TMC_END__+0x3e86>
    7e35:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7e36:	67 5f                	addr32 pop rdi
    7e38:	76 69                	jbe    7ea3 <__TMC_END__+0x3e8b>
    7e3a:	65 77 49             	gs ja  7e86 <__TMC_END__+0x3e6e>
    7e3d:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7e40:	31 31                	xor    DWORD PTR [rcx],esi
    7e42:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7e45:	72 5f                	jb     7ea6 <__TMC_END__+0x3e8e>
    7e47:	74 72                	je     7ebb <__TMC_END__+0x3ea3>
    7e49:	61                   	(bad)
    7e4a:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    7e51:	35 
    7e52:	62 65 67 69 6e       	(bad)
    7e57:	45 76 00             	rex.RB jbe 7e5a <__TMC_END__+0x3e42>
    7e5a:	5f                   	pop    rdi
    7e5b:	5a                   	pop    rdx
    7e5c:	4e 53                	rex.WRX push rbx
    7e5e:	74 31                	je     7e91 <__TMC_END__+0x3e79>
    7e60:	35 5f 5f 6e 65       	xor    eax,0x656e5f5f
    7e65:	77 5f                	ja     7ec6 <__TMC_END__+0x3eae>
    7e67:	61                   	(bad)
    7e68:	6c                   	ins    BYTE PTR es:[rdi],dx
    7e69:	6c                   	ins    BYTE PTR es:[rdi],dx
    7e6a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7e6b:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    7e6e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7e6f:	72 49                	jb     7eba <__TMC_END__+0x3ea2>
    7e71:	63 45 38             	movsxd eax,DWORD PTR [rbp+0x38]
    7e74:	61                   	(bad)
    7e75:	6c                   	ins    BYTE PTR es:[rdi],dx
    7e76:	6c                   	ins    BYTE PTR es:[rdi],dx
    7e77:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7e78:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    7e7b:	65 45 6d             	gs rex.RB ins DWORD PTR es:[rdi],dx
    7e7e:	50                   	push   rax
    7e7f:	4b 76 00             	rex.WXB jbe 7e82 <__TMC_END__+0x3e6a>
    7e82:	5f                   	pop    rdi
    7e83:	5a                   	pop    rdx
    7e84:	4e 53                	rex.WRX push rbx
    7e86:	74 34                	je     7ebc <__TMC_END__+0x3ea4>
    7e88:	70 61                	jo     7eeb <__TMC_END__+0x3ed3>
    7e8a:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    7e91:	45 61                	rex.RB (bad)
    7e93:	53                   	push   rbx
    7e94:	45 52                	rex.RB push r10
    7e96:	4b 53                	rex.WXB push r11
    7e98:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    7e9b:	63 6c 31 33          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x33]
    7e9f:	5f                   	pop    rdi
    7ea0:	53                   	push   rbx
    7ea1:	5f                   	pop    rdi
    7ea2:	61                   	(bad)
    7ea3:	73 73                	jae    7f18 <__TMC_END__+0x3f00>
    7ea5:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    7eac:	49 52                	rex.WB push r10
    7eae:	4b 54                	rex.WXB push r12
    7eb0:	5f                   	pop    rdi
    7eb1:	52                   	push   rdx
    7eb2:	4b 54                	rex.WXB push r12
    7eb4:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    7eb7:	45 00 5f 49          	add    BYTE PTR [r15+0x49],r11b
    7ebb:	4f 5f                	rex.WRXB pop r15
    7ebd:	62 61 63 6b 75       	(bad)
    7ec2:	70 5f                	jo     7f23 <__TMC_END__+0x3f0b>
    7ec4:	62 61 73 65 00       	(bad)
    7ec9:	5f                   	pop    rdi
    7eca:	5a                   	pop    rdx
    7ecb:	4e                   	rex.WRX
    7ecc:	4b 53                	rex.WXB push r11
    7ece:	74 31                	je     7f01 <__TMC_END__+0x3ee9>
    7ed0:	37                   	(bad)
    7ed1:	62 61 73 69 63       	(bad)
    7ed6:	5f                   	pop    rdi
    7ed7:	73 74                	jae    7f4d <__TMC_END__+0x3f35>
    7ed9:	72 69                	jb     7f44 <__TMC_END__+0x3f2c>
    7edb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7edc:	67 5f                	addr32 pop rdi
    7ede:	76 69                	jbe    7f49 <__TMC_END__+0x3f31>
    7ee0:	65 77 49             	gs ja  7f2c <__TMC_END__+0x3f14>
    7ee3:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7ee6:	31 31                	xor    DWORD PTR [rcx],esi
    7ee8:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    7eeb:	72 5f                	jb     7f4c <__TMC_END__+0x3f34>
    7eed:	74 72                	je     7f61 <__TMC_END__+0x3f49>
    7eef:	61                   	(bad)
    7ef0:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    7ef7:	31 
    7ef8:	32 66 69             	xor    ah,BYTE PTR [rsi+0x69]
    7efb:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7efc:	64 5f                	fs pop rdi
    7efe:	6c                   	ins    BYTE PTR es:[rdi],dx
    7eff:	61                   	(bad)
    7f00:	73 74                	jae    7f76 <__TMC_END__+0x3f5e>
    7f02:	5f                   	pop    rdi
    7f03:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7f04:	66 45 50             	rex.RB push r8w
    7f07:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    7f0b:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    7f0e:	74 5f                	je     7f6f <__TMC_END__+0x3f57>
    7f10:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7f11:	5f                   	pop    rdi
    7f12:	73 65                	jae    7f79 <__TMC_END__+0x3f61>
    7f14:	70 5f                	jo     7f75 <__TMC_END__+0x3f5d>
    7f16:	62 79 5f 73 70       	(bad)
    7f1b:	61                   	(bad)
    7f1c:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    7f1f:	5f                   	pop    rdi
    7f20:	49                   	rex.WB
    7f21:	4f 5f                	rex.WRXB pop r15
    7f23:	72 65                	jb     7f8a <__TMC_END__+0x3f72>
    7f25:	61                   	(bad)
    7f26:	64 5f                	fs pop rdi
    7f28:	70 74                	jo     7f9e <__TMC_END__+0x3f86>
    7f2a:	72 00                	jb     7f2c <__TMC_END__+0x3f14>
    7f2c:	5f                   	pop    rdi
    7f2d:	5a                   	pop    rdx
    7f2e:	4e 53                	rex.WRX push rbx
    7f30:	74 38                	je     7f6a <__TMC_END__+0x3f52>
    7f32:	5f                   	pop    rdi
    7f33:	5f                   	pop    rdi
    7f34:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    7f36:	72 6d                	jb     7fa5 <__TMC_END__+0x3f8d>
    7f38:	61                   	(bad)
    7f39:	74 31                	je     7f6c <__TMC_END__+0x3f54>
    7f3b:	30 5f 53             	xor    BYTE PTR [rdi+0x53],bl
    7f3e:	69 6e 6b 5f 69 74 65 	imul   ebp,DWORD PTR [rsi+0x6b],0x6574695f
    7f45:	72 49                	jb     7f90 <__TMC_END__+0x3f78>
    7f47:	63 45 64             	movsxd eax,DWORD PTR [rbp+0x64]
    7f4a:	65 45 76 00          	gs rex.RB jbe 7f4e <__TMC_END__+0x3f36>
    7f4e:	5f                   	pop    rdi
    7f4f:	5a                   	pop    rdx
    7f50:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    7f54:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    7f56:	75 5f                	jne    7fb7 <__TMC_END__+0x3f9f>
    7f58:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    7f5b:	31 37                	xor    DWORD PTR [rdi],esi
    7f5d:	5f                   	pop    rdi
    7f5e:	5f                   	pop    rdi
    7f5f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7f60:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7f61:	72 6d                	jb     7fd0 <__TMC_END__+0x3fb8>
    7f63:	61                   	(bad)
    7f64:	6c                   	ins    BYTE PTR es:[rdi],dx
    7f65:	5f                   	pop    rdi
    7f66:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    7f6d:	72 
    7f6e:	49 50                	rex.WB push r8
    7f70:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    7f73:	34 73                	xor    al,0x73
    7f75:	70 61                	jo     7fd8 <__TMC_END__+0x3fc0>
    7f77:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7f78:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    7f7d:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    7f80:	36 37                	ss (bad)
    7f82:	34 34                	xor    al,0x34
    7f84:	30 37                	xor    BYTE PTR [rdi],dh
    7f86:	33 37                	xor    esi,DWORD PTR [rdi]
    7f88:	30 39                	xor    BYTE PTR [rcx],bh
    7f8a:	35 35 31 36 31       	xor    eax,0x31363135
    7f8f:	35 45 45 45 6d       	xor    eax,0x6d454545
    7f94:	49                   	rex.WB
    7f95:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    7f97:	00 74 79 70          	add    BYTE PTR [rcx+rdi*2+0x70],dh
    7f9b:	65 5f                	gs pop rdi
    7f9d:	69 6e 66 6f 00 61 72 	imul   ebp,DWORD PTR [rsi+0x66],0x7261006f
    7fa4:	67 75 6d             	addr32 jne 8014 <__TMC_END__+0x3ffc>
    7fa7:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    7fa9:	74 5f                	je     800a <__TMC_END__+0x3ff2>
    7fab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7fac:	75 74                	jne    8022 <__TMC_END__+0x400a>
    7fae:	5f                   	pop    rdi
    7faf:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7fb0:	66 5f                	pop    di
    7fb2:	64 6f                	outs   dx,DWORD PTR fs:[rsi]
    7fb4:	6d                   	ins    DWORD PTR es:[rdi],dx
    7fb5:	61                   	(bad)
    7fb6:	69 6e 00 5f 4d 5f 6e 	imul   ebp,DWORD PTR [rsi+0x0],0x6e5f4d5f
    7fbd:	65 78 74             	gs js  8034 <__TMC_END__+0x401c>
    7fc0:	00 66 67             	add    BYTE PTR [rsi+0x67],ah
    7fc3:	65 74 77             	gs je  803d <__TMC_END__+0x4025>
    7fc6:	63 00                	movsxd eax,DWORD PTR [rax]
    7fc8:	5f                   	pop    rdi
    7fc9:	5a                   	pop    rdx
    7fca:	4e 53                	rex.WRX push rbx
    7fcc:	61                   	(bad)
    7fcd:	49 63 45 43          	movsxd rax,DWORD PTR [r13+0x43]
    7fd1:	34 45                	xor    al,0x45
    7fd3:	76 00                	jbe    7fd5 <__TMC_END__+0x3fbd>
    7fd5:	67 65 74 65          	addr32 gs je 803e <__TMC_END__+0x4026>
    7fd9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    7fda:	76 00                	jbe    7fdc <__TMC_END__+0x3fc4>
    7fdc:	5f                   	pop    rdi
    7fdd:	66 72 65             	data16 jb 8045 <__TMC_END__+0x402d>
    7fe0:	65 72 65             	gs jb  8048 <__TMC_END__+0x4030>
    7fe3:	73 5f                	jae    8044 <__TMC_END__+0x402c>
    7fe5:	6c                   	ins    BYTE PTR es:[rdi],dx
    7fe6:	69 73 74 00 73 69 7a 	imul   esi,DWORD PTR [rbx+0x74],0x7a697300
    7fed:	65 5f                	gs pop rdi
    7fef:	62 79 74 65 73       	(bad)
    7ff4:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    7ff7:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    7ff9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    7ffa:	61                   	(bad)
    7ffb:	74 31                	je     802e <__TMC_END__+0x4016>
    7ffd:	32 38                	xor    bh,BYTE PTR [rax]
    7fff:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    8002:	73 73                	jae    8077 <__TMC_END__+0x405f>
    8004:	69 7a 65 5f 74 00 66 	imul   edi,DWORD PTR [rdx+0x65],0x6600745f
    800b:	67 65 74 77          	addr32 gs je 8086 <__TMC_END__+0x406e>
    800f:	73 00                	jae    8011 <__TMC_END__+0x3ff9>
    8011:	62 61 64 5f 6d       	(bad)
    8016:	65 73 73             	gs jae 808c <__TMC_END__+0x4074>
    8019:	61                   	(bad)
    801a:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    801f:	4e                   	rex.WRX
    8020:	4b 53                	rex.WXB push r11
    8022:	74 37                	je     805b <__TMC_END__+0x4043>
    8024:	5f                   	pop    rdi
    8025:	5f                   	pop    rdi
    8026:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8029:	31 31                	xor    DWORD PTR [rcx],esi
    802b:	31 32                	xor    DWORD PTR [rdx],esi
    802d:	62 61 73 69 63       	(bad)
    8032:	5f                   	pop    rdi
    8033:	73 74                	jae    80a9 <__TMC_END__+0x4091>
    8035:	72 69                	jb     80a0 <__TMC_END__+0x4088>
    8037:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8038:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    803d:	31 31                	xor    DWORD PTR [rcx],esi
    803f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8042:	72 5f                	jb     80a3 <__TMC_END__+0x408b>
    8044:	74 72                	je     80b8 <__TMC_END__+0x40a0>
    8046:	61                   	(bad)
    8047:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    804e:	61 
    804f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8053:	31 32                	xor    DWORD PTR [rdx],esi
    8055:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    805b:	61                   	(bad)
    805c:	73 74                	jae    80d2 <__TMC_END__+0x40ba>
    805e:	5f                   	pop    rdi
    805f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8060:	66 45 63 6d 00       	movsxd r13w,DWORD PTR [r13+0x0]
    8065:	5f                   	pop    rdi
    8066:	5a                   	pop    rdx
    8067:	4e                   	rex.WRX
    8068:	4b 53                	rex.WXB push r11
    806a:	74 37                	je     80a3 <__TMC_END__+0x408b>
    806c:	5f                   	pop    rdi
    806d:	5f                   	pop    rdi
    806e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8071:	31 31                	xor    DWORD PTR [rcx],esi
    8073:	31 32                	xor    DWORD PTR [rdx],esi
    8075:	62 61 73 69 63       	(bad)
    807a:	5f                   	pop    rdi
    807b:	73 74                	jae    80f1 <__TMC_END__+0x40d9>
    807d:	72 69                	jb     80e8 <__TMC_END__+0x40d0>
    807f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8080:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8085:	31 31                	xor    DWORD PTR [rcx],esi
    8087:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    808a:	72 5f                	jb     80eb <__TMC_END__+0x40d3>
    808c:	74 72                	je     8100 <__TMC_END__+0x40e8>
    808e:	61                   	(bad)
    808f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8096:	61 
    8097:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    809b:	31 36                	xor    DWORD PTR [rsi],esi
    809d:	66 69 6e 64 5f 6c    	imul   bp,WORD PTR [rsi+0x64],0x6c5f
    80a3:	61                   	(bad)
    80a4:	73 74                	jae    811a <__TMC_END__+0x4102>
    80a6:	5f                   	pop    rdi
    80a7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    80a8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    80a9:	74 5f                	je     810a <__TMC_END__+0x40f2>
    80ab:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    80ac:	66 45 52             	rex.RB push r10w
    80af:	4b 53                	rex.WXB push r11
    80b1:	34 5f                	xor    al,0x5f
    80b3:	6d                   	ins    DWORD PTR es:[rdi],dx
    80b4:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
    80b7:	74 5f                	je     8118 <__TMC_END__+0x4100>
    80b9:	61                   	(bad)
    80ba:	5f                   	pop    rdi
    80bb:	64 69 72 65 63 74 6f 	imul   esi,DWORD PTR fs:[rdx+0x65],0x726f7463
    80c2:	72 
    80c3:	79 00                	jns    80c5 <__TMC_END__+0x40ad>
    80c5:	5f                   	pop    rdi
    80c6:	5a                   	pop    rdx
    80c7:	53                   	push   rbx
    80c8:	74 38                	je     8102 <__TMC_END__+0x40ea>
    80ca:	74 6f                	je     813b <__TMC_END__+0x4123>
    80cc:	5f                   	pop    rdi
    80cd:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    80d0:	72 73                	jb     8145 <__TMC_END__+0x412d>
    80d2:	50                   	push   rax
    80d3:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    80d6:	44                   	rex.R
    80d7:	46 33 32             	rex.RX xor r14d,DWORD PTR [rdx]
    80da:	5f                   	pop    rdi
    80db:	53                   	push   rbx
    80dc:	74 31                	je     810f <__TMC_END__+0x40f7>
    80de:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    80e1:	61                   	(bad)
    80e2:	72 73                	jb     8157 <__TMC_END__+0x413f>
    80e4:	5f                   	pop    rdi
    80e5:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    80e7:	72 6d                	jb     8156 <__TMC_END__+0x413e>
    80e9:	61                   	(bad)
    80ea:	74 69                	je     8155 <__TMC_END__+0x413d>
    80ec:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    80ef:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    80f0:	65 77 5f             	gs ja  8152 <__TMC_END__+0x413a>
    80f3:	61                   	(bad)
    80f4:	6c                   	ins    BYTE PTR es:[rdi],dx
    80f5:	6c                   	ins    BYTE PTR es:[rdi],dx
    80f6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    80f7:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    80fa:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    80fb:	72 00                	jb     80fd <__TMC_END__+0x40e5>
    80fd:	5f                   	pop    rdi
    80fe:	5a                   	pop    rdx
    80ff:	4e                   	rex.WRX
    8100:	4b 53                	rex.WXB push r11
    8102:	74 37                	je     813b <__TMC_END__+0x4123>
    8104:	5f                   	pop    rdi
    8105:	5f                   	pop    rdi
    8106:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8109:	31 31                	xor    DWORD PTR [rcx],esi
    810b:	31 32                	xor    DWORD PTR [rdx],esi
    810d:	62 61 73 69 63       	(bad)
    8112:	5f                   	pop    rdi
    8113:	73 74                	jae    8189 <__TMC_END__+0x4171>
    8115:	72 69                	jb     8180 <__TMC_END__+0x4168>
    8117:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8118:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    811d:	31 31                	xor    DWORD PTR [rcx],esi
    811f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8122:	72 5f                	jb     8183 <__TMC_END__+0x416b>
    8124:	74 72                	je     8198 <__TMC_END__+0x4180>
    8126:	61                   	(bad)
    8127:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    812e:	61 
    812f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8133:	35 72 66 69 6e       	xor    eax,0x6e696672
    8138:	64 45 63 6d 00       	movsxd r13d,DWORD PTR fs:[r13+0x0]
    813d:	5f                   	pop    rdi
    813e:	5a                   	pop    rdx
    813f:	4e 53                	rex.WRX push rbx
    8141:	74 31                	je     8174 <__TMC_END__+0x415c>
    8143:	36 72 65             	ss jb  81ab <__TMC_END__+0x4193>
    8146:	76 65                	jbe    81ad <__TMC_END__+0x4195>
    8148:	72 73                	jb     81bd <__TMC_END__+0x41a5>
    814a:	65 5f                	gs pop rdi
    814c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8153:	72 
    8154:	49                   	rex.WB
    8155:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    8159:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    815b:	75 5f                	jne    81bc <__TMC_END__+0x41a4>
    815d:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8160:	31 37                	xor    DWORD PTR [rdi],esi
    8162:	5f                   	pop    rdi
    8163:	5f                   	pop    rdi
    8164:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8165:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8166:	72 6d                	jb     81d5 <__TMC_END__+0x41bd>
    8168:	61                   	(bad)
    8169:	6c                   	ins    BYTE PTR es:[rdi],dx
    816a:	5f                   	pop    rdi
    816b:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8172:	72 
    8173:	49 50                	rex.WB push r8
    8175:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    8178:	34 73                	xor    al,0x73
    817a:	70 61                	jo     81dd <__TMC_END__+0x41c5>
    817c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    817d:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    8182:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    8185:	36 37                	ss (bad)
    8187:	34 34                	xor    al,0x34
    8189:	30 37                	xor    BYTE PTR [rdi],dh
    818b:	33 37                	xor    esi,DWORD PTR [rdi]
    818d:	30 39                	xor    BYTE PTR [rcx],bh
    818f:	35 35 31 36 31       	xor    eax,0x31363135
    8194:	35 45 45 45 45       	xor    eax,0x45454545
    8199:	45                   	rex.RB
    819a:	43 34 45             	rex.XB xor al,0x45
    819d:	76 00                	jbe    819f <__TMC_END__+0x4187>
    819f:	74 6f                	je     8210 <__TMC_END__+0x41f8>
    81a1:	5f                   	pop    rdi
    81a2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    81a5:	72 73                	jb     821a <__TMC_END__+0x4202>
    81a7:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    81aa:	4e                   	rex.WRX
    81ab:	4b 53                	rex.WXB push r11
    81ad:	74 31                	je     81e0 <__TMC_END__+0x41c8>
    81af:	37                   	(bad)
    81b0:	62 61 73 69 63       	(bad)
    81b5:	5f                   	pop    rdi
    81b6:	73 74                	jae    822c <__TMC_END__+0x4214>
    81b8:	72 69                	jb     8223 <__TMC_END__+0x420b>
    81ba:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    81bb:	67 5f                	addr32 pop rdi
    81bd:	76 69                	jbe    8228 <__TMC_END__+0x4210>
    81bf:	65 77 49             	gs ja  820b <__TMC_END__+0x41f3>
    81c2:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    81c5:	31 31                	xor    DWORD PTR [rcx],esi
    81c7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    81ca:	72 5f                	jb     822b <__TMC_END__+0x4213>
    81cc:	74 72                	je     8240 <__TMC_END__+0x4228>
    81ce:	61                   	(bad)
    81cf:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x35454563
    81d6:	35 
    81d7:	65 6d                	gs ins DWORD PTR es:[rdi],dx
    81d9:	70 74                	jo     824f <__TMC_END__+0x4237>
    81db:	79 45                	jns    8222 <__TMC_END__+0x420a>
    81dd:	76 00                	jbe    81df <__TMC_END__+0x41c7>
    81df:	6d                   	ins    DWORD PTR es:[rdi],dx
    81e0:	79 5f                	jns    8241 <__TMC_END__+0x4229>
    81e2:	77 72                	ja     8256 <__TMC_END__+0x423e>
    81e4:	69 74 65 00 62 61 73 	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x69736162
    81eb:	69 
    81ec:	63 5f 63             	movsxd ebx,DWORD PTR [rdi+0x63]
    81ef:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    81f0:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    81f1:	73 74                	jae    8267 <__TMC_END__+0x424f>
    81f3:	5f                   	pop    rdi
    81f4:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    81fb:	72 
    81fc:	3c 73                	cmp    al,0x73
    81fe:	74 64                	je     8264 <__TMC_END__+0x424c>
    8200:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    8202:	72 65                	jb     8269 <__TMC_END__+0x4251>
    8204:	76 65                	jbe    826b <__TMC_END__+0x4253>
    8206:	72 73                	jb     827b <__TMC_END__+0x4263>
    8208:	65 5f                	gs pop rdi
    820a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8211:	72 
    8212:	3c 5f                	cmp    al,0x5f
    8214:	5f                   	pop    rdi
    8215:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    8217:	75 5f                	jne    8278 <__TMC_END__+0x4260>
    8219:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    821c:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    821e:	5f                   	pop    rdi
    821f:	5f                   	pop    rdi
    8220:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8221:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8222:	72 6d                	jb     8291 <__TMC_END__+0x4279>
    8224:	61                   	(bad)
    8225:	6c                   	ins    BYTE PTR es:[rdi],dx
    8226:	5f                   	pop    rdi
    8227:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    822e:	72 
    822f:	3c 63                	cmp    al,0x63
    8231:	68 61 72 2a 2c       	push   0x2c2a7261
    8236:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    8239:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    823c:	73 70                	jae    82ae <__TMC_END__+0x4296>
    823e:	61                   	(bad)
    823f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8240:	3c 63                	cmp    al,0x63
    8242:	68 61 72 2c 20       	push   0x202c7261
    8247:	31 38                	xor    DWORD PTR [rax],edi
    8249:	34 34                	xor    al,0x34
    824b:	36 37                	ss (bad)
    824d:	34 34                	xor    al,0x34
    824f:	30 37                	xor    BYTE PTR [rdi],dh
    8251:	33 37                	xor    esi,DWORD PTR [rdi]
    8253:	30 39                	xor    BYTE PTR [rcx],bh
    8255:	35 35 31 36 31       	xor    eax,0x31363135
    825a:	35 3e 20 3e 20       	xor    eax,0x203e203e
    825f:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    8262:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8265:	4e                   	rex.WRX
    8266:	4b 53                	rex.WXB push r11
    8268:	74 34                	je     829e <__TMC_END__+0x4286>
    826a:	73 70                	jae    82dc <__TMC_END__+0x42c4>
    826c:	61                   	(bad)
    826d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    826e:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    8273:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    8276:	36 37                	ss (bad)
    8278:	34 34                	xor    al,0x34
    827a:	30 37                	xor    BYTE PTR [rdi],dh
    827c:	33 37                	xor    esi,DWORD PTR [rdi]
    827e:	30 39                	xor    BYTE PTR [rcx],bh
    8280:	35 35 31 36 31       	xor    eax,0x31363135
    8285:	35 45 45 34 63       	xor    eax,0x63344545
    828a:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    828c:	64 45 76 00          	fs rex.RB jbe 8290 <__TMC_END__+0x4278>
    8290:	5f                   	pop    rdi
    8291:	5a                   	pop    rdx
    8292:	4e 53                	rex.WRX push rbx
    8294:	74 34                	je     82ca <__TMC_END__+0x42b2>
    8296:	70 61                	jo     82f9 <__TMC_END__+0x42e1>
    8298:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    829f:	45 34 73             	rex.RB xor al,0x73
    82a2:	77 61                	ja     8305 <__TMC_END__+0x42ed>
    82a4:	70 45                	jo     82eb <__TMC_END__+0x42d3>
    82a6:	52                   	push   rdx
    82a7:	53                   	push   rbx
    82a8:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    82ab:	5f                   	pop    rdi
    82ac:	5a                   	pop    rdx
    82ad:	4e                   	rex.WRX
    82ae:	4b 53                	rex.WXB push r11
    82b0:	74 37                	je     82e9 <__TMC_END__+0x42d1>
    82b2:	5f                   	pop    rdi
    82b3:	5f                   	pop    rdi
    82b4:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    82b7:	31 31                	xor    DWORD PTR [rcx],esi
    82b9:	31 32                	xor    DWORD PTR [rdx],esi
    82bb:	62 61 73 69 63       	(bad)
    82c0:	5f                   	pop    rdi
    82c1:	73 74                	jae    8337 <__TMC_END__+0x431f>
    82c3:	72 69                	jb     832e <__TMC_END__+0x4316>
    82c5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    82c6:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    82cb:	31 31                	xor    DWORD PTR [rcx],esi
    82cd:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    82d0:	72 5f                	jb     8331 <__TMC_END__+0x4319>
    82d2:	74 72                	je     8346 <__TMC_END__+0x432e>
    82d4:	61                   	(bad)
    82d5:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    82dc:	61 
    82dd:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    82e1:	37                   	(bad)
    82e2:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    82e5:	70 61                	jo     8348 <__TMC_END__+0x4330>
    82e7:	72 65                	jb     834e <__TMC_END__+0x4336>
    82e9:	45 52                	rex.RB push r10
    82eb:	4b 53                	rex.WXB push r11
    82ed:	34 5f                	xor    al,0x5f
    82ef:	00 6e 6f             	add    BYTE PTR [rsi+0x6f],ch
    82f2:	74 5f                	je     8353 <__TMC_END__+0x433b>
    82f4:	65 6f                	outs   dx,DWORD PTR gs:[rsi]
    82f6:	66 00 5f 5f          	data16 add BYTE PTR [rdi+0x5f],bl
    82fa:	65 78 63             	gs js  8360 <__TMC_END__+0x4348>
    82fd:	65 70 74             	gs jo  8374 <__TMC_END__+0x435c>
    8300:	69 6f 6e 5f 70 74 72 	imul   ebp,DWORD PTR [rdi+0x6e],0x7274705f
    8307:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
    830a:	64 72 65             	fs jb  8372 <__TMC_END__+0x435a>
    830d:	73 73                	jae    8382 <__TMC_END__+0x436a>
    830f:	5f                   	pop    rdi
    8310:	69 6e 5f 75 73 65 00 	imul   ebp,DWORD PTR [rsi+0x5f],0x657375
    8317:	5f                   	pop    rdi
    8318:	5f                   	pop    rdi
    8319:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    831a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    831b:	72 6d                	jb     838a <__TMC_END__+0x4372>
    831d:	61                   	(bad)
    831e:	6c                   	ins    BYTE PTR es:[rdi],dx
    831f:	5f                   	pop    rdi
    8320:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8327:	72 
    8328:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    832b:	4e 53                	rex.WRX push rbx
    832d:	74 37                	je     8366 <__TMC_END__+0x434e>
    832f:	5f                   	pop    rdi
    8330:	5f                   	pop    rdi
    8331:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8334:	31 31                	xor    DWORD PTR [rcx],esi
    8336:	31 32                	xor    DWORD PTR [rdx],esi
    8338:	62 61 73 69 63       	(bad)
    833d:	5f                   	pop    rdi
    833e:	73 74                	jae    83b4 <__TMC_END__+0x439c>
    8340:	72 69                	jb     83ab <__TMC_END__+0x4393>
    8342:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8343:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8348:	31 31                	xor    DWORD PTR [rcx],esi
    834a:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    834d:	72 5f                	jb     83ae <__TMC_END__+0x4396>
    834f:	74 72                	je     83c3 <__TMC_END__+0x43ab>
    8351:	61                   	(bad)
    8352:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8359:	61 
    835a:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    835e:	43 34 45             	rex.XB xor al,0x45
    8361:	52                   	push   rdx
    8362:	4b 53                	rex.WXB push r11
    8364:	34 5f                	xor    al,0x5f
    8366:	6d                   	ins    DWORD PTR es:[rdi],dx
    8367:	52                   	push   rdx
    8368:	4b 53                	rex.WXB push r11
    836a:	33 5f 00             	xor    ebx,DWORD PTR [rdi+0x0]
    836d:	5f                   	pop    rdi
    836e:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    836f:	6c                   	ins    BYTE PTR es:[rdi],dx
    8370:	64 5f                	fs pop rdi
    8372:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8373:	66 66 73 65          	data16 data16 jae 83dc <__TMC_END__+0x43c4>
    8377:	74 00                	je     8379 <__TMC_END__+0x4361>
    8379:	74 6f                	je     83ea <__TMC_END__+0x43d2>
    837b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    837c:	5f                   	pop    rdi
    837d:	6d                   	ins    DWORD PTR es:[rdi],dx
    837e:	61                   	(bad)
    837f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8380:	79 5f                	jns    83e1 <__TMC_END__+0x43c9>
    8382:	6c                   	ins    BYTE PTR es:[rdi],dx
    8383:	69 6e 6b 73 00 77 63 	imul   ebp,DWORD PTR [rsi+0x6b],0x63770073
    838a:	73 63                	jae    83ef <__TMC_END__+0x43d7>
    838c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    838d:	6c                   	ins    BYTE PTR es:[rdi],dx
    838e:	6c                   	ins    BYTE PTR es:[rdi],dx
    838f:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    8392:	74 72                	je     8406 <__TMC_END__+0x43ee>
    8394:	61                   	(bad)
    8395:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8396:	73 5f                	jae    83f7 <__TMC_END__+0x43df>
    8398:	74 00                	je     839a <__TMC_END__+0x4382>
    839a:	5f                   	pop    rdi
    839b:	5a                   	pop    rdx
    839c:	4e 53                	rex.WRX push rbx
    839e:	74 37                	je     83d7 <__TMC_END__+0x43bf>
    83a0:	5f                   	pop    rdi
    83a1:	5f                   	pop    rdi
    83a2:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    83a5:	31 31                	xor    DWORD PTR [rcx],esi
    83a7:	31 32                	xor    DWORD PTR [rdx],esi
    83a9:	62 61 73 69 63       	(bad)
    83ae:	5f                   	pop    rdi
    83af:	73 74                	jae    8425 <__TMC_END__+0x440d>
    83b1:	72 69                	jb     841c <__TMC_END__+0x4404>
    83b3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    83b4:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    83b9:	31 31                	xor    DWORD PTR [rcx],esi
    83bb:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    83be:	72 5f                	jb     841f <__TMC_END__+0x4407>
    83c0:	74 72                	je     8434 <__TMC_END__+0x441c>
    83c2:	61                   	(bad)
    83c3:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    83ca:	61 
    83cb:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    83cf:	61                   	(bad)
    83d0:	53                   	push   rbx
    83d1:	45                   	rex.RB
    83d2:	4f 53                	rex.WRXB push r11
    83d4:	34 5f                	xor    al,0x5f
    83d6:	00 61 64             	add    BYTE PTR [rcx+0x64],ah
    83d9:	64 72 65             	fs jb  8441 <__TMC_END__+0x4429>
    83dc:	73 73                	jae    8451 <__TMC_END__+0x4439>
    83de:	5f                   	pop    rdi
    83df:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    83e0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    83e1:	74 5f                	je     8442 <__TMC_END__+0x442a>
    83e3:	61                   	(bad)
    83e4:	76 61                	jbe    8447 <__TMC_END__+0x442f>
    83e6:	69 6c 61 62 6c 65 00 	imul   ebp,DWORD PTR [rcx+riz*2+0x62],0x5f00656c
    83ed:	5f 
    83ee:	5a                   	pop    rdx
    83ef:	4e                   	rex.WRX
    83f0:	4b 53                	rex.WXB push r11
    83f2:	74 37                	je     842b <__TMC_END__+0x4413>
    83f4:	5f                   	pop    rdi
    83f5:	5f                   	pop    rdi
    83f6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    83f9:	31 31                	xor    DWORD PTR [rcx],esi
    83fb:	31 32                	xor    DWORD PTR [rdx],esi
    83fd:	62 61 73 69 63       	(bad)
    8402:	5f                   	pop    rdi
    8403:	73 74                	jae    8479 <__TMC_END__+0x4461>
    8405:	72 69                	jb     8470 <__TMC_END__+0x4458>
    8407:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8408:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    840d:	31 31                	xor    DWORD PTR [rcx],esi
    840f:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8412:	72 5f                	jb     8473 <__TMC_END__+0x445b>
    8414:	74 72                	je     8488 <__TMC_END__+0x4470>
    8416:	61                   	(bad)
    8417:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    841e:	61 
    841f:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8423:	39 65 6e             	cmp    DWORD PTR [rbp+0x6e],esp
    8426:	64 73 5f             	fs jae 8488 <__TMC_END__+0x4470>
    8429:	77 69                	ja     8494 <__TMC_END__+0x447c>
    842b:	74 68                	je     8495 <__TMC_END__+0x447d>
    842d:	45 50                	rex.RB push r8
    842f:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    8432:	6d                   	ins    DWORD PTR es:[rdi],dx
    8433:	62 73 74 6f 77       	(bad)
    8438:	63 73 00             	movsxd esi,DWORD PTR [rbx+0x0]
    843b:	5f                   	pop    rdi
    843c:	5f                   	pop    rdi
    843d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8444:	72 
    8445:	5f                   	pop    rdi
    8446:	74 72                	je     84ba <__TMC_END__+0x44a2>
    8448:	61                   	(bad)
    8449:	69 74 73 3c 5f 5f 67 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x6e675f5f
    8450:	6e 
    8451:	75 5f                	jne    84b2 <__TMC_END__+0x449a>
    8453:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8456:	3a 3a                	cmp    bh,BYTE PTR [rdx]
    8458:	5f                   	pop    rdi
    8459:	5f                   	pop    rdi
    845a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    845b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    845c:	72 6d                	jb     84cb <__TMC_END__+0x44b3>
    845e:	61                   	(bad)
    845f:	6c                   	ins    BYTE PTR es:[rdi],dx
    8460:	5f                   	pop    rdi
    8461:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8468:	72 
    8469:	3c 63                	cmp    al,0x63
    846b:	68 61 72 2a 2c       	push   0x2c2a7261
    8470:	20 73 74             	and    BYTE PTR [rbx+0x74],dh
    8473:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    8476:	73 70                	jae    84e8 <__TMC_END__+0x44d0>
    8478:	61                   	(bad)
    8479:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    847a:	3c 63                	cmp    al,0x63
    847c:	68 61 72 2c 20       	push   0x202c7261
    8481:	31 38                	xor    DWORD PTR [rax],edi
    8483:	34 34                	xor    al,0x34
    8485:	36 37                	ss (bad)
    8487:	34 34                	xor    al,0x34
    8489:	30 37                	xor    BYTE PTR [rdi],dh
    848b:	33 37                	xor    esi,DWORD PTR [rdi]
    848d:	30 39                	xor    BYTE PTR [rcx],bh
    848f:	35 35 31 36 31       	xor    eax,0x31363135
    8494:	35 3e 20 3e 2c       	xor    eax,0x2c3e203e
    8499:	20 76 6f             	and    BYTE PTR [rsi+0x6f],dh
    849c:	69 64 3e 00 5f 4d 5f 	imul   esp,DWORD PTR [rsi+rdi*1+0x0],0x725f4d5f
    84a3:	72 
    84a4:	65 73 65             	gs jae 850c <__TMC_END__+0x44f4>
    84a7:	74 00                	je     84a9 <__TMC_END__+0x4491>
    84a9:	5f                   	pop    rdi
    84aa:	5a                   	pop    rdx
    84ab:	4e                   	rex.WRX
    84ac:	4b 53                	rex.WXB push r11
    84ae:	74 34                	je     84e4 <__TMC_END__+0x44cc>
    84b0:	70 61                	jo     8513 <__TMC_END__+0x44fb>
    84b2:	69 72 49 74 50 4b 77 	imul   esi,DWORD PTR [rdx+0x49],0x774b5074
    84b9:	45 61                	rex.RB (bad)
    84bb:	53                   	push   rbx
    84bc:	45                   	rex.RB
    84bd:	4f 53                	rex.WRXB push r11
    84bf:	32 5f 51             	xor    bl,BYTE PTR [rdi+0x51]
    84c2:	63 6c 31 39          	movsxd ebp,DWORD PTR [rcx+rsi*1+0x39]
    84c6:	5f                   	pop    rdi
    84c7:	53                   	push   rbx
    84c8:	5f                   	pop    rdi
    84c9:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    84cc:	73 74                	jae    8542 <__TMC_END__+0x452a>
    84ce:	5f                   	pop    rdi
    84cf:	61                   	(bad)
    84d0:	73 73                	jae    8545 <__TMC_END__+0x452d>
    84d2:	69 67 6e 61 62 6c 65 	imul   esp,DWORD PTR [rdi+0x6e],0x656c6261
    84d9:	49 54                	rex.WB push r12
    84db:	5f                   	pop    rdi
    84dc:	54                   	push   rsp
    84dd:	30 5f 45             	xor    BYTE PTR [rdi+0x45],bl
    84e0:	45 00 6f 70          	add    BYTE PTR [r15+0x70],r13b
    84e4:	65 72 61             	gs jb  8548 <__TMC_END__+0x4530>
    84e7:	74 69                	je     8552 <__TMC_END__+0x453a>
    84e9:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    84ea:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    84eb:	5f                   	pop    rdi
    84ec:	77 6f                	ja     855d <__TMC_END__+0x4545>
    84ee:	75 6c                	jne    855c <__TMC_END__+0x4544>
    84f0:	64 5f                	fs pop rdi
    84f2:	62 6c 6f 63 6b       	(bad)
    84f7:	00 77 63             	add    BYTE PTR [rdi+0x63],dh
    84fa:	73 72                	jae    856e <__TMC_END__+0x4556>
    84fc:	63 68 72             	movsxd ebp,DWORD PTR [rax+0x72]
    84ff:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8502:	4e                   	rex.WRX
    8503:	4b 53                	rex.WXB push r11
    8505:	74 37                	je     853e <__TMC_END__+0x4526>
    8507:	5f                   	pop    rdi
    8508:	5f                   	pop    rdi
    8509:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    850c:	31 31                	xor    DWORD PTR [rcx],esi
    850e:	31 32                	xor    DWORD PTR [rdx],esi
    8510:	62 61 73 69 63       	(bad)
    8515:	5f                   	pop    rdi
    8516:	73 74                	jae    858c <__TMC_END__+0x4574>
    8518:	72 69                	jb     8583 <__TMC_END__+0x456b>
    851a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    851b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8520:	31 31                	xor    DWORD PTR [rcx],esi
    8522:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8525:	72 5f                	jb     8586 <__TMC_END__+0x456e>
    8527:	74 72                	je     859b <__TMC_END__+0x4583>
    8529:	61                   	(bad)
    852a:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8531:	61 
    8532:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8536:	31 37                	xor    DWORD PTR [rdi],esi
    8538:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    853e:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
    8545:	74 5f                	je     85a6 <__TMC_END__+0x458e>
    8547:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8548:	66 45 50             	rex.RB push r8w
    854b:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    854f:	5f                   	pop    rdi
    8550:	5a                   	pop    rdx
    8551:	4e                   	rex.WRX
    8552:	4b 53                	rex.WXB push r11
    8554:	74 38                	je     858e <__TMC_END__+0x4576>
    8556:	5f                   	pop    rdi
    8557:	5f                   	pop    rdi
    8558:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    855a:	72 6d                	jb     85c9 <__TMC_END__+0x45b1>
    855c:	61                   	(bad)
    855d:	74 35                	je     8594 <__TMC_END__+0x457c>
    855f:	5f                   	pop    rdi
    8560:	53                   	push   rbx
    8561:	69 6e 6b 49 63 45 37 	imul   ebp,DWORD PTR [rsi+0x6b],0x37456349
    8568:	5f                   	pop    rdi
    8569:	4d 5f                	rex.WRB pop r15
    856b:	75 73                	jne    85e0 <__TMC_END__+0x45c8>
    856d:	65 64 45 76 00       	gs fs rex.RB jbe 8572 <__TMC_END__+0x455a>
    8572:	5f                   	pop    rdi
    8573:	66 6c                	data16 ins BYTE PTR es:[rdi],dx
    8575:	61                   	(bad)
    8576:	67 73 32             	addr32 jae 85ab <__TMC_END__+0x4593>
    8579:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    857c:	64 65 73 74          	fs gs jae 85f4 <__TMC_END__+0x45dc>
    8580:	72 75                	jb     85f7 <__TMC_END__+0x45df>
    8582:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
    8586:	6c                   	ins    BYTE PTR es:[rdi],dx
    8587:	65 5f                	gs pop rdi
    8589:	69 6d 70 6c 00 5f 5a 	imul   ebp,DWORD PTR [rbp+0x70],0x5a5f006c
    8590:	4e 53                	rex.WRX push rbx
    8592:	74 31                	je     85c5 <__TMC_END__+0x45ad>
    8594:	36 72 65             	ss jb  85fc <__TMC_END__+0x45e4>
    8597:	76 65                	jbe    85fe <__TMC_END__+0x45e6>
    8599:	72 73                	jb     860e <__TMC_END__+0x45f6>
    859b:	65 5f                	gs pop rdi
    859d:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    85a4:	72 
    85a5:	49                   	rex.WB
    85a6:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    85aa:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    85ac:	75 5f                	jne    860d <__TMC_END__+0x45f5>
    85ae:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    85b1:	31 37                	xor    DWORD PTR [rdi],esi
    85b3:	5f                   	pop    rdi
    85b4:	5f                   	pop    rdi
    85b5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    85b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    85b7:	72 6d                	jb     8626 <__TMC_END__+0x460e>
    85b9:	61                   	(bad)
    85ba:	6c                   	ins    BYTE PTR es:[rdi],dx
    85bb:	5f                   	pop    rdi
    85bc:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    85c3:	72 
    85c4:	49 50                	rex.WB push r8
    85c6:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    85c9:	34 73                	xor    al,0x73
    85cb:	70 61                	jo     862e <__TMC_END__+0x4616>
    85cd:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    85ce:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    85d3:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    85d6:	36 37                	ss (bad)
    85d8:	34 34                	xor    al,0x34
    85da:	30 37                	xor    BYTE PTR [rdi],dh
    85dc:	33 37                	xor    esi,DWORD PTR [rdi]
    85de:	30 39                	xor    BYTE PTR [rcx],bh
    85e0:	35 35 31 36 31       	xor    eax,0x31363135
    85e5:	35 45 45 45 45       	xor    eax,0x45454545
    85ea:	45 70 4c             	rex.RB jo 8639 <__TMC_END__+0x4621>
    85ed:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    85ef:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    85f2:	4e                   	rex.WRX
    85f3:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    85f7:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    85f9:	75 5f                	jne    865a <__TMC_END__+0x4642>
    85fb:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    85fe:	31 37                	xor    DWORD PTR [rdi],esi
    8600:	5f                   	pop    rdi
    8601:	5f                   	pop    rdi
    8602:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8603:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8604:	72 6d                	jb     8673 <__TMC_END__+0x465b>
    8606:	61                   	(bad)
    8607:	6c                   	ins    BYTE PTR es:[rdi],dx
    8608:	5f                   	pop    rdi
    8609:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8610:	72 
    8611:	49 50                	rex.WB push r8
    8613:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    8616:	74 37                	je     864f <__TMC_END__+0x4637>
    8618:	5f                   	pop    rdi
    8619:	5f                   	pop    rdi
    861a:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    861d:	31 31                	xor    DWORD PTR [rcx],esi
    861f:	31 32                	xor    DWORD PTR [rdx],esi
    8621:	62 61 73 69 63       	(bad)
    8626:	5f                   	pop    rdi
    8627:	73 74                	jae    869d <__TMC_END__+0x4685>
    8629:	72 69                	jb     8694 <__TMC_END__+0x467c>
    862b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    862c:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8631:	31 31                	xor    DWORD PTR [rcx],esi
    8633:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8636:	72 5f                	jb     8697 <__TMC_END__+0x467f>
    8638:	74 72                	je     86ac <__TMC_END__+0x4694>
    863a:	61                   	(bad)
    863b:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8642:	61 
    8643:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8647:	45                   	rex.RB
    8648:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    864a:	69 45 6c 00 5f 5a 4e 	imul   eax,DWORD PTR [rbp+0x6c],0x4e5a5f00
    8651:	4b 53                	rex.WXB push r11
    8653:	74 37                	je     868c <__TMC_END__+0x4674>
    8655:	5f                   	pop    rdi
    8656:	5f                   	pop    rdi
    8657:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    865a:	31 31                	xor    DWORD PTR [rcx],esi
    865c:	31 32                	xor    DWORD PTR [rdx],esi
    865e:	62 61 73 69 63       	(bad)
    8663:	5f                   	pop    rdi
    8664:	73 74                	jae    86da <__TMC_END__+0x46c2>
    8666:	72 69                	jb     86d1 <__TMC_END__+0x46b9>
    8668:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8669:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    866e:	31 31                	xor    DWORD PTR [rcx],esi
    8670:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8673:	72 5f                	jb     86d4 <__TMC_END__+0x46bc>
    8675:	74 72                	je     86e9 <__TMC_END__+0x46d1>
    8677:	61                   	(bad)
    8678:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    867f:	61 
    8680:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8684:	31 31                	xor    DWORD PTR [rcx],esi
    8686:	5f                   	pop    rdi
    8687:	4d 5f                	rex.WRB pop r15
    8689:	69 73 5f 6c 6f 63 61 	imul   esi,DWORD PTR [rbx+0x5f],0x61636f6c
    8690:	6c                   	ins    BYTE PTR es:[rdi],dx
    8691:	45 76 00             	rex.RB jbe 8694 <__TMC_END__+0x467c>
    8694:	5f                   	pop    rdi
    8695:	5a                   	pop    rdx
    8696:	4e 53                	rex.WRX push rbx
    8698:	74 38                	je     86d2 <__TMC_END__+0x46ba>
    869a:	5f                   	pop    rdi
    869b:	5f                   	pop    rdi
    869c:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    869e:	72 6d                	jb     870d <__TMC_END__+0x46f5>
    86a0:	61                   	(bad)
    86a1:	74 35                	je     86d8 <__TMC_END__+0x46c0>
    86a3:	5f                   	pop    rdi
    86a4:	53                   	push   rbx
    86a5:	69 6e 6b 49 63 45 43 	imul   ebp,DWORD PTR [rsi+0x6b],0x43456349
    86ac:	34 45                	xor    al,0x45
    86ae:	53                   	push   rbx
    86af:	74 34                	je     86e5 <__TMC_END__+0x46cd>
    86b1:	73 70                	jae    8723 <__TMC_END__+0x470b>
    86b3:	61                   	(bad)
    86b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    86b5:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    86ba:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    86bd:	36 37                	ss (bad)
    86bf:	34 34                	xor    al,0x34
    86c1:	30 37                	xor    BYTE PTR [rdi],dh
    86c3:	33 37                	xor    esi,DWORD PTR [rdi]
    86c5:	30 39                	xor    BYTE PTR [rcx],bh
    86c7:	35 35 31 36 31       	xor    eax,0x31363135
    86cc:	35 45 45 00 6d       	xor    eax,0x6d004545
    86d1:	6b 74 69 6d 65       	imul   esi,DWORD PTR [rcx+rbp*2+0x6d],0x65
    86d6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    86d9:	4e                   	rex.WRX
    86da:	4b 53                	rex.WXB push r11
    86dc:	74 37                	je     8715 <__TMC_END__+0x46fd>
    86de:	5f                   	pop    rdi
    86df:	5f                   	pop    rdi
    86e0:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    86e3:	31 31                	xor    DWORD PTR [rcx],esi
    86e5:	31 32                	xor    DWORD PTR [rdx],esi
    86e7:	62 61 73 69 63       	(bad)
    86ec:	5f                   	pop    rdi
    86ed:	73 74                	jae    8763 <__TMC_END__+0x474b>
    86ef:	72 69                	jb     875a <__TMC_END__+0x4742>
    86f1:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    86f2:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    86f7:	31 31                	xor    DWORD PTR [rcx],esi
    86f9:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    86fc:	72 5f                	jb     875d <__TMC_END__+0x4745>
    86fe:	74 72                	je     8772 <__TMC_END__+0x475a>
    8700:	61                   	(bad)
    8701:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8708:	61 
    8709:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    870d:	35 66 72 6f 6e       	xor    eax,0x6e6f7266
    8712:	74 45                	je     8759 <__TMC_END__+0x4741>
    8714:	76 00                	jbe    8716 <__TMC_END__+0x46fe>
    8716:	5f                   	pop    rdi
    8717:	5a                   	pop    rdx
    8718:	4e 53                	rex.WRX push rbx
    871a:	74 34                	je     8750 <__TMC_END__+0x4738>
    871c:	73 70                	jae    878e <__TMC_END__+0x4776>
    871e:	61                   	(bad)
    871f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8720:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    8725:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    8728:	36 37                	ss (bad)
    872a:	34 34                	xor    al,0x34
    872c:	30 37                	xor    BYTE PTR [rdi],dh
    872e:	33 37                	xor    esi,DWORD PTR [rdi]
    8730:	30 39                	xor    BYTE PTR [rcx],bh
    8732:	35 35 31 36 31       	xor    eax,0x31363135
    8737:	35 45 45 36 65       	xor    eax,0x65364545
    873c:	78 74                	js     87b2 <__TMC_END__+0x479a>
    873e:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    8740:	74 45                	je     8787 <__TMC_END__+0x476f>
    8742:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    8745:	5f                   	pop    rdi
    8746:	72 65                	jb     87ad <__TMC_END__+0x4795>
    8748:	70 6c                	jo     87b6 <__TMC_END__+0x479e>
    874a:	61                   	(bad)
    874b:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    874e:	61                   	(bad)
    874f:	75 78                	jne    87c9 <__TMC_END__+0x47b1>
    8751:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    8754:	65 72 61             	gs jb  87b8 <__TMC_END__+0x47a0>
    8757:	74 69                	je     87c2 <__TMC_END__+0x47aa>
    8759:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    875a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    875b:	5f                   	pop    rdi
    875c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    875d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    875e:	74 5f                	je     87bf <__TMC_END__+0x47a7>
    8760:	73 75                	jae    87d7 <__TMC_END__+0x47bf>
    8762:	70 70                	jo     87d4 <__TMC_END__+0x47bc>
    8764:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8765:	72 74                	jb     87db <__TMC_END__+0x47c3>
    8767:	65 64 00 67 65       	gs add BYTE PTR fs:[rdi+0x65],ah
    876c:	74 63                	je     87d1 <__TMC_END__+0x47b9>
    876e:	68 61 72 00 74       	push   0x74007261
    8773:	76 5f                	jbe    87d4 <__TMC_END__+0x47bc>
    8775:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8776:	73 65                	jae    87dd <__TMC_END__+0x47c5>
    8778:	63 00                	movsxd eax,DWORD PTR [rax]
    877a:	5f                   	pop    rdi
    877b:	5a                   	pop    rdx
    877c:	4e                   	rex.WRX
    877d:	4b 53                	rex.WXB push r11
    877f:	74 37                	je     87b8 <__TMC_END__+0x47a0>
    8781:	5f                   	pop    rdi
    8782:	5f                   	pop    rdi
    8783:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8786:	31 31                	xor    DWORD PTR [rcx],esi
    8788:	31 32                	xor    DWORD PTR [rdx],esi
    878a:	62 61 73 69 63       	(bad)
    878f:	5f                   	pop    rdi
    8790:	73 74                	jae    8806 <__TMC_END__+0x47ee>
    8792:	72 69                	jb     87fd <__TMC_END__+0x47e5>
    8794:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8795:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    879a:	31 31                	xor    DWORD PTR [rcx],esi
    879c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    879f:	72 5f                	jb     8800 <__TMC_END__+0x47e8>
    87a1:	74 72                	je     8815 <__TMC_END__+0x47fd>
    87a3:	61                   	(bad)
    87a4:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    87ab:	61 
    87ac:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    87b0:	35 63 5f 73 74       	xor    eax,0x74735f63
    87b5:	72 45                	jb     87fc <__TMC_END__+0x47e4>
    87b7:	76 00                	jbe    87b9 <__TMC_END__+0x47a1>
    87b9:	5f                   	pop    rdi
    87ba:	5a                   	pop    rdx
    87bb:	4e                   	rex.WRX
    87bc:	4b 53                	rex.WXB push r11
    87be:	74 34                	je     87f4 <__TMC_END__+0x47dc>
    87c0:	73 70                	jae    8832 <__TMC_END__+0x481a>
    87c2:	61                   	(bad)
    87c3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    87c4:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    87c9:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    87cc:	36 37                	ss (bad)
    87ce:	34 34                	xor    al,0x34
    87d0:	30 37                	xor    BYTE PTR [rdi],dh
    87d2:	33 37                	xor    esi,DWORD PTR [rdi]
    87d4:	30 39                	xor    BYTE PTR [rcx],bh
    87d6:	35 35 31 36 31       	xor    eax,0x31363135
    87db:	35 45 45 34 64       	xor    eax,0x64344545
    87e0:	61                   	(bad)
    87e1:	74 61                	je     8844 <__TMC_END__+0x482c>
    87e3:	45 76 00             	rex.RB jbe 87e6 <__TMC_END__+0x47ce>
    87e6:	5f                   	pop    rdi
    87e7:	5a                   	pop    rdx
    87e8:	4e 53                	rex.WRX push rbx
    87ea:	74 37                	je     8823 <__TMC_END__+0x480b>
    87ec:	5f                   	pop    rdi
    87ed:	5f                   	pop    rdi
    87ee:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    87f1:	31 31                	xor    DWORD PTR [rcx],esi
    87f3:	31 32                	xor    DWORD PTR [rdx],esi
    87f5:	62 61 73 69 63       	(bad)
    87fa:	5f                   	pop    rdi
    87fb:	73 74                	jae    8871 <__TMC_END__+0x4859>
    87fd:	72 69                	jb     8868 <__TMC_END__+0x4850>
    87ff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8800:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8805:	31 31                	xor    DWORD PTR [rcx],esi
    8807:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    880a:	72 5f                	jb     886b <__TMC_END__+0x4853>
    880c:	74 72                	je     8880 <__TMC_END__+0x4868>
    880e:	61                   	(bad)
    880f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8816:	61 
    8817:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    881b:	31 32                	xor    DWORD PTR [rdx],esi
    881d:	5f                   	pop    rdi
    881e:	4d 5f                	rex.WRB pop r15
    8820:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    8823:	73 74                	jae    8899 <__TMC_END__+0x4881>
    8825:	72 75                	jb     889c <__TMC_END__+0x4884>
    8827:	63 74 45 6d          	movsxd esi,DWORD PTR [rbp+rax*2+0x6d]
    882b:	63 00                	movsxd eax,DWORD PTR [rax]
    882d:	5f                   	pop    rdi
    882e:	5a                   	pop    rdx
    882f:	53                   	push   rbx
    8830:	74 38                	je     886a <__TMC_END__+0x4852>
    8832:	74 6f                	je     88a3 <__TMC_END__+0x488b>
    8834:	5f                   	pop    rdi
    8835:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8838:	72 73                	jb     88ad <__TMC_END__+0x4895>
    883a:	50                   	push   rax
    883b:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    883e:	73 69                	jae    88a9 <__TMC_END__+0x4891>
    8840:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8843:	4e                   	rex.WRX
    8844:	4b 53                	rex.WXB push r11
    8846:	74 37                	je     887f <__TMC_END__+0x4867>
    8848:	5f                   	pop    rdi
    8849:	5f                   	pop    rdi
    884a:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    884d:	31 31                	xor    DWORD PTR [rcx],esi
    884f:	31 32                	xor    DWORD PTR [rdx],esi
    8851:	62 61 73 69 63       	(bad)
    8856:	5f                   	pop    rdi
    8857:	73 74                	jae    88cd <__TMC_END__+0x48b5>
    8859:	72 69                	jb     88c4 <__TMC_END__+0x48ac>
    885b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    885c:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8861:	31 31                	xor    DWORD PTR [rcx],esi
    8863:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8866:	72 5f                	jb     88c7 <__TMC_END__+0x48af>
    8868:	74 72                	je     88dc <__TMC_END__+0x48c4>
    886a:	61                   	(bad)
    886b:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8872:	61 
    8873:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8877:	31 31                	xor    DWORD PTR [rcx],esi
    8879:	73 74                	jae    88ef <__TMC_END__+0x48d7>
    887b:	61                   	(bad)
    887c:	72 74                	jb     88f2 <__TMC_END__+0x48da>
    887e:	73 5f                	jae    88df <__TMC_END__+0x48c7>
    8880:	77 69                	ja     88eb <__TMC_END__+0x48d3>
    8882:	74 68                	je     88ec <__TMC_END__+0x48d4>
    8884:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    8887:	5f                   	pop    rdi
    8888:	5a                   	pop    rdx
    8889:	4e                   	rex.WRX
    888a:	4b 53                	rex.WXB push r11
    888c:	74 31                	je     88bf <__TMC_END__+0x48a7>
    888e:	37                   	(bad)
    888f:	62 61 73 69 63       	(bad)
    8894:	5f                   	pop    rdi
    8895:	73 74                	jae    890b <__TMC_END__+0x48f3>
    8897:	72 69                	jb     8902 <__TMC_END__+0x48ea>
    8899:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    889a:	67 5f                	addr32 pop rdi
    889c:	76 69                	jbe    8907 <__TMC_END__+0x48ef>
    889e:	65 77 49             	gs ja  88ea <__TMC_END__+0x48d2>
    88a1:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    88a4:	31 31                	xor    DWORD PTR [rcx],esi
    88a6:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    88a9:	72 5f                	jb     890a <__TMC_END__+0x48f2>
    88ab:	74 72                	je     891f <__TMC_END__+0x4907>
    88ad:	61                   	(bad)
    88ae:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    88b5:	31 
    88b6:	32 66 69             	xor    ah,BYTE PTR [rsi+0x69]
    88b9:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    88ba:	64 5f                	fs pop rdi
    88bc:	6c                   	ins    BYTE PTR es:[rdi],dx
    88bd:	61                   	(bad)
    88be:	73 74                	jae    8934 <__TMC_END__+0x491c>
    88c0:	5f                   	pop    rdi
    88c1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    88c2:	66 45 63 6d 00       	movsxd r13w,DWORD PTR [r13+0x0]
    88c7:	62 61 73 69 63       	(bad)
    88cc:	5f                   	pop    rdi
    88cd:	66 73 74             	data16 jae 8944 <__TMC_END__+0x492c>
    88d0:	72 65                	jb     8937 <__TMC_END__+0x491f>
    88d2:	61                   	(bad)
    88d3:	6d                   	ins    DWORD PTR es:[rdi],dx
    88d4:	3c 63                	cmp    al,0x63
    88d6:	68 61 72 2c 20       	push   0x202c7261
    88db:	73 74                	jae    8951 <__TMC_END__+0x4939>
    88dd:	64 3a 3a             	cmp    bh,BYTE PTR fs:[rdx]
    88e0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    88e3:	72 5f                	jb     8944 <__TMC_END__+0x492c>
    88e5:	74 72                	je     8959 <__TMC_END__+0x4941>
    88e7:	61                   	(bad)
    88e8:	69 74 73 3c 63 68 61 	imul   esi,DWORD PTR [rbx+rsi*2+0x3c],0x72616863
    88ef:	72 
    88f0:	3e 20 3e             	ds and BYTE PTR [rsi],bh
    88f3:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    88f6:	5f                   	pop    rdi
    88f7:	73 74                	jae    896d <__TMC_END__+0x4955>
    88f9:	72 00                	jb     88fb <__TMC_END__+0x48e3>
    88fb:	5f                   	pop    rdi
    88fc:	53                   	push   rbx
    88fd:	5f                   	pop    rdi
    88fe:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    88ff:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8900:	74 68                	je     896a <__TMC_END__+0x4952>
    8902:	72 6f                	jb     8973 <__TMC_END__+0x495b>
    8904:	77 5f                	ja     8965 <__TMC_END__+0x494d>
    8906:	6d                   	ins    DWORD PTR es:[rdi],dx
    8907:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8908:	76 65                	jbe    896f <__TMC_END__+0x4957>
    890a:	00 75 6e             	add    BYTE PTR [rbp+0x6e],dh
    890d:	67 65 74 77          	addr32 gs je 8988 <__TMC_END__+0x4970>
    8911:	63 00                	movsxd eax,DWORD PTR [rax]
    8913:	5f                   	pop    rdi
    8914:	5a                   	pop    rdx
    8915:	4e                   	rex.WRX
    8916:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    891a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    891c:	75 5f                	jne    897d <__TMC_END__+0x4965>
    891e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8921:	31 37                	xor    DWORD PTR [rdi],esi
    8923:	5f                   	pop    rdi
    8924:	5f                   	pop    rdi
    8925:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8926:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8927:	72 6d                	jb     8996 <__TMC_END__+0x497e>
    8929:	61                   	(bad)
    892a:	6c                   	ins    BYTE PTR es:[rdi],dx
    892b:	5f                   	pop    rdi
    892c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8933:	72 
    8934:	49 50                	rex.WB push r8
    8936:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    8939:	34 73                	xor    al,0x73
    893b:	70 61                	jo     899e <__TMC_END__+0x4986>
    893d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    893e:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    8943:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    8946:	36 37                	ss (bad)
    8948:	34 34                	xor    al,0x34
    894a:	30 37                	xor    BYTE PTR [rdi],dh
    894c:	33 37                	xor    esi,DWORD PTR [rdi]
    894e:	30 39                	xor    BYTE PTR [rcx],bh
    8950:	35 35 31 36 31       	xor    eax,0x31363135
    8955:	35 45 45 45 70       	xor    eax,0x70454545
    895a:	6c                   	ins    BYTE PTR es:[rdi],dx
    895b:	45 6c                	rex.RB ins BYTE PTR es:[rdi],dx
    895d:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    8960:	5f                   	pop    rdi
    8961:	70 72                	jo     89d5 <__TMC_END__+0x49bd>
    8963:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8964:	70 61                	jo     89c7 <__TMC_END__+0x49af>
    8966:	67 61                	addr32 (bad)
    8968:	74 65                	je     89cf <__TMC_END__+0x49b7>
    896a:	5f                   	pop    rdi
    896b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    896c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    896d:	5f                   	pop    rdi
    896e:	6d                   	ins    DWORD PTR es:[rdi],dx
    896f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8970:	76 65                	jbe    89d7 <__TMC_END__+0x49bf>
    8972:	5f                   	pop    rdi
    8973:	61                   	(bad)
    8974:	73 73                	jae    89e9 <__TMC_END__+0x49d1>
    8976:	69 67 6e 00 5f 5a 4e 	imul   esp,DWORD PTR [rdi+0x6e],0x4e5a5f00
    897d:	4b 53                	rex.WXB push r11
    897f:	74 31                	je     89b2 <__TMC_END__+0x499a>
    8981:	37                   	(bad)
    8982:	62 61 73 69 63       	(bad)
    8987:	5f                   	pop    rdi
    8988:	73 74                	jae    89fe <__TMC_END__+0x49e6>
    898a:	72 69                	jb     89f5 <__TMC_END__+0x49dd>
    898c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    898d:	67 5f                	addr32 pop rdi
    898f:	76 69                	jbe    89fa <__TMC_END__+0x49e2>
    8991:	65 77 49             	gs ja  89dd <__TMC_END__+0x49c5>
    8994:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    8997:	31 31                	xor    DWORD PTR [rcx],esi
    8999:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    899c:	72 5f                	jb     89fd <__TMC_END__+0x49e5>
    899e:	74 72                	je     8a12 <__TMC_END__+0x49fa>
    89a0:	61                   	(bad)
    89a1:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    89a8:	31 
    89a9:	36 66 69 6e 64 5f 6c 	ss imul bp,WORD PTR [rsi+0x64],0x6c5f
    89b0:	61                   	(bad)
    89b1:	73 74                	jae    8a27 <__TMC_END__+0x4a0f>
    89b3:	5f                   	pop    rdi
    89b4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    89b5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    89b6:	74 5f                	je     8a17 <__TMC_END__+0x49ff>
    89b8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    89b9:	66 45 53             	rex.RB push r11w
    89bc:	32 5f 6d             	xor    bl,BYTE PTR [rdi+0x6d]
    89bf:	00 6d 65             	add    BYTE PTR [rbp+0x65],ch
    89c2:	73 73                	jae    8a37 <__TMC_END__+0x4a1f>
    89c4:	61                   	(bad)
    89c5:	67 65 5f             	addr32 gs pop rdi
    89c8:	73 69                	jae    8a33 <__TMC_END__+0x4a1b>
    89ca:	7a 65                	jp     8a31 <__TMC_END__+0x4a19>
    89cc:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    89cf:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
    89d6:	65 
    89d7:	72 5f                	jb     8a38 <__TMC_END__+0x4a20>
    89d9:	6c                   	ins    BYTE PTR es:[rdi],dx
    89da:	69 73 74 00 66 69 6e 	imul   esi,DWORD PTR [rbx+0x74],0x6e696600
    89e1:	64 5f                	fs pop rdi
    89e3:	6c                   	ins    BYTE PTR es:[rdi],dx
    89e4:	61                   	(bad)
    89e5:	73 74                	jae    8a5b <__TMC_END__+0x4a43>
    89e7:	5f                   	pop    rdi
    89e8:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    89e9:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    89ed:	4e                   	rex.WRX
    89ee:	4b 53                	rex.WXB push r11
    89f0:	74 31                	je     8a23 <__TMC_END__+0x4a0b>
    89f2:	36 72 65             	ss jb  8a5a <__TMC_END__+0x4a42>
    89f5:	76 65                	jbe    8a5c <__TMC_END__+0x4a44>
    89f7:	72 73                	jb     8a6c <__TMC_END__+0x4a54>
    89f9:	65 5f                	gs pop rdi
    89fb:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8a02:	72 
    8a03:	49                   	rex.WB
    8a04:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    8a08:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    8a0a:	75 5f                	jne    8a6b <__TMC_END__+0x4a53>
    8a0c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8a0f:	31 37                	xor    DWORD PTR [rdi],esi
    8a11:	5f                   	pop    rdi
    8a12:	5f                   	pop    rdi
    8a13:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8a14:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8a15:	72 6d                	jb     8a84 <__TMC_END__+0x4a6c>
    8a17:	61                   	(bad)
    8a18:	6c                   	ins    BYTE PTR es:[rdi],dx
    8a19:	5f                   	pop    rdi
    8a1a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8a21:	72 
    8a22:	49 50                	rex.WB push r8
    8a24:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    8a27:	34 73                	xor    al,0x73
    8a29:	70 61                	jo     8a8c <__TMC_END__+0x4a74>
    8a2b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8a2c:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    8a31:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    8a34:	36 37                	ss (bad)
    8a36:	34 34                	xor    al,0x34
    8a38:	30 37                	xor    BYTE PTR [rdi],dh
    8a3a:	33 37                	xor    esi,DWORD PTR [rdi]
    8a3c:	30 39                	xor    BYTE PTR [rcx],bh
    8a3e:	35 35 31 36 31       	xor    eax,0x31363135
    8a43:	35 45 45 45 45       	xor    eax,0x45454545
    8a48:	45 34 62             	rex.RB xor al,0x62
    8a4b:	61                   	(bad)
    8a4c:	73 65                	jae    8ab3 <__TMC_END__+0x4a9b>
    8a4e:	45 76 00             	rex.RB jbe 8a51 <__TMC_END__+0x4a39>
    8a51:	5f                   	pop    rdi
    8a52:	5a                   	pop    rdx
    8a53:	53                   	push   rbx
    8a54:	74 38                	je     8a8e <__TMC_END__+0x4a76>
    8a56:	74 6f                	je     8ac7 <__TMC_END__+0x4aaf>
    8a58:	5f                   	pop    rdi
    8a59:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8a5c:	72 73                	jb     8ad1 <__TMC_END__+0x4ab9>
    8a5e:	50                   	push   rax
    8a5f:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    8a62:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    8a66:	53                   	push   rbx
    8a67:	74 38                	je     8aa1 <__TMC_END__+0x4a89>
    8a69:	74 6f                	je     8ada <__TMC_END__+0x4ac2>
    8a6b:	5f                   	pop    rdi
    8a6c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8a6f:	72 73                	jb     8ae4 <__TMC_END__+0x4acc>
    8a71:	50                   	push   rax
    8a72:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    8a75:	66 00 5f 5a          	data16 add BYTE PTR [rdi+0x5a],bl
    8a79:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    8a7d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    8a7f:	75 5f                	jne    8ae0 <__TMC_END__+0x4ac8>
    8a81:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8a84:	33 64 69 76          	xor    esp,DWORD PTR [rcx+rbp*2+0x76]
    8a88:	45 78 78             	rex.RB js 8b03 <__TMC_END__+0x4aeb>
    8a8b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8a8e:	4e 53                	rex.WRX push rbx
    8a90:	74 37                	je     8ac9 <__TMC_END__+0x4ab1>
    8a92:	5f                   	pop    rdi
    8a93:	5f                   	pop    rdi
    8a94:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8a97:	31 31                	xor    DWORD PTR [rcx],esi
    8a99:	31 32                	xor    DWORD PTR [rdx],esi
    8a9b:	62 61 73 69 63       	(bad)
    8aa0:	5f                   	pop    rdi
    8aa1:	73 74                	jae    8b17 <__TMC_END__+0x4aff>
    8aa3:	72 69                	jb     8b0e <__TMC_END__+0x4af6>
    8aa5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8aa6:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8aab:	31 31                	xor    DWORD PTR [rcx],esi
    8aad:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8ab0:	72 5f                	jb     8b11 <__TMC_END__+0x4af9>
    8ab2:	74 72                	je     8b26 <__TMC_END__+0x4b0e>
    8ab4:	61                   	(bad)
    8ab5:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8abc:	61 
    8abd:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8ac1:	32 61 74             	xor    ah,BYTE PTR [rcx+0x74]
    8ac4:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    8ac6:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8ac9:	53                   	push   rbx
    8aca:	74 38                	je     8b04 <__TMC_END__+0x4aec>
    8acc:	74 6f                	je     8b3d <__TMC_END__+0x4b25>
    8ace:	5f                   	pop    rdi
    8acf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8ad2:	72 73                	jb     8b47 <__TMC_END__+0x4b2f>
    8ad4:	50                   	push   rax
    8ad5:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    8ad8:	74 69                	je     8b43 <__TMC_END__+0x4b2b>
    8ada:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8add:	4e 53                	rex.WRX push rbx
    8adf:	74 37                	je     8b18 <__TMC_END__+0x4b00>
    8ae1:	5f                   	pop    rdi
    8ae2:	5f                   	pop    rdi
    8ae3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8ae6:	31 31                	xor    DWORD PTR [rcx],esi
    8ae8:	31 32                	xor    DWORD PTR [rdx],esi
    8aea:	62 61 73 69 63       	(bad)
    8aef:	5f                   	pop    rdi
    8af0:	73 74                	jae    8b66 <__TMC_END__+0x4b4e>
    8af2:	72 69                	jb     8b5d <__TMC_END__+0x4b45>
    8af4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8af5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8afa:	31 31                	xor    DWORD PTR [rcx],esi
    8afc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8aff:	72 5f                	jb     8b60 <__TMC_END__+0x4b48>
    8b01:	74 72                	je     8b75 <__TMC_END__+0x4b5d>
    8b03:	61                   	(bad)
    8b04:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8b0b:	61 
    8b0c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8b10:	37                   	(bad)
    8b11:	5f                   	pop    rdi
    8b12:	53                   	push   rbx
    8b13:	5f                   	pop    rdi
    8b14:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    8b17:	79 45                	jns    8b5e <__TMC_END__+0x4b46>
    8b19:	50                   	push   rax
    8b1a:	63 50 4b             	movsxd edx,DWORD PTR [rax+0x4b]
    8b1d:	63 6d 00             	movsxd ebp,DWORD PTR [rbp+0x0]
    8b20:	5f                   	pop    rdi
    8b21:	5f                   	pop    rdi
    8b22:	73 74                	jae    8b98 <__TMC_END__+0x4b80>
    8b24:	61                   	(bad)
    8b25:	74 65                	je     8b8c <__TMC_END__+0x4b74>
    8b27:	00 72 65             	add    BYTE PTR [rdx+0x65],dh
    8b2a:	73 6f                	jae    8b9b <__TMC_END__+0x4b83>
    8b2c:	75 72                	jne    8ba0 <__TMC_END__+0x4b88>
    8b2e:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    8b31:	64 65 61             	fs gs (bad)
    8b34:	64 6c                	fs ins BYTE PTR es:[rdi],dx
    8b36:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8b37:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
    8b3a:	77 6f                	ja     8bab <__TMC_END__+0x4b93>
    8b3c:	75 6c                	jne    8baa <__TMC_END__+0x4b92>
    8b3e:	64 5f                	fs pop rdi
    8b40:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8b41:	63 63 75             	movsxd esp,DWORD PTR [rbx+0x75]
    8b44:	72 00                	jb     8b46 <__TMC_END__+0x4b2e>
    8b46:	5f                   	pop    rdi
    8b47:	5a                   	pop    rdx
    8b48:	4e 53                	rex.WRX push rbx
    8b4a:	74 31                	je     8b7d <__TMC_END__+0x4b65>
    8b4c:	37                   	(bad)
    8b4d:	62 61 73 69 63       	(bad)
    8b52:	5f                   	pop    rdi
    8b53:	73 74                	jae    8bc9 <__TMC_END__+0x4bb1>
    8b55:	72 69                	jb     8bc0 <__TMC_END__+0x4ba8>
    8b57:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8b58:	67 5f                	addr32 pop rdi
    8b5a:	76 69                	jbe    8bc5 <__TMC_END__+0x4bad>
    8b5c:	65 77 49             	gs ja  8ba8 <__TMC_END__+0x4b90>
    8b5f:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    8b62:	31 31                	xor    DWORD PTR [rcx],esi
    8b64:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8b67:	72 5f                	jb     8bc8 <__TMC_END__+0x4bb0>
    8b69:	74 72                	je     8bdd <__TMC_END__+0x4bc5>
    8b6b:	61                   	(bad)
    8b6c:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x43454563
    8b73:	43 
    8b74:	34 45                	xor    al,0x45
    8b76:	76 00                	jbe    8b78 <__TMC_END__+0x4b60>
    8b78:	5f                   	pop    rdi
    8b79:	5a                   	pop    rdx
    8b7a:	4e 53                	rex.WRX push rbx
    8b7c:	74 37                	je     8bb5 <__TMC_END__+0x4b9d>
    8b7e:	5f                   	pop    rdi
    8b7f:	5f                   	pop    rdi
    8b80:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8b83:	31 31                	xor    DWORD PTR [rcx],esi
    8b85:	31 32                	xor    DWORD PTR [rdx],esi
    8b87:	62 61 73 69 63       	(bad)
    8b8c:	5f                   	pop    rdi
    8b8d:	73 74                	jae    8c03 <__TMC_END__+0x4beb>
    8b8f:	72 69                	jb     8bfa <__TMC_END__+0x4be2>
    8b91:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8b92:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8b97:	31 31                	xor    DWORD PTR [rcx],esi
    8b99:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8b9c:	72 5f                	jb     8bfd <__TMC_END__+0x4be5>
    8b9e:	74 72                	je     8c12 <__TMC_END__+0x4bfa>
    8ba0:	61                   	(bad)
    8ba1:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8ba8:	61 
    8ba9:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8bad:	39 5f 4d             	cmp    DWORD PTR [rdi+0x4d],ebx
    8bb0:	5f                   	pop    rdi
    8bb1:	6c                   	ins    BYTE PTR es:[rdi],dx
    8bb2:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    8bb4:	67 74 68             	addr32 je 8c1f <__TMC_END__+0x4c07>
    8bb7:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    8bb9:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8bbc:	4e 53                	rex.WRX push rbx
    8bbe:	74 37                	je     8bf7 <__TMC_END__+0x4bdf>
    8bc0:	5f                   	pop    rdi
    8bc1:	5f                   	pop    rdi
    8bc2:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8bc5:	31 31                	xor    DWORD PTR [rcx],esi
    8bc7:	31 32                	xor    DWORD PTR [rdx],esi
    8bc9:	62 61 73 69 63       	(bad)
    8bce:	5f                   	pop    rdi
    8bcf:	73 74                	jae    8c45 <__TMC_END__+0x4c2d>
    8bd1:	72 69                	jb     8c3c <__TMC_END__+0x4c24>
    8bd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8bd4:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8bd9:	31 31                	xor    DWORD PTR [rcx],esi
    8bdb:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8bde:	72 5f                	jb     8c3f <__TMC_END__+0x4c27>
    8be0:	74 72                	je     8c54 <__TMC_END__+0x4c3c>
    8be2:	61                   	(bad)
    8be3:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8bea:	61 
    8beb:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8bef:	37                   	(bad)
    8bf0:	72 65                	jb     8c57 <__TMC_END__+0x4c3f>
    8bf2:	70 6c                	jo     8c60 <__TMC_END__+0x4c48>
    8bf4:	61                   	(bad)
    8bf5:	63 65 45             	movsxd esp,DWORD PTR [rbp+0x45]
    8bf8:	6d                   	ins    DWORD PTR es:[rdi],dx
    8bf9:	6d                   	ins    DWORD PTR es:[rdi],dx
    8bfa:	50                   	push   rax
    8bfb:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    8bfe:	5f                   	pop    rdi
    8bff:	5a                   	pop    rdx
    8c00:	4e                   	rex.WRX
    8c01:	4b 53                	rex.WXB push r11
    8c03:	74 37                	je     8c3c <__TMC_END__+0x4c24>
    8c05:	5f                   	pop    rdi
    8c06:	5f                   	pop    rdi
    8c07:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8c0a:	31 31                	xor    DWORD PTR [rcx],esi
    8c0c:	31 32                	xor    DWORD PTR [rdx],esi
    8c0e:	62 61 73 69 63       	(bad)
    8c13:	5f                   	pop    rdi
    8c14:	73 74                	jae    8c8a <__TMC_END__+0x4c72>
    8c16:	72 69                	jb     8c81 <__TMC_END__+0x4c69>
    8c18:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8c19:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8c1e:	31 31                	xor    DWORD PTR [rcx],esi
    8c20:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8c23:	72 5f                	jb     8c84 <__TMC_END__+0x4c6c>
    8c25:	74 72                	je     8c99 <__TMC_END__+0x4c81>
    8c27:	61                   	(bad)
    8c28:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8c2f:	61 
    8c30:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8c34:	39 65 6e             	cmp    DWORD PTR [rbp+0x6e],esp
    8c37:	64 73 5f             	fs jae 8c99 <__TMC_END__+0x4c81>
    8c3a:	77 69                	ja     8ca5 <__TMC_END__+0x4c8d>
    8c3c:	74 68                	je     8ca6 <__TMC_END__+0x4c8e>
    8c3e:	45 63 00             	movsxd r8d,DWORD PTR [r8]
    8c41:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8c44:	72 31                	jb     8c77 <__TMC_END__+0x4c5f>
    8c46:	36 5f                	ss pop rdi
    8c48:	74 00                	je     8c4a <__TMC_END__+0x4c32>
    8c4a:	66 69 6c 65 5f 74 6f 	imul   bp,WORD PTR [rbp+riz*2+0x5f],0x6f74
    8c51:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8c52:	5f                   	pop    rdi
    8c53:	6c                   	ins    BYTE PTR es:[rdi],dx
    8c54:	61                   	(bad)
    8c55:	72 67                	jb     8cbe <__TMC_END__+0x4ca6>
    8c57:	65 00 5f 5a          	add    BYTE PTR gs:[rdi+0x5a],bl
    8c5b:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    8c5f:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    8c61:	75 5f                	jne    8cc2 <__TMC_END__+0x4caa>
    8c63:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8c66:	31 37                	xor    DWORD PTR [rdi],esi
    8c68:	5f                   	pop    rdi
    8c69:	5f                   	pop    rdi
    8c6a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8c6b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8c6c:	72 6d                	jb     8cdb <__TMC_END__+0x4cc3>
    8c6e:	61                   	(bad)
    8c6f:	6c                   	ins    BYTE PTR es:[rdi],dx
    8c70:	5f                   	pop    rdi
    8c71:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8c78:	72 
    8c79:	49 50                	rex.WB push r8
    8c7b:	63 4e 53             	movsxd ecx,DWORD PTR [rsi+0x53]
    8c7e:	74 37                	je     8cb7 <__TMC_END__+0x4c9f>
    8c80:	5f                   	pop    rdi
    8c81:	5f                   	pop    rdi
    8c82:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8c85:	31 31                	xor    DWORD PTR [rcx],esi
    8c87:	31 32                	xor    DWORD PTR [rdx],esi
    8c89:	62 61 73 69 63       	(bad)
    8c8e:	5f                   	pop    rdi
    8c8f:	73 74                	jae    8d05 <__TMC_END__+0x4ced>
    8c91:	72 69                	jb     8cfc <__TMC_END__+0x4ce4>
    8c93:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8c94:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8c99:	31 31                	xor    DWORD PTR [rcx],esi
    8c9b:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8c9e:	72 5f                	jb     8cff <__TMC_END__+0x4ce7>
    8ca0:	74 72                	je     8d14 <__TMC_END__+0x4cfc>
    8ca2:	61                   	(bad)
    8ca3:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8caa:	61 
    8cab:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8caf:	45                   	rex.RB
    8cb0:	45                   	rex.RB
    8cb1:	43 34 45             	rex.XB xor al,0x45
    8cb4:	52                   	push   rdx
    8cb5:	4b 53                	rex.WXB push r11
    8cb7:	31 5f 00             	xor    DWORD PTR [rdi+0x0],ebx
    8cba:	5f                   	pop    rdi
    8cbb:	5f                   	pop    rdi
    8cbc:	69 6e 74 38 5f 74 00 	imul   ebp,DWORD PTR [rsi+0x74],0x745f38
    8cc3:	5f                   	pop    rdi
    8cc4:	5a                   	pop    rdx
    8cc5:	4e 53                	rex.WRX push rbx
    8cc7:	74 37                	je     8d00 <__TMC_END__+0x4ce8>
    8cc9:	5f                   	pop    rdi
    8cca:	5f                   	pop    rdi
    8ccb:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8cce:	31 31                	xor    DWORD PTR [rcx],esi
    8cd0:	31 32                	xor    DWORD PTR [rdx],esi
    8cd2:	62 61 73 69 63       	(bad)
    8cd7:	5f                   	pop    rdi
    8cd8:	73 74                	jae    8d4e <__TMC_END__+0x4d36>
    8cda:	72 69                	jb     8d45 <__TMC_END__+0x4d2d>
    8cdc:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8cdd:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8ce2:	31 31                	xor    DWORD PTR [rcx],esi
    8ce4:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8ce7:	72 5f                	jb     8d48 <__TMC_END__+0x4d30>
    8ce9:	74 72                	je     8d5d <__TMC_END__+0x4d45>
    8ceb:	61                   	(bad)
    8cec:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8cf3:	61 
    8cf4:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8cf8:	35 65 72 61 73       	xor    eax,0x73617265
    8cfd:	65 45                	gs rex.RB
    8cff:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    8d03:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    8d05:	75 5f                	jne    8d66 <__TMC_END__+0x4d4e>
    8d07:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8d0a:	31 37                	xor    DWORD PTR [rdi],esi
    8d0c:	5f                   	pop    rdi
    8d0d:	5f                   	pop    rdi
    8d0e:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8d0f:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8d10:	72 6d                	jb     8d7f <__TMC_END__+0x4d67>
    8d12:	61                   	(bad)
    8d13:	6c                   	ins    BYTE PTR es:[rdi],dx
    8d14:	5f                   	pop    rdi
    8d15:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    8d1c:	72 
    8d1d:	49 50                	rex.WB push r8
    8d1f:	4b 63 53 34          	rex.WXB movsxd rdx,DWORD PTR [r11+0x34]
    8d23:	5f                   	pop    rdi
    8d24:	45                   	rex.RB
    8d25:	45 00 5f 4d          	add    BYTE PTR [r15+0x4d],r11b
    8d29:	5f                   	pop    rdi
    8d2a:	72 65                	jb     8d91 <__TMC_END__+0x4d79>
    8d2c:	70 6c                	jo     8d9a <__TMC_END__+0x4d82>
    8d2e:	61                   	(bad)
    8d2f:	63 65 00             	movsxd esp,DWORD PTR [rbp+0x0]
    8d32:	5f                   	pop    rdi
    8d33:	5a                   	pop    rdx
    8d34:	4e 53                	rex.WRX push rbx
    8d36:	74 37                	je     8d6f <__TMC_END__+0x4d57>
    8d38:	5f                   	pop    rdi
    8d39:	5f                   	pop    rdi
    8d3a:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8d3d:	31 31                	xor    DWORD PTR [rcx],esi
    8d3f:	31 32                	xor    DWORD PTR [rdx],esi
    8d41:	62 61 73 69 63       	(bad)
    8d46:	5f                   	pop    rdi
    8d47:	73 74                	jae    8dbd <__TMC_END__+0x4da5>
    8d49:	72 69                	jb     8db4 <__TMC_END__+0x4d9c>
    8d4b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8d4c:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8d51:	31 31                	xor    DWORD PTR [rcx],esi
    8d53:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8d56:	72 5f                	jb     8db7 <__TMC_END__+0x4d9f>
    8d58:	74 72                	je     8dcc <__TMC_END__+0x4db4>
    8d5a:	61                   	(bad)
    8d5b:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8d62:	61 
    8d63:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8d67:	31 30                	xor    DWORD PTR [rax],esi
    8d69:	5f                   	pop    rdi
    8d6a:	53                   	push   rbx
    8d6b:	5f                   	pop    rdi
    8d6c:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    8d6f:	70 61                	jo     8dd2 <__TMC_END__+0x4dba>
    8d71:	72 65                	jb     8dd8 <__TMC_END__+0x4dc0>
    8d73:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    8d75:	6d                   	ins    DWORD PTR es:[rdi],dx
    8d76:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    8d79:	5f                   	pop    rdi
    8d7a:	61                   	(bad)
    8d7b:	73 73                	jae    8df0 <__TMC_END__+0x4dd8>
    8d7d:	69 67 6e 00 5f 5a 4e 	imul   esp,DWORD PTR [rdi+0x6e],0x4e5a5f00
    8d84:	53                   	push   rbx
    8d85:	74 37                	je     8dbe <__TMC_END__+0x4da6>
    8d87:	5f                   	pop    rdi
    8d88:	5f                   	pop    rdi
    8d89:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8d8c:	31 31                	xor    DWORD PTR [rcx],esi
    8d8e:	31 32                	xor    DWORD PTR [rdx],esi
    8d90:	62 61 73 69 63       	(bad)
    8d95:	5f                   	pop    rdi
    8d96:	73 74                	jae    8e0c <__TMC_END__+0x4df4>
    8d98:	72 69                	jb     8e03 <__TMC_END__+0x4deb>
    8d9a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8d9b:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8da0:	31 31                	xor    DWORD PTR [rcx],esi
    8da2:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8da5:	72 5f                	jb     8e06 <__TMC_END__+0x4dee>
    8da7:	74 72                	je     8e1b <__TMC_END__+0x4e03>
    8da9:	61                   	(bad)
    8daa:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8db1:	61 
    8db2:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8db6:	31 33                	xor    DWORD PTR [rbx],esi
    8db8:	5f                   	pop    rdi
    8db9:	53                   	push   rbx
    8dba:	5f                   	pop    rdi
    8dbb:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    8dbe:	79 5f                	jns    8e1f <__TMC_END__+0x4e07>
    8dc0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8dc3:	72 73                	jb     8e38 <__TMC_END__+0x4e20>
    8dc5:	45 50                	rex.RB push r8
    8dc7:	63 53 35             	movsxd edx,DWORD PTR [rbx+0x35]
    8dca:	5f                   	pop    rdi
    8dcb:	53                   	push   rbx
    8dcc:	35 5f 00 73 68       	xor    eax,0x6873005f
    8dd1:	72 69                	jb     8e3c <__TMC_END__+0x4e24>
    8dd3:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8dd4:	6b 5f 74 6f          	imul   ebx,DWORD PTR [rdi+0x74],0x6f
    8dd8:	5f                   	pop    rdi
    8dd9:	66 69 74 00 5f 5a 53 	imul   si,WORD PTR [rax+rax*1+0x5f],0x535a
    8de0:	74 38                	je     8e1a <__TMC_END__+0x4e02>
    8de2:	74 6f                	je     8e53 <__TMC_END__+0x4e3b>
    8de4:	5f                   	pop    rdi
    8de5:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8de8:	72 73                	jb     8e5d <__TMC_END__+0x4e45>
    8dea:	50                   	push   rax
    8deb:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    8dee:	44                   	rex.R
    8def:	46 31 36             	rex.RX xor DWORD PTR [rsi],r14d
    8df2:	62 53 74 31 32       	(bad)
    8df7:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8dfa:	72 73                	jb     8e6f <__TMC_END__+0x4e57>
    8dfc:	5f                   	pop    rdi
    8dfd:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    8dff:	72 6d                	jb     8e6e <__TMC_END__+0x4e56>
    8e01:	61                   	(bad)
    8e02:	74 69                	je     8e6d <__TMC_END__+0x4e55>
    8e04:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8e07:	4e                   	rex.WRX
    8e08:	4b 53                	rex.WXB push r11
    8e0a:	74 37                	je     8e43 <__TMC_END__+0x4e2b>
    8e0c:	5f                   	pop    rdi
    8e0d:	5f                   	pop    rdi
    8e0e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8e11:	31 31                	xor    DWORD PTR [rcx],esi
    8e13:	31 32                	xor    DWORD PTR [rdx],esi
    8e15:	62 61 73 69 63       	(bad)
    8e1a:	5f                   	pop    rdi
    8e1b:	73 74                	jae    8e91 <__TMC_END__+0x4e79>
    8e1d:	72 69                	jb     8e88 <__TMC_END__+0x4e70>
    8e1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8e20:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8e25:	31 31                	xor    DWORD PTR [rcx],esi
    8e27:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8e2a:	72 5f                	jb     8e8b <__TMC_END__+0x4e73>
    8e2c:	74 72                	je     8ea0 <__TMC_END__+0x4e88>
    8e2e:	61                   	(bad)
    8e2f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8e36:	61 
    8e37:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8e3b:	37                   	(bad)
    8e3c:	63 6f 6d             	movsxd ebp,DWORD PTR [rdi+0x6d]
    8e3f:	70 61                	jo     8ea2 <__TMC_END__+0x4e8a>
    8e41:	72 65                	jb     8ea8 <__TMC_END__+0x4e90>
    8e43:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    8e45:	6d                   	ins    DWORD PTR es:[rdi],dx
    8e46:	52                   	push   rdx
    8e47:	4b 53                	rex.WXB push r11
    8e49:	34 5f                	xor    al,0x5f
    8e4b:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8e4e:	4e                   	rex.WRX
    8e4f:	4b 53                	rex.WXB push r11
    8e51:	74 34                	je     8e87 <__TMC_END__+0x4e6f>
    8e53:	73 70                	jae    8ec5 <__TMC_END__+0x4ead>
    8e55:	61                   	(bad)
    8e56:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8e57:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    8e5c:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    8e5f:	36 37                	ss (bad)
    8e61:	34 34                	xor    al,0x34
    8e63:	30 37                	xor    BYTE PTR [rdi],dh
    8e65:	33 37                	xor    esi,DWORD PTR [rdi]
    8e67:	30 39                	xor    BYTE PTR [rcx],bh
    8e69:	35 35 31 36 31       	xor    eax,0x31363135
    8e6e:	35 45 45 37 73       	xor    eax,0x73374545
    8e73:	75 62                	jne    8ed7 <__TMC_END__+0x4ebf>
    8e75:	73 70                	jae    8ee7 <__TMC_END__+0x4ecf>
    8e77:	61                   	(bad)
    8e78:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8e79:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    8e7b:	6d                   	ins    DWORD PTR es:[rdi],dx
    8e7c:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8e7f:	4e 53                	rex.WRX push rbx
    8e81:	74 37                	je     8eba <__TMC_END__+0x4ea2>
    8e83:	5f                   	pop    rdi
    8e84:	5f                   	pop    rdi
    8e85:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8e88:	31 31                	xor    DWORD PTR [rcx],esi
    8e8a:	31 32                	xor    DWORD PTR [rdx],esi
    8e8c:	62 61 73 69 63       	(bad)
    8e91:	5f                   	pop    rdi
    8e92:	73 74                	jae    8f08 <__TMC_END__+0x4ef0>
    8e94:	72 69                	jb     8eff <__TMC_END__+0x4ee7>
    8e96:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8e97:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8e9c:	31 31                	xor    DWORD PTR [rcx],esi
    8e9e:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8ea1:	72 5f                	jb     8f02 <__TMC_END__+0x4eea>
    8ea3:	74 72                	je     8f17 <__TMC_END__+0x4eff>
    8ea5:	61                   	(bad)
    8ea6:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8ead:	61 
    8eae:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8eb2:	31 35 5f 4d 5f 72    	xor    DWORD PTR [rip+0x725f4d5f],esi        # 725fdc17 <__TMC_END__+0x725f9bff>
    8eb8:	65 70 6c             	gs jo  8f27 <__TMC_END__+0x4f0f>
    8ebb:	61                   	(bad)
    8ebc:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    8ebf:	63 6f 6c             	movsxd ebp,DWORD PTR [rdi+0x6c]
    8ec2:	64 45 50             	fs rex.RB push r8
    8ec5:	63 6d 50             	movsxd ebp,DWORD PTR [rbp+0x50]
    8ec8:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    8ecc:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    8ecf:	6c                   	ins    BYTE PTR es:[rdi],dx
    8ed0:	65 5f                	gs pop rdi
    8ed2:	65 78 69             	gs js  8f3e <__TMC_END__+0x4f26>
    8ed5:	73 74                	jae    8f4b <__TMC_END__+0x4f33>
    8ed7:	73 00                	jae    8ed9 <__TMC_END__+0x4ec1>
    8ed9:	5f                   	pop    rdi
    8eda:	4d 5f                	rex.WRB pop r15
    8edc:	64 69 73 6a 75 6e 63 	imul   esi,DWORD PTR fs:[rbx+0x6a],0x74636e75
    8ee3:	74 
    8ee4:	00 67 65             	add    BYTE PTR [rdi+0x65],ah
    8ee7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8ee8:	65 72 61             	gs jb  8f4c <__TMC_END__+0x4f34>
    8eeb:	6c                   	ins    BYTE PTR es:[rdi],dx
    8eec:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8eef:	4e                   	rex.WRX
    8ef0:	4b 53                	rex.WXB push r11
    8ef2:	74 31                	je     8f25 <__TMC_END__+0x4f0d>
    8ef4:	37                   	(bad)
    8ef5:	62 61 73 69 63       	(bad)
    8efa:	5f                   	pop    rdi
    8efb:	73 74                	jae    8f71 <__TMC_END__+0x4f59>
    8efd:	72 69                	jb     8f68 <__TMC_END__+0x4f50>
    8eff:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8f00:	67 5f                	addr32 pop rdi
    8f02:	76 69                	jbe    8f6d <__TMC_END__+0x4f55>
    8f04:	65 77 49             	gs ja  8f50 <__TMC_END__+0x4f38>
    8f07:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    8f0a:	31 31                	xor    DWORD PTR [rcx],esi
    8f0c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8f0f:	72 5f                	jb     8f70 <__TMC_END__+0x4f58>
    8f11:	74 72                	je     8f85 <__TMC_END__+0x4f6d>
    8f13:	61                   	(bad)
    8f14:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x31454563
    8f1b:	31 
    8f1c:	36 66 69 6e 64 5f 6c 	ss imul bp,WORD PTR [rsi+0x64],0x6c5f
    8f23:	61                   	(bad)
    8f24:	73 74                	jae    8f9a <__TMC_END__+0x4f82>
    8f26:	5f                   	pop    rdi
    8f27:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8f28:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8f29:	74 5f                	je     8f8a <__TMC_END__+0x4f72>
    8f2b:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    8f2c:	66 45 50             	rex.RB push r8w
    8f2f:	4b 63 6d 00          	rex.WXB movsxd rbp,DWORD PTR [r13+0x0]
    8f33:	5f                   	pop    rdi
    8f34:	5a                   	pop    rdx
    8f35:	4e                   	rex.WRX
    8f36:	4b 53                	rex.WXB push r11
    8f38:	74 31                	je     8f6b <__TMC_END__+0x4f53>
    8f3a:	37                   	(bad)
    8f3b:	62 61 73 69 63       	(bad)
    8f40:	5f                   	pop    rdi
    8f41:	73 74                	jae    8fb7 <__TMC_END__+0x4f9f>
    8f43:	72 69                	jb     8fae <__TMC_END__+0x4f96>
    8f45:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8f46:	67 5f                	addr32 pop rdi
    8f48:	76 69                	jbe    8fb3 <__TMC_END__+0x4f9b>
    8f4a:	65 77 49             	gs ja  8f96 <__TMC_END__+0x4f7e>
    8f4d:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    8f50:	31 31                	xor    DWORD PTR [rcx],esi
    8f52:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8f55:	72 5f                	jb     8fb6 <__TMC_END__+0x4f9e>
    8f57:	74 72                	je     8fcb <__TMC_END__+0x4fb3>
    8f59:	61                   	(bad)
    8f5a:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x39454563
    8f61:	39 
    8f62:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    8f64:	64 73 5f             	fs jae 8fc6 <__TMC_END__+0x4fae>
    8f67:	77 69                	ja     8fd2 <__TMC_END__+0x4fba>
    8f69:	74 68                	je     8fd3 <__TMC_END__+0x4fbb>
    8f6b:	45 50                	rex.RB push r8
    8f6d:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    8f70:	5f                   	pop    rdi
    8f71:	5a                   	pop    rdx
    8f72:	4e 53                	rex.WRX push rbx
    8f74:	74 37                	je     8fad <__TMC_END__+0x4f95>
    8f76:	5f                   	pop    rdi
    8f77:	5f                   	pop    rdi
    8f78:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    8f7b:	31 31                	xor    DWORD PTR [rcx],esi
    8f7d:	31 32                	xor    DWORD PTR [rdx],esi
    8f7f:	62 61 73 69 63       	(bad)
    8f84:	5f                   	pop    rdi
    8f85:	73 74                	jae    8ffb <__TMC_END__+0x4fe3>
    8f87:	72 69                	jb     8ff2 <__TMC_END__+0x4fda>
    8f89:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8f8a:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    8f8f:	31 31                	xor    DWORD PTR [rcx],esi
    8f91:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8f94:	72 5f                	jb     8ff5 <__TMC_END__+0x4fdd>
    8f96:	74 72                	je     900a <__TMC_END__+0x4ff2>
    8f98:	61                   	(bad)
    8f99:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    8fa0:	61 
    8fa1:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    8fa5:	70 4c                	jo     8ff3 <__TMC_END__+0x4fdb>
    8fa7:	45 50                	rex.RB push r8
    8fa9:	4b 63 00             	rex.WXB movsxd rax,DWORD PTR [r8]
    8fac:	5f                   	pop    rdi
    8fad:	4d 5f                	rex.WRB pop r15
    8faf:	69 6e 69 74 5f 6c 6f 	imul   ebp,DWORD PTR [rsi+0x69],0x6f6c5f74
    8fb6:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
    8fb9:	5f                   	pop    rdi
    8fba:	62 75 66 00 5f 4d 5f 	vmaxsh xmm9,xmm19,WORD PTR [rbp+0xbe]
    8fc1:	73 70                	jae    9033 <__TMC_END__+0x501b>
    8fc3:	61                   	(bad)
    8fc4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8fc5:	00 5f 53             	add    BYTE PTR [rdi+0x53],bl
    8fc8:	5f                   	pop    rdi
    8fc9:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    8fcc:	79 5f                	jns    902d <__TMC_END__+0x5015>
    8fce:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8fd1:	72 73                	jb     9046 <__TMC_END__+0x502e>
    8fd3:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    8fd6:	53                   	push   rbx
    8fd7:	74 38                	je     9011 <__TMC_END__+0x4ff9>
    8fd9:	74 6f                	je     904a <__TMC_END__+0x5032>
    8fdb:	5f                   	pop    rdi
    8fdc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    8fdf:	72 73                	jb     9054 <__TMC_END__+0x503c>
    8fe1:	50                   	push   rax
    8fe2:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    8fe5:	66 53                	push   bx
    8fe7:	74 31                	je     901a <__TMC_END__+0x5002>
    8fe9:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    8fec:	61                   	(bad)
    8fed:	72 73                	jb     9062 <__TMC_END__+0x504a>
    8fef:	5f                   	pop    rdi
    8ff0:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    8ff2:	72 6d                	jb     9061 <__TMC_END__+0x5049>
    8ff4:	61                   	(bad)
    8ff5:	74 69                	je     9060 <__TMC_END__+0x5048>
    8ff7:	00 75 69             	add    BYTE PTR [rbp+0x69],dh
    8ffa:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    8ffb:	74 5f                	je     905c <__TMC_END__+0x5044>
    8ffd:	66 61                	data16 (bad)
    8fff:	73 74                	jae    9075 <__TMC_END__+0x505d>
    9001:	38 5f 74             	cmp    BYTE PTR [rdi+0x74],bl
    9004:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    9007:	4e                   	rex.WRX
    9008:	4b 53                	rex.WXB push r11
    900a:	74 37                	je     9043 <__TMC_END__+0x502b>
    900c:	5f                   	pop    rdi
    900d:	5f                   	pop    rdi
    900e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    9011:	31 31                	xor    DWORD PTR [rcx],esi
    9013:	31 32                	xor    DWORD PTR [rdx],esi
    9015:	62 61 73 69 63       	(bad)
    901a:	5f                   	pop    rdi
    901b:	73 74                	jae    9091 <__TMC_END__+0x5079>
    901d:	72 69                	jb     9088 <__TMC_END__+0x5070>
    901f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9020:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    9025:	31 31                	xor    DWORD PTR [rcx],esi
    9027:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    902a:	72 5f                	jb     908b <__TMC_END__+0x5073>
    902c:	74 72                	je     90a0 <__TMC_END__+0x5088>
    902e:	61                   	(bad)
    902f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    9036:	61 
    9037:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    903b:	32 61 74             	xor    ah,BYTE PTR [rcx+0x74]
    903e:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    9040:	00 69 6e             	add    BYTE PTR [rcx+0x6e],ch
    9043:	74 65                	je     90aa <__TMC_END__+0x5092>
    9045:	72 72                	jb     90b9 <__TMC_END__+0x50a1>
    9047:	75 70                	jne    90b9 <__TMC_END__+0x50a1>
    9049:	74 65                	je     90b0 <__TMC_END__+0x5098>
    904b:	64 00 5f 4d          	add    BYTE PTR fs:[rdi+0x4d],bl
    904f:	5f                   	pop    rdi
    9050:	65 78 63             	gs js  90b6 <__TMC_END__+0x509e>
    9053:	65 70 74             	gs jo  90ca <__TMC_END__+0x50b2>
    9056:	69 6f 6e 5f 6f 62 6a 	imul   ebp,DWORD PTR [rdi+0x6e],0x6a626f5f
    905d:	65 63 74 00 69       	movsxd esi,DWORD PTR gs:[rax+rax*1+0x69]
    9062:	73 77                	jae    90db <__TMC_END__+0x50c3>
    9064:	63 74 79 70          	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
    9068:	65 00 69 74          	add    BYTE PTR gs:[rcx+0x74],ch
    906c:	65 72 5f             	gs jb  90ce <__TMC_END__+0x50b6>
    906f:	64 69 66 66 65 72 65 	imul   esp,DWORD PTR fs:[rsi+0x66],0x6e657265
    9076:	6e 
    9077:	63 65 5f             	movsxd esp,DWORD PTR [rbp+0x5f]
    907a:	74 00                	je     907c <__TMC_END__+0x5064>
    907c:	5f                   	pop    rdi
    907d:	5a                   	pop    rdx
    907e:	4e 53                	rex.WRX push rbx
    9080:	74 34                	je     90b6 <__TMC_END__+0x509e>
    9082:	70 61                	jo     90e5 <__TMC_END__+0x50cd>
    9084:	69 72 49 74 50 4b 63 	imul   esi,DWORD PTR [rdx+0x49],0x634b5074
    908b:	45                   	rex.RB
    908c:	43 34 45             	rex.XB xor al,0x45
    908f:	52                   	push   rdx
    9090:	4b 53                	rex.WXB push r11
    9092:	32 5f 00             	xor    bl,BYTE PTR [rdi+0x0]
    9095:	73 68                	jae    90ff <__TMC_END__+0x50e7>
    9097:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9098:	72 74                	jb     910e <__TMC_END__+0x50f6>
    909a:	20 69 6e             	and    BYTE PTR [rcx+0x6e],ch
    909d:	74 00                	je     909f <__TMC_END__+0x5087>
    909f:	5f                   	pop    rdi
    90a0:	5a                   	pop    rdx
    90a1:	4e 53                	rex.WRX push rbx
    90a3:	74 38                	je     90dd <__TMC_END__+0x50c5>
    90a5:	5f                   	pop    rdi
    90a6:	5f                   	pop    rdi
    90a7:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    90a9:	72 6d                	jb     9118 <__TMC_END__+0x5100>
    90ab:	61                   	(bad)
    90ac:	74 35                	je     90e3 <__TMC_END__+0x50cb>
    90ae:	5f                   	pop    rdi
    90af:	53                   	push   rbx
    90b0:	69 6e 6b 49 63 45 33 	imul   ebp,DWORD PTR [rsi+0x6b],0x33456349
    90b7:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    90b8:	75 74                	jne    912e <__TMC_END__+0x5116>
    90ba:	45 76 00             	rex.RB jbe 90bd <__TMC_END__+0x50a5>
    90bd:	69 6e 74 5f 70 5f 63 	imul   ebp,DWORD PTR [rsi+0x74],0x635f705f
    90c4:	73 5f                	jae    9125 <__TMC_END__+0x510d>
    90c6:	70 72                	jo     913a <__TMC_END__+0x5122>
    90c8:	65 63 65 64          	movsxd esp,DWORD PTR gs:[rbp+0x64]
    90cc:	65 73 00             	gs jae 90cf <__TMC_END__+0x50b7>
    90cf:	5f                   	pop    rdi
    90d0:	5a                   	pop    rdx
    90d1:	4e 53                	rex.WRX push rbx
    90d3:	74 37                	je     910c <__TMC_END__+0x50f4>
    90d5:	5f                   	pop    rdi
    90d6:	5f                   	pop    rdi
    90d7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    90da:	31 31                	xor    DWORD PTR [rcx],esi
    90dc:	31 32                	xor    DWORD PTR [rdx],esi
    90de:	62 61 73 69 63       	(bad)
    90e3:	5f                   	pop    rdi
    90e4:	73 74                	jae    915a <__TMC_END__+0x5142>
    90e6:	72 69                	jb     9151 <__TMC_END__+0x5139>
    90e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    90e9:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    90ee:	31 31                	xor    DWORD PTR [rcx],esi
    90f0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    90f3:	72 5f                	jb     9154 <__TMC_END__+0x513c>
    90f5:	74 72                	je     9169 <__TMC_END__+0x5151>
    90f7:	61                   	(bad)
    90f8:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    90ff:	61 
    9100:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    9104:	36 61                	ss (bad)
    9106:	70 70                	jo     9178 <__TMC_END__+0x5160>
    9108:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    910a:	64 45 6d             	fs rex.RB ins DWORD PTR es:[rdi],dx
    910d:	63 00                	movsxd eax,DWORD PTR [rax]
    910f:	73 74                	jae    9185 <__TMC_END__+0x516d>
    9111:	61                   	(bad)
    9112:	72 74                	jb     9188 <__TMC_END__+0x5170>
    9114:	73 5f                	jae    9175 <__TMC_END__+0x515d>
    9116:	77 69                	ja     9181 <__TMC_END__+0x5169>
    9118:	74 68                	je     9182 <__TMC_END__+0x516a>
    911a:	00 5f 4d             	add    BYTE PTR [rdi+0x4d],bl
    911d:	5f                   	pop    rdi
    911e:	72 65                	jb     9185 <__TMC_END__+0x516d>
    9120:	77 69                	ja     918b <__TMC_END__+0x5173>
    9122:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9123:	64 00 5f 4d          	add    BYTE PTR fs:[rdi+0x4d],bl
    9127:	5f                   	pop    rdi
    9128:	73 65                	jae    918f <__TMC_END__+0x5177>
    912a:	74 5f                	je     918b <__TMC_END__+0x5173>
    912c:	6c                   	ins    BYTE PTR es:[rdi],dx
    912d:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    912f:	67 74 68             	addr32 je 919a <__TMC_END__+0x5182>
    9132:	00 74 6f 5f          	add    BYTE PTR [rdi+rbp*2+0x5f],dh
    9136:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    9139:	72 73                	jb     91ae <__TMC_END__+0x5196>
    913b:	5f                   	pop    rdi
    913c:	72 65                	jb     91a3 <__TMC_END__+0x518b>
    913e:	73 75                	jae    91b5 <__TMC_END__+0x519d>
    9140:	6c                   	ins    BYTE PTR es:[rdi],dx
    9141:	74 00                	je     9143 <__TMC_END__+0x512b>
    9143:	5f                   	pop    rdi
    9144:	76 74                	jbe    91ba <__TMC_END__+0x51a2>
    9146:	61                   	(bad)
    9147:	62 6c 65 5f 6f       	(bad)
    914c:	66 66 73 65          	data16 data16 jae 91b5 <__TMC_END__+0x519d>
    9150:	74 00                	je     9152 <__TMC_END__+0x513a>
    9152:	5f                   	pop    rdi
    9153:	5a                   	pop    rdx
    9154:	4e                   	rex.WRX
    9155:	4b 53                	rex.WXB push r11
    9157:	74 31                	je     918a <__TMC_END__+0x5172>
    9159:	37                   	(bad)
    915a:	62 61 73 69 63       	(bad)
    915f:	5f                   	pop    rdi
    9160:	73 74                	jae    91d6 <__TMC_END__+0x51be>
    9162:	72 69                	jb     91cd <__TMC_END__+0x51b5>
    9164:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9165:	67 5f                	addr32 pop rdi
    9167:	76 69                	jbe    91d2 <__TMC_END__+0x51ba>
    9169:	65 77 49             	gs ja  91b5 <__TMC_END__+0x519d>
    916c:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    916f:	31 31                	xor    DWORD PTR [rcx],esi
    9171:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    9174:	72 5f                	jb     91d5 <__TMC_END__+0x51bd>
    9176:	74 72                	je     91ea <__TMC_END__+0x51d2>
    9178:	61                   	(bad)
    9179:	69 74 73 49 63 45 45 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x34454563
    9180:	34 
    9181:	62 61 63 6b 45       	(bad)
    9186:	76 00                	jbe    9188 <__TMC_END__+0x5170>
    9188:	5f                   	pop    rdi
    9189:	5f                   	pop    rdi
    918a:	69 73 6f 63 32 33 5f 	imul   esi,DWORD PTR [rbx+0x6f],0x5f333263
    9191:	76 77                	jbe    920a <__TMC_END__+0x51f2>
    9193:	73 63                	jae    91f8 <__TMC_END__+0x51e0>
    9195:	61                   	(bad)
    9196:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9197:	66 00 69 74          	data16 add BYTE PTR [rcx+0x74],ch
    919b:	65 72 61             	gs jb  91ff <__TMC_END__+0x51e7>
    919e:	74 6f                	je     920f <__TMC_END__+0x51f7>
    91a0:	72 5f                	jb     9201 <__TMC_END__+0x51e9>
    91a2:	74 79                	je     921d <__TMC_END__+0x5205>
    91a4:	70 65                	jo     920b <__TMC_END__+0x51f3>
    91a6:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    91a9:	69 73 5f 69 6d 70 6c 	imul   esi,DWORD PTR [rbx+0x5f],0x6c706d69
    91b0:	69 63 69 74 6c 79 5f 	imul   esp,DWORD PTR [rbx+0x69],0x5f796c74
    91b7:	64 65 66 61          	fs gs data16 (bad)
    91bb:	75 6c                	jne    9229 <__TMC_END__+0x5211>
    91bd:	74 5f                	je     921e <__TMC_END__+0x5206>
    91bf:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    91c2:	73 74                	jae    9238 <__TMC_END__+0x5220>
    91c4:	72 75                	jb     923b <__TMC_END__+0x5223>
    91c6:	63 74 69 62          	movsxd esi,DWORD PTR [rcx+rbp*2+0x62]
    91ca:	6c                   	ins    BYTE PTR es:[rdi],dx
    91cb:	65 5f                	gs pop rdi
    91cd:	76 00                	jbe    91cf <__TMC_END__+0x51b7>
    91cf:	5f                   	pop    rdi
    91d0:	5a                   	pop    rdx
    91d1:	4e 53                	rex.WRX push rbx
    91d3:	74 37                	je     920c <__TMC_END__+0x51f4>
    91d5:	5f                   	pop    rdi
    91d6:	5f                   	pop    rdi
    91d7:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    91da:	31 31                	xor    DWORD PTR [rcx],esi
    91dc:	31 32                	xor    DWORD PTR [rdx],esi
    91de:	62 61 73 69 63       	(bad)
    91e3:	5f                   	pop    rdi
    91e4:	73 74                	jae    925a <__TMC_END__+0x5242>
    91e6:	72 69                	jb     9251 <__TMC_END__+0x5239>
    91e8:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    91e9:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    91ee:	31 31                	xor    DWORD PTR [rcx],esi
    91f0:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    91f3:	72 5f                	jb     9254 <__TMC_END__+0x523c>
    91f5:	74 72                	je     9269 <__TMC_END__+0x5251>
    91f7:	61                   	(bad)
    91f8:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    91ff:	61 
    9200:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    9204:	33 65 6e             	xor    esp,DWORD PTR [rbp+0x6e]
    9207:	64 45 76 00          	fs rex.RB jbe 920b <__TMC_END__+0x51f3>
    920b:	5f                   	pop    rdi
    920c:	5a                   	pop    rdx
    920d:	4e 53                	rex.WRX push rbx
    920f:	74 37                	je     9248 <__TMC_END__+0x5230>
    9211:	5f                   	pop    rdi
    9212:	5f                   	pop    rdi
    9213:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    9216:	31 31                	xor    DWORD PTR [rcx],esi
    9218:	31 32                	xor    DWORD PTR [rdx],esi
    921a:	62 61 73 69 63       	(bad)
    921f:	5f                   	pop    rdi
    9220:	73 74                	jae    9296 <__TMC_END__+0x527e>
    9222:	72 69                	jb     928d <__TMC_END__+0x5275>
    9224:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9225:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    922a:	31 31                	xor    DWORD PTR [rcx],esi
    922c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    922f:	72 5f                	jb     9290 <__TMC_END__+0x5278>
    9231:	74 72                	je     92a5 <__TMC_END__+0x528d>
    9233:	61                   	(bad)
    9234:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    923b:	61 
    923c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    9240:	34 62                	xor    al,0x62
    9242:	61                   	(bad)
    9243:	63 6b 45             	movsxd ebp,DWORD PTR [rbx+0x45]
    9246:	76 00                	jbe    9248 <__TMC_END__+0x5230>
    9248:	5f                   	pop    rdi
    9249:	5a                   	pop    rdx
    924a:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    924e:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    9250:	75 5f                	jne    92b1 <__TMC_END__+0x5299>
    9252:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    9255:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
    9258:	5f                   	pop    rdi
    9259:	61                   	(bad)
    925a:	6c                   	ins    BYTE PTR es:[rdi],dx
    925b:	6c                   	ins    BYTE PTR es:[rdi],dx
    925c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    925d:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
    9260:	72 61                	jb     92c3 <__TMC_END__+0x52ab>
    9262:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    9269:	63 
    926a:	45 63 45 32          	movsxd r8d,DWORD PTR [r13+0x32]
    926e:	37                   	(bad)
    926f:	5f                   	pop    rdi
    9270:	53                   	push   rbx
    9271:	5f                   	pop    rdi
    9272:	70 72                	jo     92e6 <__TMC_END__+0x52ce>
    9274:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9275:	70 61                	jo     92d8 <__TMC_END__+0x52c0>
    9277:	67 61                	addr32 (bad)
    9279:	74 65                	je     92e0 <__TMC_END__+0x52c8>
    927b:	5f                   	pop    rdi
    927c:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    927d:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    927e:	5f                   	pop    rdi
    927f:	6d                   	ins    DWORD PTR es:[rdi],dx
    9280:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9281:	76 65                	jbe    92e8 <__TMC_END__+0x52d0>
    9283:	5f                   	pop    rdi
    9284:	61                   	(bad)
    9285:	73 73                	jae    92fa <__TMC_END__+0x52e2>
    9287:	69 67 6e 45 76 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f007645
    928e:	5a                   	pop    rdx
    928f:	4e 53                	rex.WRX push rbx
    9291:	74 37                	je     92ca <__TMC_END__+0x52b2>
    9293:	5f                   	pop    rdi
    9294:	5f                   	pop    rdi
    9295:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    9298:	31 31                	xor    DWORD PTR [rcx],esi
    929a:	31 32                	xor    DWORD PTR [rdx],esi
    929c:	62 61 73 69 63       	(bad)
    92a1:	5f                   	pop    rdi
    92a2:	73 74                	jae    9318 <__TMC_END__+0x5300>
    92a4:	72 69                	jb     930f <__TMC_END__+0x52f7>
    92a6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    92a7:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    92ac:	31 31                	xor    DWORD PTR [rcx],esi
    92ae:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    92b1:	72 5f                	jb     9312 <__TMC_END__+0x52fa>
    92b3:	74 72                	je     9327 <__TMC_END__+0x530f>
    92b5:	61                   	(bad)
    92b6:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    92bd:	61 
    92be:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    92c2:	70 4c                	jo     9310 <__TMC_END__+0x52f8>
    92c4:	45 53                	rex.RB push r11
    92c6:	74 31                	je     92f9 <__TMC_END__+0x52e1>
    92c8:	36 69 6e 69 74 69 61 	ss imul ebp,DWORD PTR [rsi+0x69],0x6c616974
    92cf:	6c 
    92d0:	69 7a 65 72 5f 6c 69 	imul   edi,DWORD PTR [rdx+0x65],0x696c5f72
    92d7:	73 74                	jae    934d <__TMC_END__+0x5335>
    92d9:	49 63 45 00          	movsxd rax,DWORD PTR [r13+0x0]
    92dd:	70 61                	jo     9340 <__TMC_END__+0x5328>
    92df:	69 72 3c 73 68 6f 72 	imul   esi,DWORD PTR [rdx+0x3c],0x726f6873
    92e6:	74 20                	je     9308 <__TMC_END__+0x52f0>
    92e8:	75 6e                	jne    9358 <__TMC_END__+0x5340>
    92ea:	73 69                	jae    9355 <__TMC_END__+0x533d>
    92ec:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    92ee:	65 64 20 69 6e       	gs and BYTE PTR fs:[rcx+0x6e],ch
    92f3:	74 2c                	je     9321 <__TMC_END__+0x5309>
    92f5:	20 63 68             	and    BYTE PTR [rbx+0x68],ah
    92f8:	61                   	(bad)
    92f9:	72 20                	jb     931b <__TMC_END__+0x5303>
    92fb:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
    92fe:	73 74                	jae    9374 <__TMC_END__+0x535c>
    9300:	2a 3e                	sub    bh,BYTE PTR [rsi]
    9302:	00 6f 70             	add    BYTE PTR [rdi+0x70],ch
    9305:	65 72 61             	gs jb  9369 <__TMC_END__+0x5351>
    9308:	74 69                	je     9373 <__TMC_END__+0x535b>
    930a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    930b:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    930c:	5f                   	pop    rdi
    930d:	63 61 6e             	movsxd esp,DWORD PTR [rcx+0x6e]
    9310:	63 65 6c             	movsxd esp,DWORD PTR [rbp+0x6c]
    9313:	65 64 00 5f 5a       	gs add BYTE PTR fs:[rdi+0x5a],bl
    9318:	4e                   	rex.WRX
    9319:	4b 39 5f 5f          	rex.WXB cmp QWORD PTR [r15+0x5f],rbx
    931d:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    931f:	75 5f                	jne    9380 <__TMC_END__+0x5368>
    9321:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    9324:	31 37                	xor    DWORD PTR [rdi],esi
    9326:	5f                   	pop    rdi
    9327:	5f                   	pop    rdi
    9328:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9329:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    932a:	72 6d                	jb     9399 <__TMC_END__+0x5381>
    932c:	61                   	(bad)
    932d:	6c                   	ins    BYTE PTR es:[rdi],dx
    932e:	5f                   	pop    rdi
    932f:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    9336:	72 
    9337:	49 50                	rex.WB push r8
    9339:	63 53 74             	movsxd edx,DWORD PTR [rbx+0x74]
    933c:	34 73                	xor    al,0x73
    933e:	70 61                	jo     93a1 <__TMC_END__+0x5389>
    9340:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9341:	49 63 4c 6d 31       	movsxd rcx,DWORD PTR [r13+rbp*2+0x31]
    9346:	38 34 34             	cmp    BYTE PTR [rsp+rsi*1],dh
    9349:	36 37                	ss (bad)
    934b:	34 34                	xor    al,0x34
    934d:	30 37                	xor    BYTE PTR [rdi],dh
    934f:	33 37                	xor    esi,DWORD PTR [rdi]
    9351:	30 39                	xor    BYTE PTR [rcx],bh
    9353:	35 35 31 36 31       	xor    eax,0x31363135
    9358:	35 45 45 45 34       	xor    eax,0x34454545
    935d:	62 61 73 65 45       	(bad)
    9362:	76 00                	jbe    9364 <__TMC_END__+0x534c>
    9364:	5f                   	pop    rdi
    9365:	5a                   	pop    rdx
    9366:	53                   	push   rbx
    9367:	74 38                	je     93a1 <__TMC_END__+0x5389>
    9369:	74 6f                	je     93da <__TMC_END__+0x53c2>
    936b:	5f                   	pop    rdi
    936c:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    936f:	72 73                	jb     93e4 <__TMC_END__+0x53cc>
    9371:	50                   	push   rax
    9372:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    9375:	66 53                	push   bx
    9377:	74 31                	je     93aa <__TMC_END__+0x5392>
    9379:	32 63 68             	xor    ah,BYTE PTR [rbx+0x68]
    937c:	61                   	(bad)
    937d:	72 73                	jb     93f2 <__TMC_END__+0x53da>
    937f:	5f                   	pop    rdi
    9380:	66 6f                	outs   dx,WORD PTR ds:[rsi]
    9382:	72 6d                	jb     93f1 <__TMC_END__+0x53d9>
    9384:	61                   	(bad)
    9385:	74 00                	je     9387 <__TMC_END__+0x536f>
    9387:	61                   	(bad)
    9388:	75 74                	jne    93fe <__TMC_END__+0x53e6>
    938a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    938b:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
    938e:	65 78 74             	gs js  9405 <__TMC_END__+0x53ed>
    9391:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    9393:	74 5f                	je     93f4 <__TMC_END__+0x53dc>
    9395:	73 74                	jae    940b <__TMC_END__+0x53f3>
    9397:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9398:	72 61                	jb     93fb <__TMC_END__+0x53e3>
    939a:	67 65 00 5f 5a       	add    BYTE PTR gs:[edi+0x5a],bl
    939f:	4e                   	rex.WRX
    93a0:	4b 53                	rex.WXB push r11
    93a2:	74 37                	je     93db <__TMC_END__+0x53c3>
    93a4:	5f                   	pop    rdi
    93a5:	5f                   	pop    rdi
    93a6:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    93a9:	31 31                	xor    DWORD PTR [rcx],esi
    93ab:	31 32                	xor    DWORD PTR [rdx],esi
    93ad:	62 61 73 69 63       	(bad)
    93b2:	5f                   	pop    rdi
    93b3:	73 74                	jae    9429 <__TMC_END__+0x5411>
    93b5:	72 69                	jb     9420 <__TMC_END__+0x5408>
    93b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    93b8:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    93bd:	31 31                	xor    DWORD PTR [rcx],esi
    93bf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    93c2:	72 5f                	jb     9423 <__TMC_END__+0x540b>
    93c4:	74 72                	je     9438 <__TMC_END__+0x5420>
    93c6:	61                   	(bad)
    93c7:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    93ce:	61 
    93cf:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    93d3:	31 37                	xor    DWORD PTR [rdi],esi
    93d5:	66 69 6e 64 5f 66    	imul   bp,WORD PTR [rsi+0x64],0x665f
    93db:	69 72 73 74 5f 6e 6f 	imul   esi,DWORD PTR [rdx+0x73],0x6f6e5f74
    93e2:	74 5f                	je     9443 <__TMC_END__+0x542b>
    93e4:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    93e5:	66 45 50             	rex.RB push r8w
    93e8:	4b 63 6d 6d          	rex.WXB movsxd rbp,DWORD PTR [r13+0x6d]
    93ec:	00 7e 61             	add    BYTE PTR [rsi+0x61],bh
    93ef:	6c                   	ins    BYTE PTR es:[rdi],dx
    93f0:	6c                   	ins    BYTE PTR es:[rdi],dx
    93f1:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    93f2:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
    93f5:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    93f6:	72 00                	jb     93f8 <__TMC_END__+0x53e0>
    93f8:	5f                   	pop    rdi
    93f9:	43 68 61 72 5f 61    	rex.XB push 0x615f7261
    93ff:	6c                   	ins    BYTE PTR es:[rdi],dx
    9400:	6c                   	ins    BYTE PTR es:[rdi],dx
    9401:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9402:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
    9405:	79 70                	jns    9477 <__TMC_END__+0x545f>
    9407:	65 00 62 69          	add    BYTE PTR gs:[rdx+0x69],ah
    940b:	64 69 72 65 63 74 69 	imul   esi,DWORD PTR fs:[rdx+0x65],0x6f697463
    9412:	6f 
    9413:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9414:	61                   	(bad)
    9415:	6c                   	ins    BYTE PTR es:[rdi],dx
    9416:	5f                   	pop    rdi
    9417:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    941e:	72 
    941f:	5f                   	pop    rdi
    9420:	74 61                	je     9483 <__TMC_END__+0x546b>
    9422:	67 00 5f 5a          	add    BYTE PTR [edi+0x5a],bl
    9426:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    942a:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    942c:	75 5f                	jne    948d <__TMC_END__+0x5475>
    942e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    9431:	31 37                	xor    DWORD PTR [rdi],esi
    9433:	5f                   	pop    rdi
    9434:	5f                   	pop    rdi
    9435:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9436:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9437:	72 6d                	jb     94a6 <__TMC_END__+0x548e>
    9439:	61                   	(bad)
    943a:	6c                   	ins    BYTE PTR es:[rdi],dx
    943b:	5f                   	pop    rdi
    943c:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
    9443:	72 
    9444:	49 50                	rex.WB push r8
    9446:	4b 63 4e 53          	rex.WXB movsxd rcx,DWORD PTR [r14+0x53]
    944a:	74 37                	je     9483 <__TMC_END__+0x546b>
    944c:	5f                   	pop    rdi
    944d:	5f                   	pop    rdi
    944e:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    9451:	31 31                	xor    DWORD PTR [rcx],esi
    9453:	31 32                	xor    DWORD PTR [rdx],esi
    9455:	62 61 73 69 63       	(bad)
    945a:	5f                   	pop    rdi
    945b:	73 74                	jae    94d1 <__TMC_END__+0x54b9>
    945d:	72 69                	jb     94c8 <__TMC_END__+0x54b0>
    945f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9460:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    9465:	31 31                	xor    DWORD PTR [rcx],esi
    9467:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    946a:	72 5f                	jb     94cb <__TMC_END__+0x54b3>
    946c:	74 72                	je     94e0 <__TMC_END__+0x54c8>
    946e:	61                   	(bad)
    946f:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    9476:	61 
    9477:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    947b:	45                   	rex.RB
    947c:	45 6d                	rex.RB ins DWORD PTR es:[rdi],dx
    947e:	6d                   	ins    DWORD PTR es:[rdi],dx
    947f:	45 76 00             	rex.RB jbe 9482 <__TMC_END__+0x546a>
    9482:	5f                   	pop    rdi
    9483:	5a                   	pop    rdx
    9484:	4e 39 5f 5f          	rex.WRX cmp QWORD PTR [rdi+0x5f],r11
    9488:	67 6e                	outs   dx,BYTE PTR ds:[esi]
    948a:	75 5f                	jne    94eb <__TMC_END__+0x54d3>
    948c:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    948f:	31 34 5f             	xor    DWORD PTR [rdi+rbx*2],esi
    9492:	5f                   	pop    rdi
    9493:	61                   	(bad)
    9494:	6c                   	ins    BYTE PTR es:[rdi],dx
    9495:	6c                   	ins    BYTE PTR es:[rdi],dx
    9496:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    9497:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
    949a:	72 61                	jb     94fd <__TMC_END__+0x54e5>
    949c:	69 74 73 49 53 61 49 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x63496153
    94a3:	63 
    94a4:	45 63 45 32          	movsxd r8d,DWORD PTR [r13+0x32]
    94a8:	37                   	(bad)
    94a9:	5f                   	pop    rdi
    94aa:	53                   	push   rbx
    94ab:	5f                   	pop    rdi
    94ac:	70 72                	jo     9520 <__TMC_END__+0x5508>
    94ae:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    94af:	70 61                	jo     9512 <__TMC_END__+0x54fa>
    94b1:	67 61                	addr32 (bad)
    94b3:	74 65                	je     951a <__TMC_END__+0x5502>
    94b5:	5f                   	pop    rdi
    94b6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    94b7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    94b8:	5f                   	pop    rdi
    94b9:	63 6f 70             	movsxd ebp,DWORD PTR [rdi+0x70]
    94bc:	79 5f                	jns    951d <__TMC_END__+0x5505>
    94be:	61                   	(bad)
    94bf:	73 73                	jae    9534 <__TMC_END__+0x551c>
    94c1:	69 67 6e 45 76 00 5f 	imul   esp,DWORD PTR [rdi+0x6e],0x5f007645
    94c8:	5a                   	pop    rdx
    94c9:	53                   	push   rbx
    94ca:	74 38                	je     9504 <__TMC_END__+0x54ec>
    94cc:	74 6f                	je     953d <__TMC_END__+0x5525>
    94ce:	5f                   	pop    rdi
    94cf:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    94d2:	72 73                	jb     9547 <__TMC_END__+0x552f>
    94d4:	50                   	push   rax
    94d5:	63 53 5f             	movsxd edx,DWORD PTR [rbx+0x5f]
    94d8:	78 69                	js     9543 <__TMC_END__+0x552b>
    94da:	00 5f 5a             	add    BYTE PTR [rdi+0x5a],bl
    94dd:	4e 53                	rex.WRX push rbx
    94df:	74 37                	je     9518 <__TMC_END__+0x5500>
    94e1:	5f                   	pop    rdi
    94e2:	5f                   	pop    rdi
    94e3:	63 78 78             	movsxd edi,DWORD PTR [rax+0x78]
    94e6:	31 31                	xor    DWORD PTR [rcx],esi
    94e8:	31 32                	xor    DWORD PTR [rdx],esi
    94ea:	62 61 73 69 63       	(bad)
    94ef:	5f                   	pop    rdi
    94f0:	73 74                	jae    9566 <__TMC_END__+0x554e>
    94f2:	72 69                	jb     955d <__TMC_END__+0x5545>
    94f4:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    94f5:	67 49 63 53 74       	movsxd rdx,DWORD PTR [r11d+0x74]
    94fa:	31 31                	xor    DWORD PTR [rcx],esi
    94fc:	63 68 61             	movsxd ebp,DWORD PTR [rax+0x61]
    94ff:	72 5f                	jb     9560 <__TMC_END__+0x5548>
    9501:	74 72                	je     9575 <__TMC_END__+0x555d>
    9503:	61                   	(bad)
    9504:	69 74 73 49 63 45 53 	imul   esi,DWORD PTR [rbx+rsi*2+0x49],0x61534563
    950b:	61 
    950c:	49 63 45 45          	movsxd rax,DWORD PTR [r13+0x45]
    9510:	34 72                	xor    al,0x72
    9512:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    9514:	64 45 76 00          	fs rex.RB jbe 9518 <__TMC_END__+0x5500>
    9518:	5f                   	pop    rdi
    9519:	4d 5f                	rex.WRB pop r15
    951b:	6c                   	ins    BYTE PTR es:[rdi],dx
    951c:	65 6e                	outs   dx,BYTE PTR gs:[rsi]
    951e:	00 66 69             	add    BYTE PTR [rsi+0x69],ah
    9521:	6e                   	outs   dx,BYTE PTR ds:[rsi]
    9522:	64 5f                	fs pop rdi
    9524:	66 69 72 73 74 5f    	imul   si,WORD PTR [rdx+0x73],0x5f74
    952a:	6f                   	outs   dx,DWORD PTR ds:[rsi]
    952b:	66                   	data16
	...

Disassembly of section .debug_line_str:

0000000000000000 <.debug_line_str>:
   0:	73 61                	jae    63 <_init-0xf9d>
   2:	6d                   	ins    DWORD PTR es:[rdi],dx
   3:	70 6c                	jo     71 <_init-0xf8f>
   5:	65 2d 6d 6f 64 75    	gs sub eax,0x75646f6d
   b:	6c                   	ins    BYTE PTR es:[rdi],dx
   c:	65 2f                	gs (bad)
   e:	6d                   	ins    DWORD PTR es:[rdi],dx
   f:	61                   	(bad)
  10:	69 6e 2e 63 70 70 00 	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
  17:	2f                   	(bad)
  18:	68 6f 6d 65 2f       	push   0x2f656d6f
  1d:	6d                   	ins    DWORD PTR es:[rdi],dx
  1e:	61                   	(bad)
  1f:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  20:	61                   	(bad)
  21:	2f                   	(bad)
  22:	67 69 74 2f 6c 69 6e 	imul   esi,DWORD PTR [edi+ebp*1+0x6c],0x78756e69
  29:	75 78 
  2b:	2d 70 72 6f 63       	sub    eax,0x636f7270
  30:	65 73 73             	gs jae a6 <_init-0xf5a>
  33:	2d 69 6e 6a 65       	sub    eax,0x656a6e69
  38:	63 74 69 6f          	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
  3c:	6e                   	outs   dx,BYTE PTR ds:[rsi]
  3d:	00 73 61             	add    BYTE PTR [rbx+0x61],dh
  40:	6d                   	ins    DWORD PTR es:[rdi],dx
  41:	70 6c                	jo     af <_init-0xf51>
  43:	65 2d 6d 6f 64 75    	gs sub eax,0x75646f6d
  49:	6c                   	ins    BYTE PTR es:[rdi],dx
  4a:	65 00 2f             	add    BYTE PTR gs:[rdi],ch
  4d:	75 73                	jne    c2 <_init-0xf3e>
  4f:	72 2f                	jb     80 <_init-0xf80>
  51:	6c                   	ins    BYTE PTR es:[rdi],dx
  52:	69 62 2f 67 63 63 2f 	imul   esp,DWORD PTR [rdx+0x2f],0x2f636367
  59:	78 38                	js     93 <_init-0xf6d>
  5b:	36 5f                	ss pop rdi
  5d:	36 34 2d             	ss xor al,0x2d
  60:	70 63                	jo     c5 <_init-0xf3b>
  62:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  67:	78 2d                	js     96 <_init-0xf6a>
  69:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  6b:	75 2f                	jne    9c <_init-0xf64>
  6d:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
  70:	32 2e                	xor    ch,BYTE PTR [rsi]
  72:	31 2f                	xor    DWORD PTR [rdi],ebp
  74:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  7b:	00 2f                	add    BYTE PTR [rdi],ch
  7d:	75 73                	jne    f2 <_init-0xf0e>
  7f:	72 2f                	jb     b0 <_init-0xf50>
  81:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  88:	2f                   	(bad)
  89:	62 69 74 73 2f       	(bad)
  8e:	74 79                	je     109 <_init-0xef7>
  90:	70 65                	jo     f7 <_init-0xf09>
  92:	73 00                	jae    94 <_init-0xf6c>
  94:	2f                   	(bad)
  95:	75 73                	jne    10a <_init-0xef6>
  97:	72 2f                	jb     c8 <_init-0xf38>
  99:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  a0:	2f                   	(bad)
  a1:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  a3:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  a5:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
  a8:	32 2e                	xor    ch,BYTE PTR [rsi]
  aa:	31 00                	xor    DWORD PTR [rax],eax
  ac:	2f                   	(bad)
  ad:	75 73                	jne    122 <_init-0xede>
  af:	72 2f                	jb     e0 <_init-0xf20>
  b1:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  b8:	2f                   	(bad)
  b9:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  bb:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  bd:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
  c0:	32 2e                	xor    ch,BYTE PTR [rsi]
  c2:	31 2f                	xor    DWORD PTR [rdi],ebp
  c4:	78 38                	js     fe <_init-0xf02>
  c6:	36 5f                	ss pop rdi
  c8:	36 34 2d             	ss xor al,0x2d
  cb:	70 63                	jo     130 <_init-0xed0>
  cd:	2d 6c 69 6e 75       	sub    eax,0x756e696c
  d2:	78 2d                	js     101 <_init-0xeff>
  d4:	67 6e                	outs   dx,BYTE PTR ds:[esi]
  d6:	75 2f                	jne    107 <_init-0xef9>
  d8:	62 69 74 73 00       	(bad)
  dd:	2f                   	(bad)
  de:	75 73                	jne    153 <_init-0xead>
  e0:	72 2f                	jb     111 <_init-0xeef>
  e2:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
  e9:	2f                   	(bad)
  ea:	63 2b                	movsxd ebp,DWORD PTR [rbx]
  ec:	2b 2f                	sub    ebp,DWORD PTR [rdi]
  ee:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
  f1:	32 2e                	xor    ch,BYTE PTR [rsi]
  f3:	31 2f                	xor    DWORD PTR [rdi],ebp
  f5:	62 69 74 73 00       	(bad)
  fa:	2f                   	(bad)
  fb:	75 73                	jne    170 <_init-0xe90>
  fd:	72 2f                	jb     12e <_init-0xed2>
  ff:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 106:	2f                   	(bad)
 107:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 109:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 10b:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
 10e:	32 2e                	xor    ch,BYTE PTR [rsi]
 110:	31 2f                	xor    DWORD PTR [rdi],ebp
 112:	64 65 62 75 67 00 2f 	(bad)
 119:	75 73                	jne    18e <_init-0xe72>
 11b:	72 2f                	jb     14c <_init-0xeb4>
 11d:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 124:	00 2f                	add    BYTE PTR [rdi],ch
 126:	75 73                	jne    19b <_init-0xe65>
 128:	72 2f                	jb     159 <_init-0xea7>
 12a:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 131:	2f                   	(bad)
 132:	63 2b                	movsxd ebp,DWORD PTR [rbx]
 134:	2b 2f                	sub    ebp,DWORD PTR [rdi]
 136:	31 34 2e             	xor    DWORD PTR [rsi+rbp*1],esi
 139:	32 2e                	xor    ch,BYTE PTR [rsi]
 13b:	31 2f                	xor    DWORD PTR [rdi],ebp
 13d:	65 78 74             	gs js  1b4 <_init-0xe4c>
 140:	00 2f                	add    BYTE PTR [rdi],ch
 142:	75 73                	jne    1b7 <_init-0xe49>
 144:	72 2f                	jb     175 <_init-0xe8b>
 146:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 14d:	2f                   	(bad)
 14e:	62 69 74 73 00       	(bad)
 153:	2f                   	(bad)
 154:	75 73                	jne    1c9 <_init-0xe37>
 156:	72 2f                	jb     187 <_init-0xe79>
 158:	69 6e 63 6c 75 64 65 	imul   ebp,DWORD PTR [rsi+0x63],0x6564756c
 15f:	2f                   	(bad)
 160:	73 79                	jae    1db <_init-0xe25>
 162:	73 00                	jae    164 <_init-0xe9c>
 164:	3c 62                	cmp    al,0x62
 166:	75 69                	jne    1d1 <_init-0xe2f>
 168:	6c                   	ins    BYTE PTR es:[rdi],dx
 169:	74 2d                	je     198 <_init-0xe68>
 16b:	69 6e 3e 00 73 74 64 	imul   ebp,DWORD PTR [rsi+0x3e],0x64747300
 172:	64 65 66 2e 68 00 77 	fs gs cs pushw 0x7700
 179:	69 6e 74 5f 74 2e 68 	imul   ebp,DWORD PTR [rsi+0x74],0x682e745f
 180:	00 5f 5f             	add    BYTE PTR [rdi+0x5f],bl
 183:	6d                   	ins    DWORD PTR es:[rdi],dx
 184:	62 73 74 61 74       	(bad)
 189:	65 5f                	gs pop rdi
 18b:	74 2e                	je     1bb <_init-0xe45>
 18d:	68 00 5f 5f 46       	push   0x465f5f00
 192:	49                   	rex.WB
 193:	4c                   	rex.WR
 194:	45                   	rex.RB
 195:	2e 68 00 73 74 72    	cs push 0x72747300
 19b:	75 63                	jne    200 <_init-0xe00>
 19d:	74 5f                	je     1fe <_init-0xe02>
 19f:	46                   	rex.RX
 1a0:	49                   	rex.WB
 1a1:	4c                   	rex.WR
 1a2:	45                   	rex.RB
 1a3:	2e 68 00 63 77 63    	cs push 0x63776300
 1a9:	68 61 72 00 63       	push   0x63007261
 1ae:	2b 2b                	sub    ebp,DWORD PTR [rbx]
 1b0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 1b3:	66 69 67 2e 68 00    	imul   sp,WORD PTR [rdi+0x2e],0x68
 1b9:	74 79                	je     234 <_init-0xdcc>
 1bb:	70 65                	jo     222 <_init-0xdde>
 1bd:	5f                   	pop    rdi
 1be:	74 72                	je     232 <_init-0xdce>
 1c0:	61                   	(bad)
 1c1:	69 74 73 00 65 78 63 	imul   esi,DWORD PTR [rbx+rsi*2+0x0],0x65637865
 1c8:	65 
 1c9:	70 74                	jo     23f <_init-0xdc1>
 1cb:	69 6f 6e 5f 70 74 72 	imul   ebp,DWORD PTR [rdi+0x6e],0x7274705f
 1d2:	2e 68 00 63 6f 6e    	cs push 0x6e6f6300
 1d8:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 1db:	74 73                	je     250 <_init-0xdb0>
 1dd:	00 69 74             	add    BYTE PTR [rcx+0x74],ch
 1e0:	65 72 61             	gs jb  244 <_init-0xdbc>
 1e3:	74 6f                	je     254 <_init-0xdac>
 1e5:	72 5f                	jb     246 <_init-0xdba>
 1e7:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 1ea:	63 65 70             	movsxd esp,DWORD PTR [rbp+0x70]
 1ed:	74 73                	je     262 <_init-0xd9e>
 1ef:	2e 68 00 72 61 6e    	cs push 0x6e617200
 1f5:	67 65 73 5f          	addr32 gs jae 258 <_init-0xda8>
 1f9:	63 6d 70             	movsxd ebp,DWORD PTR [rbp+0x70]
 1fc:	2e 68 00 63 6f 6d    	cs push 0x6d6f6300
 202:	70 61                	jo     265 <_init-0xd9b>
 204:	72 65                	jb     26b <_init-0xd95>
 206:	00 73 70             	add    BYTE PTR [rbx+0x70],dh
 209:	61                   	(bad)
 20a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 20b:	00 62 61             	add    BYTE PTR [rdx+0x61],ah
 20e:	73 69                	jae    279 <_init-0xd87>
 210:	63 5f 73             	movsxd ebx,DWORD PTR [rdi+0x73]
 213:	74 72                	je     287 <_init-0xd79>
 215:	69 6e 67 2e 68 00 63 	imul   ebp,DWORD PTR [rsi+0x67],0x6300682e
 21c:	68 61 72 63 6f       	push   0x6f637261
 221:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 222:	76 2e                	jbe    252 <_init-0xdae>
 224:	68 00 73 74 6c       	push   0x6c747300
 229:	5f                   	pop    rdi
 22a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
 231:	72 
 232:	5f                   	pop    rdi
 233:	62 61 73 65 5f       	(bad)
 238:	74 79                	je     2b3 <_init-0xd4d>
 23a:	70 65                	jo     2a1 <_init-0xd5f>
 23c:	73 2e                	jae    26c <_init-0xd94>
 23e:	68 00 63 68 61       	push   0x61686300
 243:	72 5f                	jb     2a4 <_init-0xd5c>
 245:	74 72                	je     2b9 <_init-0xd47>
 247:	61                   	(bad)
 248:	69 74 73 2e 68 00 63 	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x6c630068
 24f:	6c 
 250:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 251:	63 61 6c             	movsxd esp,DWORD PTR [rcx+0x6c]
 254:	65 00 6e 65          	add    BYTE PTR gs:[rsi+0x65],ch
 258:	77 5f                	ja     2b9 <_init-0xd47>
 25a:	61                   	(bad)
 25b:	6c                   	ins    BYTE PTR es:[rdi],dx
 25c:	6c                   	ins    BYTE PTR es:[rdi],dx
 25d:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 25e:	63 61 74             	movsxd esp,DWORD PTR [rcx+0x74]
 261:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 262:	72 2e                	jb     292 <_init-0xd6e>
 264:	68 00 64 65 62       	push   0x62656400
 269:	75 67                	jne    2d2 <_init-0xd2e>
 26b:	2e 68 00 6e 75 6d    	cs push 0x6d756e00
 271:	62 65 72 73 00       	(bad)
 276:	73 74                	jae    2ec <_init-0xd14>
 278:	72 69                	jb     2e3 <_init-0xd1d>
 27a:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 27b:	67 5f                	addr32 pop rdi
 27d:	76 69                	jbe    2e8 <_init-0xd18>
 27f:	65 77 00             	gs ja  282 <_init-0xd7e>
 282:	63 73 74             	movsxd esi,DWORD PTR [rbx+0x74]
 285:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 287:	69 62 00 63 73 74 64 	imul   esp,DWORD PTR [rdx+0x0],0x64747363
 28e:	69 6f 00 61 6c 6c 6f 	imul   ebp,DWORD PTR [rdi+0x0],0x6f6c6c61
 295:	63 5f 74             	movsxd ebx,DWORD PTR [rdi+0x74]
 298:	72 61                	jb     2fb <_init-0xd05>
 29a:	69 74 73 2e 68 00 69 	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x6e690068
 2a1:	6e 
 2a2:	69 74 69 61 6c 69 7a 	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
 2a9:	65 
 2aa:	72 5f                	jb     30b <_init-0xcf5>
 2ac:	6c                   	ins    BYTE PTR es:[rdi],dx
 2ad:	69 73 74 00 63 73 74 	imul   esi,DWORD PTR [rbx+0x74],0x74736300
 2b4:	64 64 65 66 00 63 77 	fs fs data16 add BYTE PTR gs:[rbx+0x77],ah
 2bb:	63 74 79 70          	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
 2bf:	65 00 63 68          	add    BYTE PTR gs:[rbx+0x68],ah
 2c3:	61                   	(bad)
 2c4:	72 63                	jb     329 <_init-0xcd7>
 2c6:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2c7:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2c8:	76 00                	jbe    2ca <_init-0xd36>
 2ca:	65 72 72             	gs jb  33f <_init-0xcc1>
 2cd:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 2ce:	72 5f                	jb     32f <_init-0xcd1>
 2d0:	63 6f 6e             	movsxd ebp,DWORD PTR [rdi+0x6e]
 2d3:	73 74                	jae    349 <_init-0xcb7>
 2d5:	61                   	(bad)
 2d6:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 2d7:	74 73                	je     34c <_init-0xcb4>
 2d9:	2e 68 00 63 74 69    	cs push 0x69746300
 2df:	6d                   	ins    DWORD PTR es:[rdi],dx
 2e0:	65 00 63 73          	add    BYTE PTR gs:[rbx+0x73],ah
 2e4:	74 64                	je     34a <_init-0xcb6>
 2e6:	69 6e 74 00 75 6e 69 	imul   ebp,DWORD PTR [rsi+0x74],0x696e7500
 2ed:	63 6f 64             	movsxd ebp,DWORD PTR [rdi+0x64]
 2f0:	65 2e 68 00 73 74 6c 	gs cs push 0x6c747300
 2f7:	5f                   	pop    rdi
 2f8:	70 61                	jo     35b <_init-0xca5>
 2fa:	69 72 2e 68 00 66 6f 	imul   esi,DWORD PTR [rdx+0x2e],0x6f660068
 301:	72 6d                	jb     370 <_init-0xc90>
 303:	61                   	(bad)
 304:	74 00                	je     306 <_init-0xcfa>
 306:	73 74                	jae    37c <_init-0xc84>
 308:	6c                   	ins    BYTE PTR es:[rdi],dx
 309:	5f                   	pop    rdi
 30a:	69 74 65 72 61 74 6f 	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
 311:	72 
 312:	2e 68 00 69 6f 73    	cs push 0x736f6900
 318:	66 77 64             	data16 ja 37f <_init-0xc81>
 31b:	00 73 74             	add    BYTE PTR [rbx+0x74],dh
 31e:	72 75                	jb     395 <_init-0xc6b>
 320:	63 74 5f 74          	movsxd esi,DWORD PTR [rdi+rbx*2+0x74]
 324:	6d                   	ins    DWORD PTR es:[rdi],dx
 325:	2e 68 00 70 72 65    	cs push 0x65727000
 32b:	64 65 66 69 6e 65 64 	fs imul bp,WORD PTR gs:[rsi+0x65],0x5f64
 332:	5f 
 333:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 334:	70 73                	jo     3a9 <_init-0xc57>
 336:	2e 68 00 6c 6f 63    	cs push 0x636f6c00
 33c:	61                   	(bad)
 33d:	6c                   	ins    BYTE PTR es:[rdi],dx
 33e:	65 2e 68 00 74 69 6d 	gs cs push 0x6d697400
 345:	65 5f                	gs pop rdi
 347:	74 2e                	je     377 <_init-0xc89>
 349:	68 00 73 74 72       	push   0x72747300
 34e:	75 63                	jne    3b3 <_init-0xc4d>
 350:	74 5f                	je     3b1 <_init-0xc4f>
 352:	74 69                	je     3bd <_init-0xc43>
 354:	6d                   	ins    DWORD PTR es:[rdi],dx
 355:	65 73 70             	gs jae 3c8 <_init-0xc38>
 358:	65 63 2e             	movsxd ebp,DWORD PTR gs:[rsi]
 35b:	68 00 63 6c 6f       	push   0x6f6c6300
 360:	63 6b 5f             	movsxd ebp,DWORD PTR [rbx+0x5f]
 363:	74 2e                	je     393 <_init-0xc6d>
 365:	68 00 70 74 72       	push   0x72747000
 36a:	5f                   	pop    rdi
 36b:	74 72                	je     3df <_init-0xc21>
 36d:	61                   	(bad)
 36e:	69 74 73 2e 68 00 73 	imul   esi,DWORD PTR [rbx+rsi*2+0x2e],0x74730068
 375:	74 
 376:	64 6c                	fs ins BYTE PTR es:[rdi],dx
 378:	69 62 2e 68 00 73 74 	imul   esp,DWORD PTR [rdx+0x2e],0x74730068
 37f:	64 69 6e 74 2d 69 6e 	imul   ebp,DWORD PTR fs:[rsi+0x74],0x746e692d
 386:	74 
 387:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 388:	2e 68 00 5f 5f 66    	cs push 0x665f5f00
 38e:	70 6f                	jo     3ff <_init-0xc01>
 390:	73 5f                	jae    3f1 <_init-0xc0f>
 392:	74 2e                	je     3c2 <_init-0xc3e>
 394:	68 00 73 74 64       	push   0x64747300
 399:	69 6f 2e 68 00 77 63 	imul   ebp,DWORD PTR [rdi+0x2e],0x63770068
 3a0:	74 79                	je     41b <_init-0xbe5>
 3a2:	70 65                	jo     409 <_init-0xbf7>
 3a4:	2d 77 63 68 61       	sub    eax,0x61686377
 3a9:	72 2e                	jb     3d9 <_init-0xc27>
 3ab:	68 00 77 63 74       	push   0x74637700
 3b0:	79 70                	jns    422 <_init-0xbde>
 3b2:	65 2e 68 00 74 69 6d 	gs cs push 0x6d697400
 3b9:	65 2e 68 00 73 74 64 	gs cs push 0x64747300
 3c0:	69 6e 74 2d 75 69 6e 	imul   ebp,DWORD PTR [rsi+0x74],0x6e69752d
 3c7:	74 6e                	je     437 <_init-0xbc9>
 3c9:	2e 68 00 73 74 64    	cs push 0x64747300
 3cf:	69 6e 74 2d 6c 65 61 	imul   ebp,DWORD PTR [rsi+0x74],0x61656c2d
 3d6:	73 74                	jae    44c <_init-0xbb4>
 3d8:	2e 68 00 73 74 64    	cs push 0x64747300
 3de:	69 6e 74 2e 68 00 75 	imul   ebp,DWORD PTR [rsi+0x74],0x7500682e
 3e5:	6e                   	outs   dx,BYTE PTR ds:[rsi]
 3e6:	69 73 74 64 2e 68 00 	imul   esi,DWORD PTR [rbx+0x74],0x682e64
 3ed:	6d                   	ins    DWORD PTR es:[rdi],dx
 3ee:	65 6d                	gs ins DWORD PTR es:[rdi],dx
 3f0:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 3f1:	72 79                	jb     46c <_init-0xb94>
 3f3:	5f                   	pop    rdi
 3f4:	72 65                	jb     45b <_init-0xba5>
 3f6:	73 6f                	jae    467 <_init-0xb99>
 3f8:	75 72                	jne    46c <_init-0xb94>
 3fa:	63 65 2e             	movsxd esp,DWORD PTR [rbp+0x2e]
 3fd:	68 00 73 79 73       	push   0x73797300
 402:	74 65                	je     469 <_init-0xb97>
 404:	6d                   	ins    DWORD PTR es:[rdi],dx
 405:	5f                   	pop    rdi
 406:	65 72 72             	gs jb  47b <_init-0xb85>
 409:	6f                   	outs   dx,DWORD PTR ds:[rsi]
 40a:	72 00                	jb     40c <_init-0xbf4>
